{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1498502465,"rating":2,"authorHandle":"AnotherRound","modificationTimeSeconds":1498502465,"id":52926,"title":"\u003cp\u003eNeed help with excellent engineers from kattis OJ\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eSome time ago I stumbled upon the following problem: \u003ca href\u003d\"https://open.kattis.com/contests/g9yde4/problems/excellentengineers\"\u003ehttps://open.kattis.com/contests/g9yde4/problems/excellentengineers\u003c/a\u003e\u003c/p\u003e\u003cp\u003eIn short: we are given a set of N people. They are ranked in 3 skills, each one has rank for the skills a natural number from 1 to N. A person is interesting iff there is no other person who has better rank in all three skills. Find the number of interesting people. N \u0026lt;\u003d 100 000.\u003c/p\u003e\u003cp\u003eFirst I tried to solve the problem when each person has only 2 ranks. If this is the case, then the problem becomes easy â€” we first sort people in descending order of the first skill, then if a person is interesting then his second skill\u0027s rank must be better than that of all before him, so we can simply keep maximum. However, I can\u0027t think of a way to generalize this apart from keeping some sort of 2D segment tree which will be quite big to fit in memory and will be not so easy to code. So can anybody tell me a better/easier solution? Also additional question: can we generalize this in more than 3 dimensions(let\u0027s say K)?\u003c/p\u003e\u003c/div\u003e","tags":[]}}