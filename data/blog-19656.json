{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1439042543,"rating":1,"authorHandle":"OmaeWaMouShenDeiru","modificationTimeSeconds":1439047333,"id":19656,"title":"\u003cp\u003eGraph problem, TLE and RTE\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHello, \u003c/p\u003e\u003cp\u003eI\u0027m trying to solve the last problem in \u003ca href\u003d\"//codeforces.com/gym/100676/attachments/download/3333/acm-arabella-collegiate-programming-contest-en.pdf\"\u003ethis\u003c/a\u003e contest.\u003c/p\u003e\u003cp\u003eand \u003ca href\u003d\"https://ideone.com/2C02bU\"\u003ethis\u003c/a\u003e is my code, my idea is to change every strongly connected component into one node because the cost of travailing between it\u0027s nodes is \u003cstrong\u003eZERO\u003c/strong\u003e, this can be done by removing all bridges and then applying union find on elements of the other edges.\u003c/p\u003e\u003cp\u003eThen I create new adjList using elements of the removed edges \u0026quot;i.e bridges\u0026quot;, the new graph will form a tree.\u003c/p\u003e\u003cp\u003eThen I apply DFS two times to find the longest path in a tree.\u003c/p\u003e\u003cp\u003eLast step is to follow the longest path and save the sum of edges on the sides of each node, take the maximum sum between the left and right sum.\u003c/p\u003e\u003cp\u003eSometimes it returns TLE and sometimes RTE.\u003c/p\u003e\u003cp\u003eWhat could be the mistake, and is there a better way to solve it.\u003c/p\u003e\u003cp\u003eThanks.\u003c/p\u003e\u003cp\u003eEDIT: now \u003ca href\u003d\"https://ideone.com/2C02bU\"\u003ethis\u003c/a\u003e code gets WA \u003c/p\u003e\u003c/div\u003e","tags":["dfs","graphs","dsu","100676"]}}