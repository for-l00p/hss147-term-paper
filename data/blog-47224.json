{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1474338386,"rating":20,"authorHandle":"Silence_for_Melody","modificationTimeSeconds":1474388169,"id":47224,"title":"\u003cp\u003eHelp on a interesting Tree problem — NEERC 2011\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHi, I need help to understand why my code is giving me WA in the following problem \u003ca href\u003d\"https://icpcarchive.ecs.baylor.edu/index.php?option\u003donlinejudge\u0026amp;page\u003dshow_problem\u0026amp;problem\u003d3931\"\u003eKingdom Roadmap\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eBasically the problem ask the following: Given a tree of size N, what\u0027s the minimum number of additional edges (and which ones) so the tree becomes a biconected graph (there is no bridge). Notice that an existing edge could be repeated\u003c/p\u003e\u003cp\u003eI will explain my idea part by part, so I hope someone could find my mistake.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eThe case with N \u003d\u003d 2\u003c/strong\u003e This is a special case, just print \u0026quot;1\\n1 2\\n\u0026quot;\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eN\u0026gt;2 then the tree will have L leaves with L\u0026lt;N\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eThe key observation of my idea is that each leaf of the tree must be connected by at least one of the new edges. Why? because in the contrary case the edges between the leaf and his parent becomes a bridge. So, a lower bound of the answer will be \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003eL\u003c/i\u003e + 1) / 2\u003c/span\u003e (integer division). \u003c/p\u003e\u003cp\u003eWhen we join two leaves u and v with and edge, all the edges in the path from u to v are no longer bridges. Is there some way to match leaves with just \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003eL\u003c/i\u003e + 1) / 2\u003c/span\u003e edges and solve the problem? \u003c/p\u003e\u003cp\u003eI think it\u0027s posible.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003e1\u003c/strong\u003e Find a node which isn\u0027t a leaf and has the following property: If we use this node as the root of the tree, then the maximum quantity of leaves in the subtrees of his neighbors is \u0026lt;\u003d L/2. This node is kind of a \u0026quot;centroid\u0026quot; of leaves. \u003c/p\u003e\u003cp\u003eAt the beginning I wasn\u0027t sure if there is always a node which has the previos property but I couldn\u0027t prove it. I tried to send a code in which if there isn\u0027t a \u0026quot;centroid\u0026quot; the program enters in a infinite loop, but the judge still gives WA and not TLE.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003e2\u003c/strong\u003e Using the centroid as a root of the tree, I assign a different color for each of his neighbors and propagate that color to their respective subtrees. \u003c/p\u003e\u003cp\u003eThe fact that I used for my solution is that \u003cstrong\u003ethe path between two leaves of different colors must contain the centroid/root\u003c/strong\u003e. So, if we match each of the leaves with another one that has different color, all the paths from each leaf to the root will no longer be bridges, so the problem is solved. Now, how to assign the necessary edges?\u003c/p\u003e\u003cp\u003e\u003cstrong\u003e3\u003c/strong\u003e Put all the leaves in a vector and sort them by their color. So, all the leaves with the same color will be next to each other. (First assume that L%2 \u003d\u003d 0).\u003c/p\u003e\u003cp\u003eif the vector is Leaves then, all the leaves in position \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e, with \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e \u0026lt; \u003ci\u003eL\u003c/i\u003e / 2\u003c/span\u003e, and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e + \u003ci\u003eL\u003c/i\u003e / 2\u003c/span\u003e must have different color. Why? Because we choose the leaf-centroid as the root, and because of its definition the number of leaves with the same color must be \u0026lt;\u003d L/2. So, in the sorted vector, the positions \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e + \u003ci\u003eL\u003c/i\u003e / 2\u003c/span\u003e must be different, otherwise there should be \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eL\u003c/i\u003e / 2 + 1\u003c/span\u003e leaves with the same color, which is a contradiction.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003e4\u003c/strong\u003e The only remaining case is when L%2\u003d\u003d1\u003c/p\u003e\u003cp\u003eIn this case we can match all the edges, we will have 1 unmatched edge. But we could match this edge with the root of the tree removing all the remaining edges that were still bridges. But which leaf? \u003c/p\u003e\u003cp\u003eAfter sorting, I just add the first leaf in the vector at the end, because the first node and the one in de middle have different color.\u003c/p\u003e\u003cp\u003eThis is \u003ca href\u003d\"http://pastebin.com/isnyxfby\"\u003emy code\u003c/a\u003e, I tried to add comments for better understanding. Hope someone could find my mistake, I sure it is something that, if is not the base idea, will make me feel stupid when I find it.\u003c/p\u003e\u003cp\u003eThank you.\u003c/p\u003e\u003c/div\u003e","tags":["tree","centroid","neerc 2011"]}}