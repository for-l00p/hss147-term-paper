{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1498748893,"rating":-5,"authorHandle":"rahul_1234","modificationTimeSeconds":1498748893,"id":52988,"title":"\u003cp\u003eInterview Question\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eYou have a set of N objects. Each of these objects have certain properties associated with them. A property is represented by a (key, value) pair. For example, assume you have the following two objects.\u003c/p\u003e\u003cp\u003eTower: {  (height, 100), (weight, 50),  (xposition, 25), (yposition, 36) }\u003c/p\u003e\u003cp\u003eTree: {  (area, 100), (noofleaves, 500),  (height, 25), (yposition, 36) }\u003c/p\u003e\u003cp\u003eEach object you have, will have at most 4 properties. An object will have at least 1 property. Note, from the two objects above, that it is not necessary for key in the properties to be same for all the objects. Also, it is not necessary for the key to be different. Now, given N such objects, you wish to answer M queries. Each query is represented by a set of properties (again, at most 4 properties, and at least 1 property). The answer for the query is the number of objects in the set, that have all the given properties. Two properties are considered equal iff both the key and the value match. For example, if you have the above two objects, then the answer for the following queries is\u003c/p\u003e\u003cp\u003eQuery: { (height, 100), (yposition, 36) }\u003c/p\u003e\u003cp\u003eAnswer: 1 // matches Tower, but not Tree\u003c/p\u003e\u003cp\u003eQuery: { (yposition, 36) }\u003c/p\u003e\u003cp\u003eAnswer: 2 // matches both Tower and Tree\u003c/p\u003e\u003cp\u003eQuery: { (height, 100), (noofleaves, 500) }\u003c/p\u003e\u003cp\u003eAnswer: 0 // neither Tower, not Tree satisfy both properties\u003c/p\u003e\u003cp\u003eInput:\u003c/p\u003e\u003cp\u003eThe first line of input contains N and M. This is followed by the description of the N objects. The description of the i-th object will start by a number k, which is the number of properties associated with the object. The next k lines contain two space separated strings â€“ the property key and the property value. Note that the property value is not necessarily an integer (although this is so for the example above). This is followed by the description of M queries. The format of a query will be exactly same to that of the objects. Check the Sample Input for clarification. One test file will contain only one test case. A single test case may contain several queries.\u003c/p\u003e\u003cp\u003eOutput:\u003c/p\u003e\u003cp\u003ePrint M lines. Each line must be the answer of the respective query.\u003c/p\u003e\u003cp\u003eConstraints:\u003c/p\u003e\u003cp\u003e1 \u0026lt;\u003d N \u0026lt;\u003d 10000\u003c/p\u003e\u003cp\u003e1 \u0026lt;\u003d M \u0026lt;\u003d 100000\u003c/p\u003e\u003cp\u003e1 \u0026lt;\u003d k \u0026lt;\u003d 4\u003c/p\u003e\u003cp\u003eSample Input 2 3\u003c/p\u003e\u003cp\u003e4\u003c/p\u003e\u003cp\u003eheight 100a\u003c/p\u003e\u003cp\u003eweight 50b\u003c/p\u003e\u003cp\u003exposition 25a\u003c/p\u003e\u003cp\u003eyposition 36b\u003c/p\u003e\u003cp\u003e4\u003c/p\u003e\u003cp\u003earea 100a\u003c/p\u003e\u003cp\u003enoofleaves 500\u003c/p\u003e\u003cp\u003eheight 25\u003c/p\u003e\u003cp\u003eyposition 36b\u003c/p\u003e\u003cp\u003e3\u003c/p\u003e\u003cp\u003eweight 80\u003c/p\u003e\u003cp\u003exposition 25a\u003c/p\u003e\u003cp\u003eyposition 36b\u003c/p\u003e\u003cp\u003e1\u003c/p\u003e\u003cp\u003eyposition 36b\u003c/p\u003e\u003cp\u003e2\u003c/p\u003e\u003cp\u003exposition 25a\u003c/p\u003e\u003cp\u003eyposition 36b\u003c/p\u003e\u003cp\u003eSample Output:\u003c/p\u003e\u003cp\u003e0\u003c/p\u003e\u003cp\u003e2\u003c/p\u003e\u003cp\u003e1\u003c/p\u003e\u003c/div\u003e","tags":["hashmap"]}}