{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1421878584,"rating":0,"authorHandle":"magieNoire","modificationTimeSeconds":1421883550,"id":15934,"title":"\u003cp\u003eEditorial for problem H- Matches are not toys for children -- 2014 Winter Programming School, Kharkiv, day 6 (N. Bondarenko). Junior league\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e\u003cstrong\u003ePre-requisites:\u003c/strong\u003e Game Theory \u0026amp; Simple Math\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eProblem:\u003c/strong\u003e The rules of this game are simple. Given a pile of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e stones \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e ≤ 10\u003csup class\u003d\"upper-index\"\u003e18\u003c/sup\u003e\u003c/span\u003e, each player can remove at most \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/1e/53/1e53ba3720b65daef1154f3e192844fc300e39c9.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e stones -- where \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e is the number of stones before the current move. The game ends when a player cannot perform a move.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eExplanation:\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eWe will analyse this game from the end back to the beginning. The only terminal position in this game is when \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003en\u003c/i\u003e \u003d 1)\u003c/span\u003e. So we will start from here. The next few losing positions are 3, 6, 10, 14, ...\u003c/p\u003e\u003cp\u003eHere is a table that summarise the outcomes for \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003en\u003c/i\u003e \u003d 15)\u003c/span\u003e (0: LOSING POSITION -- 1: WINNING POSITION).\u003c/p\u003e \u003cpre\u003e\n   n    : 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 |\n---------------------------------------------------------------------------\noutcome : 0 | 1 | 0 | 1 | 1 | 0 | 1 | 1 | 1 | 0  | 1  | 1  | 1  | 0  | 1  |\n\u003c/pre\u003e\u003cp\u003eYou can observe here that if we know a losing position say \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e, then we can easily get to the next one.\u003c/p\u003e\u003cp\u003eHow to do that? You should see that all \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e + 1\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e + 2\u003c/span\u003e, ..., \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/4a/ee/4aeea8f210b353ad9c9752f3d76576967490fbb1.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e are all winning positions, since we can move from each of them to a losing position which is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e. However from \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/0b/e4/0be46d46a3367b1221bb8c54d090a459af25f715.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e the far we can get to is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e + 1\u003c/span\u003e, so it\u0027s a losing position. e.g: \u003cspan class\u003d\"tex-span\"\u003e10\u003c/span\u003e is a losing position, and \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/7b/7e/7b7e8055ac839121418baa0eeeab6ba5acdf744c.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. Hence the next losing position is \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/fc/b9/fcb9f4e96adac8be20376f4a051e6ecf623f44a9.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e.\u003c/p\u003e\u003cp\u003eHowever, this is not always true because \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/f0/1f/f01f97e59587b54f681b583b9553ae6b471d019e.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e is not always equal to \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/f0/1f/f01f97e59587b54f681b583b9553ae6b471d019e.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, as \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/8d/b4/8db4929d6776e98fdd092d05d321365cb6ab0691.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e And \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/46/db/46dbd4ba65101bb63d743752a9ab40ebdbaf4e1d.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. But we can easily fix those cases by adding another \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e -- since the \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/79/fb/79fb959fdb7cb2871db322280ac4642ae9fc1167.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e increased by one.\u003c/p\u003e\u003cp\u003eStill knowing to go from a losing position to another will not solve the problem yet, since there are numerous such positions for \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003en\u003c/i\u003e ≤ 10\u003csup class\u003d\"upper-index\"\u003e18\u003c/sup\u003e)\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eHowever, to answer our question, we only need the first smaller than or equal losing position from our \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eSo we need to find a way for jumping to that position quickly. One way of doing so is by moving by large steps in order to get to it quickly.\u003c/p\u003e\u003cp\u003eLuckily the \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/ee/62/ee62ed73976375c96cfdc77c9ba0d9b64db0a4a5.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e function increases only if we double the quantity -- because \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/5c/ae/5caee9c269412f7751e4f43a46a21bef349cc95d.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, and \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/d8/1d/d81da11d797f709896015f8681bb76ef94b812fe.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e.\u003c/p\u003e\u003cp\u003eSo we can segment the whole range into blocks of length \u003cspan class\u003d\"tex-span\"\u003e2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/sup\u003e\u003c/span\u003e : \u003cspan class\u003d\"tex-span\"\u003e(2, 4)\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e(4, 8)\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e(8, 16)\u003c/span\u003e, ...\u003c/p\u003e\u003cp\u003eDoing so, we will end up with at most \u003cspan class\u003d\"tex-span\"\u003e63\u003c/span\u003e of such blocks because \u003cspan class\u003d\"tex-span\"\u003e2\u003csup class\u003d\"upper-index\"\u003e63\u003c/sup\u003e \u0026gt; 10\u003csup class\u003d\"upper-index\"\u003e18\u003c/sup\u003e\u003c/span\u003e. If we know a losing position say \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e in some segment then we can easily jump to another losing position \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u0027\u003c/span\u003e on the next interval. To do so, we need first to go to the last losing position in that segment and then update manually to the next block.\u003c/p\u003e\u003cp\u003eIf we know a position p in an interval \u003cspan class\u003d\"tex-span\"\u003e(2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/sup\u003e, 2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ex\u003c/i\u003e + 1\u003c/sup\u003e)\u003c/span\u003e, then the \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003elastLosingPosition\u003c/i\u003e\u003c/span\u003e can be written as follows: \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/33/4f/334f97b379d5bf1dd3eb1bd29be20df68e7afe34.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003elastLosingPosition\u003c/i\u003e \u0026lt; 2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ex\u003c/i\u003e + 1\u003c/sup\u003e\u003c/span\u003e\u003c/p\u003e\u003cp\u003eWith \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/fe/fb/fefb7f055f0043597ec170151f4e10250b49d649.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003eWe do this until we find an interval where \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e is inside it. And with the same trick, we get the \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003elastLosingPosition\u003c/i\u003e\u003c/span\u003e smaller than or equal to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eIf that position is equal to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e, then we know it is a losing position otherwise it is a winning position and the required move is the difference between \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e and the \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003elastLosingposition\u003c/i\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eThere is one special case to be aware of, sometimes the first losing position in an interval is bigger than our original \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e, so we need to handle this particular case by backtracking to the last \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003elosingPosition\u003c/i\u003e\u003c/span\u003e in the previous interval.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eTime Complexity:\u003c/strong\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(63·\u003ci\u003eT\u003c/i\u003e)\u003c/span\u003e.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eCode Link:\u003c/strong\u003e \u003ca href\u003d\"http://ideone.com/zpXBTY\"\u003ecode\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e","tags":["game theory","simple math"]}}