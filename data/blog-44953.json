{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1463623574,"rating":19,"authorHandle":"0xA28","modificationTimeSeconds":1463770214,"id":44953,"title":"\u003cp\u003eMDST : Minimum Diameter Spanning Tree\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e\u003cstrong\u003eGiven positively weighted undirected graph G find a Spanning tree T which has the smallest possible diameter.\u003c/strong\u003e \u003cstrong\u003e(Tree diameter :is the maximum path over all the Shortest paths in the tree)\u003c/strong\u003e \u003cstrong\u003eExample Problems :\u003c/strong\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/PT07C/\"\u003ehttp://www.spoj.com/problems/PT07C/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/MDST/\"\u003ehttp://www.spoj.com/problems/MDST/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eI couldn\u0027t find any proper explanation for a solution to this problem, However i observed some cool stuff; if the graph we are dealing with was unweighted graph then we can solve this problem by bruteforcing every possible node and edge(cutting it with dummy node) and assume it as the center of our MDST then get SPT(shortest path tree) from this node and calculate it\u0027s diameter, The true MDST will be the one SPT which has the smallest diameter.\u003c/strong\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eBut in the Weighted Graph, things will be a little bit different when we try to cut an edge to place our dummy node, Where we should place it to get our MDST ? and is there more than a MDST or just a unique one ?\u003c/strong\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eNote : i found this code by chance, but i couldn\u0027t manage to understand it\u003c/strong\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://github.com/Malatawy15/Algorithms-Library/blob/master/Libraries/Minimum%20Diameter%20Spanning%20Tree.cpp\"\u003ehttps://github.com/Malatawy15/Algorithms-Library/blob/master/Libraries/Minimum%20Diameter%20Spanning%20Tree.cpp\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e","tags":[]}}