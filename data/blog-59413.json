{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1526120285,"rating":-11,"authorHandle":"wanTedGuy","modificationTimeSeconds":1526120285,"id":59413,"title":"\u003cp\u003e469A-I wanna be the Guy\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eCan anyone help me with this? It\u0027s not working according to my implementation. Here is my code:\u003c/p\u003e\u003cp\u003e// Working program using Reader Class import java.io.DataInputStream; import java.io.FileInputStream; import java.io.IOException; import java.io.InputStreamReader; import java.util.Scanner; import java.util.StringTokenizer;\u003c/p\u003e\u003cp\u003epublic class Lo {  static class Reader  {  final private int BUFFER_SIZE \u003d 1 \u0026lt;\u0026lt; 16;  private DataInputStream din;  private byte[] buffer;  private int bufferPointer, bytesRead;\u003c/p\u003e \u003cpre\u003epublic Reader()\n    {\n        din \u003d new DataInputStream(System.in);\n        buffer \u003d new byte[BUFFER_SIZE];\n        bufferPointer \u003d bytesRead \u003d 0;\n    }\n\n    public Reader(String file_name) throws IOException\n    {\n        din \u003d new DataInputStream(new FileInputStream(file_name));\n        buffer \u003d new byte[BUFFER_SIZE];\n        bufferPointer \u003d bytesRead \u003d 0;\n    }\n\n    public String readLine() throws IOException\n    {\n        byte[] buf \u003d new byte[64]; // line length\n        int cnt \u003d 0, c;\n        while ((c \u003d read()) !\u003d -1)\n        {\n            if (c \u003d\u003d \u0027\\n\u0027)\n                break;\n            buf[cnt++] \u003d (byte) c;\n        }\n        return new String(buf, 0, cnt);\n    }\n\n    public int nextInt() throws IOException\n    {\n        int ret \u003d 0;\n        byte c \u003d read();\n        while (c \u0026lt;\u003d \u0027 \u0027)\n            c \u003d read();\n        boolean neg \u003d (c \u003d\u003d \u0027-\u0027);\n        if (neg)\n            c \u003d read();\n        do\n        {\n            ret \u003d ret * 10 + c - \u00270\u0027;\n        }  while ((c \u003d read()) \u0026gt;\u003d \u00270\u0027 \u0026amp;\u0026amp; c \u0026lt;\u003d \u00279\u0027);\n\n        if (neg)\n            return -ret;\n        return ret;\n    }\n\n    public long nextLong() throws IOException\n    {\n        long ret \u003d 0;\n        byte c \u003d read();\n        while (c \u0026lt;\u003d \u0027 \u0027)\n            c \u003d read();\n        boolean neg \u003d (c \u003d\u003d \u0027-\u0027);\n        if (neg)\n            c \u003d read();\n        do {\n            ret \u003d ret * 10 + c - \u00270\u0027;\n        }\n        while ((c \u003d read()) \u0026gt;\u003d \u00270\u0027 \u0026amp;\u0026amp; c \u0026lt;\u003d \u00279\u0027);\n        if (neg)\n            return -ret;\n        return ret;\n    }\n\n    public double nextDouble() throws IOException\n    {\n        double ret \u003d 0, div \u003d 1;\n        byte c \u003d read();\n        while (c \u0026lt;\u003d \u0027 \u0027)\n            c \u003d read();\n        boolean neg \u003d (c \u003d\u003d \u0027-\u0027);\n        if (neg)\n            c \u003d read();\n\n        do {\n            ret \u003d ret * 10 + c - \u00270\u0027;\n        }\n        while ((c \u003d read()) \u0026gt;\u003d \u00270\u0027 \u0026amp;\u0026amp; c \u0026lt;\u003d \u00279\u0027);\n\n        if (c \u003d\u003d \u0027.\u0027)\n        {\n            while ((c \u003d read()) \u0026gt;\u003d \u00270\u0027 \u0026amp;\u0026amp; c \u0026lt;\u003d \u00279\u0027)\n            {\n                ret +\u003d (c - \u00270\u0027) / (div *\u003d 10);\n            }\n        }\n\n        if (neg)\n            return -ret;\n        return ret;\n    }\n\n    private void fillBuffer() throws IOException\n    {\n        bytesRead \u003d din.read(buffer, bufferPointer \u003d 0, BUFFER_SIZE);\n        if (bytesRead \u003d\u003d -1)\n            buffer[0] \u003d -1;\n    }\n\n    private byte read() throws IOException\n    {\n        if (bufferPointer \u003d\u003d bytesRead)\n            fillBuffer();\n        return buffer[bufferPointer++];\n    }\n\n    public void close() throws IOException\n    {\n        if (din \u003d\u003d null)\n            return;\n        din.close();\n    }\u003c/pre\u003e\u003cp\u003e}\u003c/p\u003e \u003cpre\u003e\u003ccode\u003epublic static void main(String[] args) throws IOException\n{\n    Reader sc \u003d new Reader();\n    int n \u003d sc.nextInt();\n    int o \u003d sc.nextInt();\n    long[] x \u003d new long[o];\n    long[] y \u003d new long[o];\n    for(int i\u003d0;i\u0026lt;o;i++)\n    {\n       x[i] \u003d sc.nextInt();\n    }\n    for(int i\u003d0;i\u0026lt;o;i++)\n    {\n       y[i] \u003d sc.nextInt();\n    }\n    for(int i\u003d0;i\u0026lt;o;i++)\n    {\n       if(x[i]\u003d\u003di||y[i]\u003d\u003di)\n       {\n         if(Math.max(x[i],y[i])\u003d\u003dn)\n         {\n          System.out.println(\u0026quot;I become the guy.\u0026quot;);\n         }\n       }\n       break;\n    }\n    System.out.println(\u0026quot;Oh, my keyboard!\u0026quot;);\n\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e}\u003c/p\u003e\u003c/div\u003e","tags":[]}}