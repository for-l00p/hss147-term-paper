{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1511949859,"rating":0,"authorHandle":"MathLimitExceeded","modificationTimeSeconds":1511950267,"id":56062,"title":"\u003cp\u003eAnother Interesting Chessboard Problem\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003ch4\u003eProblem Statement\u003c/h4\u003e\u003cp\u003eGiven an \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e × \u003ci\u003em\u003c/i\u003e\u003c/span\u003e chessboard, try and place as many rooks as possible on the board in such a way that the number of rooks on each row is equal to the number of rooks on each column (it is allowed for two rooks to attack each other). You are prohibited from placing the rook at some given locations on the board.\u003c/p\u003e\u003ch4\u003eSource\u003c/h4\u003e\u003cp\u003eThis problem was an exercise left to the reader on a Topcoder tutorial \u003ca href\u003d\"https://www.topcoder.com/community/data-science/data-science-tutorials/maximum-flow-section-2/\"\u003eclick\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eAfter many attempts, I am unable to formalise a solution. To be more specific neither was I able to formulate this problem as an instance of max-flow, nor was I able to model it as an instance of min-cut.\u003c/p\u003e\u003ch4\u003eMy observations\u003c/h4\u003e \u003cul\u003e   \u003cli\u003eThe total number of rows that contain a rook must be equal to the total number of columns that contain a rook\u003c/li\u003e   \u003cli\u003eCould we possibly binary search for the solution and construct a bipartite graph for each candidate solution in the binary search?\u003c/li\u003e \u003c/ul\u003e\u003c/div\u003e","tags":[]}}