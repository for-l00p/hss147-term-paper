{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1490301665,"rating":0,"authorHandle":"1am","modificationTimeSeconds":1490301665,"id":51172,"title":"\u003cp\u003eDay 3 (rc)\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eE Chance will be explained next week inshallah, in addition to a couple of problems i didnt have the time to explain in the previous contests.\u003c/p\u003e\u003ch1\u003eRecursion/ Brute Force\u003c/h1\u003e\u003cp\u003eThe first thing we went over was functions and how if we call a function from inside the function, that would result in an infinite loop. But if we were to put a base case, then we can take advantage of the concept and solve a bigger problem by the use of solving its sub-problem. \u003cbr /\u003e For example: 5! \u003d 5 * 4! -- \u0026gt; factorial (n) \u003d n * factorial (n-1); \u003cbr /\u003e \u003cbr /\u003e Also: s is a palindrome if the first character is equal to the last and the sub string s[i+1] to s[j-1] is also a palindrome. \u003cbr /\u003e--\u0026gt; s[i] \u003d\u003d s[j] \u0026amp;\u0026amp; palindrome (i+1, j-1); \u003cbr /\u003e Here is the code for factorial using recursion: \u003ca href\u003d\"http://ideone.com/2gdySR\"\u003ehttp://ideone.com/2gdySR\u003c/a\u003e \u003cbr /\u003e Here is the code for finding if a string is a palindrome using recursion: \u003ca href\u003d\"http://ideone.com/A9yFfn\"\u003ehttp://ideone.com/A9yFfn\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003cbr /\u003e\u003c/p\u003e\u003ch1\u003e\u003ca href\u003d\"//codeforces.com/gym/100989/problem/L\"\u003eL. Plus or Minus (A)\u003c/a\u003e\u003c/h1\u003e\u003cp\u003eThis problem is from the previous last year\u0027s coding marathon. We solved it by trying all options of either changing each operator or keeping it the same. Since the maximum number of numbers is 20, the complexity of this solution is O (2^n). \u003cbr /\u003e That comes around to a 1e6 operations, which easily passes in a second. \u003cbr /\u003e Here is the code for it: \u003ca href\u003d\"http://ideone.com/RsaPm2\"\u003ehttp://ideone.com/RsaPm2\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003cbr /\u003e\u003c/p\u003e\u003ch1\u003e\u003ca href\u003d\"//codeforces.com/group/HkEoaKeslR/contest/212685/problem/H\"\u003e H. Lucky Numbers (easy)\u003c/a\u003e\u003c/h1\u003e\u003cp\u003eWe also solved this problem using recursion. 10^9 is ten digits, if we brute force adding for each digit either a 4 or a 7, the complexity of that is also O(2^n), where n is maximum 12. In the case that the entire number if made up of 7\u0027s, the next lucky number is adding two more digits. We will run our code anyway till 13 digits maximum. \u003cbr /\u003e \u003cbr /\u003e If we have number 474 (sum), and we want to add a add a 7 or a 4 to the end (to be 4747 or 4744), our two options are: \u003cbr /\u003e \u003c/p\u003e\u003cul\u003e \u003cli\u003e sum * 10 +7 \u003c/li\u003e \u003cli\u003e sum * 10 +4 \u003c/li\u003e \u003c/ul\u003e \u003cbr /\u003e Other than the sum so far, we need another parameter for what digit we are on (to make sure we don\u0027t do more than 13 and go into infinite loop). Also two more parameters for the number of 4\u0027s so far and 7\u0027s. \u003cbr /\u003e \u003cbr /\u003e Here is the code for it: \u003ca href\u003d\"http://ideone.com/GPQXiX\"\u003ehttp://ideone.com/GPQXiX\u003c/a\u003e\u003cp\u003e\u003cbr /\u003e\u003c/p\u003e\u003ch1\u003e\u003ca href\u003d\"//codeforces.com/group/HkEoaKeslR/contest/212685/problem/F\"\u003e F. Mission in Amman (B)\u003c/a\u003e\u003c/h1\u003e\u003cp\u003eYou do a binary search on the answer to the problem. To check if a value works for the answer, we first sort the array from greatest to smallest. Then if we are trying x as an answer, we need to know how many people we need to move from all places if the place has more than x people. \u003cbr /\u003e\u003cbr /\u003e This sum should be less than the k hours we have, since it takes one hour to move someone. You also need to check if there is space to put those extra people in other places in the array, so each time you reach a place that has less than x people, you try to put as much people there up till x. \u003cbr /\u003e\u003cbr /\u003e Here is the code: \u003ca href\u003d\"http://ideone.com/AgyZmp\"\u003ehttp://ideone.com/AgyZmp\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e","tags":[]}}