{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1464273658,"rating":9,"authorHandle":"rachitjain","modificationTimeSeconds":1464273658,"id":45068,"title":"\u003cp\u003e[Help] Finding the DP state in problem and Initialising the base cases\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eThe question I am asking is very vague but if some experts can share some of their tricks or tips while solving DP questions would be really helpful. The problems I face is how to think of such complex DP states, and even if I think of them, how should I initialse the base values(e.g \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edp\u003c/i\u003e[0][0] \u003d 1\u003ci\u003eor\u003c/i\u003e0\u003c/span\u003e). Consider the two problems\u003cbr /\u003e 1. \u003ca href\u003d\"//codeforces.com/contest/628/problem/D\"\u003eD. Magic Numbers\u003c/a\u003e\u003cbr /\u003e 2. \u003ca href\u003d\"//codeforces.com/contest/213/problem/B\"\u003eB. Numbers\u003c/a\u003e\u003cbr /\u003eBoth of them have DP based solutions.\u003cbr /\u003e\u003cstrong\u003eD.Magic Numbers\u003c/strong\u003e \u003ca href\u003d\"//codeforces.com/blog/entry/43203\"\u003eTutorial link\u003c/a\u003e\u003cbr /\u003eBrief Solution: \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edp\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e][\u003ci\u003ej\u003c/i\u003e][\u003ci\u003ek\u003c/i\u003e]\u003c/span\u003e is our dp state that represents number of magic prefixes of length \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e with remainder \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e modulo \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/span\u003e. If \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e  \u003d  0\u003c/span\u003e than the prefix should be less than the corresponding prefix in \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e and if \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e  \u003d  1\u003c/span\u003e then the prefix should be equal to the prefix of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e (it can not be greater).\u003cbr /\u003eFirst of all, how does one realises the need of having that \u003cspan class\u003d\"tex-span\"\u003e[\u003ci\u003ek\u003c/i\u003e]\u003c/span\u003e in out DP. Also in the \u003ca href\u003d\"http://pastebin.com/YLmbrNMq\"\u003esolution\u003c/a\u003e, for \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e \u003d 0\u003c/span\u003e, line \u003cspan class\u003d\"tex-span\"\u003e54\u003c/span\u003e is letting the digit at new position be greater than \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e]\u003c/span\u003e. I understand that the over all number should be less than or equal to the prefix of our original number. So the digits in the number we are forming can exceed the digit at corresponding position in original number \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/span\u003e, but how is everything working is really difficult to think. How are so many people able to think about it and how do they begin to solve such DP problems? \u003c/p\u003e\u003cp\u003eLet\u0027s assume I magically understood the DP state. After that, the problem I faced was to initialise the base values. I was going to initialise the \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edp\u003c/i\u003e[1][\u003ci\u003ej\u003c/i\u003e][\u003ci\u003ek\u003c/i\u003e]\u003c/span\u003e values but that would be too longer. On looking at the solution, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edp\u003c/i\u003e[0][0][1] \u003d 1\u003c/span\u003e was enough. It took me time to see how magically it was finding the correct answers. \u003c/p\u003e\u003cp\u003e\u003cstrong\u003eB. Numbers\u003c/strong\u003e \u003ca href\u003d\"//codeforces.com/blog/entry/4982\"\u003eTutorial link\u003c/a\u003e\u003cbr /\u003eBrief Solution: \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edp\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e][\u003ci\u003ej\u003c/i\u003e]\u003c/span\u003e is our dp state that represents numbers of length \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e formed by using digits from \u003cspan class\u003d\"tex-span\"\u003e[\u003ci\u003ej\u003c/i\u003e, 9]\u003c/span\u003e. Thus \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edp\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e][\u003ci\u003ej\u003c/i\u003e] +  \u003d \u003ci\u003edp\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e - \u003ci\u003ex\u003c/i\u003e][\u003ci\u003ej\u003c/i\u003e + 1] * \u003ci\u003eC\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e][\u003ci\u003ex\u003c/i\u003e]\u003c/span\u003e, where \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e is number of times I use digit \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e. Perfect! But what I could think of is that I have to count the number of permutations of length \u003cspan class\u003d\"tex-span\"\u003e[\u003ci\u003esum\u003c/i\u003e(\u003ci\u003ea\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e]), \u003ci\u003en\u003c/i\u003e]\u003c/span\u003e such that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eocc\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e] \u0026gt;  \u003d \u003ci\u003ea\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e]\u003c/span\u003e, and I began to think of how to solve this. \u003c/p\u003e\u003cp\u003e\u003cstrong\u003eI clearly understand that more practise is needed, but seeing the tutorials for DP problems I was wondering whether there are some DP states that are very common or some standard DP techniques that one must master. One example being the usage of \u0026quot;Subset Hack\u0026quot; in \u003ca href\u003d\"//codeforces.com/problemset/problem/165/E\"\u003eE. Compatible Numbers\u003c/a\u003e. I couldn\u0027t even find tutorial on what \u0026quot;Subset Hack\u0026quot; is.\u003c/strong\u003e \u003c/p\u003e\u003c/div\u003e","tags":[]}}