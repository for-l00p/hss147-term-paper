{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1504863882,"rating":5,"authorHandle":"frank_c1","modificationTimeSeconds":1505091485,"id":54409,"title":"\u003cp\u003eAndrew Stankevich Contest 25 sol.\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e\u003ca href\u003d\"//codeforces.com/gym/100341\"\u003e2007-2008 Summer Petrozavodsk Camp, Andrew Stankevich Contest 25 (ASC 25)\u003c/a\u003e  \u003c/p\u003e\u003ch3\u003eA. Agrarian Reform\u003c/h3\u003e\u003cp\u003e有一个王国，国土可以看作 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e × \u003ci\u003en\u003c/i\u003e\u003c/span\u003e 的网格图。有 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e 个格子居住着农民， \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e\u003c/span\u003e 个格子是沼泽，其余格子是农田。现在国王将把农田分配给农民，一块农田至多分配给一个农民，一个农民恰好会分配到一块农田。\u003c/p\u003e\u003cp\u003e分配过程是这样的。先确定 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e 个农民的顺序，按顺序分配。轮到某一位农民时，他将分配到离他距离最近的农田，如果有多块农田满足，取 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e 坐标较小的，如果仍有多块农田满足，取 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ey\u003c/i\u003e\u003c/span\u003e 坐标较小的。\u003c/p\u003e\u003cp\u003e农民们的不满意度定义为所有农民离他分配到的农田的距离之和。请你确定一种 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e 个农民的顺序，令不满意度尽量小。\u003c/p\u003e\u003cp\u003e两个格子 \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e, \u003ci\u003ey\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e), (\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e, \u003ci\u003ey\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e)\u003c/span\u003e 的距离定义为 \u003cspan class\u003d\"tex-span\"\u003e|\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e - \u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e| + |\u003ci\u003ey\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e - \u003ci\u003ey\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e|\u003c/span\u003e ，即曼哈顿距离。\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e1 ≤ \u003ci\u003em\u003c/i\u003e, \u003ci\u003en\u003c/i\u003e ≤ 20, 1 ≤ \u003ci\u003ek\u003c/i\u003e ≤ \u003ci\u003emn\u003c/i\u003e / 2, 0 ≤ \u003ci\u003es\u003c/i\u003e ≤ \u003ci\u003emn\u003c/i\u003e - 2\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e\u003c/p\u003e \u003chr /\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003e题解\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e将农民作为 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eX\u003c/i\u003e\u003c/span\u003e 部，农田作为 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eY\u003c/i\u003e\u003c/span\u003e 部，边权为三元组 \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003edist\u003c/i\u003e, \u003ci\u003ex\u003c/i\u003e, \u003ci\u003ey\u003c/i\u003e)\u003c/span\u003e ， \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edist\u003c/i\u003e\u003c/span\u003e 表示农民与农田的距离， \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ex\u003c/i\u003e, \u003ci\u003ey\u003c/i\u003e)\u003c/span\u003e 表示农田的坐标。可以证明，最小权匹配一定可以还原出一种顺序，以下是简要证明：\u003c/p\u003e\u003cp\u003e设农民 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e 匹配的农田是 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e ，我们考虑所有对于农民 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e 来说比 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e 更优的农田 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e\u003c/span\u003e ，易知 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e\u003c/span\u003e 一定匹配一位农民，否则农民 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e 就可以选择和农田 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e\u003c/span\u003e 匹配。令与农田 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e\u003c/span\u003e 匹配的是农民 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e ，那么在答案中 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e 一定排在 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e 前面，由 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e 向 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e 连一条边。需要证明连边不可能产生环，即连出的图是一个DAG。如果没有产生环，拓扑排序即可确定一种合法的顺序；而一旦产生环，就一定无解。\u003c/p\u003e\u003cp\u003e可以用反证法证明这个图是DAG。假设图中存在一个环 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e, \u003ci\u003es\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e, ..., \u003ci\u003es\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e 。由前述定义， 对于 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/span\u003e ， \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003es\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/sub\u003e\u003c/sub\u003e\u003c/span\u003e 优于 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003es\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/sub\u003e\u003c/span\u003e ；对于 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003c/span\u003e ， \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003es\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/sub\u003e\u003c/span\u003e 优于 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003es\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003c/sub\u003e\u003c/span\u003e ，以此类推。这样我们循环移位一下，必定可以得到一个更优解，产生矛盾。证毕。\u003c/p\u003e\u003cp\u003e时间复杂度 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eMinCost\u003c/i\u003e(\u003ci\u003enm\u003c/i\u003e, \u003ci\u003en\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e\u003ci\u003em\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e))\u003c/span\u003e 。 \u003cstrong\u003e难度评级 3\u003c/strong\u003e \u003ca href\u003d\"http://paste.ubuntu.com/25504222\"\u003e(Code)\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003ch3\u003eB. Astronomy Problem\u003c/h3\u003e\u003cp\u003e平面上有 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e 个点 \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e, \u003ci\u003ey\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e)\u003c/span\u003e 。\u003c/p\u003e\u003cp\u003e请你求出一个点 \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003eX\u003c/i\u003e, \u003ci\u003eY\u003c/i\u003e)\u003c/span\u003e ，和任意两个点形成的夹角的最小值尽量大，且与任何点的距离都至少是 1。\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e3 ≤ \u003ci\u003en\u003c/i\u003e ≤ 10,  - 10\u003csup class\u003d\"upper-index\"\u003e3\u003c/sup\u003e ≤ \u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e, \u003ci\u003ey\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e ≤ 10\u003csup class\u003d\"upper-index\"\u003e3\u003c/sup\u003e\u003c/span\u003e\u003c/p\u003e \u003chr /\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003e题解\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e“最小值尽量大”的题目不难想到二分。\u003c/p\u003e\u003cp\u003e二分最小夹角 \u003cspan class\u003d\"tex-span\"\u003eβ\u003c/span\u003e 后问题变成：判断是否存在一个点 \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003eX\u003c/i\u003e, \u003ci\u003eY\u003c/i\u003e)\u003c/span\u003e 和任意两个点的夹角都不小于 \u003cspan class\u003d\"tex-span\"\u003eβ\u003c/span\u003e 且和任意一个点距离都不小于 1。\u003c/p\u003e\u003cp\u003e考虑对于两个定点 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e, \u003ci\u003eB\u003c/i\u003e\u003c/span\u003e ，怎样的点 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eP\u003c/i\u003e\u003c/span\u003e 才能满足 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ePA\u003c/i\u003e\u003c/span\u003e 和 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ePB\u003c/i\u003e\u003c/span\u003e 的夹角不小于 \u003cspan class\u003d\"tex-span\"\u003eβ\u003c/span\u003e 呢？容易发现，所有合法的 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eP\u003c/i\u003e\u003c/span\u003e 构成了一个封闭区域，以线段 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eAB\u003c/i\u003e\u003c/span\u003e 为弦， \u003cspan class\u003d\"tex-span\"\u003eβ\u003c/span\u003e 为圆周角作圆可得。直观上看，在 \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/3e/4e/3e4ec37fa60bed0e97ca56467a39706e62009f3d.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e 时，这个图形就是一个圆；在 \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/78/7c/787cb3ab111162389649817c31d75405bf714f86.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e 时，这个图形是两个等圆的并， \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eAB\u003c/i\u003e\u003c/span\u003e 是公共弦；在 \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/fc/da/fcda6180279e46dc89cccccf1d1835a0c43906b0.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e 时，这个图形是两个等圆的交， \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eAB\u003c/i\u003e\u003c/span\u003e 是公共弦。\u003c/p\u003e\u003cp\u003e此外，考虑对于一个定点 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003c/span\u003e ，显然以 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003c/span\u003e 为圆心， \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e 为半径形成的圆上及其外的点是合法的。\u003c/p\u003e\u003cp\u003e这样一来，每一条限制都转化为平面上的一个区域。问题就转化成判断这些区域是否有交，如果有交则需要求出一个交集中的一个点。\u003c/p\u003e\u003cp\u003e由于这些区域并不规则，常规的求交方法无法发挥作用，不如考虑更暴力一些的方法。我们知道交集一定是有顶点的，而交集的顶点必定是区域之间相交产生的，而本题中的区域的基本元素就是圆，于是我们对于所有得到的圆两两求交，处理出所有交点，再将所有交点代入验证，如果存在一点满足条件，就找到了答案；如果不存在，我们可以证明平面上一定不存在一点满足条件。\u003c/p\u003e\u003cp\u003e时间复杂度 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e6\u003c/sup\u003e\u003ci\u003ep\u003c/i\u003e)\u003c/span\u003e ， \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003c/span\u003e 是精度。 \u003cstrong\u003e难度评级 3\u003c/strong\u003e \u003ca href\u003d\"http://paste.ubuntu.com/25498075\"\u003e(Code)\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003ch3\u003eC. AVL Trees\u003c/h3\u003e\u003cp\u003eAVL树是一种特殊的二叉树，满足左子树的高度和右子树至多相差1。\u003c/p\u003e\u003cp\u003e求点数为 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e 高度为 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eh\u003c/i\u003e\u003c/span\u003e 的AVL树的数量。对 \u003cspan class\u003d\"tex-span\"\u003e786433 \u003d 3·2\u003csup class\u003d\"upper-index\"\u003e18\u003c/sup\u003e + 1\u003c/span\u003e 取模。\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e1 ≤ \u003ci\u003en\u003c/i\u003e ≤ 65535, 0 ≤ \u003ci\u003eh\u003c/i\u003e ≤ 15\u003c/span\u003e\u003c/p\u003e \u003chr /\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003e题解\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e设 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eF\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e(\u003ci\u003ex\u003c/i\u003e)\u003c/span\u003e 为高度为 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e 的AVL树数量的生成函数。\u003c/p\u003e\u003cp\u003e枚举左子树和右子树的高度，易得 \u003c/p\u003e \u003ccenter\u003e\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eF\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e(\u003ci\u003ex\u003c/i\u003e) \u003d \u003ci\u003eF\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e0\u003c/sub\u003e(\u003ci\u003ex\u003c/i\u003e)[\u003ci\u003eF\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e - 1\u003c/sub\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e(\u003ci\u003ex\u003c/i\u003e) + 2\u003ci\u003eF\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e - 1\u003c/sub\u003e(\u003ci\u003ex\u003c/i\u003e)\u003ci\u003eF\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e - 2\u003c/sub\u003e(\u003ci\u003ex\u003c/i\u003e)]\u003c/span\u003e\u003c/center\u003e\u003cp\u003e递推基础是 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eF\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e0\u003c/sub\u003e(\u003ci\u003ex\u003c/i\u003e) \u003d \u003ci\u003ex\u003c/i\u003e, \u003ci\u003eF\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e(\u003ci\u003ex\u003c/i\u003e) \u003d \u003ci\u003ex\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e3\u003c/sup\u003e + 2\u003ci\u003ex\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e\u003c/span\u003e 。由于模数是费马素数，可以NTT优化多项式乘法。\u003c/p\u003e\u003cp\u003e直接实现的复杂度是 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eh\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003eh\u003c/i\u003e\u003c/sup\u003e)\u003c/span\u003e 的。我们发现需要计算的多项式的次数均小于 \u003cspan class\u003d\"tex-span\"\u003e2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003eh\u003c/i\u003e + 1\u003c/sup\u003e\u003c/span\u003e，没必要每次 NTT 和 INTT。直接把所有多项式看作 \u003cspan class\u003d\"tex-span\"\u003e2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003eh\u003c/i\u003e + 1\u003c/sup\u003e - 1\u003c/span\u003e 次，在一开始 NTT \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eF\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e0\u003c/sub\u003e(\u003ci\u003ex\u003c/i\u003e), \u003ci\u003eF\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e(\u003ci\u003ex\u003c/i\u003e)\u003c/span\u003e ，最后 INTT 求得 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eF\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eh\u003c/i\u003e\u003c/sub\u003e(\u003ci\u003ex\u003c/i\u003e)\u003c/span\u003e 就好啦。\u003c/p\u003e\u003cp\u003e时间复杂度 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eh\u003c/i\u003e2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003eh\u003c/i\u003e\u003c/sup\u003e)\u003c/span\u003e 。 \u003cstrong\u003e难度评级 2\u003c/strong\u003e \u003ca href\u003d\"http://paste.ubuntu.com/25496328\"\u003e(Code)\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003ch3\u003eD. Block Edit Distance\u003c/h3\u003e\u003cp\u003e有两个串 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e, \u003ci\u003et\u003c/i\u003e\u003c/span\u003e。我们可以通过以下过程把 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e\u003c/span\u003e 变成 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003et\u003c/i\u003e\u003c/span\u003e 。\u003c/p\u003e \u003col\u003e   \u003cli\u003e移除 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e\u003c/span\u003e 的若干不相交子串。代价定义为移除的子串数量。\u003c/li\u003e   \u003cli\u003e设指针 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003es\u003c/i\u003e\u003c/sub\u003e, \u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003et\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e 分别指向 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e, \u003ci\u003et\u003c/i\u003e\u003c/span\u003e 的第一个字符。执行若干轮下述操作中的一种，直到 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003es\u003c/i\u003e\u003c/sub\u003e, \u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003et\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e 均指向空字符。   \u003cul\u003e     \u003cli\u003e将 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003es\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e 移动到下一个字符。代价为 1。\u003c/li\u003e     \u003cli\u003e将 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003et\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e 移动到下一个字符。代价为 1。\u003c/li\u003e     \u003cli\u003e若 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003es\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e 和 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003et\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e 指向的字符类型相同， \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003es\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e 和 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003et\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e 均移动到下一个字符。代价为 1。\u003c/li\u003e   \u003c/ul\u003e\u003c/li\u003e \u003c/ol\u003e\u003cp\u003e求把 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e\u003c/span\u003e 变成 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003et\u003c/i\u003e\u003c/span\u003e 最少所需的代价，并输出一种操作序列。\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e1 ≤ |\u003ci\u003es\u003c/i\u003e|, |\u003ci\u003et\u003c/i\u003e| ≤ 3000\u003c/span\u003e，输入的其它变量均为不超过 \u003cspan class\u003d\"tex-span\"\u003e10\u003csup class\u003d\"upper-index\"\u003e4\u003c/sup\u003e\u003c/span\u003e 的非负整数。\u003c/p\u003e \u003chr /\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003e题解\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e设 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e][\u003ci\u003ej\u003c/i\u003e][1 / 0]\u003c/span\u003e 表示 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003es\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e 移动到 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e\u003c/span\u003e 的第 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e 个字符， \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003et\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e 移动到 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003et\u003c/i\u003e\u003c/span\u003e 的第 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e 个字符，且 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003es\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e 所指的字符是 / 否在过程 1 被移除的最少代价。\u003c/p\u003e\u003cp\u003e转移比较简单，分情况讨论一下就好，在转移过程中顺便记录一下方案。\u003c/p\u003e\u003cp\u003e时间复杂度 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(|\u003ci\u003es\u003c/i\u003e||\u003ci\u003et\u003c/i\u003e|)\u003c/span\u003e 。 \u003cstrong\u003e难度评级 2\u003c/strong\u003e \u003ca href\u003d\"http://paste.ubuntu.com/25489377\"\u003e(Code)\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003ch3\u003eE. Cryptography\u003c/h3\u003e\u003cp\u003e输出 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e, \u003ci\u003ey\u003c/i\u003e\u003c/span\u003e 满足\u003c/p\u003e \u003cul\u003e   \u003cli\u003e\u003cspan class\u003d\"tex-span\"\u003e1 ≤ \u003ci\u003ex\u003c/i\u003e, \u003ci\u003ey\u003c/i\u003e ≤ \u003ci\u003en\u003c/i\u003e\u003c/span\u003e\u003c/li\u003e   \u003cli\u003e\u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/ef/9c/ef9cd3c74525e5a12ecf3b7037f209ef94740774.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/li\u003e   \u003cli\u003e\u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/54/00/54008a77de27297931ed78db427830c7f4db8b86.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e 最大\u003c/li\u003e \u003c/ul\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e1 ≤ \u003ci\u003en\u003c/i\u003e ≤ 10\u003csup class\u003d\"upper-index\"\u003e5\u003c/sup\u003e, 0 ≤ \u003ci\u003ea\u003c/i\u003e, \u003ci\u003eb\u003c/i\u003e ≤ 2000\u003c/span\u003e\u003c/p\u003e \u003chr /\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003e题解\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e直接枚举所有枚举合法的 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e, \u003ci\u003ey\u003c/i\u003e\u003c/span\u003e 计算答案。复杂度分析参考枚举子集。\u003c/p\u003e\u003cp\u003e时间复杂度 \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/1a/e3/1ae3738c2ed2b75a818fdc0f7f098aaa20bfd283.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e 。 \u003cstrong\u003e难度评级 1\u003c/strong\u003e \u003ca href\u003d\"http://paste.ubuntu.com/25489380\"\u003e(Code)\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003ch3\u003eF. Independent Set\u003c/h3\u003e\u003cp\u003e我们按如下方式定义串并联图。\u003c/p\u003e \u003cul\u003e   \u003cli\u003e\u003cp\u003e定义 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eg\u003c/i\u003e \u003d \u003ci\u003eG\u003c/i\u003e(\u003ci\u003eV\u003c/i\u003e, \u003ci\u003eE\u003c/i\u003e)\u003c/span\u003e ，其中 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eV\u003c/i\u003e \u003d {\u003ci\u003es\u003c/i\u003e, \u003ci\u003et\u003c/i\u003e}, \u003ci\u003eE\u003c/i\u003e \u003d {(\u003ci\u003es\u003c/i\u003e, \u003ci\u003et\u003c/i\u003e)}\u003c/span\u003e。图 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eg\u003c/i\u003e\u003c/span\u003e 的源是 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e\u003c/span\u003e ，汇是 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003et\u003c/i\u003e\u003c/span\u003e 。\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003e定义 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eSG\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003ci\u003eG\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003c/span\u003e 为 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eG\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/span\u003e 和 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eG\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003c/span\u003e 的串联。设 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e, \u003ci\u003et\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/span\u003e 和 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e, \u003ci\u003et\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003c/span\u003e 分别是 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eG\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/span\u003e 和 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eG\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003c/span\u003e 的源汇。将 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003et\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/span\u003e 和 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003c/span\u003e 合并得到新图即是 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eG\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/span\u003e 和 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eG\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003c/span\u003e 的串联。\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003e定义 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ePG\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003ci\u003eG\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003c/span\u003e 为 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eG\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/span\u003e 和 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eG\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003c/span\u003e 的并联。设 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e, \u003ci\u003et\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/span\u003e 和 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e, \u003ci\u003et\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003c/span\u003e 分别是 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eG\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/span\u003e 和 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eG\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003c/span\u003e 的源汇。将 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/span\u003e 和 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003c/span\u003e 合并，  \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003et\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/span\u003e 和 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003et\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003c/span\u003e 分别合并得到新图即是 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eG\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/span\u003e 和 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eG\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003c/span\u003e 的并联。\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e\u003cp\u003e按约定的记号以字符串形式给定一张串并联图 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e\u003c/span\u003e ，求其最大独立集。\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e1 ≤ |\u003ci\u003es\u003c/i\u003e| ≤ 10\u003csup class\u003d\"upper-index\"\u003e5\u003c/sup\u003e\u003c/span\u003e\u003c/p\u003e \u003chr /\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003e题解\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e串并联图是递归定义的。一张较大的串并联图由两张串并联图合并而来。这启发我们最大独立集的信息也可以同样合并。\u003c/p\u003e\u003cp\u003e我们发现两张图合并的时候，需要考虑的只有源 / 汇是否被选中。故我们对每一张图记录 \u003cspan class\u003d\"tex-span\"\u003e2 × 2\u003c/span\u003e 的信息 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e[1 / 0][1 / 0]\u003c/span\u003e ，表示源 / 汇分别是 / 否被选中时的最大独立集。在输入图的过程中维护一下即可。\u003c/p\u003e\u003cp\u003e时间复杂度 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e)\u003c/span\u003e 。 \u003cstrong\u003e难度评级 2\u003c/strong\u003e \u003ca href\u003d\"http://paste.ubuntu.com/25489712\"\u003e(Code)\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003ch3\u003eG. 3D Knight\u003c/h3\u003e\u003cp\u003e有一个骑士在 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e × \u003ci\u003eb\u003c/i\u003e × \u003ci\u003ec\u003c/i\u003e\u003c/span\u003e 的立方体上行走。\u003c/p\u003e\u003cp\u003e现在他在点 \u003cspan class\u003d\"tex-span\"\u003e(1, 1, 1)\u003c/span\u003e ，判定是否可能经过立方体上的每个格子恰好一次，如果可能输出一种方案。\u003c/p\u003e\u003cp\u003e三维空间中骑士的走法定义为某一维坐标和原坐标相差 0，某一维坐标和原坐标相差 1， 某一维坐标和原坐标相差 2。\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e1 ≤ \u003ci\u003ea\u003c/i\u003e, \u003ci\u003eb\u003c/i\u003e, \u003ci\u003ec\u003c/i\u003e ≤ 5\u003c/span\u003e\u003c/p\u003e \u003chr /\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003e题解\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e数据范围非常小，但又不是纯暴力可以跑得出的，提示我们可以尝试搜索。\u003c/p\u003e\u003cp\u003e如果直接DFS，是无法通过所有数据的，因为一旦进入无解的决策，将会消耗难以估计的时间。考虑如何尽可能选择有解的决策。\u003c/p\u003e\u003cp\u003e一种可行的优化是定义一个格子 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eu\u003c/i\u003e\u003c/span\u003e 的估价为其 \u003cstrong\u003e合法入度\u003c/strong\u003e ，即还有多少 \u003cstrong\u003e未访问\u003c/strong\u003e 格子可以到达 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eu\u003c/i\u003e\u003c/span\u003e 。如果某个格子估价较小，说明不在这一步访问它，后面从其它格子访问到它的可能性就更小，更容易无解。于是我们在决策下一步时，在可以到达的格子中按估价从小到大考虑。\u003c/p\u003e\u003cp\u003e我们发现实际运行效果非常好，对于有解的数据，几乎可以一次成功。但是对于无解的数据，由于一定会遍历整个决策树，是没有任何优化效果的。由于数据规模小，不妨在所有可能的输入上运行算法，如果发现较长时间没有运行终止，就特判这组数据是无解的。\u003c/p\u003e\u003cp\u003e\u003cstrong\u003e难度评级 2\u003c/strong\u003e \u003ca href\u003d\"http://paste.ubuntu.com/25503696\"\u003e(Code)\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003ch3\u003eH. Perfect Lodging\u003c/h3\u003e\u003cp\u003e有 \u003cspan class\u003d\"tex-span\"\u003e2\u003ci\u003en\u003c/i\u003e\u003c/span\u003e 个人参加会议，需要给他们安排到 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e 个房间，两个人一个房间。\u003c/p\u003e\u003cp\u003e每个人都有一个列表，表示他愿意共住的人，即他愿意和在这个列表上的人住在一个房间。\u003c/p\u003e\u003cp\u003e求是否存在一种安排方案满足每个人的要求。\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e1 ≤ \u003ci\u003en\u003c/i\u003e ≤ 100\u003c/span\u003e\u003c/p\u003e \u003chr /\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003e题解\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e记 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eG\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e][\u003ci\u003ej\u003c/i\u003e]\u003c/span\u003e 表示 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e 和 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e 是否可以在一个房间。问题转化为判定一个点数为 \u003cspan class\u003d\"tex-span\"\u003e2\u003ci\u003en\u003c/i\u003e\u003c/span\u003e 的图是否有完美匹配。\u003c/p\u003e\u003cp\u003e根据 Tutte 定理，我们对于所有 \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ei\u003c/i\u003e, \u003ci\u003ej\u003c/i\u003e)\u003c/span\u003e 满足 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e \u0026lt; \u003ci\u003ej\u003c/i\u003e\u003c/span\u003e 且 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eG\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e][\u003ci\u003ej\u003c/i\u003e] \u003d 1\u003c/span\u003e，令 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eC\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e][\u003ci\u003ej\u003c/i\u003e] \u003d \u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e, \u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e ，其中 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e, \u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e 是一个独一无二的变量，同时 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eC\u003c/i\u003e[\u003ci\u003ej\u003c/i\u003e][\u003ci\u003ei\u003c/i\u003e] \u003d  - \u003ci\u003eC\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e][\u003ci\u003ej\u003c/i\u003e]\u003c/span\u003e。矩阵 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eC\u003c/i\u003e\u003c/span\u003e 中其他元素均赋为 \u003cspan class\u003d\"tex-span\"\u003e0\u003c/span\u003e 。这个图有完美匹配当且仅当矩阵 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eC\u003c/i\u003e\u003c/span\u003e 的行列式恒不为 0。\u003c/p\u003e\u003cp\u003e在实际使用中，我们可以把每一个 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e, \u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e 赋为一个随机整数，在模大质数 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003c/span\u003e 意义下判断行列式是否非 \u003cspan class\u003d\"tex-span\"\u003e0\u003c/span\u003e 。\u003c/p\u003e\u003cp\u003eTutte 定理及相关证明和拓展应用参见 IOI 2017 国家候选队论文 《基于线性代数的一般图匹配》（杨家齐）。\u003c/p\u003e\u003cp\u003e时间复杂度 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e3\u003c/sup\u003e)\u003c/span\u003e 。 \u003cstrong\u003e难度评级 2\u003c/strong\u003e \u003ca href\u003d\"http://paste.ubuntu.com/25489487\"\u003e(Code)\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003ch3\u003eI. Hungry Queen 2\u003c/h3\u003e\u003cp\u003e无穷大的棋盘上有 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e 个棋子 \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e, \u003ci\u003ey\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e)\u003c/span\u003e 。\u003c/p\u003e\u003cp\u003e一开始皇后在 \u003cspan class\u003d\"tex-span\"\u003e(0, 0)\u003c/span\u003e ，需要按编号从小到大收集棋子。\u003c/p\u003e\u003cp\u003e皇后需要每一步都收集到一枚棋子，如果不可能，则收集过程结束。（皇后按国际象棋的规则走，不能跨越棋盘上还有的棋子）\u003c/p\u003e\u003cp\u003e求至多收集到的棋子数量。\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e1 ≤ \u003ci\u003en\u003c/i\u003e ≤ 10\u003csup class\u003d\"upper-index\"\u003e5\u003c/sup\u003e,  - 10\u003csup class\u003d\"upper-index\"\u003e9\u003c/sup\u003e ≤ \u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e, \u003ci\u003ey\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e ≤ 10\u003csup class\u003d\"upper-index\"\u003e9\u003c/sup\u003e\u003c/span\u003e\u003c/p\u003e \u003chr /\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003e题解\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e先假设途中没有其他棋子，求出不能从棋子 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003c/span\u003e 沿皇后走法一步到达棋子 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e + 1\u003c/span\u003e 的最小的 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003c/span\u003e ，如果不存在就令 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e \u003d \u003ci\u003en\u003c/i\u003e\u003c/span\u003e 。\u003c/p\u003e\u003cp\u003e接下来我们需要从 \u003cspan class\u003d\"tex-span\"\u003e[0, \u003ci\u003ep\u003c/i\u003e - 1]\u003c/span\u003e 中找到从棋子 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e 到棋子 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e + 1\u003c/span\u003e 的过程中会经过编号大于 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e + 1\u003c/span\u003e 棋子的最小的 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e ，如果不存在就令 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e \u003d \u003ci\u003ep\u003c/i\u003e\u003c/span\u003e 。此时求出的 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e 即是答案。考虑这一步如何实现。\u003c/p\u003e\u003cp\u003e我们发现皇后的走法本质上只有四种，不妨枚举四种走法，对于每一种，枚举所有直线，对于一条直线的所有点按顺序排好以后，我们要求的其实就是一段连续点的编号最大值，线段树或RMQ维护一下即可。\u003c/p\u003e\u003cp\u003e时间复杂度 \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/e7/0f/e70fbdc8079c0b9ff4f31073012937bac199bc6b.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e 。 \u003cstrong\u003e难度评级 2\u003c/strong\u003e \u003ca href\u003d\"http://paste.ubuntu.com/25490256\"\u003e(Code)\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003ch3\u003eJ. Trip Expenses\u003c/h3\u003e\u003cp\u003e给定一个 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e 个点 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/span\u003e 条边的带边权连通无向图。\u003c/p\u003e\u003cp\u003e等概率随机两个不同的点 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eu\u003c/i\u003e\u003c/span\u003e 和 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e\u003c/span\u003e ，令 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eX\u003c/i\u003e\u003c/span\u003e 表示 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eu\u003c/i\u003e\u003c/span\u003e 和 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e\u003c/span\u003e 之间最短路的最少边数。求 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eX\u003c/i\u003e\u003c/span\u003e 的期望。\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e2 ≤ \u003ci\u003en\u003c/i\u003e ≤ 300, 1 ≤ \u003ci\u003em\u003c/i\u003e ≤ 20000\u003c/span\u003e\u003c/p\u003e \u003chr /\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003e题解\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e先Floyd预处理任意两点间的最短路 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ed\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e][\u003ci\u003ej\u003c/i\u003e]\u003c/span\u003e 。\u003c/p\u003e\u003cp\u003e对于每一个点 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e\u003c/span\u003e ，计算出以 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e\u003c/span\u003e 为源的最短路径图，即仅保留满足 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ed\u003c/i\u003e[\u003ci\u003es\u003c/i\u003e][\u003ci\u003eu\u003c/i\u003e] + \u003ci\u003ew\u003c/i\u003e(\u003ci\u003eu\u003c/i\u003e, \u003ci\u003ev\u003c/i\u003e) \u003d \u003ci\u003ed\u003c/i\u003e[\u003ci\u003es\u003c/i\u003e][\u003ci\u003ev\u003c/i\u003e]\u003c/span\u003e 的边 \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003eu\u003c/i\u003e, \u003ci\u003ev\u003c/i\u003e)\u003c/span\u003e 。在最短路径图上以 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e\u003c/span\u003e 为源BFS一遍得到的距离 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eg\u003c/i\u003e[\u003ci\u003et\u003c/i\u003e]\u003c/span\u003e 就是 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e, \u003ci\u003et\u003c/i\u003e\u003c/span\u003e 之间最短路的最少边数。求和后除以 \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/ce/80/ce802807d1a9227bb6ce0a49ed98548ae838cdaf.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e 即可。\u003c/p\u003e\u003cp\u003e时间复杂度 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e3\u003c/sup\u003e)\u003c/span\u003e 。 \u003cstrong\u003e难度评级 2\u003c/strong\u003e \u003ca href\u003d\"http://paste.ubuntu.com/25490197\"\u003e(Code)\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e","tags":["asc","editorial"]}}