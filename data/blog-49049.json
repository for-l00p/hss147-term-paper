{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":true,"creationTimeSeconds":1481725380,"rating":123,"authorHandle":"hloya_ygrt","modificationTimeSeconds":1481739465,"id":49049,"title":"\u003cp\u003eCodeforces Round #384 Editorial\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cdiv class\u003d\"problemTutorial\" problemcode\u003d\"743A\"\u003eTutorial is loading...\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eSetter\u0027s code\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003eint n, a, b;\nstring s;\ncin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; a \u0026gt;\u0026gt; b \u0026gt;\u0026gt; s;\n\na--, b--;\n\ncout \u0026lt;\u0026lt; ((s[a] - \u00270\u0027) ^ (s[b] - \u00270\u0027));\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"problemTutorial\" problemcode\u003d\"743B\"\u003eTutorial is loading...\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eSetter\u0027s code\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003eint go(ll l, ll r, ll need, int alphSize)\n{\n    ll m \u003d l + (r - l) / 2LL;\n    if (need \u0026lt; m)\n        return go(l, m - 1, need, alphSize - 1);\n    else if (need \u0026gt; m)\n        return go(m + 1, r, need, alphSize - 1);\n    else\n        return alphSize;\n}\n\nvoid solveABig()\n{\n    int n;\n    ll k;\n\n    cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; k;\n    ll sz \u003d 1;\n    for (int i \u003d 1; i \u0026lt; n; i++)\n        sz \u003d sz * 2LL + 1LL;\n    \n    cout \u0026lt;\u0026lt; go(1, sz, k, n);\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"problemTutorial\" problemcode\u003d\"743C\"\u003eTutorial is loading...\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eSetter\u0027s code\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003eint n;\ncin \u0026gt;\u0026gt; n;\nif (n \u003d\u003d 1)\n\tcout \u0026lt;\u0026lt; -1 \u0026lt;\u0026lt; endl;\nelse\n\tcout \u0026lt;\u0026lt; n \u0026lt;\u0026lt; \u0027 \u0027 \u0026lt;\u0026lt; n + 1 \u0026lt;\u0026lt; \u0027 \u0027 \u0026lt;\u0026lt; n * (n + 1) \u0026lt;\u0026lt; endl;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"problemTutorial\" problemcode\u003d\"743D\"\u003eTutorial is loading...\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eSetter\u0027s code\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003eint a[maxn];\nvector\u0026lt;int\u0026gt; g[maxn];\n\nll sum_subTree[maxn], mx_subTree[maxn];\n\nvoid dfs1(int v, int p) {\n    sum_subTree[v] \u003d a[v];\n    mx_subTree[v] \u003d -llinf;\n    for (int i \u003d 0; i \u0026lt; g[v].size(); i++) {\n        int to \u003d g[v][i];\n        if (to \u003d\u003d p)\n            continue;\n        dfs1(to, v);\n        sum_subTree[v] +\u003d sum_subTree[to];\n        mx_subTree[v] \u003d max(mx_subTree[v], mx_subTree[to]);\n    }\n    mx_subTree[v] \u003d max(mx_subTree[v], sum_subTree[v]);\n}\n\nll ans \u003d -llinf;\n\nvoid dfs2(int v, int p, ll out) {\n    if (out !\u003d -llinf)\n    ans \u003d max(ans, sum_subTree[v] + out);\n\n    vector\u0026lt;pair\u0026lt;ll, int\u0026gt; \u0026gt; miniset;\n    for (int i \u003d 0; i \u0026lt; g[v].size(); i++) {\n        int to \u003d g[v][i];\n        if (to \u003d\u003d p)\n            continue;\n        miniset.pb(mp(mx_subTree[to], to));\n        sort(miniset.rbegin(), miniset.rend());\n        if (miniset.size() \u003d\u003d 3)\n            miniset.pop_back();\n    }\n    miniset.pb(mp(-llinf, -1));\n    for (int i \u003d 0; i \u0026lt; g[v].size(); i++) {\n        int to \u003d g[v][i];\n        if (to \u003d\u003d p)\n            continue;\n        ll cur \u003d miniset[0].s \u003d\u003d to ? miniset[1].f : miniset[0].f;\n        dfs2(to, v, max(out, cur));\n    }\n}\n\nint main() {\n    for (int i \u003d 0; i + 1 \u0026lt; n; i++) {\n        int u, v;\n        read(u, v);\n        u--, v--;\n        g[u].pb(v);\n        g[v].pb(u);\n    }\n\n    dfs1(0, -1);\n    dfs2(0, -1, -llinf);\n    cout \u0026lt;\u0026lt; ((ans \u003d\u003d -llinf) ? (\u0026quot;Impossible\u0026quot;) : to_string(ans));\n    return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"problemTutorial\" problemcode\u003d\"743E\"\u003eTutorial is loading...\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eSetter\u0027s code\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003eint can(int len) {\n    for (int i \u003d 0; i \u0026lt; 8; i++)\n        cur[i] \u003d 0;\n    for (int i \u003d 0; i \u0026lt;\u003d n; i++)\n        for (int j \u003d 0; j \u0026lt; (1 \u0026lt;\u0026lt; 8); j++)\n            dp[i][j] \u003d -inf;\n    dp[0][0] \u003d 0;\n    for (int i \u003d 0; i \u0026lt; n; i++) {\n        for (int j \u003d 0; j \u0026lt; (1 \u0026lt;\u0026lt; 8); j++) {\n            if (dp[i][j] \u003d\u003d -inf)\n                continue;\n            for (int k \u003d 0; k \u0026lt; 8; k++) {\n                if (j \u0026amp; (1 \u0026lt;\u0026lt; k))\n                    continue;\n                int it \u003d cur[k] + len - 1;\n                if (it \u0026gt;\u003d in[k].size())\n                    continue;\n                amax(dp[in[k][it] + 1][j | (1 \u0026lt;\u0026lt; k)], dp[i][j]);\n                    \n                it++;\n                if (it \u0026gt;\u003d in[k].size())\n                    continue;\n                amax(dp[in[k][it] + 1][j | (1 \u0026lt;\u0026lt; k)], dp[i][j] + 1);\n            }\n        }\n        cur[a[i]]++;\n    }\n\n    int ans \u003d -inf;\n    for (int i \u003d 0; i \u0026lt;\u003d n; i++)\n        ans \u003d max(ans, dp[i][(1 \u0026lt;\u0026lt; 8) - 1]);\n    if (ans \u003d\u003d -inf)\n        return -1;\n\n    return ans * (len + 1) + (8 - ans) * len;\n}\n\nint main() {\n    for (int i \u003d 0; i \u0026lt; n; i++) {\n        in[a[i]].push_back(i);\n    }\n\n    int l \u003d 1, r \u003d n / 8;\n    while (r - l \u0026gt; 1) {\n        int m \u003d (l + r) \u0026gt;\u0026gt; 1;\n        if (can(m) !\u003d -1)\n            l \u003d m;\n        else\n            r \u003d m;\n    }\n    int ans \u003d max(can(l), can(r));\n    if (ans \u003d\u003d -1) {\n        ans \u003d 0;\n        for (int i \u003d 0; i \u0026lt; 8; i++)\n            if (!in[i].empty())\n                ans++;\n    }\n    cout \u0026lt;\u0026lt; ans;\n    return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e","tags":["#editorial","#cf","#codeforces"]}}