{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1521694463,"rating":97,"authorHandle":"MakeRussiaGreatAgain","modificationTimeSeconds":1521694463,"id":58502,"title":"\u003cp\u003eJava 10 for competitive programming\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eJava 10 has been released a few days ago, just six months after \u003ca href\u003d\"/blog/entry/54713\"\u003eJava 9\u003c/a\u003e. In this version, I found only one new feature which is useful for competitive programming: \u003ca href\u003d\"https://medium.com/@afinlay/java-10-sneak-peek-local-variable-type-inference-var-3022016e1a2b\"\u003eLocal-Variable Type Inferrence\u003c/a\u003e. It works similarly to \u003ccode\u003eauto\u003c/code\u003e keyword in C++. So now you can write something like this:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003evar map \u003d new HashMap\u0026lt;Integer, List\u0026lt;String\u0026gt;\u0026gt;();\nfor (var entry : map.entrySet()) {\n    var key \u003d entry.getKey();\n    for (var element : entry.getValue()) {\n        System.out.println(key + \u0026quot; \u0026quot; + element);\n    }\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eIf you find any other relevant enhancements, please post them here.\u003c/p\u003e\u003c/div\u003e","tags":["java"]}}