{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1502236051,"rating":8,"authorHandle":"Sherlock2000","modificationTimeSeconds":1502269670,"id":53756,"title":"\u003cp\u003eSome queries about modification on trees\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHey guys, i was working on this problem \u003ca href\u003d\"//codeforces.com/problemset/problem/827/D\"\u003e827D-Best edge weight\u003c/a\u003e\u003c/p\u003e\u003cp\u003eThere is a skill i learnt from a code, if you used two-power walk (i don\u0027t know how to call it in a proper way), let \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003efa\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e][\u003ci\u003ej\u003c/i\u003e]\u003c/span\u003e represents you start from \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e, walk \u003cspan class\u003d\"tex-span\"\u003e2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/sup\u003e\u003c/span\u003e steps upward, the vertex you can reach. \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e][\u003ci\u003ej\u003c/i\u003e]\u003c/span\u003e represents the same stuff but instead of storing the vertex you can reach, we store the minimum weight among all the edges you pass from \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eu\u003c/i\u003e\u003c/span\u003e to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eif you want to change the weights on all the edges on the path from \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eu\u003c/i\u003e\u003c/span\u003e to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e\u003c/span\u003e on the tree, you only need to do the following part:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003evoid modify(int u,int z,int w) //change to w, assume z is the lca to (u,v) coz u can split it into u-\u0026gt;lca,v-\u0026gt;lca\n{\n    int c \u003d dep[u]-dep[z];\n    for(int i \u003d 19; i \u0026gt;\u003d 0; -- i) if(c\u0026amp;(1\u0026lt;\u0026lt;i)) p[u][i] \u003d min(p[u][i], w), u \u003d fa[u][i];\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eand then in the main function, we do\u003c/p\u003e \u003cpre\u003e\u003ccode\u003efd(j,19,1) fo(i,1,n) \n{\n\tp[j-1][i] \u003d min(p[j-1][i], p[j][i]);\n\tp[j-1][fa[j-1][i]] \u003d min(p[j-1][fa[j-1][i]], p[j][i]);\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003ei am wondering if this skill is correct and i can use it for any offline modification?\u003c/p\u003e\u003cp\u003ethanks :P\u003c/p\u003e\u003c/div\u003e","tags":[]}}