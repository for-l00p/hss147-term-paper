{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1456928520,"rating":0,"authorHandle":"zscoder","modificationTimeSeconds":1458002628,"id":43512,"title":"\u003cp\u003eCodeforces Training 4 Hints and Solutions\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003ch3\u003eA. The Classic Problem\u003c/h3\u003e\u003cp\u003eThis is a really simple problem. However, it is advisable not to use the built-in pow function from C++ as you might get precision errors. Instead, using binary search with careful implementation of the power function is enough. Alternatively, you can use long double.\u003c/p\u003e\u003ch3\u003eB. Simple String\u003c/h3\u003e\u003cp\u003eWe loop through the string from left to right. Whenever we encounter two adjacent characters that are the same, we change the right one into another character such that it is distinct from the next character, and increment the answer by \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e. \u003c/p\u003e\u003ch3\u003eC. Sum and Xor\u003c/h3\u003e\u003cp\u003eConsider a pair of integers \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003es\u003c/i\u003e, \u003ci\u003ex\u003c/i\u003e)\u003c/span\u003e. Suppose \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ea\u003c/i\u003e, \u003ci\u003eb\u003c/i\u003e)\u003c/span\u003e is a solution. Note that \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/f2/5b/f25baf419777030baec3c871b20a3353a5e3dccf.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, where \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/c1/5d/c15d2b716fe31376e2f869457fe96754821bf274.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e is bitwise xor and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eaandb\u003c/i\u003e\u003c/span\u003e is bitwise AND. Thus, \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/33/db/33db70daca35814a5006627e169a3c4ab5d9e2d5.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. \u003c/p\u003e\u003cp\u003eWe consider the solutions bit-by-bit. For each bit, if \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/06/a6/06a615acbfc11f238444e1111fcf96a7426a4d56.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, then \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e \u003d \u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e, so we must have \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e \u003d \u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e \u003d \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eiandb\u003c/i\u003e\u003c/sub\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e. Otherwise, if \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/c9/bb/c9bbdef4003174ad4520ec763b9790bdd6a82179.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, then \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eiandb\u003c/i\u003e\u003c/sub\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e \u003d 0\u003c/span\u003e, so either there are no solutions, or we have two choices : \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e \u003d 1, \u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e \u003d 0\u003c/span\u003e or the other way around. Thus, the answer is \u003cspan class\u003d\"tex-span\"\u003e2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/sup\u003e\u003c/span\u003e, where \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e is the number of one-bits in \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e. However, the problem only wants positive integer solutions, so we have to subtract \u003cspan class\u003d\"tex-span\"\u003e2\u003c/span\u003e from the answer when \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e \u003d \u003ci\u003ex\u003c/i\u003e\u003c/span\u003e (to remove \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e \u003d 0, \u003ci\u003eb\u003c/i\u003e \u003d \u003ci\u003ex\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e \u003d \u003ci\u003ex\u003c/i\u003e, \u003ci\u003eb\u003c/i\u003e \u003d 0\u003c/span\u003e).\u003c/p\u003e\u003cp\u003eSo, what can we conclude from the above? \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e \u003d 2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/sup\u003e\u003c/span\u003e or \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e \u003d 2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/sup\u003e - 2\u003c/span\u003e for some nonnegative integer \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e. For \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e \u003d 0, 1\u003c/span\u003e the answer can be found manually. We\u0027ll construct solutions for \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e \u003d 2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/sup\u003e - 2\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e \u003d 2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/sup\u003e\u003c/span\u003e for \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e ≥ 2\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eIf \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e \u003d 2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/sup\u003e - 2\u003c/span\u003e, then we can choose \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e \u003d 2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/sup\u003e - 1\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e \u003d 2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/sup\u003e - 1\u003c/span\u003e. If \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e \u003d 2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/sup\u003e\u003c/span\u003e, then we can choose \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e \u003d 2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003en\u003c/i\u003e + 1\u003c/sup\u003e + 2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/sup\u003e - 1, \u003ci\u003ex\u003c/i\u003e \u003d 2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/sup\u003e - 1\u003c/span\u003e.\u003c/p\u003e\u003ch3\u003eD. Generating Input\u003c/h3\u003e\u003cp\u003eThe problem statement can actually be reduced to the following :\u003c/p\u003e\u003cp\u003eGiven a positive integer \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e. You start from the integer \u003cspan class\u003d\"tex-span\"\u003e0\u003c/span\u003e. It takes \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e seconds to add or minus \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e from the current integer and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ey\u003c/i\u003e\u003c/span\u003e seconds to multiply the current integer by \u003cspan class\u003d\"tex-span\"\u003e2\u003c/span\u003e. What is the minimum amount of time needed to reach \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e?\u003c/p\u003e\u003cp\u003eLet \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edp\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e]\u003c/span\u003e denote the minimum number of seconds needed to reach \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e. Then, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edp\u003c/i\u003e[0] \u003d 0, \u003ci\u003edp\u003c/i\u003e[1] \u003d \u003ci\u003ex\u003c/i\u003e\u003c/span\u003e. We\u0027ll derive a recurrence relation for \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edp\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e]\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eIf \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e is odd, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edp\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e] \u003d \u003ci\u003emin\u003c/i\u003e(\u003ci\u003edp\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e - 1] + \u003ci\u003ex\u003c/i\u003e, \u003ci\u003edp\u003c/i\u003e[(\u003ci\u003ei\u003c/i\u003e + 1) / 2] + \u003ci\u003ex\u003c/i\u003e + \u003ci\u003ey\u003c/i\u003e)\u003c/span\u003e and if \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e is even, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edp\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e] \u003d \u003ci\u003emin\u003c/i\u003e(\u003ci\u003edp\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e - 1] + \u003ci\u003ex\u003c/i\u003e, \u003ci\u003edp\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e / 2] + \u003ci\u003ey\u003c/i\u003e)\u003c/span\u003e. The key observation is that it is pointless to double \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e and then subtract twice, as we can just subtract once then double \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e. \u003c/p\u003e\u003ch3\u003eE. Naughty Chris\u003c/h3\u003e\u003cp\u003eTo solve this problem, you have to solve the original problem first, which is given in the last contest (Codeforces Training 3). The answer to the original problem is \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/cb/72/cb72ee41529425a7ac9312c54a2514aca610ae88.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, when \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e \u0026gt; 1\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e + \u003ci\u003enB\u003c/i\u003e\u003c/span\u003e when \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e \u003d 1\u003c/span\u003e. \u003c/p\u003e\u003cp\u003eNow, the problem asks us to find a linear function \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e(\u003ci\u003ex\u003c/i\u003e) \u003d \u003ci\u003eAx\u003c/i\u003e + \u003ci\u003eB\u003c/i\u003e\u003c/span\u003e such that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/sup\u003e(\u003ci\u003ex\u003c/i\u003e) ≡ \u003ci\u003et\u003c/i\u003e(\u003ci\u003emodp\u003c/i\u003e)\u003c/span\u003e. First, we check if there\u0027s a solution with \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e \u003d 1\u003c/span\u003e. So, we would like to have \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e + \u003ci\u003enB\u003c/i\u003e ≡ \u003ci\u003et\u003c/i\u003e(\u003ci\u003emodp\u003c/i\u003e)\u003c/span\u003e, or \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003enB\u003c/i\u003e ≡ \u003ci\u003et\u003c/i\u003e - \u003ci\u003ex\u003c/i\u003e(\u003ci\u003emodp\u003c/i\u003e)\u003c/span\u003e. If \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003et\u003c/i\u003e - \u003ci\u003ex\u003c/i\u003e ≡ 0(\u003ci\u003emodp\u003c/i\u003e)\u003c/span\u003e, then we just choose \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e \u003d 0\u003c/span\u003e. Else, if \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e is not divisible by \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003c/span\u003e, then we choose \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e \u003d (\u003ci\u003et\u003c/i\u003e - \u003ci\u003ex\u003c/i\u003e)·\u003ci\u003en\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e - 1\u003c/sup\u003e(\u003ci\u003emodp\u003c/i\u003e)\u003c/span\u003e. Otherwise, there\u0027re no solutions with \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e \u003d 1\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eNow, we consider the case \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e \u0026gt; 1\u003c/span\u003e. We iterate through all possible values of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003c/span\u003e. For each \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003c/span\u003e, we can also determine if we can find \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u003c/span\u003e using the same method as \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e \u003d 1\u003c/span\u003e, and if after iterating through all possible values of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003c/span\u003e there\u0027re still no solution, we output \u003cspan class\u003d\"tex-span\"\u003e - 1\u003c/span\u003e.\u003c/p\u003e\u003ch3\u003eF. Adding Numbers\u003c/h3\u003e\u003cp\u003eThis is just a simple graph theory problem. Construct a graph with \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/span\u003e vertices, denoting \u003cspan class\u003d\"tex-span\"\u003e0, 1, 2, ..., \u003ci\u003em\u003c/i\u003e - 1\u003c/span\u003e. Then, from each vertex \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e, draw an edge to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e + \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e, \u003ci\u003ei\u003c/i\u003e + \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e, ..., \u003ci\u003ei\u003c/i\u003e + \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e modulo \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/span\u003e. Now, do BFS from vertex \u003cspan class\u003d\"tex-span\"\u003e0\u003c/span\u003e and store length of shortest path from every other vertex. Those vertices with length of shortest path to \u003cspan class\u003d\"tex-span\"\u003e0\u003c/span\u003e at most \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e will be the answer.\u003c/p\u003e\u003ch3\u003eG. Sequence Sum\u003c/h3\u003e\u003cp\u003eHint : Note that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e + 2\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e + ... + \u003ci\u003ena\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/sub\u003e \u003d (\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e + \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e + ... + \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/sub\u003e) + (\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e + ... + \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/sub\u003e) + ... + (\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/sub\u003e)\u003c/span\u003e then use matrices to find the sum.\u003c/p\u003e\u003ch3\u003eH. Divisor Tree\u003c/h3\u003e\u003cp\u003eHint : Use Mo\u0027s algorithm on Tree, for each vertex store its prime factorization, then update can be done by updating the prime frequency table and multiplying and dividing by a single integer.\u003c/p\u003e\u003c/div\u003e","tags":[]}}