{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1406406200,"rating":3,"authorHandle":"moinul.shaon","modificationTimeSeconds":1406407952,"id":13204,"title":"\u003cp\u003eUVA 12003 Faster Method\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eProblem Link: \u003ca href\u003d\"http://uva.onlinejudge.org/external/120/12003.html\"\u003ehttp://uva.onlinejudge.org/external/120/12003.html\u003c/a\u003e\u003c/p\u003e\u003cp\u003eI have solved this problem using sqrt decomposition and treap . In sqrt decomposition per query cost is O(\u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/c2/c2/c2c284807a7b47f90e4b201ee349b9029c0a9930.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e) and treap is O( log(n)*log(n) ) . Both of my method took ~3.3s and ~4.5s respectively . I want to know if there is any faster method as there seems to be ~1s solution on the statistics.\u003c/p\u003e\u003cp\u003eThanx :)\u003c/p\u003e\u003c/div\u003e","tags":["uva","improvement"]}}