{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":true,"creationTimeSeconds":1517469780,"rating":7,"authorHandle":"beka00","modificationTimeSeconds":1517470026,"id":57469,"title":"\u003cp\u003eФакты о программистах \u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e** Fact ** 1\u003c/p\u003e\u003cp\u003eUnder the hood of the most critical programs that you use on a daily basis (Mac OS X or Facebook) contains a terrible amount of hacks and crutches that hardly get along with each other. It\u0027s as if you disassembled the Boeing 747 and saw that the fuel pipe is held by a clothes hanger, the chassis is wrapped with electrical tape.\u003c/p\u003e\u003cp\u003eBen Cherry\u003c/p\u003e\u003cp\u003eThe code of programs is that even if the site or program works fine and looks great, then behind the scenes everything that makes it work consists of mistakes, blunders and crutches. It works almost by accident, why.\u003c/p\u003e\u003cp\u003e** Fact 2 **\u003c/p\u003e\u003cp\u003e25% of the time in programming goes into thinking about what the user can do wrong.\u003c/p\u003e\u003cp\u003eBrian Humes\u003c/p\u003e\u003cp\u003eIt actually takes more or less of an interest of time, but each time we really need to think about what the user can do here. Where will press, what will introduce, and how it is possible to understand what we are trying to do is wrong. If we were counting only on ourselves, the programs would have too many problems — after all, we know how the program works and the user does not know.\u003c/p\u003e\u003cp\u003e** Fact 3 **\u003c/p\u003e\u003cp\u003eA programmer is not a computer repair specialist\u003c/p\u003e\u003cp\u003eRitesh Kumar Gupta\u003c/p\u003e\u003cp\u003eThe programmer works with algorithms and development principles, and does not repair computers. We can understand how the computer works and how the code is executed. But this does not mean that we are able to repair iron. We do not know which problem in Chrome causes it on your computer, or why your computer overheats. Programmers program computers, and do not repair them.\u003c/p\u003e\u003cp\u003e** Fact 4 **\u003c/p\u003e\u003cp\u003eProgramming is thinking, not typing\u003c/p\u003e\u003cp\u003eCasey Paton\u003c/p\u003e\u003cp\u003eFor the most part, we program when we sleep, walk, look out the window, or do something else, which allows us to relax and think. Relaxation is one of the main aspects of programming. You can not just sit down and write a thousand lines of code and insert them into the program. We need to sit, walk, think. To come up with a concept, fix its shortcomings, decide how it will work ... Relaxation is the only way that we can use to correct problems.\u003c/p\u003e\u003cp\u003e** Fact 5 **\u003c/p\u003e\u003cp\u003eCounting starts from zero\u003c/p\u003e\u003cp\u003eIt is important. Counting goes from scratch — your 1 is my 0, your 10 is my 9. All because of the need to do things efficiently, even when a small increase in efficiency can scale up productivity on a scale.\u003c/p\u003e\u003cp\u003e** Fact 6 **\u003c/p\u003e\u003cp\u003eProgramming is best in the flow — in this state of consciousness, when you are focused on the task and everything seems simple. This condition is also familiar to athletes and musicians.\u003c/p\u003e\u003cp\u003eMorgan Johansson\u003c/p\u003e\u003cp\u003eProgrammers like to work at night because it allows us to enter the stream, focus on one thing and not worry about what we can distract. All the rest just sleep. This is the time of the day when no one is around, no one is calling or trying to talk to us. A great time to think and program.\u003c/p\u003e\u003cp\u003e** Fact 7 **\u003c/p\u003e\u003cp\u003eSometimes it is useful to postpone the problem until the morning\u003c/p\u003e\u003cp\u003eSometimes programmers are really useful, having met a difficult task, to sleep \u0026quot;with it\u0026quot;. Many times I met with the fact that I could not solve something for hours, but after only a 20-minute sleep (or any other sleep) on waking, the decision came by itself.\u003c/p\u003e\u003cp\u003e** Fact 8 **\u003c/p\u003e\u003cp\u003e\u0026quot;Parent\u0026quot; can kill his \u0026quot;children\u0026quot; if their implementation is carried out\u003c/p\u003e\u003cp\u003eNot the phrase I\u0027d like to hear from someone. But for programmers it does not sound so scary. Programs often have a hierarchical structure, where the parent process controls its child processes running at the lower level. When the parent process no longer needs a child, it kills it — when the program does not have to do anything else, its execution is finished.\u003c/p\u003e\u003cp\u003e** Fact 9 **\u003c/p\u003e\u003cp\u003eYou are not impressed by how much we know about computers. We are not impressed by how little you know about them.\u003c/p\u003e\u003cp\u003eReally. Enough. It does not matter to us how proud you are that you do not want to learn new things. It\u0027s clear if you say \u0026quot;I know little about computers\u0026quot; or \u0026quot;I\u0027m not interested in programming\u0026quot; — but when you boast about how much you do not know about it, it\u0027s just annoying.\u003c/p\u003e\u003c/div\u003e","tags":[]}}