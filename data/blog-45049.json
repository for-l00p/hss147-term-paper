{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1464196530,"rating":5,"authorHandle":"Singledigit","modificationTimeSeconds":1464196763,"id":45049,"title":"\u003cp\u003eRuntime Error Test 1: Tree Construction\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHello, \u003c/p\u003e\u003cp\u003eI have no idea how this is failing. It works perfectly fine from my terminal. \u003c/p\u003e\u003cp\u003eI am currently having a runtime error on Tree construction: \u003ca href\u003d\"//codeforces.com/problemset/problem/675/D\"\u003ehttp://codeforces.com/problemset/problem/675/D\u003c/a\u003e\u003c/p\u003e\u003cp\u003eg++ --version Configured with: --prefix\u003d/Applications/Xcode.app/Contents/Developer/usr --with-gxx-include-dir\u003d/usr/include/c++/4.2.1 Apple LLVM version 7.3.0 (clang-703.0.29) Target: x86_64-apple-darwin15.4.0 Thread model: posix InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin\u003c/p\u003e\u003cp\u003eError: Test: #1, time: 0 ms., memory: 2000 KB, exit code: -1073741819, checker exit code: 0, verdict: RUNTIME_ERROR Checker: \u003cem\u003enull\u003c/em\u003e\u003c/p\u003e\u003cp\u003eHere are all my latest submissions: \u003ca href\u003d\"//codeforces.com/submissions/Singledigit\"\u003ehttp://codeforces.com/submissions/Singledigit\u003c/a\u003e\u003c/p\u003e\u003cp\u003eCode\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e/* CodeForces Problem 675D\n * http://codeforces.com/problemset/problem/675/D\n * Objective: Create BST and Print out Parent nodes\n */\n#include \u0026lt;vector\u0026gt;\n#include \u0026lt;iostream\u0026gt;\nusing namespace std;\n\nclass tree{\n   public: \n      long long val;\n      tree *left, *right, *parent;\n   public:\n      tree(long long k, tree* l, tree* r){\n         val \u003d k;\n         left \u003d l;\n         right \u003d r;\n      }\n      tree(long long k, tree* p){\n         val \u003d k;\n         left \u003d right \u003d NULL;\n         parent \u003d p;\n      }\n};\n\nvoid insert(tree*\u0026amp; t, long long k, tree* p){\n   if(t\u003d\u003dNULL){\n      t \u003d new tree(k, p);\n      if(p!\u003dNULL) cout \u0026lt;\u0026lt; p-\u0026gt;val \u0026lt;\u0026lt; \u0026quot; \u0026quot;;\n      return;\n   }else if(k \u0026gt; t-\u0026gt;val){\n      insert(t-\u0026gt;right, k, t);\n   }else if(k \u0026lt; t-\u0026gt;val){\n      insert(t-\u0026gt;left, k, t);\n   }\n}\n\nint main(){\n   \n   int size;\n   cin \u0026gt;\u0026gt; size;\n   tree* t;\n   vector\u0026lt;long long\u0026gt; nodes;\n   \n   int i\u003d0;\n   while(i\u0026lt;size){\n      long long temp; \n      cin\u0026gt;\u0026gt;temp;\n      nodes.push_back(temp);\n      i++;\n   }\n\n   for(i \u003d 0;i\u0026lt;nodes.size();i++)\n      insert(t,nodes.at(i), NULL);\n   \n   cout\u0026lt;\u0026lt;endl; \n   return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":[]}}