{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1423024724,"rating":144,"authorHandle":"Swift","modificationTimeSeconds":1423251366,"id":16205,"title":"\u003cp\u003e2-SAT Tutorial\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHi codeforces community.\u003c/p\u003e\u003cp\u003eI thought there is no good \u003cem\u003e2-SAT\u003c/em\u003e tutorial in the internet, so I decided to write one.\u003c/p\u003e\u003cp\u003e\u003cem\u003e2-SAT\u003c/em\u003e is a special case of boolean satisfiability.\u003c/p\u003e\u003cp\u003e\u003cimg alt\u003d\" \" src\u003d\"/predownloaded/0f/81/0f810c4cc6f56c33cdc4293fd486d64f5ab22f7d.jpeg\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003eGood question! Boolean satisfiability or just \u003cem\u003eSAT\u003c/em\u003e determines whether we can give values (\u003csamp\u003eTRUE\u003c/samp\u003e or \u003csamp\u003eFALSE\u003c/samp\u003e only) to each boolean variable in such a way that the value of the formula become \u003csamp\u003eTRUE\u003c/samp\u003e or not. If we can do so, we call formula \u003ci\u003esatisfiable\u003c/i\u003e, otherwise we call it \u003ci\u003eunsatisfiable\u003c/i\u003e. Look at the example below:\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e \u003d \u003ci\u003eA\u003c/i\u003e ∧ ¬\u003ci\u003eB\u003c/i\u003e\u003c/span\u003e, is \u003ci\u003esatisfiable\u003c/i\u003e, cause A \u003d \u003csamp\u003eTRUE\u003c/samp\u003e and B \u003d \u003csamp\u003eFALSE\u003c/samp\u003e makes it \u003csamp\u003eTRUE\u003c/samp\u003e.\u003c/p\u003e\u003cp\u003ebut \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eg\u003c/i\u003e \u003d \u003ci\u003eA\u003c/i\u003e ∧ ¬\u003ci\u003eA\u003c/i\u003e\u003c/span\u003e, is \u003ci\u003eunsatisfiable\u003c/i\u003e, look at this table:\u003c/p\u003e \u003ccenter\u003e \u003ctable style\u003d\"text-align: center;\"\u003e \u003cthead style\u003d\"background-color: gray;\"\u003e \u003ctr\u003e \u003ctd\u003e\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003c/span\u003e\u003c/td\u003e \u003ctd\u003e\u003cspan class\u003d\"tex-span\"\u003e¬\u003ci\u003eA\u003c/i\u003e\u003c/span\u003e\u003c/td\u003e \u003ctd\u003e\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e ∧ ¬\u003ci\u003eA\u003c/i\u003e\u003c/span\u003e\u003c/td\u003e \u003c/tr\u003e \u003c/thead\u003e \u003ctbody\u003e\u003ctr\u003e \u003ctd\u003e\u003csamp\u003eTRUE\u003c/samp\u003e\u003c/td\u003e \u003ctd\u003e\u003csamp\u003eFALSE\u003c/samp\u003e\u003c/td\u003e \u003ctd\u003e\u003csamp\u003eFALSE\u003c/samp\u003e\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003e\u003csamp\u003eFALSE\u003c/samp\u003e\u003c/td\u003e \u003ctd\u003e\u003csamp\u003eTRUE\u003c/samp\u003e\u003c/td\u003e \u003ctd\u003e\u003csamp\u003eFALSE\u003c/samp\u003e\u003c/td\u003e \u003c/tr\u003e \u003c/tbody\u003e\u003c/table\u003e \u003c/center\u003e\u003cp\u003eAs you can see \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eg\u003c/i\u003e\u003c/span\u003e is \u003ci\u003eunsatisfiable\u003c/i\u003e cause whatever values of its boolean variables are, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eg\u003c/i\u003e\u003c/span\u003e is \u003csamp\u003eFALSE\u003c/samp\u003e.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e \u003cspan class\u003d\"tex-span\"\u003e¬\u003c/span\u003e in \u003cspan class\u003d\"tex-span\"\u003e¬\u003ci\u003eX\u003c/i\u003e\u003c/span\u003e is boolean \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003enot\u003c/i\u003e\u003c/span\u003e operation. \u003cspan class\u003d\"tex-span\"\u003e∧\u003c/span\u003e in \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eX\u003c/i\u003e ∧ \u003ci\u003eY\u003c/i\u003e\u003c/span\u003e is boolean \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eand\u003c/i\u003e\u003c/span\u003e operation and finally \u003cspan class\u003d\"tex-span\"\u003e∨\u003c/span\u003e in \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eX\u003c/i\u003e ∨ \u003ci\u003eY\u003c/i\u003e\u003c/span\u003e is boolean \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eor\u003c/i\u003e\u003c/span\u003e operation.\u003c/p\u003e\u003cp\u003e\u003cem\u003eSAT\u003c/em\u003e is a \u003ccode\u003eNP-Complete\u003c/code\u003e problem, though we can solve \u003cem\u003e1-SAT\u003c/em\u003e and \u003cem\u003e2-SAT\u003c/em\u003e problems in a polynomial time.\u003c/p\u003e\u003ch4\u003e1-SAT\u003c/h4\u003e\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e This doesn\u0027t really exist, I define it cause it help understanding \u003cem\u003e2-SAT\u003c/em\u003e.\u003c/p\u003e\u003cp\u003eConsider \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e \u003d \u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e ∧ \u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e ∧ ...  ∧ \u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eProblem:\u003c/strong\u003e Is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e\u003c/span\u003e \u003cem\u003esatisfiable\u003c/em\u003e?\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eSolution:\u003c/strong\u003e Well \u003cem\u003e1-SAT\u003c/em\u003e is an easy problem, if there aren\u0027t both of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e¬\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e in \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e\u003c/span\u003e, then \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e\u003c/span\u003e is \u003cem\u003esatisfiable\u003c/em\u003e, otherwise it\u0027s not.\u003c/p\u003e\u003ch4\u003e2-SAT\u003c/h4\u003e\u003cp\u003eConsider \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e \u003d (\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e ∨ \u003ci\u003ey\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e) ∧ (\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e ∨ \u003ci\u003ey\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e) ∧ ...  ∧ (\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/sub\u003e ∨ \u003ci\u003ey\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/sub\u003e)\u003c/span\u003e.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eProblem:\u003c/strong\u003e Is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e\u003c/span\u003e \u003cem\u003esatisfiable\u003c/em\u003e?\u003c/p\u003e\u003cp\u003eBut how to solve this problem? \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e ∨ \u003ci\u003ey\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e and \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/00/ab/00aba86ef62a3504cd14b8b8b6cca3a539c02bb2.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e and \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/98/54/985412cfe4e6f5903af3423665f72165faec5c31.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e are all equivalent. So we convert each of \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e ∨ \u003ci\u003ey\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e)\u003c/span\u003e s into those two statements.\u003c/p\u003e\u003cp\u003eNow consider a graph with \u003cspan class\u003d\"tex-span\"\u003e2\u003ci\u003en\u003c/i\u003e\u003c/span\u003e vertices; For each of \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e ∨ \u003ci\u003ey\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e)\u003c/span\u003e s we add two directed edges\u003c/p\u003e \u003col\u003e   \u003cli\u003e\u003cp\u003eFrom \u003cspan class\u003d\"tex-span\"\u003e¬\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ey\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eFrom \u003cspan class\u003d\"tex-span\"\u003e¬\u003ci\u003ey\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e\u003c/p\u003e\u003c/li\u003e \u003c/ol\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e\u003c/span\u003e is not \u003cem\u003esatisfiable\u003c/em\u003e if both \u003cspan class\u003d\"tex-span\"\u003e¬\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e are in the same SCC (Strongly Connected Component) (Why?) Checking this can be done with a simple \u003ca href\u003d\"http://en.wikipedia.org/wiki/Kosaraju%27s_algorithm\"\u003eKosaraju\u0027s Algorithm\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eAssume that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e\u003c/span\u003e is \u003cem\u003esatisfiable\u003c/em\u003e. Now we want to give values to each variable in order to satisfy \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e\u003c/span\u003e. It can be done with a topological sort of vertices of the graph we made. If \u003cspan class\u003d\"tex-span\"\u003e¬\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e is after \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e in topological sort, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e should be \u003csamp\u003eFALSE\u003c/samp\u003e. It should be \u003csamp\u003eTRUE\u003c/samp\u003e otherwise.\u003c/p\u003e\u003cp\u003eSome problems:\u003c/p\u003e \u003cul\u003e   \u003cli\u003e\u003ca href\u003d\"http://www.spoj.com/problems/BUGLIFE/\"\u003eSPOJ — BUGLIFE\u003c/a\u003e\u003c/li\u003e   \u003cli\u003e\u003ca href\u003d\"http://www.spoj.com/problems/TORNJEVI/\"\u003eSPOJ — TORNJEVI\u003c/a\u003e\u003c/li\u003e   \u003cli\u003e\u003ca href\u003d\"http://uva.onlinejudge.org/index.php?option\u003donlinejudge\u0026amp;page\u003dshow_problem\u0026amp;problem\u003d1260\"\u003eUVa — Manhattan\u003c/a\u003e\u003c/li\u003e   \u003cli\u003e\u003ca href\u003d\"http://uva.onlinejudge.org/index.php?option\u003donlinejudge\u0026amp;page\u003dshow_problem\u0026amp;problem\u003d2269\"\u003eUVa — Wedding\u003c/a\u003e\u003c/li\u003e   \u003cli\u003e\u003ca href\u003d\"//codeforces.com/problemset/problem/228/E\"\u003eCF — The Road to Berland is Paved With Good Intentions\u003c/a\u003e\u003c/li\u003e   \u003cli\u003e\u003ca href\u003d\"//codeforces.com/problemset/problem/27/D\"\u003eCF — Ring Road 2\u003c/a\u003e\u003c/li\u003e   \u003cli\u003e\u003ca href\u003d\"//codeforces.com/gym/100570/problem/D\"\u003eCF — TROY Query\u003c/a\u003e\u003c/li\u003e   \u003cli\u003e\u003ca href\u003d\"http://web.ics.upjs.sk/ceoi/documents/tasks/party-tsk.pdf\"\u003eCEOI — Birthday party\u003c/a\u003e — \u003ca href\u003d\"http://web.ics.upjs.sk/ceoi/documents/tasks/party-sol.pdf\"\u003eSolution\u003c/a\u003e\u003c/li\u003e \u003c/ul\u003e\u003ch4\u003ePseudo Code\u003c/h4\u003e \u003cpre\u003e\u003ccode\u003efunc dfsFirst(vertex v):\n    marked[v] \u003d true\n    for each vertex u adjacent to v do:\n        if not marked[u]:\n            dfsFirst(u)\n    stack.push(v)\n\nfunc dfsSecond(vertex v):\n    marked[v] \u003d true\n    for each vertex u adjacent to v do:\n        if not marked[u]:\n            dfsSecond(u)\n    component[v] \u003d counter\n\nfor i \u003d 1 to n do:\n    addEdge(not x[i], y[i])\n    addEdge(not y[i], x[i])\nfor i \u003d 1 to n do:\n    if not marked[x[i]]:\n        dfsFirst(x[i])\n    if not marked[y[i]]:\n        dfsFirst(y[i])\n    if not marked[not x[i]]:\n        dfsFirst(not x[i])\n    if not marked[not y[i]]:\n        dfsFirst(not y[i])\n\nset all marked values false\ncounter \u003d 0\nflip directions of edges // change v -\u0026gt; u to u -\u0026gt; v\n\nwhile stack is not empty do:\n    v \u003d stack.pop\n    if not marked[v]\n        counter \u003d counter + 1\n        dfsSecond(v)\n\nfor i \u003d 1 to n do:\n    if component[x[i]] \u003d\u003d component[not x[i]]:\n        it is unsatisfiable\n        exit\n    if component[y[i]] \u003d\u003d component[not y[i]]:\n        it is unsatisfiable\n        exit\n\nit is satisfiable\nexit\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":["2sat","2-sat"]}}