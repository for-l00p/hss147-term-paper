{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1525907250,"rating":-2,"authorHandle":"codefr3ak","modificationTimeSeconds":1525907604,"id":59372,"title":"\u003cp\u003eFinding number of different L-song playlists given N songs\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eI came across this problem on the internet once and was asked the same in my interview yesterday. \u003c/p\u003e\u003cp\u003eJohn likes to listen to music while travelling. His iPod contains n songs and he wants to listen to L (not necessarily different) songs during a trip. So he creates a playlist such that:\u003c/p\u003e\u003cp\u003e\u003ccode\u003eEvery song is played at least once.\u003c/code\u003e\u003c/p\u003e\u003cp\u003e\u003ccode\u003eA song can be played again only if at least k other songs have been played.\u003c/code\u003e\u003c/p\u003e\u003cp\u003eJohn wants to know how many different playlists are possible. Can you help John determine this number? \u003ccode\u003e1≤K≤N≤L≤100.\u003c/code\u003e\u003c/p\u003e\u003cp\u003eMy solution approach was to choose the first K songs from N and fill the rest with N-K\u003c/p\u003e\u003cp\u003e\u003cstrong\u003e(n!/(n−k)!)×((n-k)^(l−k))\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eBut this doesn\u0027t satisfy the first property that all songs should be played atleast once. How do I go about this? \u003c/p\u003e\u003cp\u003eOne solution I tried to come up with was to fill the playlist with N songs and add remaining L-N songs from N-K, but I don\u0027t think it\u0027s right. \u003c/p\u003e\u003cp\u003eThanks\u003c/p\u003e\u003c/div\u003e","tags":[]}}