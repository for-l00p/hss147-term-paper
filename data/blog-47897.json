{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1477012045,"rating":1,"authorHandle":"minimario","modificationTimeSeconds":1477012045,"id":47897,"title":"\u003cp\u003eExtending 700B: Connecting Universities\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eI was looking back on some previous contests, and I got to \u003ca href\u003d\"//codeforces.com/contest/700/problem/B\"\u003ethis problem\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eI know the algorithm, which can be found on editorial: check each edge, and add min of subtree sizes when this edge is broken. But how do we extend this to find the pairs that we want to match? This algorithm gives the distance, not the pairs to be matched, and the editorial claims \u0026quot;not many modifications required\u0026quot;.\u003c/p\u003e\u003cp\u003eHowever, I can\u0027t see it. If anyone could help, I would be really appreciated!\u003c/p\u003e\u003cp\u003eThanks,\u003c/p\u003e\u003cp\u003eminimario\u003c/p\u003e\u003c/div\u003e","tags":["701e","dfs","moo"]}}