{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1493833457,"rating":0,"authorHandle":"eternalfool","modificationTimeSeconds":1493833457,"id":51824,"title":"\u003cp\u003eThe flipping bit problem\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eYou are given a sequence of n bits of N 1’s (say “1111111111”)\u003c/p\u003e\u003cp\u003eThere are four possible operations types:\u003c/p\u003e\u003cp\u003eFlip all the bits. Flip even position bits. Flip odd position bits. Flip the 3k+1 position bits. The initial configurations is always all 1’s.\u003c/p\u003e\u003cp\u003eGiven number of operations, find all possible final configurations satisfying constraints given in input.\u003c/p\u003e\u003cp\u003eInput format:\u003c/p\u003e\u003cp\u003eN \u0026lt;- number of bits . 10 \u0026lt;\u003d N \u0026lt;\u003d 100\u003c/p\u003e\u003cp\u003eC \u0026lt;- number of operations allowed 1 \u0026lt;\u003d C \u0026lt;\u003d 10000\u003c/p\u003e\u003cp\u003eA \u0026lt;- comma separated list of positions which should be 1’s (list has 2 elements max)\u003c/p\u003e\u003cp\u003eThis string contains -1 if no restriction on 1’s.\u003c/p\u003e\u003cp\u003eB \u0026lt;- comma separated list of positions which should be 0’s (list has 2 elements max)\u003c/p\u003e\u003cp\u003eThis string contains -1 if no restriction on 0’s.\u003c/p\u003e\u003cp\u003eOutput format:\u003c/p\u003e\u003cp\u003eIt will be a string containing all final combinations separated by #, Combination of bits should be in numerical ascending order in the output string.\u003c/p\u003e\u003cp\u003eFor example, if we have two final combinations \u00270110110110\u0027 and \u00270101010101\u0027 then the correct output will be \u0026quot;0101010101#0110110110\u0026quot; not \u0026quot;0110110110#0101010101\u0026quot;.\u003c/p\u003e\u003cp\u003eNOTE: Strings are one-indexed.\u003c/p\u003e\u003cp\u003eSample Test Case 1\u003c/p\u003e\u003cp\u003eInput\u003c/p\u003e\u003cp\u003e10 1 -1 7\u003c/p\u003e\u003cp\u003eOutput\u003c/p\u003e\u003cp\u003e0000000000#0101010101#0110110110\u003c/p\u003e\u003cp\u003eExplanation\u003c/p\u003e\u003cp\u003eIn this case, there are three possible final combinations:\u003c/p\u003e\u003cp\u003eAll bits are 0s\u003c/p\u003e\u003cp\u003e1, 4, 7, 10 are 0s, and 2, 3, 5, 6, 8, 9 are 1′s.\u003c/p\u003e\u003cp\u003e1, 3, 5, 7, 9 are 0’s, and 2, 4, 6, 8, 10 are 1’s\u003c/p\u003e\u003cp\u003eSample Test Case 2\u003c/p\u003e\u003cp\u003eInput\u003c/p\u003e\u003cp\u003e40 3 16 2,25\u003c/p\u003e\u003cp\u003eOutput\u003c/p\u003e\u003cp\u003e0011100011100011100011100011100011100011\u003c/p\u003e\u003c/div\u003e","tags":["#strings","#bitwise"]}}