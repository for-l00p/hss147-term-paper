{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1425122501,"rating":0,"authorHandle":"the_redback","modificationTimeSeconds":1426285496,"id":16684,"title":"\u003cp\u003e[Solved] LightOJ 1339 :: Strongest Community [Segment tree Problem — Wrong Answer]\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e\u003cstrong\u003eProblem Link:\u003c/strong\u003e \u003ca href\u003d\"http://lightoj.com/volume_showproblem.php?problem\u003d1339\"\u003eLightOJ :: 1339 — Strongest Community.\u003c/a\u003e \u003c/p\u003e\u003cp\u003eI am getting Wrong Answer but i can\u0027t find any bug in my logic. Can someone help me with my idea or provide me some test case please? It will be very helpful for me....\u003c/p\u003e\u003cp\u003eProblem Description, My Idea \u0026amp; My Code has been given below.\u003c/p\u003e\u003cp\u003eThanks. \u003c/p\u003e\u003cp\u003e\u003cstrong\u003eProblem Description:\u003c/strong\u003e In a strange city, houses are built in a straight line one after another. There are several communities in the city. Each community consists of some consecutive houses such that every house belongs to exactly one community. The houses are numbered from 1 to n, and the communities are numbered from 1 to c.\u003c/p\u003e\u003cp\u003eNow some inspectors want to find the strongest community considering all houses from i to j. A community is strongest if maximum houses in the range belong to this community. So, there can be more than one strongest community in the range. So, they want to know the number of houses that belong to the strongest community. That\u0027s why they are seeking your help.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eInput:\u003c/strong\u003e Input starts with an integer T (≤ 5), denoting the number of test cases.\u003c/p\u003e\u003cp\u003eEach case starts with a line containing three integers n (1 ≤ n ≤ 105), c (1 ≤ c ≤ n) and q (1 ≤ q ≤ 50000). The next line contains n space separated integers (each between 1 and c) denoting the communities the houses belong to. You can assume that the input follows the restrictions given above, and there are exactly c communities.\u003c/p\u003e\u003cp\u003eEach of the next q lines contains two integers i and j (1 ≤ i ≤ j ≤ n) denoting that the inspectors are asking for the result considering houses from i to j (inclusive).\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eOutput:\u003c/strong\u003e For each case, print the case number in a single line. Each of the next q lines should contain the number of houses that belong to the strongest community considering houses from i to j. The result should be listed in the same order as they are given in input.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eSample Input:\u003c/strong\u003e\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e2\n\n10 3 4\n1 1 1 3 3 3 3 2 2 2\n1 5\n1 6\n1 7\n7 9\n\n3 3 1\n3 2 1\n1 1\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cstrong\u003eOutput for Sample Input:\u003c/strong\u003e\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eCase 1:\n3\n3\n4\n2\nCase 2:\n1\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cstrong\u003eMy Idea:\u003c/strong\u003e I have implemented segment tree on community id.\u003c/p\u003e\u003cp\u003eI took all the query in a array named \u0027input\u0027 and sorted according the \u0027second\u0027 value. [ if, there are more points where second value is same, then point with lower value of \u0027first\u0027, will go before of other points (u can see in bool comp() function). ]\u003c/p\u003e\u003cp\u003ethen I started the solution part: \u0027j\u0027 denotes the current position of input array, \u0027k\u0027 denotes last eliminated house no.\u003cbr /\u003eStarting from the house[0], I have increased the value of each house\u0027s community by +1. if any input[j].second is equal to \u0027i\u0027th house then, I increased \u0027k\u0027 so that the value of \u0027k\u0027 is equal to input[j].first. While increasing \u0027k\u0027, I have added -1 to the community of \u0027k\u0027th point, i.e. i have eliminated that house from consideration.\u003c/p\u003e\u003cp\u003efor each input[j] i took the result from tree[1] and stored it in \u0027ans\u0027 vector.\u003c/p\u003e\u003cp\u003eThen I sorted the answer according to query input id, and printed the answer. The logic should do the job, but yet it is giving me WA.\u003c/p\u003e\u003cp\u003eCan anyone help me finding where am i doing wrong?\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eMy Code:\u003c/strong\u003e \u003c/p\u003e \u003cpre\u003e\u003ccode\u003e\u003cbr /\u003e/**\n *    @author     : Maruf Tuhin\n *    @College    : CUET CSE 11\n *    @Topcoder   : the_redback\n *    @CodeForces : the_redback\n *    @UVA        : the_redback\n *    @link       : http://www.fb.com/maruf.2hin\n */\n\n#include \u0026lt;bits/stdc++.h\u0026gt;\n\nusing namespace std;\n\ntypedef long long          ll;\ntypedef unsigned long long llu;\n\n#define xx        first\n#define yy        second\n#define mp        make_pair\n#define pb(x)     push_back(x)\n#define all(x)    x.begin(),x.end()\n#define allr(x)   x.rbegin(),x.rend()\n#define mem(a,b)  memset(a,b,sizeof(a))\n#define inf       1e9\n#define eps       1e-9\n#define mod       1000000007\n#define NN        100002\n\n#define read(a)   scanf(\u0026quot;%lld\u0026quot;,\u0026amp;a)\n\n/**\n\n*/\nstruct D\n{\n    ll x,y,in;\n    D(ll X,ll Y,ll I) {\n        x\u003dX;\n        y\u003dY;\n        in\u003dI;\n    }\n    D(){\n    }\n}input[NN];\n\nll tree[4*NN];\nll house[NN];\nvector\u0026lt;pair\u0026lt;ll,ll\u0026gt; \u0026gt;ans;\n\n\nvoid update(ll node, ll low, ll high, ll in , ll value)\n{\n    if(low\u003d\u003dhigh \u0026amp;\u0026amp; low\u003d\u003din )\n    {\n        tree[node] \u003dtree[node]+value;\n        return;\n    }\n    ll left \u003d node\u0026lt;\u0026lt;1;\n    ll right \u003d left + 1;\n    ll mid \u003d (low + high)\u0026gt;\u0026gt;1;\n\n    if(in \u0026lt;\u003d mid)\n        update(left, low, mid,in, value);\n    else\n        update(right, mid+1, high, in, value);\n\n    tree[node]  \u003d max(tree[left] , tree[right]);\n}\n\n\nbool comp(D a, D b)\n{\n    if(a.y\u003d\u003db.y)\n        return a.x\u0026lt;b.x;\n    return a.y\u0026lt;b.y;\n}\n\nint main()\n{\n    //ios_base::sync_with_stdio(0); cin.tie(0);\n    #ifdef redback\n        freopen(\u0026quot;C:\\\\Users\\\\Maruf\\\\Desktop\\\\in.txt\u0026quot;,\u0026quot;r\u0026quot;,stdin);\n    #endif\n\n    ll t\u003d1,tc;\n    read(tc);       ///Test case\n    ll i,c,j,k,l,m,n;\n    while(tc--)\n    {\n        read(n);\n        read(c);\n        read(m);\n\n        mem(tree,0);\n\n        for(i\u003d1;i\u0026lt;\u003dn;i++)\n        {\n            read(house[i]);\n        }\n        for(i\u003d1;i\u0026lt;\u003dm;i++)\n        {\n            read(k);\n            read(l);\n            input[i]\u003dD(k,l,i);\n        }\n\n        sort(input+1,input+m+1,comp);\n        ans.clear();\n\n        j\u003d1;\n        k\u003d1;\n        for(i\u003d1;i\u0026lt;\u003dn;i++)\n        {\n            update(1,1,c,house[i],1);\n            while(j\u0026lt;\u003dm \u0026amp;\u0026amp; input[j].y\u003d\u003di)\n            {\n                while(k\u0026lt;input[j].x)\n                {\n                    update(1,1,c,house[k],-1);\n                    k++;\n                }\n                ll res\u003dtree[1];\n                ans.pb(mp(input[j].in,res));\n                j++;\n            }\n        }\n        sort(all(ans));\n        printf(\u0026quot;Case %lld:\\n\u0026quot;,t++);\n\n        for(i\u003d0;i\u0026lt;ans.size();i++)\n        {\n            printf(\u0026quot;%lld\\n\u0026quot;,ans[i].yy);\n        }\n    }\n    return 0;\n}\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":[]}}