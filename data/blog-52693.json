{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1497696045,"rating":3,"authorHandle":"-synx-","modificationTimeSeconds":1497696099,"id":52693,"title":"\u003cp\u003e2D Segment Tree Iterative\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e\u003ca href\u003d\"//codeforces.com/blog/entry/1256\"\u003eThis Blog\u003c/a\u003e shows how we can adapt segment tree update and query functions for 1D case to code the 2D query and update. My question is can we code \u003ccode\u003eiterative build function for the 2D Segment Tree\u003c/code\u003e by adapting the 1D build function: \u003c/p\u003e \u003cpre\u003e\u003ccode\u003evoid build(){\n\tfor(int i\u003dn-1;i\u0026gt;0;--i) \n\t\tt[i] \u003d t[i\u0026lt;\u0026lt;1] | t[i\u0026lt;\u0026lt;1|1];\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e Although we can use the update function to build the 2D segment tree, but its complexity would be \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003enmlog\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e)\u003ci\u003elog\u003c/i\u003e(\u003ci\u003em\u003c/i\u003e))\u003c/span\u003e, however the iterative 2D build function would ensure \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003enm\u003c/i\u003e)\u003c/span\u003e.\u003c/p\u003e\u003c/div\u003e","tags":[]}}