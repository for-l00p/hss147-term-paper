{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1468196097,"rating":17,"authorHandle":"skloj","modificationTimeSeconds":1468304435,"id":45982,"title":"\u003cp\u003eHow common is the need of online-construction of suffix structures?\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eI was just reading about a new algorithm to build a Suffix Tree: \u003ca href\u003d\"//codeforces.com/blog/entry/17956\"\u003eSimplified Weiner\u003c/a\u003e\u003c/p\u003e\u003cp\u003eThe algorithm is very short and it makes a ton of sense to me (more than Ukkonen). But the algorithm has a drawback: \u0026quot;It is online from right to left but not from left to right. This is not an issue if the problem you solve is offline. Moreover, online problems often can be solved using reversed strings\u0026quot;.\u003c/p\u003e\u003cp\u003eTo me, the decision between Simplified Weiner vs Ukkonen is related to how often is the need of online-construction of suffix structures in contest. As far as I understand, Suffix Array doesn\u0027t support online building and every one seems to use it anyway.\u003c/p\u003e\u003cp\u003eÂ¿What is your opinion about it? Thanks,\u003c/p\u003e\u003c/div\u003e","tags":["string suffix structures","suffix array","suffix tree"]}}