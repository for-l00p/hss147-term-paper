{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1403333603,"rating":13,"authorHandle":"Pedrams","modificationTimeSeconds":1403633912,"id":12755,"title":"\u003cp\u003e5*(10^9) operations working in less than 2 seconds!?\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHi everyone.\u003c/p\u003e\u003cp\u003eI saw a code in the \u0026quot;Status\u0026quot; tab today, which made me wonder: \u0026lt;\u0026lt;How does it work in less than 2 seconds?\u0026gt;\u0026gt; Its number of operations was about (5 * 10^9)...\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eSo my question is: How many operations can exactly be done in 1 second, here in Codeforces?\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eTo be more clear, this is the problem: \u003ca href\u003d\"/contest/287/problem/B\" title\u003d\"Codeforces Round 176 (Div. 2)\"\u003e287B - Трубопровод\u003c/a\u003e And this is the submission: \u003ca href\u003d\"/contest/287/submission/4075576\" title\u003d\"Посылка 4075576 от vjudge2\"\u003e4075576\u003c/a\u003e\u003c/p\u003e\u003cp\u003e(1 ≤ n ≤ 10^18, 2 ≤ k ≤ 10^9) * see test #4 * the answer is (-1), so we are sure that k reaches 0\u003c/p\u003e\u003cp\u003eRecently, I wrote two codes for this problem. Code #1 gets \u0026quot;Time limit exceeded\u0026quot; while code #2 gets \u0026quot;Accepted\u0026quot;. What\u0027s the differences which cause this problem?\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e// code #1\n#include \u0026lt;bits/stdc++.h\u0026gt;\nusing namespace std;\n\t\ntypedef long long LL;\nLL n, k;\nLL sum, ans;\n\nint main()\n{\n    ios::sync_with_stdio(false);\n    freopen(\u0026quot;B.in\u0026quot;, \u0026quot;r\u0026quot;, stdin);\n    n \u003d 1e18;\n    k \u003d 1e9;\n    sum \u003d 1;\n    while(--k \u0026amp;\u0026amp; sum \u0026lt; n)\n    {\n        sum +\u003d k;\n        ans++;\n    }\n    if(sum \u0026lt; n)\n        cout \u0026lt;\u0026lt; -1 \u0026lt;\u0026lt; endl;\n    else\n        cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; endl;\n\t\t\n    return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e \u003cpre\u003e\u003ccode\u003e// code #2 -- equal to the submission I said.\n#include\u0026lt;stdio.h\u0026gt;\nint main()\n{\n    __int64 n,res\u003d1;\n    int k,ans\u003d0;\n    scanf(\u0026quot;%I64d %d\u0026quot;,\u0026amp;n,\u0026amp;k);\n    while(res\u0026lt;n\u0026amp;\u0026amp;k\u0026gt;\u003d2)\n    {\n        --k;\n        res+\u003dk;\n        ++ans;\n    }\n    printf(\u0026quot;%d\\n\u0026quot;,res\u0026gt;\u003dn? ans: -1);\n    return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e** Even when I write this code at the end of both of them, surprisingly code #1 shows something about 3.5 seconds and code #2 shows something about 4 seconds!! \u003ccode\u003ecout \u0026lt;\u0026lt; (double)clock()/CLOCKS_PER_SEC \u0026lt;\u0026lt; endl;\u003c/code\u003e\u003c/p\u003e\u003c/div\u003e","tags":["running time","solving order"]}}