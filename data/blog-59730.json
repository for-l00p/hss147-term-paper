{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":true,"creationTimeSeconds":1527542574,"rating":66,"authorHandle":"GlebsHP","modificationTimeSeconds":1527579726,"id":59730,"title":"\u003cp\u003eProblem analysis for Yandex.Algorithm 2018 final round\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003ch2\u003eSmart Vending\u003c/h2\u003e\u003cp\u003eProblem idea and development: \u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/glebshp\" title\u003d\"International Grandmaster glebshp\"\u003eglebshp\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eFirst we observe that Arcadiy won\u0027t be able to spend more money than he has, i.e. the number of bottles he can buy doesn\u0027t exceed \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/53/bd/53bd495bb34c73ebc2a0aef4280cf63f0055dc7f.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. However, it might happen that Arcadiy won\u0027t be able to buy exactly this number because he won\u0027t have enough coins to buy next bottle with no change and the machine won\u0027t possess enough coins to give change if Arcadiy tries to pay with banknotes only.\u003c/p\u003e\u003cp\u003eNote that the total number of coins doesn\u0027t change and is always \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ec\u003c/i\u003e + \u003ci\u003ed\u003c/i\u003e\u003c/span\u003e. Moreover, if \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ec\u003c/i\u003e + \u003ci\u003ed\u003c/i\u003e ≥ 999 999\u003c/span\u003e, then either Arcadiy will always have enough coins to buy a bottle with no change, or machine will have enough coins to give a change. In this case the answer is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ez\u003c/i\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eIf \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ec\u003c/i\u003e + \u003ci\u003ed\u003c/i\u003e \u0026lt; 999 999\u003c/span\u003e, then it can be the case that Arcadiy has enough coins to buy bottle with no change, it can be the case that machine has enough coins to give change, but it can\u0027t be the case that both is possible. That means we can simulate the process but that might work tool long.\u003c/p\u003e\u003cp\u003eDenote as \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e the number of coins Arcadiy has after first \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e moves (\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e0\u003c/sub\u003e \u003d \u003ci\u003ec\u003c/i\u003e\u003c/span\u003e). Note that if \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e \u003d \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e, then \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e + 1\u003c/sub\u003e \u003d \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e + 1\u003c/sub\u003e\u003c/span\u003e (indeed, the way to buy next bottle is uniquely defined by value \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e) and the sequence repeats itself. We will simulate the process of buying Kvas-Klass bottle by bottle till we find some value of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e that we already met or it is not possible to make next purchase. In case \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e repeats the answer is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ez\u003c/i\u003e\u003c/span\u003e, otherwise the answer is the number of step when the next purchase was not possible.\u003c/p\u003e\u003cp\u003eExercise: solve the task if one banknote is \u003cspan class\u003d\"tex-span\"\u003e10\u003csup class\u003d\"upper-index\"\u003e12\u003c/sup\u003e\u003c/span\u003e rubles.\u003c/p\u003e\u003ch2\u003eLIS vs. LDS\u003c/h2\u003e\u003cp\u003eProblem idea and development: \u003ca class\u003d\"rated-user user-legendary\" href\u003d\"/profile/endagorion\" title\u003d\"Legendary grandmaster endagorion\"\u003e\u003cspan class\u003d\"legendary-user-first-letter\"\u003ee\u003c/span\u003endagorion\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eLet us draw \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e points \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e \u003d (\u003ci\u003ei\u003c/i\u003e, \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e)\u003c/span\u003e in the plane. Let \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eI\u003c/i\u003e \u003d (\u003ci\u003ei\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e, ..., \u003ci\u003ei\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/sub\u003e)\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eJ\u003c/i\u003e \u003d (\u003ci\u003ej\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e, ..., \u003ci\u003ej\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/sub\u003e)\u003c/span\u003e be a pair of non-intersecting LIS and LDS. From maximality of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eI\u003c/i\u003e\u003c/span\u003e, there can be no points strictly inside the following rectangles (described by their opposite corners):\u003c/p\u003e \u003col\u003e   \u003cli\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e0\u003c/sub\u003e \u003d ((0, 0), \u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/sub\u003e)\u003c/span\u003e;\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/sub\u003e \u003d (\u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/sub\u003e\u003c/sub\u003e, \u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ex\u003c/i\u003e + 1\u003c/sub\u003e\u003c/sub\u003e)\u003c/span\u003e for all \u003cspan class\u003d\"tex-span\"\u003e1 ≤ \u003ci\u003ex\u003c/i\u003e \u0026lt; \u003ci\u003ek\u003c/i\u003e\u003c/span\u003e;\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/sub\u003e \u003d (\u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/sub\u003e\u003c/sub\u003e, (\u003ci\u003en\u003c/i\u003e + 1, \u003ci\u003en\u003c/i\u003e + 1))\u003c/span\u003e.\u003c/p\u003e\u003c/li\u003e \u003c/ol\u003e\u003cp\u003eSimilarly, since \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eJ\u003c/i\u003e\u003c/span\u003e is maximal, there can be no points inside these rectangles:\u003c/p\u003e \u003col\u003e   \u003cli\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e0\u003c/sub\u003e \u003d ((0, \u003ci\u003en\u003c/i\u003e + 1), \u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/sub\u003e)\u003c/span\u003e;\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ey\u003c/i\u003e\u003c/sub\u003e \u003d (\u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ey\u003c/i\u003e\u003c/sub\u003e\u003c/sub\u003e, \u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ey\u003c/i\u003e + 1\u003c/sub\u003e\u003c/sub\u003e)\u003c/span\u003e for all \u003cspan class\u003d\"tex-span\"\u003e1 ≤ \u003ci\u003ey\u003c/i\u003e \u0026lt; \u003ci\u003el\u003c/i\u003e\u003c/span\u003e;\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/sub\u003e \u003d (\u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/sub\u003e\u003c/sub\u003e, (\u003ci\u003en\u003c/i\u003e + 1, 0))\u003c/span\u003e.\u003c/p\u003e\u003c/li\u003e \u003c/ol\u003e\u003cp\u003eThese two chains of rectangles connect the opposite corners of the square \u003cspan class\u003d\"tex-span\"\u003e((0, 0), (\u003ci\u003en\u003c/i\u003e + 1, \u003ci\u003en\u003c/i\u003e + 1))\u003c/span\u003e. Assuming that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eI\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eJ\u003c/i\u003e\u003c/span\u003e do not intersect, there must be an intersecting pair of rectangles \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ey\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e. None of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ey\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e contains any points, hence there are only two cases how they can intersect:\u003c/p\u003e \u003col\u003e   \u003cli\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/sub\u003e \u0026lt; \u003ci\u003ej\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ey\u003c/i\u003e\u003c/sub\u003e \u0026lt; \u003ci\u003ej\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ey\u003c/i\u003e + 1\u003c/sub\u003e \u0026lt; \u003ci\u003ei\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ex\u003c/i\u003e + 1\u003c/sub\u003e\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ey\u003c/i\u003e + 1\u003c/sub\u003e\u003c/sub\u003e \u0026lt; \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/sub\u003e\u003c/sub\u003e \u0026lt; \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ex\u003c/i\u003e + 1\u003c/sub\u003e\u003c/sub\u003e \u0026lt; \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ey\u003c/i\u003e\u003c/sub\u003e\u003c/sub\u003e\u003c/span\u003e (as in the first sample);\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ey\u003c/i\u003e\u003c/sub\u003e \u0026lt; \u003ci\u003ei\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/sub\u003e \u0026lt; \u003ci\u003ei\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ex\u003c/i\u003e + 1\u003c/sub\u003e \u0026lt; \u003ci\u003ej\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ey\u003c/i\u003e + 1\u003c/sub\u003e\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/sub\u003e\u003c/sub\u003e \u0026lt; \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ey\u003c/i\u003e + 1\u003c/sub\u003e\u003c/sub\u003e \u0026lt; \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ey\u003c/i\u003e\u003c/sub\u003e\u003c/sub\u003e \u0026lt; \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ex\u003c/i\u003e + 1\u003c/sub\u003e\u003c/sub\u003e\u003c/span\u003e (the mirror image of the previous option).\u003c/p\u003e\u003c/li\u003e \u003c/ol\u003e\u003cp\u003eWe will try to look for possible intersections of type 1 (the other one can be found similarly after reversing the whole permutation). Let\u0027s say that \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ei\u003c/i\u003e, \u003ci\u003ei\u003c/i\u003e\u0027)\u003c/span\u003e is an {\\it LIS-pair} if \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/span\u003e are consecutive elements of an LIS ({\\it LDS-pair} is defined similarly). Suppose that there is an LIS-pair \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ei\u003c/i\u003e, \u003ci\u003ei\u003c/i\u003e\u0027)\u003c/span\u003e and an LDS-pair \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ej\u003c/i\u003e, \u003ci\u003ej\u003c/i\u003e\u0027)\u003c/span\u003e such that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e \u0026lt; \u003ci\u003ej\u003c/i\u003e \u0026lt; \u003ci\u003ej\u003c/i\u003e\u0027 \u0026lt; \u003ci\u003ei\u003c/i\u003e\u0027\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u0027\u003c/sub\u003e \u0026lt; \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e \u0026lt; \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u0027\u003c/sub\u003e \u0026lt; \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e, that is, there is an intersection of type 1 between certain LIS and LDS. This means that we can find an answer by constructing all LIS- and LDS-pairs and looking for such intersection.\u003c/p\u003e\u003cp\u003eOf course, there are too many possible pairs. However, notice that in the situation above we can replace \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u0027\u003c/span\u003e with \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/66/07/6607df0c83f7c1ba96f001e66a72d3b8872993e8.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u0027\u003c/span\u003e with \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/da/df/dadf6d2baf1e2c9823a41970d6b5ed72f91e12e5.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. This means that we will only consider \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e)\u003c/span\u003e pairs to intersect. Among these, finding an intersection can be done with a sweep-line approach that uses segment tree.\u003c/p\u003e\u003ch2\u003eEat And Walk\u003c/h2\u003e\u003cp\u003eProblem idea and development: \u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/glebshp\" title\u003d\"International Grandmaster glebshp\"\u003eglebshp\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eTo start with we consider the minor change in the problem: let the initial movements be free and the movements after \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e units of food cost \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e per \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e move left or right. One can show that the optimal strategy is to reach some position \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e and then move only in the direction of position \u003cspan class\u003d\"tex-span\"\u003e0\u003c/span\u003e, visiting some of the restaurants. If we visit restaurant \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e the weight increases by \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e and each move costs \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e more. Assuming we only move left after visiting any restaurants we can say that visiting restaurant \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e costs \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e·\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e units of energy in total.\u003c/p\u003e\u003cp\u003eNow we have a knapsack problem with \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e items, the \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e-th of them has weight \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e·\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e and cost \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e, the goal is to find a subset of maximum total cost and total weight not exceeding \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ee\u003c/i\u003e\u003c/span\u003e. Standard solution is to compute dynamic programming \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ed\u003c/i\u003e(\u003ci\u003ei\u003c/i\u003e, \u003ci\u003ex\u003c/i\u003e)\u003c/span\u003e — maximum possible total cost if we select among first \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e items and the total weight is equal to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eNow we swap parameter and value of dynamic programming and compute \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ed\u003c/i\u003e(\u003ci\u003ei\u003c/i\u003e, \u003ci\u003ec\u003c/i\u003e)\u003c/span\u003e — minimum possible total weight that the subset of cost \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ec\u003c/i\u003e\u003c/span\u003e selected among first \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e items can have. Then we are going to add items in order of descending \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e, so value \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ed\u003c/i\u003e(\u003ci\u003ei\u003c/i\u003e, \u003ci\u003ec\u003c/i\u003e)\u003c/span\u003e will be composed using elements from \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e-th to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e-th. What are the values of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ec\u003c/i\u003e\u003c/span\u003e to consider? Each unit of cost (food in original terms) that comes from restaurants with indices \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e and greater requires at least \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e units of energy so we should only consider values of \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/6f/5e/6f5ed62be3904bf6a9593a91e4184635214cb8a3.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. Using the formulas to estimate harmonic series we can say that we only need to compute \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/ff/2a/ff2a7579cbc9a452a11255e39030ce1386a0b975.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e elements of dynamic programming.\u003c/p\u003e\u003cp\u003eTo finish the solution we should count the initial cost to move to maximum index restaurant we visit (and back). Let this index be \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e, we should increase answer by \u003cspan class\u003d\"tex-span\"\u003e2\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e. This can be done by using extra cost in dynamic programming when we consider moves from state \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ed\u003c/i\u003e(\u003ci\u003ei\u003c/i\u003e, 0)\u003c/span\u003e.\u003c/p\u003e\u003ch2\u003eSearch Engine\u003c/h2\u003e\u003cp\u003eProblem idea: \u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/glebshp\" title\u003d\"International Grandmaster glebshp\"\u003eglebshp\u003c/a\u003e. Development: \u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/_kun_\" title\u003d\"Grandmaster _kun_\"\u003e_kun_\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eLet\u0027s notice, that in the end, after prepending and appending of all letters, Alice will have string \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e\u003c/span\u003e exactly.\u003c/p\u003e\u003cp\u003eSuppose, that we were adding new letters and having at least one occurrences inside \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e\u003c/span\u003e, and then added one symbol and all the occurrences disappeared. In that case, the all following additions have zero occurrences count and we should have stopped on that bad step, selected one of occurrences and then growed it to the left and to the right to the bounds of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eBecause of this observation, we can reverse the process: let\u0027s say that initially we have string \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e\u003c/span\u003e, and then we are allowed to delete the letters from left or right side, with the same goal to maximize the total number of occurrences.\u003c/p\u003e\u003cp\u003eLet\u0027s build a suffix tree on \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e\u003c/span\u003e, which is a trie with all suffixes of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eThen we can do a dynamic programming on the vertices of the suffix tree. Let\u0027s denote \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edp\u003c/i\u003e[\u003ci\u003ev\u003c/i\u003e]\u003c/span\u003e as the maximum sum which we can achieve if we start with string, which corresponds to the path from root to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e\u003c/span\u003e and repeatedly deleted letters from left or right, counting the total number of occurrences in the whole string \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e\u003c/span\u003e. \u003c/p\u003e\u003cp\u003eThis dynamic programming has only two transitions — we can go to the parent vertex (which corresponds to deletion of the last letter), or go by the suffix link (which corresponds to deletion of the first letter). We can calculate this dynamic programming lazily and the number of occurrences of the string is simply the number of terminal vertices in it\u0027s subtree (this can be calculated for all vertices beforehand).\u003c/p\u003e\u003cp\u003eHowever, this way we have \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e\u003c/span\u003e states in our dynamic programming, so we will have to use the compressed suffix tree.\u003c/p\u003e\u003cp\u003eIn compressed suftree, transition to the parent may mean deletion of multiple symbols on the suffix. In this case, number of occurrences anywhere between the edge is equal to the number of occurrences of the lower end (so you need to multiply it by the edge length). The same also holds for the suffix links transitions.\u003c/p\u003e\u003cp\u003eThe only thing we missed, it that the optimal answer could have transitions up by one symbol and suffix links transitions interleaved, and we can\u0027t simulate this with compressed suffix tree. However, one never needs to interleave them. Assume, that in optimal answer we were going up and then decided to go by suffix link and finish the edge ascent after it. In that case we can simply go by the suffix link first and traverse the edge after that — this way the total number of occurrences can only increase.\u003c/p\u003e\u003cp\u003eThe complexity is \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/d1/49/d149e37848c7f7e231f2f79fcfe74bfa4ddab02a.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, also the problem can be solved with the suffix automaton and dynamic programming on it. In that case, the dynamic transitions are suffix links and reverse edges.\u003c/p\u003e\u003cp\u003eExercise: solve the problem if the game starts from some substring (defined by \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003er\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e) and you need to process up to \u003cspan class\u003d\"tex-span\"\u003e100 000\u003c/span\u003e queries.\u003c/p\u003e\u003ch2\u003eGuess Me If You Can\u003c/h2\u003e\u003cp\u003eProblem idea and development: \u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/glebshp\" title\u003d\"International Grandmaster glebshp\"\u003eglebshp\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eNote that if we name all elements in some order, at the end we will have position similar to the initial but shifted by \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e. This shift doesn\u0027t affect neither answer, nor intermediate values returned by interactor.\u003c/p\u003e\u003cp\u003eConsider some triple of elements \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e such that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e + 1 \u003d \u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e \u003d \u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/sub\u003e - 1\u003c/span\u003e. In case we list elements in some order such that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e goes before \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e, in the moment \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e is increased by \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e the number of distinct element decreases and we can say that position \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e doesn\u0027t contain maximum.\u003c/p\u003e\u003cp\u003eWhat if we select a random permutation and name all elements in this order. For triple \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e we have chance \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/e6/59/e6591737c997ecdcb9e861a0ce497019c0c92c62.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e will go before \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e. Thus, if we use \u003cspan class\u003d\"tex-span\"\u003e50\u003c/span\u003e random permutations, the probability to fail to find out that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e is not a maximum is only \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/6b/8a/6b8a808bf994b9c9eeff4649df4b18d08063ea0f.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. The events corresponding to separate triples might not be independent so we estimate the probability to make at least one mistake as \u003cspan class\u003d\"tex-span\"\u003e2·10\u003csup class\u003d\"upper-index\"\u003e - 9\u003c/sup\u003e·\u003ci\u003en\u003c/i\u003e ≤ 2·10\u003csup class\u003d\"upper-index\"\u003e - 6\u003c/sup\u003e\u003c/span\u003e.\u003c/p\u003e\u003ch2\u003eLazy Hash Table\u003c/h2\u003e\u003cp\u003eProblem idea: \u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/glebshp\" title\u003d\"International Grandmaster glebshp\"\u003eglebshp\u003c/a\u003e. Development: \u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/arterm\" title\u003d\"International Grandmaster arterm\"\u003earterm\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eNote that \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/21/10/21109f4b88ee6d5302e2738a605fdbf05538be37.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e if and only if \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e|\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e - \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e. So, we have to find minimal \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/span\u003e that doesn\u0027t divide any of differences \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e - \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e. \u003c/p\u003e\u003cp\u003eFirst find all possible values of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ed\u003c/i\u003e \u003d \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e - \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e. Set \u003c/p\u003e \u003ccenter\u003e\u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/4a/19/4a19c51d5237371b76668e27fad9393b77a0c85b.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/center\u003e \u003ccenter\u003e\u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/af/f7/aff781317f02b8d66fc28c03c4654278d5bb2c0f.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/center\u003e\u003cp\u003ewhere \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eM\u003c/i\u003e \u003d \u003ci\u003emax\u003c/i\u003e \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e. Find product \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eT\u003c/i\u003e(\u003ci\u003ex\u003c/i\u003e) \u003d \u003ci\u003eP\u003c/i\u003e(\u003ci\u003ex\u003c/i\u003e)·\u003ci\u003eQ\u003c/i\u003e(\u003ci\u003ex\u003c/i\u003e)\u003c/span\u003e using Fast Fourier Transform. As \u003c/p\u003e \u003ccenter\u003e\u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/8a/88/8a88f7a2eddee7e0c69d066c3509bcea855975ed.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/center\u003e\u003cp\u003ecoefficient with \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003eM\u003c/i\u003e + \u003ci\u003ed\u003c/i\u003e\u003c/sup\u003e\u003c/span\u003e is nonzero if and only if there are \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e, \u003ci\u003ej\u003c/i\u003e\u003c/span\u003e with \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e - \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e \u003d \u003ci\u003ed\u003c/i\u003e\u003c/span\u003e. \u003c/p\u003e\u003cp\u003eNow for each \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/span\u003e in range \u003cspan class\u003d\"tex-span\"\u003e[1, \u003ci\u003eM\u003c/i\u003e]\u003c/span\u003e check if there is difference divisible by \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/span\u003e. We can check this checking \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/63/c8/63c816a07d4393d3315a89ed076cc6ce10089a53.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e numbers: \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/bc/e4/bce412d31e97e7448a4c770b53f609a0f4d49660.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. So total complexity for this part is \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/98/f4/98f427838f8a0dc39e833db80e6ac190a6dce1d1.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e.\u003c/p\u003e\u003cp\u003eOverall complexity is \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/f7/1a/f71aa6429bf54e4ed7ae388599efacabe01683f9.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, где \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eM\u003c/i\u003e \u003d \u003ci\u003emax\u003c/i\u003e \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e ≤ 2 000 000\u003c/span\u003e. \u003c/p\u003e\u003c/div\u003e","tags":[]}}