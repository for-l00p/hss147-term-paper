{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1477103855,"rating":0,"authorHandle":"I_love_Hoang_Yen","modificationTimeSeconds":1477108882,"id":47915,"title":"\u003cp\u003eSP Training 10 — Solutions\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003ch1\u003e[problem:209518A]\u003c/h1\u003e\u003cp\u003eBài này gồm 3 bước:\u003c/p\u003e \u003col\u003e   \u003cli\u003eTìm thứ tự các cửa sổ\u003c/li\u003e   \u003cli\u003eTô màu (xác định điểm nào thuộc cửa sổ nào trong trạng thái cuối cùng)\u003c/li\u003e   \u003cli\u003eIn kết quả (chuyển từ màu thành biểu diễn dùng \u0026quot;+-|\u0026quot;)\u003c/li\u003e \u003c/ol\u003e\u003ch2\u003e1. Tìm thứ tự cửa sổ\u003c/h2\u003e\u003cp\u003eĐể tìm thứ tự cửa sổ, cách đơn giản nhất là duy trì 1 stack chứa các cửa sổ (đỉnh của stack là cửa sổ mới nhất):\u003c/p\u003e \u003chr /\u003e\u003cp\u003e\u003cimg alt\u003d\" \" src\u003d\"/predownloaded/80/ca/80caa167986765bb6e1144685bef6b651d5567eb.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003eĐể xử lý 2 thao tác:\u003c/p\u003e \u003cul\u003e   \u003cli\u003eMở cửa sổ: Đơn giản là thêm 1 cửa sổ mới vào đỉnh của stack.\u003c/li\u003e   \u003cli\u003eClick vào 1 điểm:   \u003cul\u003e     \u003cli\u003eTìm cửa sổ bị click (đi ngược từ cuối stack về đầu và tìm cửa sổ đầu tiên chứa điểm đó)\u003c/li\u003e     \u003cli\u003eĐẩy cửa sổ tìm được lên đỉnh stack.\u003c/li\u003e   \u003c/ul\u003e\u003c/li\u003e \u003c/ul\u003e\u003cp\u003e\u003cimg alt\u003d\" \" src\u003d\"/predownloaded/40/25/402577cf09828a41ab5d506fa54737ef1363db20.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003eCài đặt phần này khá đơn giản:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e// all: vector C++\n\n      if (c \u003d\u003d \u0027O\u0027) {\n        Window w;\n        w.read();             // khởi tạo cửa sổ\n        all.push_back(w);     // thêm 1 cửa sổ vào cuối vector\n      } else if (c \u003d\u003d \u0027C\u0027) {\n        int x, y;\n        cin \u0026gt;\u0026gt; x \u0026gt;\u0026gt; y;\n        FORD(i, SZ(all) - 1, 0) { // Duyệt từ cuối vector về đầu\n          auto w \u003d all[i];\n          if (w.contains(x, y)) { // Nếu cửa sổ chứa điểm (x, y)\n            all.erase(all.begin() + i); // Xoá khỏi vector\n            all.push_back(w);           // Đẩy về cuối vector\n            break;\n          }\n        }\n      }\n\u003c/code\u003e\u003c/pre\u003e\u003ch2\u003e2. Tô màu\u003c/h2\u003e\u003cp\u003eĐể tô màu có khá nhiều cách.\u003c/p\u003e \u003cul\u003e   \u003cli\u003eCách 1: Ở mỗi hàng, duy trì 1 cây IT để tô màu. Cách này đpt là \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eQ\u003c/i\u003e * \u003ci\u003eH\u003c/i\u003e * \u003ci\u003elog\u003c/i\u003e)\u003c/span\u003e, cài đặt phức tạp và hằng số tự nhiên lớn.\u003c/li\u003e   \u003cli\u003eCách 2: Ở mỗi hàng, duy trì mảng next. Cách này đpt là \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eQ\u003c/i\u003e * \u003ci\u003eH\u003c/i\u003e)\u003c/span\u003e. Cài đặt không đơn giản (phải cài kiểu nhảy nhảy tương tự disjoint set).\u003c/li\u003e   \u003cli\u003eCách 3: Dùng set C++. Đpt: \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eQ\u003c/i\u003e * \u003ci\u003eH\u003c/i\u003e * \u003ci\u003elog\u003c/i\u003e)\u003c/span\u003e. Cách này cài đặt rất đơn giản và hằng số tự nhiên rất thấp. Trên thực tế chạy nhanh ngang cách 2.\u003c/li\u003e \u003c/ul\u003e\u003cp\u003eỞ mỗi hàng, dùng 1 set để duy trì những ô chưa tô màu của hàng đó:\u003c/p\u003e\u003cp\u003e\u003cimg alt\u003d\" \" src\u003d\"/predownloaded/fd/a4/fda46734215d754b5032f69514b75a198c5eea86.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003eVới mỗi thao tác tô màu 1 hình chữ nhật (ví dụ tô hình chữ nhật màu xanh):\u003c/p\u003e\u003cp\u003e\u003cimg alt\u003d\" \" src\u003d\"/predownloaded/99/b7/99b7576b48498a51397465998c7d43e1d4cf617d.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003eTìm các điểm nằm trong hình chữ nhật và xoá:\u003c/p\u003e\u003cp\u003e\u003cimg alt\u003d\" \" src\u003d\"/predownloaded/f9/63/f96314e4d18fb925f47838967bba60bdb4b2a6bf.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003eLàm tương tự với các hình chữ nhật khác:\u003c/p\u003e\u003cp\u003e\u003cimg alt\u003d\" \" src\u003d\"/predownloaded/78/a0/78a057db02e28276d42b350ae761c77dc26cef3a.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003e\u003cimg alt\u003d\" \" src\u003d\"/predownloaded/91/7b/917b4ef361d547a8d8c1c9ce6fd68f1d7095294f.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003eĐộ phức tạp:\u003c/p\u003e \u003cul\u003e   \u003cli\u003eVới mỗi truy vấn, cần for qua tất cả các hàng \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eH\u003c/i\u003e)\u003c/span\u003e, với mỗi hàng, cần tìm điểm đầu tiên thuộc hình chữ nhật trong \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003elog\u003c/i\u003e)\u003c/span\u003e.\u003c/li\u003e   \u003cli\u003eTổng độ phức tạp các thao tác xoá điểm không quá \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eW\u003c/i\u003e * \u003ci\u003eH\u003c/i\u003e)\u003c/span\u003e.\u003c/li\u003e \u003c/ul\u003e\u003cp\u003eCài đặt:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e  memset(color, -1, sizeof color); // Khởi tạo mảng kết quả\n  FOR(i, 1, Y) {\n    rows[i].clear();\n    FOR(j, 1, X) rows[i].insert(j); // Khởi tạo set trên từng hàng\n  }\n\n  FORD(id, SZ(all) - 1, 0) {\n    auto w \u003d all[id];\n    FOR(i, w.y1, w.y2) {\n      auto it \u003d rows[i].lower_bound(w.x1); // Tìm điểm đầu tiên thuộc hình chữ nhật\n\n      // Tô màu các điểm thuộc hình chữ nhật và lưu lại vào \u0026quot;updated\u0026quot;\n      vector\u0026lt;int\u0026gt; updated;\n      while (it !\u003d rows[i].end() \u0026amp;\u0026amp; (*it) \u0026lt;\u003d w.x2) {\n        updated.push_back(*it);\n        color[i][*it] \u003d id;\n        ++it;\n      }\n\n      for (auto u : updated) rows[i].erase(u); // Xoá các điểm đã tô\n    }\n  }\n\n\u003c/code\u003e\u003c/pre\u003e\u003ch1\u003e[problem:209518B]\u003c/h1\u003e\u003cp\u003eĐể giải quyết bài này, đầu tiên cần phải hiểu được việc biến đổi màu.\u003c/p\u003e\u003cp\u003eĐặt toán tử kết hợp 2 màu là x. Theo đề bài ta có:\u003c/p\u003e \u003cul\u003e   \u003cli\u003eW x ? \u003d ? (? là 1 màu bất kỳ)\u003c/li\u003e   \u003cli\u003e? x W \u003d ?\u003c/li\u003e   \u003cli\u003e? x ? \u003d W\u003c/li\u003e   \u003cli\u003eR x G \u003d B\u003c/li\u003e   \u003cli\u003eR x B \u003d G\u003c/li\u003e   \u003cli\u003eG x B \u003d R\u003c/li\u003e \u003c/ul\u003e\u003cp\u003eTừ đó dễ dàng suy đoán được toán tử x là xor.\u003c/p\u003e\u003cp\u003eDo đó, kết quả của một đường đi X đến Y là duy nhất và bằng tổng xor tất cả các cạnh trên đường đi từ X đến Y.\u003c/p\u003e\u003cp\u003eĐể tính tổng xor của 1 đường đi trên cây, đầu tiên ta xét bài toán cổ điển hơn: Tính tổng các số trên đường đi từ X đến Y:\u003c/p\u003e\u003cp\u003e\u003cimg alt\u003d\" \" src\u003d\"/predownloaded/83/7b/837b6d40083297e76f0b69c3edbe52688cb4ca1b.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e \u003cul\u003e   \u003cli\u003eTìm LCA(X, Y)\u003c/li\u003e   \u003cli\u003esum(X) \u003d độ dài đường đi từ 1 đến X.\u003c/li\u003e   \u003cli\u003eTổng đường đi X --\u0026gt; Y: \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003epath\u003c/i\u003e(\u003ci\u003eX\u003c/i\u003e, \u003ci\u003eY\u003c/i\u003e) \u003d \u003ci\u003esum\u003c/i\u003e(\u003ci\u003eX\u003c/i\u003e) + \u003ci\u003esum\u003c/i\u003e(\u003ci\u003eY\u003c/i\u003e) - 2 * \u003ci\u003esum\u003c/i\u003e(\u003ci\u003eLCA\u003c/i\u003e)\u003c/span\u003e.\u003c/li\u003e \u003c/ul\u003e\u003cp\u003eVì bài này là tổng xor, nên đoạn \u003cspan class\u003d\"tex-span\"\u003e2 * \u003ci\u003esum\u003c/i\u003e(\u003ci\u003eLCA\u003c/i\u003e) \u003d 0\u003c/span\u003e. Do đó tổng xor đường đi chỉ là \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003esum\u003c/i\u003e(\u003ci\u003eX\u003c/i\u003e)\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003esum\u003c/i\u003e\u003c/sup\u003e(\u003ci\u003eY\u003c/i\u003e)\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eCài đặt vô cùng đơn giản, chỉ cần duy trì tổng xor từ gốc đến 1 đỉnh.\u003c/p\u003e\u003ch1\u003e[problem:209518C]\u003c/h1\u003e\u003cp\u003eBài này gồm 2 trường hợp:\u003c/p\u003e\u003cp\u003e\u003cimg alt\u003d\" \" src\u003d\"/predownloaded/15/92/1592859abc4f8c8c0eecbe75753f60521a307d4e.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e \u003cimg alt\u003d\" \" src\u003d\"/predownloaded/af/ed/afed875c2668d5a20aacf7eb4022b424813df197.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003c/div\u003e","tags":[]}}