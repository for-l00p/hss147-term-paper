{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":true,"creationTimeSeconds":1465209205,"rating":0,"authorHandle":"Algiz","modificationTimeSeconds":1465209215,"id":45266,"title":"\u003cp\u003eTreee\u003c/p\u003e","locale":"ru","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eВзломайте (:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e/****************************************\n**          Solution by NU #1          **\n****************************************/\n\n#include \u0026lt;bits/stdc++.h\u0026gt;\n\nusing namespace std;\n\n#define F first\n#define S second\n#define MP make_pair\n#define all(x) (x).begin(), (x).end()\n\n#ifdef Local\n# define I64 \u0026quot;%I64d\u0026quot;\n#else\n# define I64 \u0026quot;%Ld\u0026quot;\n#endif\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef long double ld;\n\nconst double EPS \u003d 1e-9;\nconst double PI \u003d acos(-1.0);\nconst int MOD \u003d 1000 * 1000 * 1000 + 7;\nconst long long INF \u003d 1e18;\nconst int MAXN \u003d 4010;\n\ntemplate \u0026lt;typename T\u0026gt;\ninline T sqr(T n) {\n    return n * n;\n}\n\nint n;\nint a[MAXN], p[MAXN];\nint minopt[MAXN][MAXN], maxopt[MAXN][MAXN];\nlong long ans[MAXN];\nlong long dp[MAXN][MAXN];\nvector \u0026lt;int\u0026gt; children[MAXN];\n\nvector \u0026lt;int\u0026gt; seq;\nint len;\nlong long S[MAXN];\n\nvoid dfs(int v) {\n    seq.push_back(a[v]);\n    len++;\n    S[len] \u003d S[len \u0026amp;mdash; 1] + a[v];\n\n    dp[len][len] \u003d a[v];\n    minopt[len][len] \u003d maxopt[len][len] \u003d len;\n    \n    for (int l \u003d 2; l \u0026lt;\u003d len; l++) {\n        int rr \u003d len;\n        int ll \u003d rr - l + 1;\n\n        dp[ll][rr] \u003d INF;\n        for (int k \u003d maxopt[ll][rr - 1]; k \u0026lt;\u003d min(minopt[ll + 1][rr], rr - 1); k++) {\n            long long ndp \u003d dp[ll][k] + dp[k + 1][rr];\n\n            if (dp[ll][rr] \u0026gt; ndp) {\n                dp[ll][rr] \u003d ndp;\n                minopt[ll][rr] \u003d k;\n                maxopt[ll][rr] \u003d k;\n            } else if (dp[ll][rr] \u003d\u003d ndp) {\n                maxopt[ll][rr] \u003d k;\n            } else {\n                maxopt[ll][rr - 1]++;\n            }\n        }\n\n        maxopt[ll][rr - 1] \u003d maxopt[ll][rr];\n        dp[ll][rr] +\u003d S[rr] - S[ll - 1];\n    }\n\n    ans[v] \u003d dp[1][len];\n\n    sort(all(children[v]), [](int n1, int n2) {\n        return a[n1] \u0026lt; a[n2];\n    });\n    \n    for (int to: children[v]) {\n        dfs(to);\n    }\n\n    len--;\n    seq.pop_back();\n}\n\nint main() {\n#ifdef Local\n    freopen(\u0026quot;in\u0026quot;, \u0026quot;r\u0026quot;, stdin);\n#endif\n\n    scanf(\u0026quot;%d\u0026quot;, \u0026amp;n);\n    for (int i \u003d 1; i \u0026lt;\u003d n; i++) {\n        scanf(\u0026quot;%d\u0026quot;, \u0026amp;a[i]);\n    }\n\n    for (int i \u003d 2; i \u0026lt;\u003d n; i++) {\n        scanf(\u0026quot;%d\u0026quot;, \u0026amp;p[i]);\n        children[p[i]].push_back(i);\n    }\n\n    dfs(1);\n\n    for (int i \u003d 1; i \u0026lt;\u003d n; i++) {\n        //printf(I64 \u0026quot;\\n\u0026quot;, ans[i]);\n        cout \u0026lt;\u0026lt; ans[i] \u0026lt;\u0026lt; \u0027\\n\u0027;\n    }\n    \n    return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":[]}}