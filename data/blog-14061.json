{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":false,"creationTimeSeconds":1412071818,"rating":23,"authorHandle":"RodionGork","modificationTimeSeconds":1412072313,"id":14061,"title":"\u003cp\u003eCounting solutions for puzzle with 24 color squares\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eM.Gardner in some of his books describes the puzzle: there is a set of squares, each divided into \u003ccode\u003e4\u003c/code\u003e triangular sectors — and these triangles are painted in \u003ccode\u003e3\u003c/code\u003e colors. There exists \u003ccode\u003e24\u003c/code\u003e different squares and it is possible to arrange them into \u003ccode\u003e6*4\u003c/code\u003e rectangle, so that:\u003c/p\u003e \u003cul\u003e   \u003cli\u003eall triangles touching the border of the rectangle have the same color;\u003c/li\u003e   \u003cli\u003eeach two neighbor squares have triangles of the same color on their common edge.\u003c/li\u003e \u003c/ul\u003e\u003cp\u003eTo make it more clear, here is an illustration of the solution:\u003c/p\u003e\u003cp\u003e\u003cimg alt\u003d\"MacMahon 24 squares solution\" src\u003d\"/predownloaded/a7/7c/a77cbe48982e920fad46e9e7e28a21ff57f6adc5.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003eYou can try to play with the puzzle \u003ca href\u003d\"http://codeabbey.github.io/mcmahon-squares/\"\u003eat this page\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eGardner told that the author is \u003ca href\u003d\"http://en.wikipedia.org/wiki/Percy_Alexander_MacMahon\"\u003ePercy Alexander MacMahon\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eThough it is not easy to find solution at once, there exist many of them. Gardner wrote that some of his readers counted analytically and other with the help of computer the number about 12 thousands.\u003c/p\u003e\u003cp\u003eThis phrase made me curious \u003cstrong\u003ehow to write a program to count these solutions\u003c/strong\u003e.\u003c/p\u003e\u003cp\u003eI have no other idea except to play with puzzle and find out some \u0026quot;laws\u0026quot; about placing some specific squares — and then to write brute-force limited with these laws. But it looks complicated.\u003c/p\u003e\u003cp\u003eSo my question is whether there exist easier methods to limit the brute-force or some more cunning approaches?\u003c/p\u003e\u003c/div\u003e","tags":["puzzle","counting"]}}