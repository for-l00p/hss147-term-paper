{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1473992059,"rating":167,"authorHandle":"Xellos","modificationTimeSeconds":1474123977,"id":47136,"title":"\u003cp\u003eIOI, again\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eI got to IOI solving — and upsolving — a bit late and I just recently finished it (with help of various comments). One thing I didn\u0027t really see there was: how would you have done?\u003c/p\u003e\u003cp\u003eHere are my comments about the problems:\u003c/p\u003e \u003cul\u003e   \u003cli\u003e\u003cp\u003ealiens: a common DP + convex hull trick; apparently, \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/00/73/007356a1453a5752186fbff6f174ba5ac8cd35da.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e gets TLE for the 5th subtask and even \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eNK\u003c/i\u003e)\u003c/span\u003e has trouble fitting within the TL; 60pts\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eshortcut: I knew that there\u0027s binsearch (from a similar TC problem); afterwards, finding an \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/b1/7d/b17d38dbc6ee8a367a1ce5243ac8dd98a4fd9d48.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e solution isn\u0027t hard, but improving it enough to get more points is; 93pts\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003erailroad: \u003ca href\u003d\"http://knowyourmeme.com/photos/993875-nick-young\"\u003emfw\u003c/a\u003e — I didn\u0027t move beyond a bitset DP; even though I had a lot of ideas including what turned out to be the correct one (finding a flow), I thought it\u0027d be some kind of greedy, but those are numerous and hard to check in this case; the last subtask was very easy after solving the 3rd; 34pts\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003emessy: the bounds are \u003cspan class\u003d\"tex-span\"\u003e7·2\u003csup class\u003d\"upper-index\"\u003e7\u003c/sup\u003e\u003c/span\u003e with \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eN\u003c/i\u003e \u003d 2\u003csup class\u003d\"upper-index\"\u003e7\u003c/sup\u003e\u003c/span\u003e, so it has to be D\u0026amp;C; full score\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003epaint, molecules: easy 100pt problems\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e\u003cp\u003eSo that\u0027d give me 7th place.\u003c/p\u003e\u003cp\u003eThe first solution I got 93pts for in shortcut was this: when checking if the diameter is \u003cspan class\u003d\"tex-span\"\u003e ≤ \u003ci\u003eD\u003c/i\u003e\u003c/span\u003e and considering \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e to be the left endpoint, find the largest \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e \u003d \u003ci\u003ej\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e(\u003ci\u003ei\u003c/i\u003e)\u003c/span\u003e such that a shortcut between \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e gives all distances within the created cycle \u003cspan class\u003d\"tex-span\"\u003e ≤ \u003ci\u003eD\u003c/i\u003e\u003c/span\u003e, the largest \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e \u003d \u003ci\u003ej\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e(\u003ci\u003ei\u003c/i\u003e)\u003c/span\u003e such that all distances between vertices from the cycle and vertices to the left of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e are \u003cspan class\u003d\"tex-span\"\u003e ≤ \u003ci\u003eD\u003c/i\u003e\u003c/span\u003e, then symmetrically for each \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e the smallest \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e \u003d \u003ci\u003ei\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e3\u003c/sub\u003e(\u003ci\u003ej\u003c/i\u003e)\u003c/span\u003e such that all distances between vertices from the cycle and those to the right of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e are \u003cspan class\u003d\"tex-span\"\u003e ≤ \u003ci\u003eD\u003c/i\u003e\u003c/span\u003e. There are also distances between pairs of vertices not on the cycle, but those are easy. \u003c/p\u003e\u003cp\u003eFor \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e(\u003ci\u003ei\u003c/i\u003e)\u003c/span\u003e, we can find the leftmost vertex \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e(\u003ci\u003ei\u003c/i\u003e)\u003c/span\u003e to the right of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e such that it\u0027s farther from some vertex to the left of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e without a shortcut; then, all other vertices on the cycle must be reachable using the shortcut, so \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003epos\u003c/i\u003e(\u003ci\u003ej\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e) - \u003ci\u003epos\u003c/i\u003e(\u003ci\u003ea\u003c/i\u003e) + \u003ci\u003ed\u003c/i\u003e(\u003ci\u003ea\u003c/i\u003e) + \u003ci\u003eC\u003c/i\u003e + \u003ci\u003elft\u003c/i\u003e(\u003ci\u003ei\u003c/i\u003e) ≤ \u003ci\u003eD\u003c/i\u003e\u003c/span\u003e for all vertices \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/span\u003e between \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003c/span\u003e; here, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003epos\u003c/i\u003e\u003c/span\u003e is the position of each vertex on the main line (prefix sum of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/span\u003e) and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003elft\u003c/i\u003e(\u003ci\u003ei\u003c/i\u003e)\u003c/span\u003e is the maximum distance to the left from \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e; we can extend it to all vertices \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/span\u003e to the right of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003c/span\u003e, which gives us a bound on \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003epos\u003c/i\u003e(\u003ci\u003ej\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e)\u003c/span\u003e; we can find \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003c/span\u003e by binsearching. Also, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003c/span\u003e can be found using an RMQ table for max(pos+d) and an RMQ-like search.\u003c/p\u003e\u003cp\u003eWith \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e(\u003ci\u003ei\u003c/i\u003e)\u003c/span\u003e, we can do something similar to finding \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003c/span\u003e for each vertex, but only for distances to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e exactly, not to the left of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e (so there\u0027s \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ed\u003c/i\u003e(\u003ci\u003ei\u003c/i\u003e)\u003c/span\u003e instead of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003elft\u003c/i\u003e(\u003ci\u003ei\u003c/i\u003e)\u003c/span\u003e); \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e(\u003ci\u003ei\u003c/i\u003e)\u003c/span\u003e can be computed as their suffix minima.\u003c/p\u003e\u003cp\u003eWe\u0027re left with this problem: there\u0027s an interval \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eI\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/sub\u003e(\u003ci\u003ei\u003c/i\u003e)\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eI\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003er\u003c/i\u003e\u003c/sub\u003e(\u003ci\u003ei\u003c/i\u003e)\u003c/span\u003e for each \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e; are there some \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e, \u003ci\u003ej\u003c/i\u003e\u003c/span\u003e such that \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/36/c4/36c4ac82bb4054b8ae68f0d72f53cda7852420e8.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e and \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/19/b6/19b66f84b76cfaa32409833680918cb1da4efd20.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e? This can be solved e.g. using another RMQ table, in which we\u0027ll store the minimum left ends of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eI\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003er\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e in ranges of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e; the right ends of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eI\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003er\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e aren\u0027t important. Then, for each \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e, we can find out if the minimum in \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eI\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/sub\u003e(\u003ci\u003ei\u003c/i\u003e)\u003c/span\u003e is \u003cspan class\u003d\"tex-span\"\u003e ≤ \u003ci\u003ei\u003c/i\u003e\u003c/span\u003e. (Alternatively, we can use a sweepline algorithm and store opened \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eI\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003er\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e-s in a set\u0026lt;\u0026gt;.)\u003c/p\u003e\u003cp\u003eHow simple. /sarcasm\u003c/p\u003e\u003cp\u003eI tried to optimise this, but there was no way to squeeze it even into 97 points — surprisingly, since I didn\u0027t really need to optimise to get 93pts.\u003c/p\u003e\u003cp\u003eI got full score on shortcut using an approach based on \u003ca href\u003d\"//codeforces.com/blog/entry/46518?#comment-310338\"\u003ehttp://codeforces.com/blog/entry/46518?#comment-310338\u003c/a\u003e (note: extending to all pairs \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e, \u003ci\u003ej\u003c/i\u003e\u003c/span\u003e is probably unnecessary and wrong — if \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e \u003d \u003ci\u003ej\u003c/i\u003e\u003c/span\u003e, we get a non-path which can be longer than \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eD\u003c/i\u003e\u003c/span\u003e). The hardest part is computing the smallest \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e0\u003c/sub\u003e \u003d \u003ci\u003ej\u003c/i\u003e \u0026gt; \u003ci\u003ei\u003c/i\u003e\u003c/span\u003e and largest \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e0\u003c/sub\u003e \u003d \u003ci\u003ei\u003c/i\u003e \u0026lt; \u003ci\u003ej\u003c/i\u003e\u003c/span\u003e such that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eu\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e] + \u003ci\u003ev\u003c/i\u003e[\u003ci\u003ej\u003c/i\u003e] \u0026gt; \u003ci\u003eD\u003c/i\u003e\u003c/span\u003e, since \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eu\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e]\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e[\u003ci\u003ej\u003c/i\u003e]\u003c/span\u003e don\u0027t have to be monotonous; afterwards, we can find the smallest/largest sum/difference of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e, \u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003c/span\u003e by considering all \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e ≥ \u003ci\u003ej\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e0\u003c/sub\u003e\u003c/span\u003e / \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e ≤ \u003ci\u003ei\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e0\u003c/sub\u003e\u003c/span\u003e, for which we only need prefix/suffix maxima of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eu\u003c/i\u003e[]\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e[]\u003c/span\u003e and check if the answer exists using 2x 2 pointers in \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e)\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eTo compute \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e0\u003c/sub\u003e\u003c/span\u003e, let\u0027s move from \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e \u003d \u003ci\u003eN\u003c/i\u003e - 1\u003c/span\u003e to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e \u003d 0\u003c/span\u003e and recompute the sequence of closest increasing \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e[\u003ci\u003ej\u003c/i\u003e]\u003c/span\u003e-s using the well-known stack algorithm. Obviously, we can find \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e0\u003c/sub\u003e\u003c/span\u003e by binsearching among them, but that gives \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/b1/7d/b17d38dbc6ee8a367a1ce5243ac8dd98a4fd9d48.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e time complexity. However, if \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e0\u003c/sub\u003e(\u003ci\u003ei\u003c/i\u003e) \u0026lt; \u003ci\u003ej\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e0\u003c/sub\u003e(\u003ci\u003ei\u003c/i\u003e\u0027)\u003c/span\u003e for \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e \u0026gt; \u003ci\u003ei\u003c/i\u003e\u0027\u003c/span\u003e, then we can decrease \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e0\u003c/sub\u003e(\u003ci\u003ei\u003c/i\u003e\u0027)\u003c/span\u003e to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e0\u003c/sub\u003e(\u003ci\u003ei\u003c/i\u003e)\u003c/span\u003e without affecting the bounds on the sum/difference of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e, \u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003c/span\u003e; that means we can keep a pointer on the element in the stack (actually an array in the implementation) corresponding to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e[\u003ci\u003ej\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e0\u003c/sub\u003e]\u003c/span\u003e and only move this pointer in one direction and it\u0027s \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/a0/d5/a0d5556965673107e1dcc508184a5e239a88f967.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e in total.\u003c/p\u003e\u003cp\u003eThis got 97 points instantly, but I still needed some optimisations to get to 100. That time limit was really tight. Other than that, the problems were pretty good and difficult (as expected from Russia); I just missed problems with non-binary scoring per subtask.\u003c/p\u003e\u003cp\u003eMy codes: \u003ca href\u003d\"https://ideone.com/iKi2zr\"\u003emolecules\u003c/a\u003e \u003ca href\u003d\"https://ideone.com/tSkR7h\"\u003erailroad\u003c/a\u003e \u003ca href\u003d\"https://ideone.com/ypN9Um\"\u003eshortcut\u003c/a\u003e \u003ca href\u003d\"https://ideone.com/SPXtQh\"\u003epaint\u003c/a\u003e \u003ca href\u003d\"https://ideone.com/CwyzEx\"\u003emessy\u003c/a\u003e \u003ca href\u003d\"https://ideone.com/H320PF\"\u003eayyliens\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e","tags":["ioi","ioi 2016"]}}