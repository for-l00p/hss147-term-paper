{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1528835853,"rating":16,"authorHandle":"ameya","modificationTimeSeconds":1528835853,"id":59990,"title":"\u003cp\u003eA Fenwick /Binary Indexed Tree Implementation\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHey everyone,\u003cbr /\u003eI\u0027ve recently implemented a Fenwick Tree (probably better known a Binary Indexed Tree or a BIT) supporting range-based and point-based sum queries as well as updates, in C++ 14.\u003cbr /\u003eThe approach was inspired by Petr\u0027s blog \u003ca href\u003d\"https://petr-mitrichev.blogspot.com/2013/05/fenwick-tree-range-updates.html\"\u003ehere\u003c/a\u003e!\u003cbr /\u003eThe implementation is available on github \u003ca href\u003d\"https://github.com/ameya98/ExoticDataStructures\"\u003ehere\u003c/a\u003e under \u003cstrong\u003efenwicktree.hpp\u003c/strong\u003e.\u003cbr /\u003eAny comments and suggestions are welcome!\u003c/p\u003e\u003c/div\u003e","tags":["#data structure","bit/fenwick tree"]}}