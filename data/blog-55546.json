{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1509648064,"rating":0,"authorHandle":"acmASCIS","modificationTimeSeconds":1509654092,"id":55546,"title":"\u003cp\u003eWeek04 — Operators and Branching\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003ch3\u003eOperators\u003c/h3\u003e\u003cp\u003e\u003cimg alt\u003d\" \" src\u003d\"/predownloaded/92/d2/92d2c5c40f22c1bd9db9685476d87fb24dc44e94.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003ch3\u003eBranching\u003c/h3\u003e\u003cp\u003e\u003cstrong\u003eWhat if we wanna ask the computer something?\u003c/strong\u003e\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eif ( \u0026lt;condition\u0026gt; ) {\n  // Execute these statements if \u0026lt;condition\u0026gt; is TRUE\n}\nelse if ( \u0026lt;another condition\u0026gt; ) {\n  // Execute these statements if \u0026lt;another condition\u0026gt; is TRUE and\n  // \u0026lt;condition\u0026gt; is FALSE\n}\nelse {\n  // Execute these statements if FALSE\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eNote that:\u003c/p\u003e\u003cp\u003eWhatever inside the condition is a boolean (True or False).\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eelse\u003c/strong\u003e if and \u003cstrong\u003eelse\u003c/strong\u003e are optional.\u003c/p\u003e\u003ch4\u003eExample:-\u003c/h4\u003e \u003cpre\u003e\u003ccode\u003eint FirstAge,SecondAge;\ncin\u0026gt;\u0026gt;FirstAge\u0026gt;\u0026gt;SecondAge;\nif(FirstAge\u0026gt;SecondAge){\n     cout\u0026lt;\u0026lt;\u0026quot;The First Person is Older\u0026quot;;\n}\nelse if(FirstAge\u003d\u003dSecondAge){\n     cout\u0026lt;\u0026lt;\u0026quot;They Are The Same Age\u0026quot;;\n}\nelse{\n     cout\u0026lt;\u0026lt;\u0026quot;The Second Person is Older\u0026quot;;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eHere we declared firstly 2 variables for their age,inserted the 2 values using \u0027cin\u0027 \u003c/p\u003e\u003cp\u003ethen we asked the computer a question if the first person is older print that he is older, but if not we will ask another question in the \u003cstrong\u003eelse if\u003c/strong\u003e part to check if they are the same age or not,\u003c/p\u003e\u003cp\u003eif not then it is obvious that the second is older so we don\u0027t need to write another if in this one.\u003c/p\u003e\u003ch4\u003eComparison operators\u003c/h4\u003e\u003cp\u003e\u003cimg alt\u003d\" \" src\u003d\"/predownloaded/3a/e5/3ae5617dfec31883a00f9d9b0c89c2f1b75166bd.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eWhat if we want to ask about several conditions?\u003c/strong\u003e\u003c/p\u003e\u003ch4\u003eLogical operators\u003c/h4\u003e\u003cp\u003e\u003cimg alt\u003d\" \" src\u003d\"/predownloaded/c2/2e/c22e109cfd50d866a012932b02cfaaf5d072da34.jpg\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003ch3\u003eFunctions\u003c/h3\u003e\u003cp\u003eEarlier we talked about functions, functions simple apply operations on some input and returns the answer.\u003c/p\u003e\u003cp\u003eAs we mentioned before libraries contains some written code to use it without rewriting it, it is written in a form of functions called \u003cstrong\u003ebuilt in functions\u003c/strong\u003e or \u003cstrong\u003epredefined functions\u003c/strong\u003e\u003c/p\u003e\u003cp\u003ePredefined functions are organized into separate libraries\u003c/p\u003e\u003cp\u003eC++ Standard Library contains many predefined functions to perform various operations\u003c/p\u003e\u003cp\u003eI/O functions are in iostream header\u003c/p\u003e\u003cp\u003eMath functions are in cmath header\u003c/p\u003e\u003ch3\u003eSome predefined C++ mathematical functions:\u003c/h3\u003e\u003ch4\u003ePower Function — pow(x,y):\u003c/h4\u003e\u003cp\u003epow(x,y) has two parameters\u003c/p\u003e\u003cp\u003epow(x,y) returns value of type double\u003c/p\u003e\u003cp\u003epow(x,y) calculates x to the power of y: pow(2,3) \u003d 8.0\u003c/p\u003e\u003cp\u003ex and y called parameters (or arguments) of function pow\u003c/p\u003e\u003ch4\u003eSquare Root Function — sqrt(x):\u003c/h4\u003e\u003cp\u003eSquare root function sqrt(x) has only one parameter\u003c/p\u003e\u003cp\u003esqrt(x) returns value of type double\u003c/p\u003e\u003cp\u003esqrt(x) calculates non-negative square root of x, for x \u0026gt;\u003d 0.0: sqrt(2.25) \u003d 1.5\u003c/p\u003e\u003ch4\u003eFloor Function — floor(x):\u003c/h4\u003e\u003cp\u003eFloor function floor(x) has only one parameter\u003c/p\u003e\u003cp\u003efloor(x) returns value of type double\u003c/p\u003e\u003cp\u003efloor(x) calculates largest whole number not greater than x: floor(48.79) \u003d 48.0\u003c/p\u003e\u003cp\u003efor more and more information about c++ libraries and predefined functions check this link \u003ca href\u003d\"http://www.cplusplus.com/reference/\"\u003eCPP reference \u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eNow don\u0027t you think that Operators kinda act like functions?\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eFor example\u003c/p\u003e\u003cp\u003e\u003ccode\u003eX \u003d 5 + 6 ;\u003c/code\u003e\u003c/p\u003e\u003cp\u003e\u003ccode\u003e+\u003c/code\u003e Will act as functions with input 5,6\u003c/p\u003e\u003cp\u003eApply addition operation on the input\u003c/p\u003e\u003cp\u003eThen returns the result \u003c/p\u003e\u003cp\u003eThe \u003ccode\u003e\u003d\u003c/code\u003e operator takes the result from the addition(input) and assigns it to X(output).\u003c/p\u003e\u003ch4\u003eWow That a lot of information to swallow. Go step by step, understand it well and get your hands on with coding.\u003c/h4\u003e\u003cp\u003e\u003cimg alt\u003d\" \" src\u003d\"/predownloaded/80/cb/80cb8725758d3e9b2a085946b4d14c4c7c8d8315.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003c/div\u003e","tags":[]}}