{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1491473004,"rating":-5,"authorHandle":"daihan","modificationTimeSeconds":1491533583,"id":51456,"title":"\u003cp\u003eLongest Balanced parantheses HELP PLEASE\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e\u003cstrong\u003eUPD : Bug found . :)\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eI got a problem in here : \u003ca href\u003d\"http://practice.geeksforgeeks.org/problems/longest-valid-parentheses/0\"\u003eLink\u003c/a\u003e . In this problem they said : \u003c/p\u003e\u003cp\u003eGiven a string consisting of opening and closing parenthesis, find length of the longest valid parenthesis substring.\u003c/p\u003e\u003cp\u003eExamples:\u003c/p\u003e\u003cp\u003eInput : ((()\u003c/p\u003e\u003cp\u003eOutput : 2\u003c/p\u003e\u003cp\u003eExplanation : ()\u003c/p\u003e\u003cp\u003eInput: )()())\u003c/p\u003e\u003cp\u003eOutput : 4\u003c/p\u003e\u003cp\u003eExplanation: ()()\u003c/p\u003e\u003cp\u003eInput: ()(()))))\u003c/p\u003e\u003cp\u003eOutput: 6\u003c/p\u003e\u003cp\u003eExplanation: ()(())\u003c/p\u003e\u003cp\u003eMy code : \u003ca href\u003d\"https://pastebin.com/MLKeF4t1\"\u003elink here\u003c/a\u003e\u003c/p\u003e\u003cp\u003eGetting WA. \u003c/p\u003e\u003cp\u003eMy logic is : If i got a balanced parentheses then i store the first and last index of this into vector vct . Then after storing in this manner . I check if(vct[i].first\u003d\u003dvct[i-1].second+1) that means ith BP(balanced parentheses) and (i-1)th BP are neighour to each other , then i merge those two BP\u0027s length , if that condition is not true then , update sum\u003dvct[i].second-vct[i].first+1 // length of ith BP . I update maximum length by this mx\u003dmax(mx,sum) ; . But getting Wrong answer . Can anyone guess the bug . Please help .\u003c/p\u003e\u003c/div\u003e","tags":[]}}