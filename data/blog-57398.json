{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1517178230,"rating":22,"authorHandle":"e-pluszak","modificationTimeSeconds":1517178230,"id":57398,"title":"\u003cp\u003eWeird C++ template question\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eI tried to define two template functions outputing pairs and vectors of any type. If it is overloaded operator it works fine, but for standard functions lookup fails to find function defined for pair if it is declared after called. Does anybody know why?\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e# include \u0026lt;bits/stdc++.h\u0026gt;\nusing namespace std;\nint Hash(int x) {\n\treturn x;\n}\ntemplate \u0026lt;typename T\u0026gt; int Hash(vector\u0026lt;T\u0026gt; x) {\n\tint ans \u003d 0;\n\tfor (auto c : x)\n\t\tans \u003d 2 * ans + Hash(c);//Fails if c is a pair: no matching function for call to ‘Hash(std::pair\u0026lt;int, int\u0026gt;\u0026amp;)\n\treturn ans;\n}\ntemplate \u0026lt;typename T, typename C\u0026gt; auto Hash(pair \u0026lt;T, C\u0026gt; x) -\u0026gt; int {\n\treturn Hash(x.first) + Hash(x.second) * 14;\n}\ntemplate \u0026lt;typename T\u0026gt;\nostream \u0026amp;operator\u0026lt;\u0026lt;(ostream \u0026amp;os, vector \u0026lt;T\u0026gt; x)\n{\n\tos \u0026lt;\u0026lt; \u0026quot;{\u0026quot;;\n\tint cou \u003d 0;\n\tfor (auto c : x) {\n\t\tif (cou++) os \u0026lt;\u0026lt; \u0026quot;, \u0026quot;;\n\t\tos \u0026lt;\u0026lt; c;//Works even if c is a pair despite calling operator declared late\n\t}\n\treturn os \u0026lt;\u0026lt; \u0026quot;}\u0026quot;;\n}\ntemplate \u0026lt;typename T, typename C\u0026gt; ostream \u0026amp; operator\u0026lt;\u0026lt; (ostream \u0026amp;os, pair\u0026lt;T, C\u0026gt; x) {\n\treturn os \u0026lt;\u0026lt; \u0026quot;\u0026lt;\u0026quot; \u0026lt;\u0026lt; x.first \u0026lt;\u0026lt; \u0026quot;, \u0026quot; \u0026lt;\u0026lt; x.second \u0026lt;\u0026lt; \u0026quot;\u0026gt;\u0026quot;; \n}\nostream \u0026amp; Output(ostream \u0026amp;os, const char * x) {\n\treturn os \u0026lt;\u0026lt; x;\n}\nostream \u0026amp; Output(ostream \u0026amp;os, int x) {\n\treturn os \u0026lt;\u0026lt; x;\n}\ntemplate \u0026lt;typename T\u0026gt;\nostream \u0026amp;Output(ostream \u0026amp;os, vector \u0026lt;T\u0026gt; x)\n{\n\tOutput(os, \u0026quot;{\u0026quot;);\n\tint cou \u003d 0;\n\tfor (auto c : x) {\n\t\tif (cou++) Output(os,  \u0026quot;, \u0026quot;);\n\t\tOutput(os, c);//Fails if c is a pair: no matching function for call to ‘Output(std::ostream\u0026amp;, std::pair\u0026lt;int, int\u0026gt;\u0026amp;)\n\t}\n\treturn Output(os, \u0026quot;}\u0026quot;);\n}\ntemplate \u0026lt;typename T, typename C\u0026gt; ostream \u0026amp; Output (ostream \u0026amp;os, pair\u0026lt;T, C\u0026gt; x) {\n\treturn Output(Output(Output(Output(Output(os, \u0026quot;\u0026lt;\u0026quot;), x.first), \u0026quot;, \u0026quot;), x.second), \u0026quot;\u0026gt;\u0026quot;); \n}\nint main() {\n\tvector \u0026lt;pair \u0026lt;int, int\u0026gt; \u0026gt; x;\n\tx.emplace_back(13, 10);\n\tx.emplace_back(1, 16);\n\tcout \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl;//Compiles and outputs {\u0026lt;13, 10\u0026gt;, \u0026lt;1, 16\u0026gt;}\n\tcout \u0026lt;\u0026lt; Hash(x) \u0026lt;\u0026lt; endl;//no matching function for call to ‘Hash(std::pair\u0026lt;int, int\u0026gt;\u0026amp;)    ans \u003d 2 * ans + Hash(c);\n\tOutput(cout, x);//no matching function for call to ‘Output(std::ostream\u0026amp;, std::pair\u0026lt;int, int\u0026gt;\u0026amp;)   Output(os, c);\n}\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":[]}}