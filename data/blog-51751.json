{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1493278995,"rating":9,"authorHandle":"E869120","modificationTimeSeconds":1493376655,"id":51751,"title":"\u003cp\u003eSquare869120Contest #4 Editorial (A-D)\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHello, everyone.\u003cbr /\u003e I\u0027m sorry for writing editorial too late.\u003cbr /\u003e \u003cstrong\u003eI hope that you can use the commentary to solve the problem of s8pc or review the contest.\u003c/strong\u003e\u003cbr /\u003e \u003cstrong\u003ePlease write comments where you do not understand, impressions, and discussions.\u003c/strong\u003e\u003cbr /\u003e \u003cbr /\u003e This is the \u003ca href\u003d\"http://s8pc-4.contest.atcoder.jp\"\u003esquare869120contest #4\u003c/a\u003e (in AtCoder) editorial.\u003cbr /\u003e Writers were \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/square1001\" title\u003d\"Candidate Master square1001\"\u003esquare1001\u003c/a\u003e and \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/E869120\" title\u003d\"Candidate Master E869120\"\u003eE869120\u003c/a\u003e.\u003cbr /\u003e \u003cbr /\u003e Since I think that there are also many people who have not yet seen the problem and forgotten it, I will attach a link to the problem statement.\u003cbr /\u003e \u003cbr /\u003e\u003c/p\u003e\u003ch3\u003e\u003ca href\u003d\"https://s8pc-4.contest.atcoder.jp/tasks/s8pc_4_a\"\u003eA — Atcoder Handles\u003c/a\u003e\u003cbr /\u003e\u003c/h3\u003e\u003cp\u003eIn this problem, the possible index of the handle name of Mr.X will be a \u0026quot;Range\u0026quot;. (Example of \u0026quot;Range\u0026quot;: {4,5,6,7}, {3,4,5,6,7,8,9,10})\u003cbr /\u003e Proof:\u003cbr /\u003e \u003c/p\u003e\u003cul\u003e \u003cli\u003eThe handle name of Mr.X doesn\u0027t include \u0027?\u0027 — This means there is only one possibility of his name.\u003c/li\u003e \u003cli\u003eIf one of the others name (in the list) changes, the index of Mr.X will change \u003cstrong\u003eno more than one\u003c/strong\u003e.\u003c/li\u003e \u003cli\u003eSo, every index between \u0026quot;Minimum\u0026quot; to \u0026quot;Maximum\u0026quot; is possible.\u003c/li\u003e \u003c/ul\u003e \u003cbr /\u003e For example: \u003cpre\u003e abcde -\u0026gt; zzzzz(changed)\u003cbr /\u003e bbbbb\u003cbr /\u003e ccccc\u003cbr /\u003e ddddd\u003cbr /\u003e Mr.X: cprpr \u003c/pre\u003e In this example, Mr.X\u0027s index changed from 4 to 3.\u003cbr /\u003e \u003cbr /\u003e Adittionally, The maximum and minimum value of Mr.X\u0027s index can find for this way:\u003cbr /\u003e \u003cul\u003e \u003cli\u003eMinimum: When all characters of \u0027?\u0027 in the list are \u0027z\u0027.\u003c/li\u003e \u003cli\u003eMaximum: When all characters of \u0027?\u0027 in the list are \u0027a\u0027.\u003c/li\u003e \u003c/ul\u003e Since possible index of the handle name of Mr.X is \u0026quot;Range\u0026quot;, you can solve this problem with only minimum-value and maximum-value.\u003cbr /\u003e \u003cbr /\u003e \u003cbr /\u003e\u003ch3\u003e\u003ca href\u003d\"https://s8pc-4.contest.atcoder.jp/tasks/s8pc_4_b\"\u003eB — Buildings are Colorful\u003c/a\u003e\u003cbr /\u003e\u003c/h3\u003e\u003cp\u003eLet\u0027s consider the case of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eN\u003c/i\u003e \u003d \u003ci\u003eK\u003c/i\u003e\u003c/span\u003e.\u003cbr /\u003e You can solve this problem with greedy method if \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eN\u003c/i\u003e \u003d \u003ci\u003eK\u003c/i\u003e\u003c/span\u003e is true. (a[i] is the height of building \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e)\u003cbr /\u003e \u003cbr /\u003e \u003c/p\u003e\u003cpre\u003e long long ret \u003d 0, Y \u003d 0;\u003cbr /\u003e for (int i \u003d 0; i \u0026lt; n; i++) {\u003cbr /\u003e  if (Y \u0026gt;\u003d a[i]) { ret +\u003d ((Y + 1) — a[i]); Y++; } // When previous building (After change) is lower than this\u003cbr /\u003e  else { Y \u003d a[i]; } // Else\u003cbr /\u003e }\u003cbr /\u003e //The answer is ret.\u003cbr /\u003e \u003c/pre\u003e So, you can get 120 points in this way.\u003cbr /\u003e \u003cbr /\u003e Let\u0027s think about \u0026quot;What buildings should be visible\u0026quot;. (The number of should-visible buildings must be \u003cstrong\u003egreater than\u003c/strong\u003e K)\u003cbr /\u003e There are \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eN\u003c/i\u003e\u003c/span\u003e buildings along the line, so you have to think only \u003cspan class\u003d\"tex-span\"\u003e2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003eN\u003c/i\u003e\u003c/sup\u003e\u003c/span\u003e ways.\u003cbr /\u003e \u003cbr /\u003e You can use greedy method to solve the following problem:\u003cbr /\u003e \u003cul\u003e  \u003cli\u003eYou are given the index of buildings that should be visible.\u003c/li\u003e  \u003cli\u003eFind the minimum cost.\u003c/li\u003e \u003c/ul\u003e The greedy method is here:\u003cbr /\u003e \u003cpre\u003e Let L be the maximum value of building\u0027s (that in front of this, After changed) height:\u003cbr /\u003e If the building don\u0027t have to be visible, this building\u0027s height will not be increased.\u003cbr /\u003e If the building have to be visible, this building\u0027s height will be \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003emax\u003c/i\u003e(\u003ci\u003eThis\u003c/i\u003e\u003c/span\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ebuilding\u003c/i\u003e\u0027\u003ci\u003es\u003c/i\u003e\u003c/span\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eheight\u003c/i\u003e, \u003c/span\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eL\u003c/i\u003e)\u003c/span\u003e\u003cbr /\u003e \u003c/pre\u003e You can solve this problem (Max point) with brute-force method and greedy method.\u003cbr /\u003e The complexityis \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003eN\u003c/i\u003e\u003c/sup\u003e)\u003c/span\u003e.\u003cbr /\u003e \u003cbr /\u003e \u003cbr /\u003e\u003ch3\u003e\u003ca href\u003d\"https://s8pc-4.contest.atcoder.jp/tasks/s8pc_4_c\"\u003eC — Calendar 2\u003c/a\u003e\u003cbr /\u003e\u003c/h3\u003e\u003cp\u003eYou can solve this problem in \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e)\u003c/span\u003e in BFS or DFS algorithm, but you can only get 100 points in this way.\u003cbr /\u003e \u003cbr /\u003e Let\u0027s consider to split the calendar every \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eM\u003c/i\u003e\u003c/span\u003e rows. (Because this calendar have \u003cstrong\u003ePeriodicity\u003c/strong\u003e per \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eM\u003c/i\u003e\u003c/span\u003e squares, if \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/span\u003e in the problem statement is divided by 7, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eM\u003c/i\u003e\u003c/span\u003e will be \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e / 7\u003c/span\u003e)\u003cbr /\u003e \u0026quot;The calendar between \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e * \u003ci\u003eM\u003c/i\u003e + 1\u003c/span\u003e-th row to \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ei\u003c/i\u003e + 1) * \u003ci\u003eM\u003c/i\u003e\u003c/span\u003e-th row\u0026quot; and \u0026quot;The calendar between \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ei\u003c/i\u003e + 1) * \u003ci\u003eM\u003c/i\u003e + 1\u003c/span\u003e-th row to \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ei\u003c/i\u003e + 2) * \u003ci\u003eM\u003c/i\u003e\u003c/span\u003e-th row\u0026quot; are the same.\u003cbr /\u003e So, you can solve this problem following way:\u003cbr /\u003e \u003c/p\u003e\u003cpre\u003e Let \u0026quot;number of connected white parts between small calendar between 1st row to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eM\u003c/i\u003e\u003c/span\u003e-th row\u0026quot; be A\u003cbr /\u003e Let \u0026quot;number of connected white parts between small calendar between 1st row to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eM\u003c/i\u003e * 2\u003c/span\u003e-th row\u0026quot; be B\u003cbr /\u003e The answer is \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003eB\u003c/i\u003e - \u003ci\u003eA\u003c/i\u003e) * (\u003ci\u003eN\u003c/i\u003e / \u003ci\u003eM\u003c/i\u003e) + (2 * \u003ci\u003eA\u003c/i\u003e - \u003ci\u003eB\u003c/i\u003e)\u003c/span\u003e.\u003cbr /\u003e \u003c/pre\u003e The complexity is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eM\u003c/i\u003e)\u003c/span\u003e + \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eM\u003c/i\u003e)\u003c/span\u003e \u003d \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eM\u003c/i\u003e)\u003c/span\u003e.\u003cbr /\u003e \u003cbr /\u003e \u003cbr /\u003e\u003ch3\u003e\u003ca href\u003d\"https://s8pc-4.contest.atcoder.jp/tasks/s8pc_4_d\"\u003eD — Driving on a Tree\u003c/a\u003e\u003cbr /\u003e\u003c/h3\u003e\u003cp\u003eYou can use the Tree-DP method in this problem.\u003cbr /\u003e This is a typical problem which use \u0026quot;Every-Direction Tree DP Algorithm\u0026quot; (It says \u0026quot;全方位木DP\u0026quot; in Japanese and translated directly, actually I don\u0027t know English word of the algorithm). The similar problem is \u003ca href\u003d\"//codeforces.com/contest/790/problem/B\"\u003e790B\u003c/a\u003e.\u003cbr /\u003e Let\u0027s consider the rooted tree which the root is node 1.\u003cbr /\u003e \u003cbr /\u003e Let \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edp\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e]\u003c/span\u003e be the expected value of number of moves which only go down (\u003d to children of the node) and starts on node \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e\u003cbr /\u003e  \u003d\u003d\u003d This value can find with Tree-DP algorithm in \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e)\u003c/span\u003e.\u003cbr /\u003e Let \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edp\u003c/i\u003e2[\u003ci\u003ei\u003c/i\u003e]\u003c/span\u003e be the expected value which starts on node \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e and go to the parent of the node \u003cstrong\u003efirst\u003c/strong\u003e.\u003cbr /\u003e  \u003d\u003d\u003d This value can find with Tree-DP algorithm (From the root of the tree to leaves) in \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e)\u003c/span\u003e.\u003cbr /\u003e \u003cbr /\u003e \u003c/p\u003e\u003cul\u003e  \u003cli\u003eLet the parent of node \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e be \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e.\u003c/li\u003e  \u003cli\u003eLet the degree of node \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e be \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003c/span\u003e.\u003c/li\u003e  \u003cli\u003e\u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/fd/3e/fd3ed2b4dfd362036ced04e586d2b7856e451df1.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/li\u003e \u003c/ul\u003e The answer of node \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e is average of {\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edp\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e], \u003ci\u003edp\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e], ..., \u003ci\u003edp\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e], \u003ci\u003edp\u003c/i\u003e2[\u003ci\u003ei\u003c/i\u003e]\u003c/span\u003e}. \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edp\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e]\u003c/span\u003e comes \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e - 1\u003c/span\u003e times. The complexity is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e)\u003c/span\u003e + \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e)\u003c/span\u003e \u003d \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e)\u003c/span\u003e.\u003cbr /\u003e \u003cbr /\u003e \u003cbr /\u003e \u003cstrong\u003eThank you for looking this page.\u003c/strong\u003e\u003cbr /\u003e \u003cstrong\u003eI hope that you can use the commentary to solve the problem of s8pc or review the contest.\u003c/strong\u003e\u003cbr /\u003e \u003cbr /\u003e \u003cstrong\u003ePlease wait for a while for editorial between problem E to H.\u003c/strong\u003e\u003cbr /\u003e\u003c/div\u003e","tags":["s8pc","atcoder"]}}