{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1477731295,"rating":7,"authorHandle":"amitng","modificationTimeSeconds":1477834001,"id":48072,"title":"\u003cp\u003eParanthesis :- How to approach this problem? Any hints \u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eEach test file starts with an integer ‘t’ — the number of testcases.\u003c/p\u003e\u003cp\u003eIn each of the next ‘t’ lines, you are given a string of ‘n’ characters [ either ‘(‘ or ’)’ or ‘*’ ].\u003c/p\u003e\u003cp\u003eYour task is to find the number of distinct balanced parentheses expressions you can make by replacing the ‘*’ with either ‘(‘ or ‘)’ or removing the ‘*’\u003c/p\u003e\u003cp\u003eNote : You have to replace each ‘*’ with one of ‘(‘ or ‘)’ or remove it. If removed, assume the string has reduced by 1 character.\u003c/p\u003e\u003cp\u003eDuplicate strings are not allowed. The final expressions to be counted have to be distinct\u003c/p\u003e\u003cp\u003eAs the answer may be large, please output it modulo 1000000007 (10^9+7)\u003c/p\u003e\u003cp\u003eOutput one integer per line corresponding to each testcase.\u003c/p\u003e\u003cp\u003eConstraints :\u003c/p\u003e\u003cp\u003e1 \u0026lt;\u003d t \u0026lt;\u003d 20\u003c/p\u003e\u003cp\u003e1 \u0026lt;\u003d n \u0026lt;\u003d 100\u003c/p\u003e\u003cp\u003e0 \u0026lt;\u003d Number of ‘*’ in the input string \u0026lt;\u003d min(n,10)\u003c/p\u003e\u003cp\u003eSample Input:\u003c/p\u003e\u003cp\u003e2\u003c/p\u003e\u003cp\u003e(*(*)*)\u003c/p\u003e\u003cp\u003e\u003cem\u003e(\u003c/em\u003e(**)*\u003c/p\u003e\u003cp\u003eSample Output\u003c/p\u003e\u003cp\u003e5\u003c/p\u003e\u003cp\u003e9\u003c/p\u003e\u003cp\u003eExplanation\u003c/p\u003e\u003cp\u003eThe five possible valid solutions are for the first input are :\u003c/p\u003e\u003cp\u003e((()))\u003c/p\u003e\u003cp\u003e()(())\u003c/p\u003e\u003cp\u003e()()()\u003c/p\u003e\u003cp\u003e(())()\u003c/p\u003e\u003cp\u003e(())\u003c/p\u003e\u003cp\u003eThe nine possible valid solutions are for the second input are :\u003c/p\u003e\u003cp\u003e(((())))\u003c/p\u003e\u003cp\u003e(()(()))\u003c/p\u003e\u003cp\u003e(()()())\u003c/p\u003e\u003cp\u003e(()())\u003c/p\u003e\u003cp\u003e((()))\u003c/p\u003e\u003cp\u003e()(())\u003c/p\u003e\u003cp\u003e()()()\u003c/p\u003e\u003cp\u003e()()\u003c/p\u003e\u003cp\u003e(())\u003c/p\u003e\u003c/div\u003e","tags":["dp","hints"]}}