{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1426927350,"rating":8,"authorHandle":"dreamplay","modificationTimeSeconds":1426927350,"id":17055,"title":"\u003cp\u003eEfficiently Calculating Binomial Coefficient by Lucas Theorem\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eI have often encountered problems(in gym) which reduce to finding C(n,r) % p , where p is \u003cstrong\u003enot necessarily prime\u003c/strong\u003e . Also n and r are both large . Essentialy they demand for the use of Lucas and Chinese Remainder Theorem.\u003c/p\u003e\u003cp\u003eFor constraints let`s take this \u003ca href\u003d\"http://www.spoj.com/problems/DCEPC13D/\"\u003eproblem\u003c/a\u003e .\u003c/p\u003e\u003cp\u003eThis \u003ca href\u003d\"http://discuss.codechef.com/questions/3869/best-known-algos-for-calculating-ncr-m\"\u003elink\u003c/a\u003e does help a lot but I am still confused , especially in the part which asks to use C.R.Theorem . How to apply CRT?\u003c/p\u003e\u003cp\u003eAlso what if p is not a square free number ?\u003c/p\u003e\u003cp\u003eAlong with explaination , a link to code would be extremely helpful. \u003c/p\u003e\u003c/div\u003e","tags":["binomial","modular inverse"]}}