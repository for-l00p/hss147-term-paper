{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1486320526,"rating":0,"authorHandle":"Ahmad","modificationTimeSeconds":1486320775,"id":50272,"title":"\u003cp\u003eMinimum number of moves to jump from start to end?\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eLet\u0027s say you\u0027re given a string where the start point is the beginning of the string and the end point is the end of the string. For each turn, you can jump at most \u003cem\u003es\u003c/em\u003e positions in the string but there are obstacles in the string which you are not allowed to land on.\u003c/p\u003e\u003cp\u003eSo for example a string like \u0026quot;SOOOXOE\u0026quot; (where \u0026quot;O\u0026quot; represents a free space and \u0026quot;X\u0026quot; represents an obstacle) and there\u0027s an \u003cem\u003es\u003c/em\u003e value of 3. The minimum number of moves in this case to get from S to E is 2. But in a case like \u0026quot;SOOOXXOE\u0026quot; with the same \u003cem\u003es\u003c/em\u003e value, the minimum number of moves is 3.\u003c/p\u003e\u003cp\u003eI came up with a greedy where you jump as far as possible as long as it\u0027s valid position each turn and it works. But I need to calculate the minimum number where the difference between S and E is at most 1,000,000,000 so simulating the jumping is too slow. Does anyone have any ideas about how to solve this efficiently?\u003c/p\u003e\u003cp\u003e*Note that I\u0027m not actually given a string of length 1,000,000,000 but I visualized it as a string so it\u0027s easier to understand. Also if it helps, there will be at most 40 obstacles per string and \u003cem\u003es\u003c/em\u003e is always greater than 1 and less than or equal to 6. It is always possible to reach E from S.\u003c/p\u003e\u003c/div\u003e","tags":["help"]}}