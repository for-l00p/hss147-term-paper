{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1431272496,"rating":19,"authorHandle":"radoslav11","modificationTimeSeconds":1431277308,"id":17819,"title":"\u003cp\u003eBulgarian National Olympiad in Informatics â€” Day 1\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eOn 25-26 April The Bulgarian National Olympiad in Informatics took place. Here are the tasks:\u003c/p\u003e\u003ch4\u003eJunior Task 1:\u003c/h4\u003e\u003cp\u003eThere is a sequence of stones numbered 0,1,...,10^9 from left to right respectively. A chameleon is placed on the stone with number 0. There are N (1\u0026lt;\u003dN\u0026lt;\u003d10^5) flies on the other stones and more than one fly can share the same stone. To reach the i-th stone with his tongue, the chameleon loses i unities of energy. When he reach the i-th stone, he eats one of the flies on the stone. The flies on stones 1,2,...,i-1 moves one stone to the left, the flies on stones, i+1,... moves one stone to the right and the remaining flies on the i-th stone don\u0027t move. Given the number of flies N and their positions on the stones 1\u0026lt;\u003da1,a2,...,aN\u0026lt;\u003d10^9, you are to find the minimum energy the chameleon will lose in order to eat all flies.\u003c/p\u003e\u003ch4\u003eJunior Task 2:\u003c/h4\u003e\u003cp\u003eGiven a dictionary of consisting of N (1\u0026lt;\u003dN\u0026lt;\u003d2000) words with length up to 20 lowercase letters and a string with up to 100 lowercase letters. It\u0027s known that the string is a sentence consisting of words from the dictionary written without spaces, you are to find the minimum number of words we need to use in a sentence so that writing it without spaces results in the given string. You need to print the actual sentence. If there are multiple solutions, print the one where the first word have minimum length. If there are still multiple solutions, print the one where the second word have the minimum length and so on and so on.\u003c/p\u003e\u003ch4\u003eJunior Task 3:\u003c/h4\u003e\u003cp\u003eJust a short description of it. You need to write a compiler for a programming language called \u0026quot;EASY\u0026quot;. The language uses 10 variables R0,R1,...,R9 and integer numbers from 0 to 999 inclusively. R0 is the value that the main function is called with and R9 contains the returning value. There are operations like MOV, ADD, SUB, MUL, DIV, MOD that you need to implement with the given variables or integer numbers from 0 to 999 inclusively. There are operators IFEQ(if equal), IFNEQ(if not equal), IFG(if greater), IFL(if less), IFGE(if greater or equal), IFLE(if less or equal) and an ENDIF operator for each of them. There are operators CALL and RET. CALL calls the main function recursively with a new value and RET returns a value. All R0,...,R8 are local, only R9 isn\u0027t since it stores the answer(the returned value). So it is all about coding and having strong nerves.\u003c/p\u003e\u003ch4\u003eSenior Task 1:\u003c/h4\u003e\u003cp\u003eIn this task you are given a string. You can mark a prefix of it and then by clicking a button your mark moves to the next occurence of the marked substring that does not overlap the current marked part. If there is no such an occurence, the mark stays at its place.\u003c/p\u003e\u003cp\u003eSome examples:\u003c/p\u003e\u003cp\u003e\u003cstrong\u003e1\u003c/strong\u003e 2312312312 -------\u0026gt; 123 \u003cstrong\u003e1\u003c/strong\u003e 2312312\u003c/p\u003e\u003cp\u003e\u003cstrong\u003e12\u003c/strong\u003e 312312312 -------\u0026gt; 123 \u003cstrong\u003e12\u003c/strong\u003e 312312\u003c/p\u003e\u003cp\u003e\u003cstrong\u003e123\u003c/strong\u003e 12312312 -------\u0026gt; 123 \u003cstrong\u003e123\u003c/strong\u003e 12312\u003c/p\u003e\u003cp\u003e\u003cstrong\u003e1231\u003c/strong\u003e 2312312 -------\u0026gt; 123123 \u003cstrong\u003e1231\u003c/strong\u003e 2\u003c/p\u003e\u003cp\u003e\u003cstrong\u003e12312\u003c/strong\u003e 312312 -------\u0026gt; 123123 \u003cstrong\u003e12312\u003c/strong\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003e123123\u003c/strong\u003e 12312 -------\u0026gt; \u003cstrong\u003e123123\u003c/strong\u003e 12312\u003c/p\u003e\u003cp\u003eYour task is to find the length and the starting position of the longest substring such that after pressing that button the marked part to move. \u003c/p\u003e\u003cp\u003eIn 15% of the tests 0 \u0026lt; \u003cstrong\u003en\u003c/strong\u003e \u0026lt; 1000\u003c/p\u003e\u003cp\u003eIn 25% of the tests 999 \u0026lt; \u003cstrong\u003en\u003c/strong\u003e \u0026lt; 10000\u003c/p\u003e\u003cp\u003eIn 60% of the tests 9999 \u0026lt; \u003cstrong\u003en\u003c/strong\u003e \u0026lt; 1000000\u003c/p\u003e\u003cp\u003eWhere \u003cstrong\u003en\u003c/strong\u003e is the length of the string.\u003c/p\u003e\u003ch4\u003eSenior Task 2\u003c/h4\u003e\u003cp\u003eYou are given a numeric system in base N where the first digits are: 1, 2, 3, ... N. Let them be c1, c2, c3, ... cN. You can write only 2-digit numbers. The task is to find the number of strictly increasing sequences in witch every digit is written twice and every number\u0027s first digit is less than its second. For example if N \u003d 3 there is only 1 sequences of this type: c1c2, c1c3, c2,c3. Find the answer modulo 987654321.\u003c/p\u003e\u003ch4\u003eSenior Task 3\u003c/h4\u003e\u003cp\u003eYou are given a matrix NxM. You need to delete all elements in the table. You can delete any side of the matrix. This operation will cost you the maximum number in the row/column. You need to find the minimum cost to delete the matrix. Example:\u003c/p\u003e\u003cp\u003eInput:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e3 4\n6 8 7 2\n3 0 9 1\n4 2 9 1\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eOutput:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e24\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eExplanation: One way you can delete the matrix for minimal cost: up, right, right, left, down\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e8 + 1 + 9 + 4 + 2 \u003d 24\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":["olympiad","tasks"]}}