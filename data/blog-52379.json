{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1496572141,"rating":-26,"authorHandle":"Hossam","modificationTimeSeconds":1512244981,"id":52379,"title":"\u003cp\u003eQuestion about problem F in ACM ICPC 2017.\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eMy question is, can we solve \u003ca href\u003d\"https://icpc.kattis.com/problems/posterize\"\u003ethis problem\u003c/a\u003e using algorithms like \u003ccode\u003ek-means\u003c/code\u003e? After all, all we\u0027re trying to do is \u003ccode\u003eminimize the error for each pixel with respect to the nearest cluster/value out of the K values\u003c/code\u003e, right? this idea hit me first before the straightforward dynamic programming solution which passes nicely here \u003ca href\u003d\"https://pastebin.com/nrmju5cS\"\u003elink\u003c/a\u003e, but when I tried this solution \u003ca href\u003d\"https://pastebin.com/kdj4rXku\"\u003elink\u003c/a\u003e I got \u003ccode\u003eWA on test #9\u003c/code\u003e and I have no idea if the error is from my implementation or that the algorithm doesn\u0027t even fit here, in which case I\u0027d very much like to know explicitly why?\u003c/p\u003e\u003cp\u003eThanks in advance.\u003c/p\u003e\u003c/div\u003e","tags":["acm icpc 2017","problem f","posterize","k-means algorithm","dp"]}}