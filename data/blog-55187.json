{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1508010767,"rating":0,"authorHandle":"bradyawn","modificationTimeSeconds":1508026391,"id":55187,"title":"\u003cp\u003eWhy does this solution fail on large inputs?\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eEDIT: Solved. It was not a problem with data structures, it was a logical error. I\u0027ve been doing this greedy problem, and my solution fails on test case 6. For small inputs it seems to work, but for large inputs it produces strange results.\u003c/p\u003e\u003cp\u003eProblem: \u003ca href\u003d\"/contest/854/problem/C\" title\u003d\"Codeforces Round 433 (Div. 2, based on Olympiad of Metropolises)\"\u003e854C - Planning\u003c/a\u003e\u003c/p\u003e\u003cp\u003eMy Solution: \u003ca href\u003d\"https://pastebin.com/MQBNBHEJ\"\u003ehttps://pastebin.com/MQBNBHEJ\u003c/a\u003e\u003c/p\u003e\u003cp\u003eSomeone else\u0027s accepted solution: \u003ca href\u003d\"/contest/854/submission/30195313\" title\u003d\"Submission 30195313 by InDpWeTrust\"\u003e30195313\u003c/a\u003e â€” They used a priority_queue while I used a sorted vector. This should achieve the same result, and I do not think it is the data structure that is the problem.\u003c/p\u003e\u003cp\u003eAny idea what the problem might be?\u003c/p\u003e\u003c/div\u003e","tags":["question","help"]}}