{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1415400416,"rating":5,"authorHandle":"FerranAlet","modificationTimeSeconds":1415400416,"id":14633,"title":"\u003cp\u003eMST in a time-changing graph\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eThe problem I\u0027ve run into is the following:\u003c/p\u003e\u003cp\u003eWe have a graph G in which the weights of its edges are upward parabolas varying in time. For each instant t, we could potentially calculate the Minimum Spanning Tree. Since parabolas are convex and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eMST\u003c/i\u003e(\u003ci\u003et\u003c/i\u003e)\u003c/span\u003e is a minimisation problem we can try to find the \u0027global\u0027 MST: from all the infinetely many times \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003et\u003c/i\u003e\u003c/span\u003e choose the \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eMST\u003c/i\u003e(\u003ci\u003et\u003c/i\u003e)\u003c/span\u003e with minimal weight. \u003c/p\u003e\u003cp\u003eI\u0027ve found an \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eE\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e3\u003c/sup\u003e·\u003ci\u003elog\u003c/i\u003e(\u003ci\u003eV\u003c/i\u003e)\u003c/span\u003e algorithm: two parabolas meet at most 2 times, thus the numbers of crossings of all weight parabolas is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eE\u003c/i\u003e(\u003ci\u003eE\u003c/i\u003e - 1) \u003d \u003ci\u003eO\u003c/i\u003e(\u003ci\u003eE\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e)\u003c/span\u003e. At all times between two consecutive crossings the order of the edges is the same; therefore the MST will be the same. Thus, we can compute it using Kruskal in \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eE\u003c/i\u003e·\u003ci\u003elogV\u003c/i\u003e)\u003c/span\u003e and then minimize for the edges found in \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eV\u003c/i\u003e)\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eCan you find a faster solution? [I don\u0027t know if it exists :) ]\u003c/p\u003e\u003cp\u003eThank you!\u003c/p\u003e\u003c/div\u003e","tags":["spanning tree","graphs","optimization"]}}