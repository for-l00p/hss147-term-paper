{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1463059230,"rating":7,"authorHandle":"yashi","modificationTimeSeconds":1463157710,"id":44836,"title":"\u003cp\u003eHelp With a DP Problem\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHello there, \u003cbr /\u003e \u003cbr /\u003e Several days ago I came across this problem \u003ca href\u003d\"//codeforces.com/gym/100712/attachments\"\u003e100712L â€” Alternating Strings II\u003c/a\u003e in gym \u003ca href\u003d\"//codeforces.com/gym/100712\"\u003e2015 ACM Amman Collegiate Programming Contest\u003c/a\u003e \u003cbr /\u003e \u003cbr /\u003e Given a string \u003cstrong\u003eS\u003c/strong\u003e consists of 0\u0027s and 1\u0027s only, and given \u003cstrong\u003eK\u003c/strong\u003e, we define the alternating string is that the string that starts with 0 and then alters 1 then 0... to the end of the string or vice versa starts with 1, for example, \u003ccode\u003e101\u003c/code\u003e,\u003ccode\u003e01\u003c/code\u003e,\u003ccode\u003e010\u003c/code\u003e are alternating strings, while \u003ccode\u003e110\u003c/code\u003e,\u003ccode\u003e0\u003c/code\u003e,\u003ccode\u003e01011\u003c/code\u003e are not. \u003cbr /\u003e \u003cbr /\u003e \u003cstrong\u003e1 \u0026lt;\u003d K \u0026lt;\u003d |S| \u0026lt;\u003d 100000\u003c/strong\u003e, you are to find the minimum number of cuts you have to make to break the string down into non-alternating strings that each of them has at most \u003cstrong\u003eK\u003c/strong\u003e digits . \u003cbr /\u003e\u003c/p\u003e\u003cp\u003eI tried to solve it this way, let \u003ccode\u003edp[i]\u003c/code\u003e be the minimum number of partitions that needed to split \u003cstrong\u003eS\u003c/strong\u003e as the problem states, assuming the indexing starts with \u003cstrong\u003e2\u003c/strong\u003e being the first character, and \u003cstrong\u003en\u003c/strong\u003e is the length of the string, then the answer to the problem will be \u003ccode\u003edp[n+1]-1\u003c/code\u003e \u003cbr /\u003e\u003c/p\u003e\u003cp\u003e\u003ccode\u003ealt[i]\u003c/code\u003e contains the length of the longest alternating string that ends at position \u003ccode\u003ei\u003c/code\u003e. \u003cbr /\u003e Now let \u003ccode\u003edp[1] \u003d 0\u003c/code\u003e and start iterating over the string from 2 to n+1, initially \u003ccode\u003edp[i] \u003d dp[i-1]+1\u003c/code\u003e that we made a cut at position \u003ccode\u003ei\u003c/code\u003e then let\u0027s look at the longest alternating string in the range \u003ccode\u003e[i-k,i]\u003c/code\u003e, let this value be \u003ccode\u003ee\u003c/code\u003e, if e is less than the length of the range \u003ccode\u003e[i-k,i]\u003c/code\u003e then for sure this range doesn\u0027t form an alternating string, so we look up the minimum value of \u003ccode\u003edp\u003c/code\u003e in the range \u003ccode\u003e[i-k-1,i-1]\u003c/code\u003e and update \u003ccode\u003edp[i]\u003c/code\u003e with \u003ccode\u003emin(dp[i],minValue+1)\u003c/code\u003e . \u003cbr /\u003e \u003cbr /\u003e Here\u0027s my \u003ca href\u003d\"http://pastebin.com/BUf3PsSV\"\u003ecode\u003c/a\u003e, I keep getting WA I tried to figure out where I\u0027m going wrong but no use, I would be so grateful if someone could indicate what\u0027s wrong with this algorithm/code .\u003c/p\u003e\u003c/div\u003e","tags":["dp","gym"]}}