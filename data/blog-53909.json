{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1502935524,"rating":52,"authorHandle":"_Na2Th","modificationTimeSeconds":1502937041,"id":53909,"title":"\u003cp\u003eSpeed up GCC Compile time\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eThis is a tip for C++ programmers who use the bits header to include every library from C++.\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e#include \u0026lt;bits/stdc++.h\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eEven more so with C++11, it may take some time for it to compile on your machine. I speak by experience: it took me more than 4s to compile every single time. This would drive me crazy during contests.\u003c/p\u003e\u003cp\u003eI know it works on linux with gcc. I would guess it works on any unix with gcc, but I really don\u0027t know.\u003c/p\u003e\u003cp\u003eThe solution I offer here is to \u003ca href\u003d\"https://en.wikipedia.org/wiki/Precompiled_header\"\u003eprecompile the headers\u003c/a\u003e, and avoid processing every header file every time. \u003c/p\u003e\u003cp\u003eI\u0027ll explain by example, showing how I would prepare for the upcoming contest, round 429. \u003c/p\u003e\u003cp\u003eThe first thing to do is to make the folder I\u0027ll leave my code in, and copy the template file I have into it.\u003c/p\u003e \u003cpre\u003e\u003ccode\u003emkdir cf429\ncp temp.cpp cf429/\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe template goes something like\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e#include \u0026quot;bits/stdc++.h\u0026quot;\n#define mt make_tuple\nusing namespace std;\n\nint main(){\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eNote the use of \u003ccode\u003e#include \u0026quot;bits/stdc++.h\u0026quot;\u003c/code\u003e instead of \u003ccode\u003e#include \u0026lt;bits/stdc++.h\u0026gt;\u003c/code\u003e. This is important, since it makes the compiler first look for the local copy, and only afterwards try to look in the libraries. This is what ensures that the code will run on the Online Judge and take advantage of the precompiled local version in my machine.\u003c/p\u003e\u003cp\u003eThen I would need to find where the header is. It is possible to do so by compiling a program which includes the library with the -H flag. I\u0027ll just compile my template.\u003c/p\u003e\u003cp\u003e\u003ccode\u003eg++ -H temp.cpp\u003c/code\u003e\u003c/p\u003e\u003cp\u003eThe first file is the header we are looking for. In my machine it was on \u003ccode\u003e/usr/include/c++/7.1.1/x86_64-pc-linux-gnu/bits\u003c/code\u003e.\u003c/p\u003e\u003cp\u003eSo I can just copy this file into the directory I am going to use during the competition and precompile it. I do it in a way that I do not have to change the header, so that I can submit the file normally.\u003c/p\u003e\u003cp\u003eTo be able to do so, create a bits directory, copy the file into it, and \u003cem\u003ecompile the header with the same flags you use\u003c/em\u003e. In the code below, remember to change the directory to the one you found with the \u003ccode\u003eg++ -H\u003c/code\u003e command.\u003c/p\u003e \u003cpre\u003e\u003ccode\u003emkdir bits\ncp /usr/include/c++/7.1.1/x86_64-pc-linux-gnu/bits/stdc++.h bits/\ncd bits\ng++ -std\u003dc++11 stdc++.h\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eNow, just to ensure that I\u0027ll will have the same flags, I use a Makefile.\u003c/p\u003e \u003cpre\u003e\u003ccode\u003ecd ..\necho \u0026quot;CXXFLAGS \u003d --std\u003dc++11\u0026quot; \u0026gt; Makefile\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eand done! I can just wait for the contest to begin, and compile my programs much faster with a simple \u003ccode\u003emake A\u003c/code\u003e.\u003c/p\u003e\u003cp\u003eNote that you can freely modify the local header copy, removing some stuff that you deem useless, to make it compile even faster. Also, you can then just copy this local version into the directories used in the competition. With this special local version, it is quite easy even to make a script that does the set up mentioned above.\u003c/p\u003e\u003c/div\u003e","tags":[]}}