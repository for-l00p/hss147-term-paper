{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1440175362,"rating":0,"authorHandle":"__builtin__wolfy","modificationTimeSeconds":1440175439,"id":19898,"title":"\u003cp\u003eTransposing Sub-matrices \u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eI was thinking about the following problem (I don\u0027t know if it\u0027s out there already) and wanted to know how people here would approach it.\u003c/p\u003e\u003cp\u003eYou are given a N x M matrix and Q (say these values are \u0026lt;\u003d 1000) transpose operations to execute each of which is a square sub-matrix to be transposed. Print the matrix after executing all operations.\u003c/p\u003e\u003cp\u003eCan we do better than brute force? My thoughts so far are: store the matrix as a list of diagonals. Transposing a sub-matrix is the same as reversing contiguous sub-arrays of some diagonals. The reversing can be done efficiently using lazy propagation but we still have to iterate over the diagonals of the sub-matrix. Can we do better?\u003c/p\u003e\u003c/div\u003e","tags":[]}}