{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1423025107,"rating":185,"authorHandle":"DarthPrince","modificationTimeSeconds":1424071001,"id":16206,"title":"\u003cp\u003eValentine Algorithm cUp 2015\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eAre you in love with algorithms? If you are don\u0027t miss this round and be algorithm\u0027s valentine ;)\u003c/p\u003e\u003cp\u003e\u003cimg alt\u003d\" \" src\u003d\"//assets.codeforces.com/images/girl-and-laptop.jpg\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003eOn the night before valentine\u0027s day (\u003ca href\u003d\"http://www.timeanddate.com/worldclock/fixedtime.html?day\u003d13\u0026amp;month\u003d2\u0026amp;year\u003d2015\u0026amp;hour\u003d18\u0026amp;min\u003d30\u0026amp;sec\u003d0\u0026amp;p1\u003d166\"\u003eexact time\u003c/a\u003e), Valentine Algorithm cUp 2015 is going to take place. \u003c/p\u003e\u003cp\u003eThere will be 6 problems and 3 hours to solve them. All of them are written by me(\u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/PrinceOfPersia\" title\u003d\"Candidate Master PrinceOfPersia\"\u003ePrinceOfPersia\u003c/a\u003e).\u003c/p\u003e\u003cp\u003eThis competition is like surprise languages but too different. 3 days before the contest, I will publish tutorial of 5 new algorithm languages(not programming languages) with their compiler codes. Each language is going to be really simple to learn and have at most 6 or 7 commands (they\u0027re not like programming languages).\u003c/p\u003e\u003cp\u003eYour program should print the code written in the language the problem says and checker will run it (pay attention that inputs are encoded, don\u0027t try to read form input, just print the code). Don\u0027t use unnecessary wjitespaces.\u003c/p\u003e\u003cp\u003eEach command of a language, will have a number, shown by \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ew\u003c/i\u003e(\u003ci\u003ex\u003c/i\u003e)\u003c/span\u003e called order. There will be a counter \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ecnt\u003c/i\u003e \u003d 0\u003c/span\u003e (initially), every time your code calls this command, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ecnt\u003c/i\u003e\u003c/span\u003e increases by \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e. The order of your code equals the final value of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ecnt\u003c/i\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eEach problem has a limit for your code\u0027s order.\u003c/p\u003e\u003cp\u003eIf your code gets CE or OLE (order limited exceeded) or WA, you will receive \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eWrong\u003c/i\u003e \u003ci\u003eanswer\u003c/i\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eExample :\u003c/p\u003e\u003cp\u003eLanguage (named EXM) : This language is built to process on an integer. There are two valid commands :\u003c/p\u003e \u003col\u003e   \u003cli\u003e\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eM\u003c/i\u003e \u003ci\u003ex\u003c/i\u003e\u003c/span\u003e : multiply the number by \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e. (Order : \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ew\u003c/i\u003e(\u003ci\u003ex\u003c/i\u003e)\u003c/span\u003e ).\u003c/li\u003e   \u003cli\u003e\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eI\u003c/i\u003e \u003ci\u003ex\u003c/i\u003e\u003c/span\u003e : increase the number by \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e. (Order : \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ew\u003c/i\u003e(1)\u003c/span\u003e ).\u003c/li\u003e \u003c/ol\u003e\u003cp\u003eYour program returns the final value of that number.\u003c/p\u003e\u003cp\u003eYour task is given number \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e, the return value of your code must be number \u003cspan class\u003d\"tex-span\"\u003e2\u003ci\u003en\u003c/i\u003e + 1\u003c/span\u003e .\u003c/p\u003e\u003cp\u003eCode in \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eEXM\u003c/i\u003e\u003c/span\u003e:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eM 2\nI 1\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eC++ code (the code you will submit in submit page):\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eprintf(\u0026quot;M 2\\nI 1\\n\u0026quot;);\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eYour code\u0027s order will be \u003cspan class\u003d\"tex-span\"\u003e2 + 1 \u003d 3\u003c/span\u003e .\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eUPD:\u003c/strong\u003e You can download languages tutorial and their compilers \u003ca href\u003d\"http://aesoi.gigfa.com/val.zip\"\u003ehere\u003c/a\u003e. \u003c/p\u003e\u003cp\u003eAttention: Compile the code for each language, in Windows : \u003ccode\u003eg++ -o lang lang.cpp -O2 -std\u003dc++0x\u003c/code\u003e and in Mac and Linux \u003ccode\u003eg++ -o lang.out lang.cpp -O2 -std\u003dc++0x\u003c/code\u003e.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eUsing in Windows:\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eFor running your code that is saved in a file like \u003ccode\u003ex.txt\u003c/code\u003e, use exactly \u003ccode\u003elang x.txt\u003c/code\u003e in cmd and if you want debug mode enabled, use \u003ccode\u003elang x.txt -d\u003c/code\u003e (not \u003ccode\u003elang -d x.txt\u003c/code\u003e).\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eUsing in Mac OS X or Linux:\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eFor running your code that is saved in a file like \u003ccode\u003ex.txt\u003c/code\u003e, use exactly \u003ccode\u003e./lang.out x.txt\u003c/code\u003e in terminal and if you want debug mode enabled, use \u003ccode\u003e./lang.out x.txt -d\u003c/code\u003e (not \u003ccode\u003e./lang.out -d x.txt\u003c/code\u003e).\u003c/p\u003e\u003cp\u003eSample problem: \u003c/p\u003e\u003cp\u003eWrite a program in Prolan that given a string \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e\u003c/span\u003e containing only \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/span\u003e deletes all \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/span\u003es and converts all \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/span\u003es to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ed\u003c/i\u003e\u003c/span\u003e. Order shouldn\u0027t exceed \u003cspan class\u003d\"tex-span\"\u003e10\u003csup class\u003d\"upper-index\"\u003e6\u003c/sup\u003e\u003c/span\u003e (\u003cspan class\u003d\"tex-span\"\u003e1 ≤ |\u003ci\u003es\u003c/i\u003e| ≤ 100\u003c/span\u003e).\u003c/p\u003e\u003cp\u003eMy code:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e(b,)\n(a,d)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eIf you have any question, feel free to ask.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eUPD2:\u003c/strong\u003e Scoring will be \u003cstrong\u003e500-1000-1500-2000-2500-3000\u003c/strong\u003e.\u003c/p\u003e\u003cp\u003eBy the way, the main characters of each problem is different from other problems. Actually, for each problem the main characters are an imaginary(or not!) couple :)\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eUPD3:\u003c/strong\u003e IDXT\u0027s compiler had some bug, you can download the correct source \u003ca href\u003d\"http://paste.ubuntu.com/10207868/\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eUPD4:\u003c/strong\u003e For people who want to practice, the new archive(including languages tutorials and bugless compilers) can be found \u003ca href\u003d\"http://artintel.ugig.ir/val.zip\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\u003c/div\u003e","tags":["valentine","algorithm-cup","gym","fun"]}}