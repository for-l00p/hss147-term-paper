{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1507487895,"rating":49,"authorHandle":"omgcoin","modificationTimeSeconds":1507565754,"id":55078,"title":"\u003cp\u003eAfter two years of consistent training I still can\u0027t solve Div2 C problems. How to train more efficiently?\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eIn August of 2016, I wrote quite detailed \u003ca href\u003d\"//codeforces.com/blog/entry/46766\"\u003epost\u003c/a\u003e about my training routines.\u003c/p\u003e\u003cp\u003eIn very short, in that post, I said that I spend minimum \u003cstrong\u003e1.5 hours thinking\u003c/strong\u003e on a typical Div2 C problem (sometimes even longer and in this case it\u0027s usually lasts several days). Then I look at an editorial and often it\u0027s not clear to me what problems\u0027s authors are talking about. After thinking on an editorial and comments for a few hours, I usually able to understand a solution from comments. As I gathered statistics about my training at that time, it\u0027s showed that I solved \u003cstrong\u003e26\u003c/strong\u003e hard (i.e. Div2 C) problems in period of \u003cstrong\u003e93 days\u003c/strong\u003e. I wrote that I have approximately 1 free hour per day on average.\u003c/p\u003e\u003cp\u003eThat post gathered some attention (probably because I\u0027ve collected detailed statistics about my daily training) and I received several responses from Div1 members including red coders.\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"//codeforces.com/blog/entry/46766?#comment-312173\"\u003eSome participants advised\u003c/a\u003e to solve \u003cstrong\u003e500\u003c/strong\u003e problems on \u003cstrong\u003eTimus OJ\u003c/strong\u003e since Timus doesn\u0027t allow you to look for test cases and don\u0027t provide editorials. There is an implicit rule on Timus — \u0026quot;solve it by yourself\u0026quot;. On Timus you can train your patience and ability to change view on a problem instead of looking at test cases and editorials. As I understood you have to try to solve a problem, if you don\u0027t have a progress then switch to a next problem and return back to problems you couldn\u0027t solve after a few days/weeks/months.\u003c/p\u003e\u003cp\u003eI liked that advice and worked in this direction for \u003ca href\u003d\"http://acm.timus.ru/author.aspx?id\u003d95210\u0026amp;sort\u003ddifficulty\u0026amp;locale\u003den\"\u003esome time\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eIt partially helped me to learn how to be more flexible and change view on a problem after getting stuck and getting WA on your submissions.\u003c/p\u003e\u003cp\u003eSometimes it was very pleasant experience to return back to a problem I couldn\u0027t solve a few months ago and quickly write a concise and clean solution which got accepted.\u003c/p\u003e\u003cp\u003eThe problem is that my progress on Timus slowed down significantly after I\u0027ve solved ~160 easiest problems.\u003c/p\u003e\u003cp\u003eI\u0027ve got \u003cstrong\u003eanother advice\u003c/strong\u003e (from a person who solved \u0026gt;500 on Timus): switch to a next problem if you don\u0027t have any ideas \u003cstrong\u003e20 minutes\u003c/strong\u003e after you read a problem statement.\u003c/p\u003e\u003cp\u003eIt didn\u0027t work for me because in some cases I couldn\u0027t switch to a next problem since I thought I may be so close to solve it and \u003cstrong\u003eI continued to work hard\u003c/strong\u003e on a problem \u003cstrong\u003efor hours\u003c/strong\u003e, and in other cases I switched to a next problem \u003cstrong\u003eafter ~30 minutes\u003c/strong\u003e then \u003cstrong\u003eswitched again\u003c/strong\u003e to another problem after another ~30 minutes and so forth and \u003cstrong\u003eagain in both cases I ended up not solving a single problem in a several hours\u003c/strong\u003e (usually these hours were during several days).\u003c/p\u003e\u003cp\u003eIn \u003ca href\u003d\"//codeforces.com/blog/entry/46766?#comment-312269\"\u003eanother comment to my post\u003c/a\u003e I\u0027ve been told that \u003cstrong\u003e~26 solved problems in 93 days is absurdly small quantity\u003c/strong\u003e. And I need to solve \u003cstrong\u003eat least 500 hard problems to improve\u003c/strong\u003e and at my current pace it may take very, very long time.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eSince I have strong tendency to linger on a problem way too long\u003c/strong\u003e, I decided to force myself to look at an editorial for Div2 C problems after I got stuck for more than 30 minutes. Again it didn\u0027t work for me since I often couldn\u0027t understand an editorial for hours. So attempting \u003cstrong\u003eto understand an editorial often is as challenging as solving a problem itself\u003c/strong\u003e.\u003c/p\u003e\u003cp\u003eOf course, after I understood an editorial (usually after sudden strike of \u003cstrong\u003eaha moment\u003c/strong\u003e), everything became very simple and straightforward. The problem is that I don\u0027t have a time machine to explain it myself a few hours earlier!\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eThen I tried to go to a next problem anyway\u003c/strong\u003e if I couldn\u0027t understand an editorial \u003cstrong\u003ein 30 minutes\u003c/strong\u003e but I found it highly unsatisfying since \u003cstrong\u003eI just jumped from a problem to a problem without getting anything done\u003c/strong\u003e.\u003c/p\u003e\u003cp\u003eSome suggested that if I can\u0027t understand an editorial for more than an hour then Div2 C problems are way too hard for me at my current level and I should focus on easier problems. I\u0027ve tried to just solve Div2 B problems to improve my speed (since it\u0027s still take some time for me to came up with a correct solution) but after some time I found it quite boring and unsatisfying as I don\u0027t learn anything new.\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"//codeforces.com/blog/entry/46766?#comment-312202\"\u003eSome commented\u003c/a\u003e that I have a hard time understanding an editorial because I\u0027m probably not familiar with some techniques like DP. This is certainly not true because \u003cstrong\u003emost of the time there is absolutely nothing I didn\u0027t know in order to solve a problem I couldn\u0027t solve\u003c/strong\u003e. It\u0027s still a complete mystery to me why I can\u0027t solve really easy problems for which I know absolutely everything to solve them.\u003c/p\u003e\u003cp\u003eQuite often after I have \u0026quot;aha moment\u0026quot; I wonder why I couldn\u0027t came up with a solution since a problem was so simple and straightforward.\u003c/p\u003e\u003cp\u003eI have an impression that some red coders already forgot what it\u0027s like to get stuck on easy problems for which you know absolutely everything you to solve them. No wonder why they keep saying — just practice more and learn new techniques.\u003c/p\u003e\u003cp\u003eIt clearly doesn\u0027t make sense to say \u0026quot;just practice more\u0026quot; since \u003cstrong\u003eit may take literally forever if you are doing training in a wrong way!\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eI\u0027ve spent some time to learn advanced algorithms like KMP, Max-Flow, Segment Tree but it didn\u0027t help me since despite of my good understanding I forgot all of them as they do not appear among Div2 C problems.\u003c/p\u003e\u003cp\u003eI also tried to solve harder than Div2 C problems (i.e. Div2 D for example). While it was quite interesting experience it usually take even more time than trying to solve typical Div2 C problems.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eAny insights on how to train more efficiently?\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eP.S. I\u0027ve already read articles like \u003ca href\u003d\"https://lukipuki.github.io/contest-wiki/get-better.html\"\u003eHow to get better?\u003c/a\u003e, \u003ca href\u003d\"//codeforces.com/blog/entry/17842\"\u003eThe \u0027science\u0027 of training in competitive programming\u003c/a\u003e, \u003ca href\u003d\"//codeforces.com/blog/entry/20548\"\u003eHow to come up with the solutions: techniques\u003c/a\u003e and others. \u003cstrong\u003eI think I missed something and as a result I\u0027m training extremely inefficiently.\u003c/strong\u003e\u003c/p\u003e\u003c/div\u003e","tags":["training"]}}