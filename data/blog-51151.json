{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1490222996,"rating":11,"authorHandle":"bssanches","modificationTimeSeconds":1490226418,"id":51151,"title":"\u003cp\u003eAula 2 (Inferno na terra)\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eOlás pessoas,\u003c/p\u003e\u003cp\u003eSegue um resumão da aula:\u003c/p\u003e\u003ch4\u003eComando \u0026quot;if\u0026quot;\u003c/h4\u003e\u003cp\u003eComo utilizar o \u0026quot;se não\u0026quot; e o \u0026quot;se não se\u0026quot; (Quando a condição do \u003ccode\u003eif\u003c/code\u003e der falso, o \u0026quot;se não\u0026quot; e o \u0026quot;se não se\u0026quot; serão testados em ordem)\u003c/p\u003e\u003cp\u003eExemplo:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e#include \u0026lt;cstdio\u0026gt;\n\nint main()\n{\n     int A;\n     scanf(\u0026quot;%d\u0026quot;, \u0026amp;A);\n     if (A \u0026gt; 10)    //testa primeiro esse\n     {\n        printf(\u0026quot;A eh maior que 10\u0026quot;);\n     }\n     else if(A \u0026lt; 10) //se o primeiro if for **falso** (A não é maior que 10), checa esse\n     {\n        printf(\u0026quot;A eh menor que 10\u0026quot;);\n     }\n     else    //se o primeiro e o segundo forem falsos (A não é maior que 10 nem menor), então executa esse\n     {\n        printf(\u0026quot;A eh igual a 10\u0026quot;);\n     }\n     return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eLembrando que uma vez que a condição de um \u003ccode\u003eif\u003c/code\u003e é verdadeira, a execução entra dentro do \u003ccode\u003eif\u003c/code\u003e e não continua testando os outros \u003ccode\u003eelse if\u003c/code\u003e e \u003ccode\u003eelse\u003c/code\u003e (A não ser que um novo \u003ccode\u003eif\u003c/code\u003e apareça embaixo)\u003c/p\u003e\u003cp\u003eExemplo:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e#include \u0026lt;cstdio\u0026gt;\n\nint main()\n{\n     int A \u003d 9;\n     if (A \u0026gt; 10) //não entra nesse, A é menor que 10   \n     {\n        printf(\u0026quot;A eh maior que 10\u0026quot;);\n     }\n     else if(A \u0026lt; 10) //Entra nesse, A é menor que 10\n     {\n        printf(\u0026quot;A eh menor que 10\u0026quot;);\n     }\n     else //Não entra nesse pois ja entrou no else if de cima\n     {\n        printf(\u0026quot;A eh igual a 10\u0026quot;);\n     }\n\n     if (A \u0026lt; 10) //entra nesse pois eh um novo if\n     {\n         printf(\u0026quot;Mais um print\u0026quot;);\n     }\n     return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003ch4\u003eTipo long long\u003c/h4\u003e\u003cp\u003eO \u003ccode\u003elong long\u003c/code\u003e é outro tipo de variável que guarda números inteiros, assim como o \u003ccode\u003eint\u003c/code\u003e. A diferença entre o \u003ccode\u003eint\u003c/code\u003e e o \u003ccode\u003elong long\u003c/code\u003e está na quantidade de valores que eles conseguem armazenar.\u003c/p\u003e\u003cp\u003eCapacidade de armazenamento:\u003c/p\u003e \u003cul\u003e   \u003cli\u003e\u003ccode\u003eint\u003c/code\u003e \u003d [-2 * 10^9, 2 * 10^9]\u003c/li\u003e   \u003cli\u003e\u003ccode\u003elong long\u003c/code\u003e \u003d [-9 * 10^18, 9 * 10^18]\u003c/li\u003e \u003c/ul\u003e\u003cp\u003e(Valores aproximados)\u003c/p\u003e\u003cp\u003ePara ler um \u003ccode\u003elong long\u003c/code\u003e utilizem \u003ccode\u003e%lld\u003c/code\u003e\u003c/p\u003e\u003cp\u003ePara iniciar um valor fixo pra uma variável, utilizem o sufixo \u003ccode\u003eLL\u003c/code\u003e\u003c/p\u003e\u003cp\u003eExemplo:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e#include \u0026lt;cstdio\u0026gt;\n\nint main()\n{\n    long long a;\n    long long b \u003d 100000000000LL;\n    scanf(\u0026quot;%lld\u0026quot;,\u0026amp;a);\n    printf(\u0026quot;%lld\\n\u0026quot;,a + b);\n    return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003ch4\u003eComando \u0026quot;while\u0026quot;\u003c/h4\u003e\u003cp\u003eComo utilizar o \u003ccode\u003ewhile\u003c/code\u003e:\u003c/p\u003e\u003cp\u003eO \u003ccode\u003ewhile\u003c/code\u003e eh um loop, ou seja, ele fica repetindo até que sua condição seja falsa (Uma forma de olhar o \u003ccode\u003ewhile\u003c/code\u003e é como um \u003ccode\u003eif\u003c/code\u003e que se repete)\u003c/p\u003e\u003cp\u003eexemplo:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e//Programa que imprime todos os números de 0 a 9\n#include \u0026lt;cstdio\u0026gt;\n\nint main()\n{\n    int i \u003d 0; //não esqueçam de inicializar o contador\n    while (i \u0026lt; 10) //Vai repetir o que ta dentro do while até que o i seja igual a 10\n    {\n        printf(\u0026quot;%d\\n\u0026quot;,i);\n        i \u003d i + 1; //incrementa o contador a cada vez que o loop executa\n    }\n    return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eoutro exemplo:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e//Programa que soma todos os pares até um dado n\n#include \u0026lt;cstdio\u0026gt;\n\nint main()\n{\n    int n, sum \u003d 0;\n    scanf(\u0026quot;%d\u0026quot;,\u0026amp;n);\n    int i \u003d 0; //não esqueçam de inicializar o contador\n    while (i \u0026lt;\u003d n) //Vai repetir o que ta dentro do while até que o i seja maior que n\n    {\n        sum \u003d sum + i;\n        i \u003d i + 2; //Incrementa o contador a cada vez que o loop executa, de dois em dois\n    }\n    printf(\u0026quot;%d\\n\u0026quot;,sum);\n    return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003ch4\u003eComando \u0026quot;for\u0026quot;\u003c/h4\u003e\u003cp\u003eO \u003ccode\u003efor\u003c/code\u003e é um \u003ccode\u003ewhile\u003c/code\u003e de maneira mais organizada.\u003c/p\u003e\u003cp\u003eO formato é: \u003ccode\u003efor(valor_inicial; condição_de_parada; valor_do_incremento)\u003c/code\u003e\u003c/p\u003e\u003cp\u003eExemplo:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e#include \u0026lt;cstdio\u0026gt;\n\nint main()\n{\n    int n;\n    scanf(\u0026quot;%d\u0026quot;,\u0026amp;n);\n    //começa i com 0, a cada iteração soma 1 no i e para quando o i for maior que n\n    for (int i \u003d 0; i \u0026lt;\u003d n; i \u003d i + 1) \n    {\n        printf(\u0026quot;%d\\n\u0026quot;,i);\n    }\n    return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eOutro exemplo:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e#include \u0026lt;cstdio\u0026gt;\n\nint main()\n{\n    int n;\n    scanf(\u0026quot;%d\u0026quot;,\u0026amp;n);\n    for (int i \u003d 1; i \u0026lt;\u003d n; i \u003d i * 2) //começa i com 1, a cada iteração dobra o valor de i e para quando o i for maior que n\n    {\n        printf(\u0026quot;%d\\n\u0026quot;,i);\n    }\n    return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eÉ possível também, omitir o valor inicial e declara-lo antes do \u003ccode\u003efor\u003c/code\u003e:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e//programa que soma todos os números pares de 1 a n\n#include \u0026lt;cstdio\u0026gt;\n\nint main()\n{\n    int n;\n    scanf(\u0026quot;%d\u0026quot;,\u0026amp;n);\n    int i \u003d 1;\n    int soma \u003d 0;\n    //começa i com 1, a cada iteração aumenta i em 2 e para quando o i for maior que n\n    for (; i \u0026lt;\u003d n; i \u003d i + 2)\n    {\n        soma \u003d soma + i;\n    }\n    printf(\u0026quot;%d\\n\u0026quot;,soma);\n    return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eNão esqueçam de definir bem sempre as 3 coisas que fazem com que o \u003ccode\u003efor\u003c/code\u003e e o \u003ccode\u003ewhile\u003c/code\u003e funcionem: O valor inicial, a condição de parada e o valor do incremento a cada iteração.\u003c/p\u003e\u003ch4\u003eVetores\u003c/h4\u003e\u003cp\u003eVetores são varias variáveis declaradas de uma única vez, um exemplo gráfico de vetor a seguir (Cada bloquinho é como se fosse uma única váriavel, e juntos eles compõem o vetor)\u003c/p\u003e\u003cp\u003e\u003cimg alt\u003d\" \" src\u003d\"/predownloaded/19/27/1927d4a68cf517159b9de0c3525211f35de06fb9.gif\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003eExemplo de manipulação de vetor:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e#include \u0026lt;cstdio\u0026gt;\n\nint main()\n{\n    int v[4];\n    scanf(\u0026quot;%d%d%d%d\u0026quot;,\u0026amp;v[0], \u0026amp;v[1], \u0026amp;v[2], \u0026amp;v[3]);\n    printf(\u0026quot;%d %d %d %d\\n\u0026quot;,v[0], v[1], v[2], v[3]);\n    return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eOutro exemplo de manipulação de vetor:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e//programa que le N números e imprime N números\n#include \u0026lt;cstdio\u0026gt;\n\nint main()\n{\n    int n;\n    scanf(\u0026quot;%d\u0026quot;,\u0026amp;n);\n    int v[10000];\n    for (int i \u003d 0; i \u0026lt; n; i \u003d i + 1)\n    {\n        scanf(\u0026quot;%d\u0026quot;, \u0026amp;v[i]);\n    }\n    for (int i \u003d 0; i \u0026lt; n; i \u003d i + 1)\n    {\n        printf(\u0026quot;%d\\n\u0026quot;, v[i]);\n    }\n    return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003ch4\u003eStrings\u003c/h4\u003e\u003cp\u003eStrings: Em c++ vetores de chars também recebem o nome de strings, e existem maneiras especiais de lidar com eles:\u003c/p\u003e \u003cul\u003e   \u003cli\u003eUma forma especial de se ler e imprimir um vetor de char é utilizando o \u003ccode\u003e%s\u003c/code\u003e\u003c/li\u003e   \u003cli\u003eVale lembrar que quando você lê uma linha da entrada com \u003ccode\u003e%s\u003c/code\u003e, a leitura vai parar no primeiro espaço ou \u003ccode\u003e\\n\u003c/code\u003e encontrado!\u003c/li\u003e   \u003cli\u003eQuando se lê uma sequência de caracteres da entrada utilizando o \u003ccode\u003e%s\u003c/code\u003e, um caracter especial sera adicionado na ultima posição, o \u003ccode\u003e\\0\u003c/code\u003e. Esse caracter indica o fim da string (Então lembrem de colocar um valor a mais no tamanho do vetor pra comportar o \u003ccode\u003e\\0\u003c/code\u003e!)\u003c/li\u003e   \u003cli\u003eNão utilizar \u0026amp; no scanf quando for utilizar o \u003ccode\u003e%s\u003c/code\u003e\u003c/li\u003e   \u003cli\u003eLembrar de incluir o  (No windows funciona sem incluir, mas não ira funcionar no linux! Então incluam sempre)\u003c/li\u003e \u003c/ul\u003e \u003cpre\u003e\u003ccode\u003e#include \u0026lt;cstdio\u0026gt;\n#include \u0026lt;cstring\u0026gt;\n\nint main()\n{\n    char v[4];//cuidado, nesse vetor soh cabem 3 letras, uma vez que a ultima eh um \\0 \n    scanf(\u0026quot;%s\u0026quot;, v);\n    printf(\u0026quot;%s\\n\u0026quot;,v);\n    return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eÉ possível ler um vetor de chars, letra por letra também, mas dai para imprimir também sera necessário imprimir letra a letra (A não ser que você adicione um \u003ccode\u003e\\0\u003c/code\u003e manualmente ao fim da string)\u003c/p\u003e\u003cp\u003eExemplo:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e#include \u0026lt;cstdio\u0026gt;\n#include \u0026lt;cstring\u0026gt;\n\nint main()\n{\n    char v[4];//cuidado, nesse vetor só cabem 3 letras, uma vez que a ultima eh um \\0 \n    for (int i \u003d 0; i \u0026lt; 3; i \u003d i + 1)\n    {\n        scanf(\u0026quot;%c\u0026quot;, \u0026amp;v[i]);\n    }\n\n    printf(\u0026quot;\\nSem %%s\\n\u0026quot;);\n    for (int i \u003d 0; i \u0026lt; 3; i \u003d i + 1)//imprime letra a letra\n    {\n        printf(\u0026quot;%c\u0026quot;, v[i]);\n    }\n    printf(\u0026quot;\\n\\n\u0026quot;);\n\n    v[3] \u003d \u0027\\0\u0027; //manualmente coloca o \\0 ao fim da string\n    printf(\u0026quot;Com %%s\\n\u0026quot;);\n    printf(\u0026quot;%s\\n\u0026quot;,v);\n\n    return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eExiste também uma função chamada \u003ccode\u003estrlen\u003c/code\u003e para descobrir o tamanho da string:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e#include \u0026lt;cstdio\u0026gt;\n#include \u0026lt;cstring\u0026gt;\n\nint main()\n{\n    char v[4];//cuidado, nesse vetor soh cabem 3 letras, uma vez que a ultima eh um \\0 \n    scanf(\u0026quot;%s\u0026quot;, v);\n    int sz \u003d strlen(v);\n    printf(\u0026quot;Tamanho da string: %d\\n\u0026quot;,sz);\n    for (int i \u003d 0; i \u0026lt; sz; i \u003d i + 1)\n    {\n        printf(\u0026quot;%c\\n\u0026quot;, v[i]);\n    }\n    return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eAcho que é isso, qualquer duvida mandem mensagem no fb ou postem no grupo! Abraços!\u003c/p\u003e\u003c/div\u003e","tags":[]}}