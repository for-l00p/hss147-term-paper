{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1518792925,"rating":116,"authorHandle":"shivamg_isc","modificationTimeSeconds":1519033122,"id":57818,"title":"\u003cp\u003eInvitation to CodeRed- 2018\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e\u003cimg alt\u003d\" \" src\u003d\"/predownloaded/db/f7/dbf7dd2726ef0b40fe4e4dc5905da8b36ba36fba.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003eHello Codeforces!\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://aparoksha.org/\"\u003eAparoksha\u003c/a\u003e presents to you an all-new flagship event \u003cstrong\u003eCodeRed\u003c/strong\u003e in association with ACM.\u003cbr /\u003eIf you have the appetite for algorithmic problem solving, then don\u0027t miss it out! \u003c/p\u003e\u003cp\u003eIt will be a 5-hour long \u003cstrong\u003eteam event\u003c/strong\u003e with a maximum size of the team being \u003cstrong\u003e3 members\u003c/strong\u003e.\u003cbr /\u003eThe preliminary round will be held on Codechef, and the onsite round will be held during Aparoksha. \u003c/p\u003e\u003cp\u003eThe total prize money is worth \u003cstrong\u003eINR 50,000\u003c/strong\u003e. The \u003cstrong\u003ebest 40 teams\u003c/strong\u003e will make it to the onsite round.\u003cbr /\u003eAlso, top \u003cstrong\u003e2\u003c/strong\u003e teams in the \u003cstrong\u003eonline round\u003c/strong\u003e will get \u003cstrong\u003eINR 3000 and 2000\u003c/strong\u003e respectively, along with Codechef Laddus.\u003cbr /\u003eAll teams making it to the onsite round will get CodeRed T-shirts. \u003c/p\u003e\u003cp\u003eContest link is here — \u003ca href\u003d\"https://www.codechef.com/CODR2018\"\u003eCodeRed 2018\u003c/a\u003e\u003cbr /\u003eThe problem set comprises \u003cstrong\u003e6 problems\u003c/strong\u003e of varying difficulty level. \u003c/p\u003e\u003cp\u003eSo be ready to have a nail-biting experience on \u003ca href\u003d\"https://www.timeanddate.com/worldclock/fixedtime.html?msg\u003dCodeRed+Preliminary+Round\u0026amp;iso\u003d20180217T21\u0026amp;p1\u003d2408\u0026amp;ah\u003d3\"\u003eFebruary 17, 2018 at 21:00 IST\u003c/a\u003e\u003cbr /\u003eRegister right now at the link given \u003ca href\u003d\"https://docs.google.com/forms/d/e/1FAIpQLScM9vW6-OmqgBR3cy41rzv9rpxvUr0anb2At7GjF4oZ_2Nj3g/viewform\"\u003ehere\u003c/a\u003e to be eligible for prize money. \u003c/p\u003e\u003cp\u003eThe problems have been set by me (\u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/shivamg_isc\" title\u003d\"Expert shivamg_isc\"\u003eshivamg_isc\u003c/a\u003e) and tested by Shiv Dhingra (\u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/lucifer2709\" title\u003d\"Candidate Master lucifer2709\"\u003elucifer2709\u003c/a\u003e).\u003cbr /\u003eFacebook Page — \u003ca href\u003d\"https://www.facebook.com/CodeRedIIITA/\"\u003eCodeRed Facebook Page\u003c/a\u003e \u003c/p\u003e\u003cp\u003eSome of our previous contests — \u003ca href\u003d\"https://www.codechef.com/ALKH2017/\"\u003eAlkhwarizm 2017\u003c/a\u003e and \u003ca href\u003d\"https://www.codechef.com/HFCQ2016\"\u003eHumbleFool Cup 2016\u003c/a\u003e. \u003c/p\u003e\u003cp\u003eGreat Prizes and Glory await you in the Coding Arena. CODE ON! \u003c/p\u003e\u003cp\u003e\u003cstrong\u003eUpd 1:-\u003c/strong\u003e Contest is about to begin in almost 1 hour. Best of luck :) \u003c/p\u003e\u003cp\u003e\u003cstrong\u003eUpd 2:-\u003c/strong\u003e The contest is over, and was a great success with about 900 teams registering for the contest.\u003cbr /\u003eThanks for the overwhelming response. :D \u003c/p\u003e\u003cp\u003eCongratulations to the winners :D \u003c/p\u003e \u003col\u003e   \u003cli\u003eMutability — \u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/uwi\" title\u003d\"International Grandmaster uwi\"\u003euwi\u003c/a\u003e\u003c/li\u003e   \u003cli\u003eTwin Prime — \u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/jtnydv25\" title\u003d\"Grandmaster jtnydv25\"\u003ejtnydv25\u003c/a\u003e, \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/HackerTina\" title\u003d\"Candidate Master HackerTina\"\u003eHackerTina\u003c/a\u003e\u003c/li\u003e   \u003cli\u003eAccidently in Warsaw — \u003ca class\u003d\"rated-user user-orange\" href\u003d\"/profile/Mex-Mans\" title\u003d\"Master Mex-Mans\"\u003eMex-Mans\u003c/a\u003e, \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/YerzhanU\" title\u003d\"Candidate Master YerzhanU\"\u003eYerzhanU\u003c/a\u003e\u003c/li\u003e   \u003cli\u003enoticeMeSenpai — \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/satylogin\" title\u003d\"Candidate Master satylogin\"\u003esatylogin\u003c/a\u003e, \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/sarkysaurabh\" title\u003d\"Candidate Master sarkysaurabh\"\u003esarkysaurabh\u003c/a\u003e, \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/vaibhav138\" title\u003d\"Candidate Master vaibhav138\"\u003evaibhav138\u003c/a\u003e\u003c/li\u003e   \u003cli\u003ekarma — \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/wittyskull\" title\u003d\"Candidate Master wittyskull\"\u003ewittyskull\u003c/a\u003e, \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/garuna\" title\u003d\"Candidate Master garuna\"\u003egaruna\u003c/a\u003e, \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/abhi_1595\" title\u003d\"Expert abhi_1595\"\u003eabhi_1595\u003c/a\u003e\u003c/li\u003e \u003c/ol\u003e\u003cp\u003eTop 2 teams will get cash prizes of INR 3000 and INR 2000 respectively, along with Codechef Laddus. :)\u003cbr /\u003eFeedback of the contest in the comments will be highly appreciated :D \u003c/p\u003e\u003cp\u003eThe detailed editorials will be published on Monday.\u003cbr /\u003eFor now, I am posting the hints. \u003c/p\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eKRYP1\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eIt was based on \u003cstrong\u003eDP on Tree\u003c/strong\u003e. For each node, it was required to maintain the best values that can be obtained from rest of the nodes. Two DFS were required- one for calculating answers from descendants, and the other one from ancestors/siblings. Max of both the values will be the answer.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eKRYP2\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eWas based on \u003cstrong\u003eMo\u0027s on Tree\u003c/strong\u003e. In order to get the minimum absolute difference of squared values, there were 2 possible solutions. One can be to maintain \u003cstrong\u003e2 multisets\u003c/strong\u003e. The first multiset stores the squared values of the nodes. The second multiset stores the difference between closest/adjacent values in the first multiset. Other was to use \u003cstrong\u003eSegment\u003c/strong\u003e \u003cstrong\u003eTree\u003c/strong\u003e. At each node compute the minimum absolute difference of the squared value between its constituent leaf nodes.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eKRYP3\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eThe constraints indicate that the problem is to be solved using \u003cstrong\u003eMatrix Exponentiation\u003c/strong\u003e. However, the matrix used for matrix exponentiation will have dimensions of \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003eN\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e, \u003ci\u003eN\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e)\u003c/span\u003e, thereby leading to a complexity of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e6\u003c/sup\u003e\u003ci\u003eLog\u003c/i\u003e(\u003ci\u003eY\u003c/i\u003e))\u003c/span\u003e. This will time-out. Proper observation will lead you to the fact that there is \u003cstrong\u003esymmetry\u003c/strong\u003e in the distribution of number of ways i.e we do not need \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eN\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e\u003c/span\u003e points. Owing to symmetry, \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003eN\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e) / 8\u003c/span\u003e points are sufficient. This reduces the complexity by a great extent.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eKRYP4\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eThe answer is the summation of \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/a9/da/a9da60785857d5063e9d268d71eaf370e0811823.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e for all distinct values present in the list provided, where \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eX\u003c/i\u003e\u003c/span\u003e is the frequency of the value. \u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eKRYP5\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eThe fact is that LCS and related stuff was of actually no importance. You can find the LCS anyhow using DP as the total length is just 5000. Based on the LCS values, you need to make an \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eN\u003c/i\u003e * \u003ci\u003eM\u003c/i\u003e\u003c/span\u003e matrix, which will be \u003cstrong\u003ebinary matrix\u003c/strong\u003e. In this binary matrix, you need to find out \u003cstrong\u003ehow many squares of following form exist\u003c/strong\u003e?\u003cbr /\u003e\u003cimg alt\u003d\" \" src\u003d\"https://s18.postimg.org/4us9dcw3t/square.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003cbr /\u003eThis square will have \u003cstrong\u003e1\u0027s on all of its borders as well as on the 45-degree diagonal. Other elements can be 0/1.\u003c/strong\u003e\u003cbr /\u003eThis can be solved using careful implementation of \u003cstrong\u003eDP\u003c/strong\u003e and then \u003cstrong\u003eMerge Sort Tree\u003c/strong\u003e or \u003cstrong\u003eSquare Root Decomposition\u003c/strong\u003e.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eKRYP6\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eWe can maintain a sorted \u003cstrong\u003eset\u003c/strong\u003e of numbers by iterating over the array. We can simply use \u003cstrong\u003elower_bound\u003c/strong\u003e in C++ or equivalent in other languages.\u003cbr /\u003e\u003ccode\u003eset\u0026lt;long long\u0026gt;::iterator it \u003d s.lower_bound(val); it--; return (*it);\u003c/code\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eUpd 3:-\u003c/strong\u003e Editorials are finally posted. :)  \u003ca href\u003d\"https://discuss.codechef.com/tags/codr2018/\"\u003eClick Here\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e","tags":[]}}