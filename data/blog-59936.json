{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1528615250,"rating":-1,"authorHandle":"aneeshd00812","modificationTimeSeconds":1528615250,"id":59936,"title":"\u003cp\u003eSPOJ question in JAVA\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eSo I\u0027m trying to solve a question on SPOJ. It\u0027s called Akbar, The great(\u003ca\u003ehttp://www.spoj.com/problems/AKBAR/)\u003c/a\u003e. I coded up the solution in JAVA but it always TLEd on case 3. On translating the code to C++ it finished in 0.16s. I don\u0027t know what the problem with my JAVA solution is. JAVA is my language of choice so can somebody please help me figure out the TLE problem.\u003c/p\u003e\u003cp\u003eThis problem is marked as having \u0027large input\u0027. The IO i\u0027m using in JAVA is what everyone mostly uses afaik and the same IO passes the INTEST problem on SPOJ which is designed to test if my speed of input output is fast enough for problems marked as having \u0027large input\u0027.\u003c/p\u003e\u003cp\u003ePlease help! Thanks!\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eimport java.util.*;\nimport java.io.*;\n\npublic class Akbar {\n\tstatic BufferedReader reader;\n\tstatic StringTokenizer tokenizer;\n\tstatic PrintWriter writer;\n\n\tstatic String next() throws IOException {\n\t\twhile(tokenizer \u003d\u003d null || !tokenizer.hasMoreTokens()) {\n\t\t\ttokenizer \u003d new StringTokenizer(reader.readLine());\n\t\t}\n\n\t\treturn tokenizer.nextToken();\n\t}\n\n\tstatic int nextInt() throws NumberFormatException, IOException {\n\t\treturn Integer.parseInt(next());\n\t}\n\n\tstatic class Pair {\n\t\tint f;\n\t\tint s;\n\n\t\tPair(int f, int s) {\n\t\t\tthis.f \u003d f;\n\t\t\tthis.s \u003d s;\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) throws IOException {\n\t\treader \u003d new BufferedReader(new InputStreamReader(System.in));\n\t\twriter \u003d new PrintWriter(System.out);\n\n\t\tint t \u003d nextInt();\n\n\t\tfor(int ti \u003d 0; ti \u0026lt; t; ++ti) {\n\t\t\tint n \u003d nextInt();\n\t\t\tint r \u003d nextInt();\n\t\t\tint m \u003d nextInt();\n\n\t\t\t@SuppressWarnings(\u0026quot;unchecked\u0026quot;)\n\t\t\tList\u0026lt;Integer\u0026gt;[] graph \u003d new List[n];\n\t\t\tfor(int i \u003d 0; i \u0026lt; n; ++i) {\n\t\t\t\tgraph[i] \u003d new ArrayList\u0026lt;\u0026gt;();\n\t\t\t}\n\t\t\tfor(int i \u003d 0; i \u0026lt; r; ++i) {\n\t\t\t\tint u \u003d nextInt() - 1;\n\t\t\t\tint v \u003d nextInt() - 1;\n\t\t\t\tgraph[u].add(v);\n\t\t\t\tgraph[v].add(u);\n\t\t\t}\n\t\t\tPair[] soldiers \u003d new Pair[m];\n\t\t\tfor(int i \u003d 0; i \u0026lt; m; ++i) {\n\t\t\t\tint k \u003d nextInt() - 1;\n\t\t\t\tint s \u003d nextInt();\n\t\t\t\tsoldiers[i] \u003d new Pair(k, s);\n\t\t\t}\n\n\t\t\tint[] guards \u003d new int[n];\n\t\t\tboolean[] visited \u003d new boolean[n];\n\t\t\tint[] level \u003d new int[n];\n\t\t\tboolean valid \u003d true;\n\t\t\tfor(int i \u003d 0; i \u0026lt; m; ++i) {\n\t\t\t\tint src \u003d soldiers[i].f;\n\t\t\t\tint max \u003d soldiers[i].s;\n\n\t\t\t\tif(guards[src] \u0026gt; 0) {\n\t\t\t\t\tvalid \u003d false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tvisited[src] \u003d true;\n\t\t\t\tlevel[src] \u003d 0;\n\t\t\t\tQueue\u0026lt;Integer\u0026gt; q \u003d new LinkedList\u0026lt;\u0026gt;();\n\t\t\t\tq.add(src);\n\n\t\t\t\twhile(!q.isEmpty()) {\n\t\t\t\t\tint current \u003d q.poll();\n\n\t\t\t\t\tif(level[current] \u0026gt; max) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(guards[current] \u0026gt; 0) {\n\t\t\t\t\t\tvalid \u003d false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tguards[current] +\u003d 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor(int v: graph[current]) {\n\t\t\t\t\t\tif(!visited[v]) {\n\t\t\t\t\t\t\tvisited[v] \u003d true;\n\t\t\t\t\t\t\tlevel[v] \u003d 1 + level[current];\n\t\t\t\t\t\t\tq.add(v);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif(!valid) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor(int i \u003d 0; i \u0026lt; n; ++i) {\n\t\t\t\tif(guards[i] !\u003d 1) {\n\t\t\t\t\tvalid \u003d false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(valid) {\n\t\t\t\twriter.println(\u0026quot;Yes\u0026quot;);\n\t\t\t}\n\t\t\telse {\n\t\t\t\twriter.println(\u0026quot;No\u0026quot;);\n\t\t\t}\n\t\t}\n\n\t\treader.close();\n\t\twriter.close();\n\t}\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":["#java","#tle","spoj"]}}