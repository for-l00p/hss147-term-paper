{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":false,"creationTimeSeconds":1399125116,"rating":3,"authorHandle":"ruslan.rakhimov","modificationTimeSeconds":1399129732,"id":12141,"title":"\u003cp\u003eПоиск всех циклов в графе\u003c/p\u003e","locale":"ru","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eПри изучении алгоритма на e-maxx \u003ca href\u003d\"http://e-maxx.ru/algo/finding_cycle\"\u003eПроверка графа на ацикличность и нахождение цикла\u003c/a\u003e понял, что алгоритм прекращает работу при нахождении первого цикла. Как найти все циклы в графе? Я переделал исходный алгоритм. При реализации моего алгоритма, некоторые циклы упускаются из вида. Например:\u003c/p\u003e\u003cp\u003eРебра в неориент. графе: \u003ccode\u003e1 2\u003c/code\u003e \u003ccode\u003e1 3\u003c/code\u003e \u003ccode\u003e2 3\u003c/code\u003e \u003ccode\u003e2 4\u003c/code\u003e \u003ccode\u003e3 4\u003c/code\u003e Циклы: \u003ccode\u003e1 2 3 1\u003c/code\u003e \u003ccode\u003e2 3 4 2\u003c/code\u003e \u003ccode\u003e1 2 4 3 1\u003c/code\u003e\u003c/p\u003e\u003cp\u003eМой алгоритм \u003ccode\u003efind_cycles()\u003c/code\u003e не находит третий цикл. Как можно это исправить?\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eint ncycle \u003d 0;\nvector\u0026lt;int\u0026gt; cycle[MAXN];\nvector\u0026lt;int\u0026gt; g[MAXN];\n\nint add_cycle(int cycle_end, int cycle_st)\n{\n\tcycle[ncycle].clear();\n\tcycle[ncycle].push_back(cycle_st);\n\tfor(int v \u003d cycle_end; v !\u003d cycle_st; v \u003d p[v])\n\t\tcycle[ncycle].push_back(v);\n\tcycle[ncycle].push_back(cycle_st);\n\t\n\treverse(cycle[ncycle].begin(), cycle[ncycle].end());\n\t\n\treturn cycle[ncycle].size();\t\t\n}\nvoid dfs(int v)\n{\n\tcolor[v] \u003d 1;\n\tfor(int i \u003d 0; i \u0026lt; g[v].size(); i++)\n\t{\n\t\tint to \u003d g[v][i];\n\t\tif(color[to] \u003d\u003d 0)\n\t\t{\n\t\t\tp[to] \u003d v;\n\t\t\tdfs(to);\n\t\t}\n\t\telse if(color[to] \u003d\u003d 1)\n\t\t{\n\t\t\tCycleFound \u003d true;\n\t\t\tif(add_cycle(v, to) \u0026gt; 3) // Исключение вырожденных случаев, н: 1 2 1\n\t\t\t\tncycle++;\n\t\t}\n\t}\n\tcolor[v] \u003d 0; // Исправлено. Было: color[v] \u003d 2;\n}\nvoid find_cycles()\n{\n\tfor(int i \u003d 0; i \u0026lt; n; i++)\n\t\tif(color[i] \u003d\u003d 0)\n\t\t\tdfs(i);\n}\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":["поиск в глубину","цикл","граф"]}}