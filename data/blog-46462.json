{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1470635619,"rating":-16,"authorHandle":"atomicemc2","modificationTimeSeconds":1470635619,"id":46462,"title":"\u003cp\u003eGiven a directed weighted graph with self loops ,find the list of nodes that are exactly k dist from a given node x?\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eEach edge in the graph has weight of 1,The graph may have cycles ,if a node has self loop it can be any distance from itself from 0 to infinity , depending on the no. of time we take the self loop.\u003c/p\u003e\u003cp\u003eWe ll be asked multiple queries on a given graph of the form (distance , source) and the o/p is the list of nodes that are exactly at the given distance starting from the source vertex.\u003c/p\u003e\u003cp\u003eConstraints\u003c/p\u003e\u003cp\u003e1\u0026lt;\u003dNodes\u0026lt;\u003d500 1\u0026lt;queries\u0026lt;\u003d500 1\u0026lt;\u003ddistance\u0026lt;\u003d10^9 I have a feeling ,there would be many repeated computations as the no. of nodes are small,but i am not able to figure out how do i reduce the problem in smaller problems.\u003c/p\u003e\u003cp\u003eWhat is the efficient way to do this?\u003c/p\u003e\u003cp\u003eI have solved the problem using bfs, but the constraint on distance is in order of 10^9 ,hence bfs is slow.\u003c/p\u003e\u003cp\u003eI have also tried using matrix exponentiation but its too slow ,for the given constraints. The problem has a time limit of 1 sec.\u003c/p\u003e\u003c/div\u003e","tags":["directed graph","dynamic programming","cycles","path"]}}