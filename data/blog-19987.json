{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1440611504,"rating":38,"authorHandle":"Miyukine","modificationTimeSeconds":1440611836,"id":19987,"title":"\u003cp\u003e1st Hunger Games Small Editorial — Hints\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHere\u0027s the first part of Hunger Games Editorial prepared by community. There are only my hints, see also the second blog, which will be soon published, with different, more detailed solutions written by many people :) I\u0027d like to thank problemsetters team (\u003ca class\u003d\"rated-user user-orange\" href\u003d\"/profile/PrinceOfPersia\" title\u003d\"Международный мастер PrinceOfPersia\"\u003ePrinceOfPersia\u003c/a\u003e, \u003ca class\u003d\"rated-user user-orange\" href\u003d\"/profile/keyvankhademi\" title\u003d\"Мастер keyvankhademi\"\u003ekeyvankhademi\u003c/a\u003e and \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/AliA\" title\u003d\"Кандидат в мастера AliA\"\u003eAliA\u003c/a\u003e) for such wonderful contest. Hints will be probably updated when I\u0027ll learn more beautiful solutions for these problems :) Enjoy!\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eProblem A: Good Numbers\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eSuppose first integer is multiplied A times and second — B times. How many ways are there to complete the big number? Did we count something more than once?\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eProblem B: Hamro and array\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eTry to count numbers on even and odd positions separately.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eProblem C: Hamro and Vampire Diaries\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eSuppose A[1] \u003d x. How do we calculate A[1 + 3]? How to calculate next and all other values of A? What happens if n mod 3 \u003d 0?\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eProblem D: Hamro and tools\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eRead about how STL can merge lists in O(1) or consider all queries in reverse order.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eProblem E: LCM query\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eSuppose right end of our interval is i. How many different LCM\u0027s can we reach in the left? Many? Not many?\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eProblem F: Forfeit\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eWhat is the minimum weight of our tree such that it satisfies constraints? How does the sum change when we increase one edge by 1?\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eProblem G: Hamro and Icozup\u003c/strong\u003e\u003c/p\u003e\u003cp\u003e//lel maths\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eProblem H: Hamro and Circles\u003c/strong\u003e\u003c/p\u003e\u003cp\u003e//lel maths again, how to explain maths? :D Does this problem differ much from G? What should we change to get AC in H?\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eProblem I: Hamro and Khikhland\u0027s map\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eWe will get the most cash if we take all adges except MST. Google MST if you don\u0027t know what it is :)\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eProblem J: Special Vertex\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eSuppose we\u0027ve queried vertex X. Then, we get answer which subtree contains the special vertex, we can forget about all other subtrees of X and do this recurvisely on this subtree. How to choose X such that our solution becomes fast?\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eProblem K: Pepsi Cola \u0026lt;3\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eLet\u0027s count for each OR how many subsets have this OR. Try to think which OR-es affect which others. How to calculate it fast?\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eProblem L: It\u0027s not that bad\u003c/strong\u003e (seriously, why does this task has such title?)\u003c/p\u003e\u003cp\u003eGo through all powers of 2 from largest to smallest (2^30 -\u0026gt; 1). For every visited power we\u0027ll try to build new graph. For every edge: if its value does not containthis power (value OR power !\u003d value) add it to the graph. Then, check if end is reachable from start. What if so? What if not?\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eProblem M: Guni!\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eAssociate each Guni with maximum value in it? Do we have to maintain any other values in it?\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eProblem N: Demiurges play again\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eTry thinking in DP categories. Count dpmin[x] and dpmax[x] for each vertex. Suppose we\u0027ve counted them for all subtrees of x, how to count them for x?\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eProblem O: Cheque\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eDo it \u0026quot;with induction\u0026quot; by K. Suppose we know minimum values for all vertices that are in the distance \u0026lt;\u003d V from marked points. How to count them for V+1?\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eProblem P: Godzilla and Candies\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eChoose vertex x. Consider all queries in the graph. For each query only count those vertices which DO NOT belong to the same subtree of x. Then, extract x from graph and do it recursively on all sons of x subtrees. How to choose vertex x such that our solution becomes fast? (See also problem J).\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eProblem Q: Mina :X\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eTry to come up with DP which counts minimal number of questions for subset of size X. When we will enter X, we\u0027ll have already counted all possibilities, so consider all of them once more and see which of them we may check.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eProblem R: Makegraph\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eSuppose we have answer 1 at some point. Do we already know all the future answers?\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eProblem S: Godzilla and Pretty XOR\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eTry to build S optimally. What will be maximal size of S? How to check whether we should insert new value or not?\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eProblem T: The ranking!\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eI still do not know how to solve it :( But look at sth cool instead ^^ \u003ca href\u003d\"https://piwoicydr.files.wordpress.com/2015/03/dsc_1126am.jpg\"\u003ehttps://piwoicydr.files.wordpress.com/2015/03/dsc_1126am.jpg\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eProblem U: Godzilla and chess\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eWill n^3/32 solution be efficient enough? How to write it easily?\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eProblem V: Godzilla and ugly XOR\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eConsider max and min values separately, let\u0027s build MIN. Start from the most significant bit. Do we have to add it now or we may later?\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eProblem W: Palindrome Query\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eWe may use hashing for checking if two substrings are equal. For all updates it\u0027s easy to modify our hash. How to answer queries if there were no updates? Does something really change when they are?\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eProblem X: Tree Query\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eUse divide and conquer on tree, think in the same way as P. Choose vertex x, perform some queries, extract x from graph, do it recursively. How to choose x? (compare with P and J).\u003c/p\u003e\u003c/div\u003e","tags":["editorial","hunger-games","hints"]}}