{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":true,"creationTimeSeconds":1502091036,"rating":0,"authorHandle":"Anuar","modificationTimeSeconds":1502181476,"id":53728,"title":"\u003cp\u003eХэширование деревьев и их изоморфизм\u003c/p\u003e","locale":"ru","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eИтак допустим перед вами встала задачи как-то сравнить деревья. Давайте решим самую простую разновидность задачи где дан корень дерева и порядок сыновей в каждом поддереве долже соответсвовать такому же порядку в другом. На ум сразу приходит какой нибудь перебор или проход который сравнивает два дерева. Однако если подумать еще чуть чуть то можно просто захэшировать два дерева с помощью эйлерова обхода а именно, допустим что при хэшировании определенного дерева \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eT\u003c/i\u003e\u003c/span\u003e у нас есть вначале пустая строка \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eS\u003c/i\u003e\u003c/span\u003e. Проходимся dfs-ом и когда заходим в вершину приписываем \u003cspan class\u003d\"tex-span\"\u003e0\u003c/span\u003e к \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eS\u003c/i\u003e\u003c/span\u003e, а когда выходим из нее приписываем \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e. (конечно можно использовать другие символы отличный от \u003cspan class\u003d\"tex-span\"\u003e0\u003c/span\u003e и \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e например \u003cspan class\u003d\"tex-span\"\u003e(\u003c/span\u003e и \u003cspan class\u003d\"tex-span\"\u003e)\u003c/span\u003e). Таким образом мы захэшировали деревья. \u003c/p\u003e\u003cp\u003eВизуализация процесса хэширования:\u003c/p\u003e\u003cp\u003e\u003cimg alt\u003d\" \" src\u003d\"http://i.piccy.info/i9/160f6e758caa4aac4547c4021a8c8c2b/1502091792/21267/1168795/Snymok11111.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003eТеперь можно решить похожую задачу где порядок сыновей не важен но корень дерева все еще дан. Отношение \u0026quot;идентичности\u0026quot; деревьев называется изоморфизмом. Пример изоморфизма корневого дерева где порядок сыновей в поддереве не важен изображен снизу. \u003c/p\u003e\u003cp\u003e\u003cimg alt\u003d\" \" src\u003d\"http://i.piccy.info/i9/92cf4ad08c31701eae18189d0491be62/1502091505/3594/1168795/Snymok1111.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003eЕсли подумать то наверно вы догадаетесь что можно рекурсивно захэшировать поддеревья какой-нибудь вершины \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e\u003c/span\u003e и просто их лексиграфически отсортировать и потом только приписать к строке. Однако допустим что у нас не дан корень надо просто проверить изоморфны ли два дерева друг к другу.\u003c/p\u003e\u003cp\u003eПример такого изоморфизма: \u003c/p\u003e\u003cp\u003e\u003cimg alt\u003d\" \" src\u003d\"http://i.piccy.info/i9/90155df7a654534b32e9d0246e11d7c4/1502092129/2713/1168795/Snymok111111.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003eОдна из идей это найти какой-то корень и провести уже известное нам хэширование. Только этот корень должен быть один и тот же для любых изоморфных деревьев, неважно как их вершины пронумерованы. Введем понятие центра дерева. У дерева из одной вершины центр это сама вершина, в то же время как у дерева с двумя вершинами центр это обе вершины (ребро). В случае большего количество вершин, удаляем все листья дерева пока не останется одна или две вершины. Оставшиеся вершины(а) будет центром. В случае если у нас центр одна вершина то мы можем просто проделать процедуру хэширования корневого дерева, в противном случае, если вершин 2 то хэшируем сначала дерево от первой вершины потом от второй и берем хэш который лексиграфически меньше. \u003c/p\u003e\u003cp\u003eВот задача на проверку изоморфизма: \u003ca href\u003d\"https://www.hackerrank.com/contests/hourrank-21/challenges/tree-isomorphism\"\u003elink\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e","tags":[]}}