{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1507837835,"rating":18,"authorHandle":"Med0b1011","modificationTimeSeconds":1507842638,"id":55151,"title":"\u003cp\u003eIs it possible to solve this problem with a bitset?\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHello!\u003c/p\u003e\u003cp\u003eI was recently solving this problem : \u003ca href\u003d\"http://poj.org/problem?id\u003d1823\"\u003ehttp://poj.org/problem?id\u003d1823\u003c/a\u003e\u003c/p\u003e\u003cp\u003eThe problem basically says given an array of maximum size of 16000 where each element is one or zero, we need to perform the following two operations.\u003c/p\u003e\u003cp\u003e-Set range [L,R] to ones or zeros.\u003c/p\u003e\u003cp\u003e-Query maximum length of a subarray of ones\u003c/p\u003e\u003cp\u003eThe problem can be indeed be solved by a segment tree, however using bitset we can do updates in O(N/32), and with N being 16000 that\u0027s just 500.\u003c/p\u003e\u003cp\u003eThe problem is in querying the maximum length, I haven\u0027t reached any solution better than N operations, are there any ways to achieve something like N/32 ?\u003c/p\u003e\u003cp\u003ePlease note, I already know the segment tree solution, I\u0027m interested in bitset.\u003c/p\u003e\u003c/div\u003e","tags":[]}}