{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1486063217,"rating":9,"authorHandle":"fakeac","modificationTimeSeconds":1486067530,"id":50206,"title":"\u003cp\u003eWHY TLE ?\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eI have written the code to solve \u003ca href\u003d\"//codeforces.com/contest/764/problem/C\"\u003ethis\u003c/a\u003e problem, but it gives TLE. I think the complexity of my soln. is O(n). My approach is as follows:\u003c/p\u003e\u003cp\u003e\u003ccode\u003eLet dp[from][to] \u003d 1 if all nodes in the subtree of \u0026quot;to\u0026quot; (including \u0026quot;to\u0026quot;) are of the same color when we perform dfs from node \u0026quot;from\u0026quot; and \u0026quot;to\u0026quot; is the child of node \u0026quot;from\u0026quot;.\u003c/code\u003e \u003ccode\u003edp[from][to] \u003d 0, otherwise.\u003c/code\u003e\u003c/p\u003e\u003cp\u003e\u003ccode\u003eTo calculate dp[from][to] we use dfs. Let node \u0026quot;to\u0026quot; have k children, then let\u0027s compute dp[to][child] for all children of \u0026quot;to\u0026quot;.\u003c/code\u003e \u003ccode\u003eThen dp[from][to] \u003d 1 if and only if dp[to][child]\u003d\u003d1 for all children of \u0026quot;to\u0026quot; and the color[child]\u003d\u003dcolor[to] for all children of \u0026quot;to\u0026quot;.\u003c/code\u003e \u003ccode\u003eOtherwise, dp[from][to]\u003d0;\u003c/code\u003e\u003c/p\u003e\u003cp\u003eNow, to compute the final answer, Let\u0027s iterate over all \u0026quot;from\u0026quot; nodes, and for each \u0026quot;to\u0026quot; such that \u0026quot;to\u0026quot; is adjacent to \u0026quot;from\u0026quot;, if dp[from][to]\u003d\u003d1, then final answer\u003d\u0026quot;YES\u0026quot;, and node\u003d\u0026quot;from\u0026quot;.\u003c/p\u003e\u003cp\u003eIf no such \u0026quot;from\u0026quot; is found then answer\u003d\u0026quot;NO\u0026quot;;\u003c/p\u003e\u003cp\u003e\u003ccode\u003eBut this looks like O(n^2) solution. But, if we observe carefully, we see that each \u0026quot;from\u0026quot;,\u0026quot;to\u0026quot; pair of nodes corresponds to a directed edge going from node \u0026quot;from\u0026quot; to node \u0026quot;to\u0026quot;. Since there are exactly n-1 edges, the no. of \u0026quot;from\u0026quot;,\u0026quot;to\u0026quot; pairs \u003d 2*(n-1).\u003c/code\u003e\u003c/p\u003e\u003cp\u003eHere is my submission ----\u0026gt; \u003ca href\u003d\"//codeforces.com/contest/764/submission/24382711\"\u003ehttp://codeforces.com/contest/764/submission/24382711\u003c/a\u003e. \u003c/p\u003e \u003cpre\u003e\u003ccode\u003eNOTE: In this solution instead of passing -\u0026gt; \u0026quot;from\u0026quot;,\u0026quot;to\u0026quot; to dfs function, I have passed \u0026quot;from\u0026quot;,\u0026quot;index of \u0027to\u0027 in adj[from]\u0026quot;. I have made multiple dfs calls but each call is computed exactly once, since I have made a vis[] array which keeps track of it.\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eNOTE: If we put a break statement in dfs for loop, we get AC. Lol :P \u003ca href\u003d\"//codeforces.com/contest/764/submission/24384370\"\u003eHere\u003c/a\u003e is the AC submission. I don\u0027t know why it does not get TLE, as the time complexity remains the same, but it is slightly optimized.\u003c/p\u003e\u003cp\u003ePlease tell where I am wrong in calculating the time complexity? Thanks in advance.\u003c/p\u003e\u003c/div\u003e","tags":["trees","dp","dfs and similar","#implementation"]}}