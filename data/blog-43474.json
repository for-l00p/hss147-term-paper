{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1456801949,"rating":0,"authorHandle":"majd.gda1","modificationTimeSeconds":1456801949,"id":43474,"title":"\u003cp\u003eSieve \u0026amp; Factorization \u0026amp; Prime Check\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cpre\u003e\u003ccode\u003ebool prime[1000005];\nvoid sieve(){\n    for(int i\u003d4;i\u0026lt;\u003d1000000;i+\u003d2)\n        prime[i]\u003dfalse,prime[i-1]\u003dtrue;\n    prime[2]\u003dtrue;\n    for(int i\u003d3;i\u0026lt;\u003d1000;i+\u003d2){\n        if(prime[i]){\n            for(int j\u003di*i;j\u0026lt;\u003d1000000;j+\u003di*2)\n                prime[j]\u003dfalse;\n        }\n    }\n}\n\u003c/code\u003e\u003c/pre\u003e \u003cpre\u003e\u003ccode\u003ebool primeCheck(int x){\n    if (x\u003d\u003d1)return false;\n    if (x\u003d\u003d2)return true;\n    if (x%2\u003d\u003d0)return false;\n    for (int i\u003d3;i*i\u0026lt;\u003dx;i+\u003d2)\n        if (x%i\u003d\u003d0)\n            return false;\n    return true;\n}\n\u003c/code\u003e\u003c/pre\u003e \u003cpre\u003e\u003ccode\u003evoid primeFactorization(int x){\n    int n\u003dx;\n    if(x%2\u003d\u003d0){\n            cout\u0026lt;\u0026lt;2\u0026lt;\u0026lt;\u0026quot; \u0026quot;;\n            while(x%2\u003d\u003d0)x/\u003d2;\n        }\n    for(int i\u003d3;i*i\u0026lt;\u003dn;i+\u003d2)\n        if(x%i\u003d\u003d0){\n            cout\u0026lt;\u0026lt;i\u0026lt;\u0026lt;\u0026quot; \u0026quot;;\n            while(x%i\u003d\u003d0)x/\u003di;\n        }\n    if(x\u0026gt;1)\n        cout\u0026lt;\u0026lt;x;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":[]}}