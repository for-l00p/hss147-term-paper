{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":true,"creationTimeSeconds":1478650326,"rating":0,"authorHandle":"elena","modificationTimeSeconds":1479890414,"id":48287,"title":"\u003cp\u003eНесколько совсем простых задач\u003c/p\u003e","locale":"ru","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eМы будем решать задачи, опубликованные в разных проверяющих системах (чаще всего это будут Сodeforces и \u003ca href\u003d\"http://acm.timus.ru\"\u003eacm.timus.ru\u003c/a\u003e). Timus — наверное, самый старый архив с задачами на русском языке. \u003cbr /\u003e \u003cbr /\u003e\u003c/p\u003e\u003cp\u003eНа Timus также нужно зарегистрироваться. При сдаче задачи понадобится указывать свой ID (комбинация букв и цифр, которая придёт в письме при регистрации). Обратите внимание, что с точки зрения проверяющей системы Ваше решение должно находиться в default-пакете. Поэтому, если при написании программы Вы поместили её в какой-либо поименованный пакет, не нужно копировать эту строчку в окно для текста программы. Если же Вы хотите прикрепить файл, придётся закомментировать строчку с \u003ccode\u003epackage\u003c/code\u003e, сохранить файл и только после этого отправлять его.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eВажно:\u003c/strong\u003e при написании решения, которое будет тестироваться автоматически, очень важно соблюдать описанный формат входных и выходных данных. Если в описании входных данных написано, что будут введены три строчки, содержащие по два целых числа в каждой, причём эти числа будут находиться в диапазоне от 0 до 100, то это означает, что все тесты, которые будут поданы на вход Вашей программы, будут удовлетворять этому описанию. Вы не должны проверять тесты на соответствие описанию: это делает специальная программа-валидатор ещё до помещения тестов в проверяющую систему. Также Вы не должны выводить какое-либо приглашение пользователю, например, \u0026quot;Введите два целых числа: \u0026quot; — проверяющая система сочтёт это ошибкой. \u003c/p\u003e\u003cp\u003eВсё, сказанное выше, касается также и формата выходных данных. Если указано, что программа должна выводить два целых числа через пробел, значит, она должна выводить их именно так и именно в том порядке, в котором ожидают авторы задачи. Какая-либо дополнительная информация (например, вывод строчки \u0026quot;Ответ: \u0026quot;) будет интерпретирована проверяющей системой как ошибочная. \u003c/p\u003e\u003cp\u003eКак правило, проверить своё понимание условия и решения можно с помощью приведённых в задаче примеров входных и выходных данных (в простых задачах часто ограничиваются одним примером). Стоит помнить, что примеры считаются неотъемлемой частью условия. Разумеется, для хоть сколько-нибудь сложных задач стоит придумать свои примеры входных и выходных данных, которые несложно проверить вручную. \u003c/p\u003e\u003cp\u003e\u003cem\u003eСовет: если Вы пишете в своей программе комментарии на русском языке, отправка через окно для текста программ может приводить к неожиданным эффектам (например, к ошибке компиляции). Если же отправить файл, то \u0026quot;неожиданные эффекты\u0026quot; пропадают.\u003c/em\u003e\u003c/p\u003e\u003cp\u003eПосле регистрации попробуйте решить следующие задачи:\u003c/p\u003e\u003cp\u003eЗадача 1000 \u003ca href\u003d\"http://acm.timus.ru/problem.aspx?space\u003d1\u0026amp;num\u003d1000\"\u003eA+B Problem\u003c/a\u003e\u003c/p\u003e\u003cp\u003eЗадача 1293 \u003ca href\u003d\"http://acm.timus.ru/problem.aspx?space\u003d1\u0026amp;num\u003d1293\"\u003eЭния\u003c/a\u003e\u003c/p\u003e\u003cp\u003eЗадача 1409 \u003ca href\u003d\"http://acm.timus.ru/problem.aspx?space\u003d1\u0026amp;num\u003d1409\"\u003eДва бандита\u003c/a\u003e\u003c/p\u003e\u003cp\u003eЗадача 2001 \u003ca href\u003d\"http://acm.timus.ru/problem.aspx?space\u003d1\u0026amp;num\u003d2001\"\u003eМатематики и ягоды\u003c/a\u003e\u003c/p\u003e\u003cp\u003eЗадача 1725 \u003ca href\u003d\"http://acm.timus.ru/problem.aspx?space\u003d1\u0026amp;num\u003d1725\"\u003eАншлаг, аншлаг!\u003c/a\u003e\u003c/p\u003e\u003cp\u003eЗадача 1984 \u003ca href\u003d\"http://acm.timus.ru/problem.aspx?space\u003d1\u0026amp;num\u003d1984\"\u003eОхранник компота\u003c/a\u003e\u003c/p\u003e\u003cp\u003eЗадача 1194 \u003ca href\u003d\"http://acm.timus.ru/problem.aspx?space\u003d1\u0026amp;num\u003d1194\"\u003eРукопожатия\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eЕщё немного небесполезных советов\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eЗадачи отсортированы по сложности (не совсем по сложности, которую определяет для них Timus; скорее, по сложности для начинающих программистов на Java). Конечно, Вы можете решать их в любом порядке. Но, возможно, имеет смысл решать их в предложенном порядке. \u003c/p\u003e\u003cp\u003eКак прочитать несколько чисел из стандартного потока ввода — вполне понятно из предыдущих постов. А вот вывести несколько чисел на одной строке — задача чуть менее тривиальная (и Вы впервые столкнётесь с ней в задаче 1409). Самый простой способ — сформировать строку. Пусть, к примеру, Вам нужно вывести два числа, которые в программе обозначены как \u003ccode\u003ec\u003c/code\u003e и \u003ccode\u003ed\u003c/code\u003e. Тогда нужно написать \u003ccode\u003eSystem.out.println(c + \u0026quot; \u0026quot; + d);\u003c/code\u003e. Когда Вы \u0026quot;складываете\u0026quot; числа со строкой (пусть и содержащей всего лишь один пробел), числовой тип будет автоматически преобразован в строковый. \u003c/p\u003e\u003cp\u003eЕсли в качестве вердикта вы получили \u003cem\u003eCompilation error\u003c/em\u003e, нажмите на номер попытки в таблице статуса, и Вы увидите, на что \u0026quot;ругался\u0026quot; компилятор. \u003c/p\u003e\u003cp\u003eЕсли Вы получили в очередной раз \u003cem\u003eWrong answer on test N\u003c/em\u003e, где \u003cem\u003eN\u003c/em\u003e не меняется на протяжении последних десяти попыток, а идеи по исправлению ошибки у Вас иссякли, возможно, следует почитать обсуждение этой задачи: нередко ошибки бывают типичными, и в комментариях Вы найдете пример входных и выходных данных, который, возможно, поможет Вам найти ошибку.\u003c/p\u003e\u003cp\u003eЗадачи на Timus (впрочем, как и во многих других проверяющих системах, имеющих давнюю историю), как правило, достаточно хорошо проверены. Конечно, авторы не могут гарантировать, что нельзя написать неверное решение, которое пройдёт все имеющиеся в системе тесты (такая ситуация называется \u0026quot;слабые тесты\u0026quot;; при обнаружении такой ситуации в систему добавляются дополнительные тесты, а все сданные решения перетестируются). Однако авторы уверены, что любое правильное решение проходит все имеющиеся в системе тесты.\u003c/p\u003e\u003c/div\u003e","tags":["simple problems"]}}