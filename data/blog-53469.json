{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1500970455,"rating":14,"authorHandle":"VoMinhThienLong","modificationTimeSeconds":1500973120,"id":53469,"title":"\u003cp\u003e(Need help) Find maximum number of rectangles could be place in a fixed rectangle.\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eUPD 1: Add the application to automatic draw the rectangle.\u003c/p\u003e\u003ch4\u003eOverview\u003c/h4\u003e\u003cp\u003eThis problem is a varient of the classic problem, \u003cem\u003e\u0026quot;Packing rectangles with the smallest area rectangle.\u0026quot;\u003c/em\u003e. This is also an optimization with you may not find the most optimal solution but the more rectangles you can place, the more score you get. \u003c/p\u003e\u003cp\u003eIn this problem, given the size of the main rectangle and the size of others rectangles, find the maximum number of rectangle could be place in the main rectangle without overlapping the other rectangle ( \u003cem\u003enote\u003c/em\u003e: these rectangles must be inside the main rectangle — but it can be touch in the borders of the main rectangle).\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eInput\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eThe first line contains three integers \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e (\u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e ≤ \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/span\u003e ≤ \u003cspan class\u003d\"tex-span\"\u003e100\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e ≤ \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e ≤ \u003cspan class\u003d\"tex-span\"\u003e1000\u003c/span\u003e) — the height, the width of the fixed rectangle and the number of rectangles to be placed.\u003c/p\u003e\u003cp\u003eThe next \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e lines have two integers \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ey\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e (\u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e ≤ \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e ≤ \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e ≤ \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ey\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e ≤ \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/span\u003e) — the height and the width of the rectangle, remember that we can\u0027t rotate these rectangles.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eOutput\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eThe first line of the ouput print \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eThe next \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e line print two number \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ey\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e is the top — left point where the rectangle \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e placed. In case we don\u0027t place this rectangle, print \u003cstrong\u003e\u0026quot;0 0\u0026quot;\u003c/strong\u003e (without quotes). \u003c/p\u003e\u003cp\u003e\u003cstrong\u003eSample input\u003c/strong\u003e\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e8 7 10\n4 5\n4 2\n2 3\n1 1\n1 1\n1 2\n1 5\n5 1\n6 1\n2 1\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cstrong\u003eSample output\u003c/strong\u003e\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e10\n1 1\n5 1\n5 3\n1 6\n7 3\n7 4\n8 3\n1 7\n2 6\n6 7\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cstrong\u003eIllustration\u003c/strong\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"/predownloaded/07/9c/079c3338d54642a40e33df66d30378d1e2197bfa.png\"\u003ePicture for sample test case\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://drive.google.com/drive/folders/0B0aBLbDIvtoDbDFMMEZGMEtmdEk\"\u003eIllustration application\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eUsing the application\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eTo use the application, you run your code to make a new \u003cem\u003e\u0026quot;.exe\u0026quot;\u003c/em\u003e file (it must be in same folder with the input test). After that, upload the test input by clicking the button \u003cstrong\u003e\u0026quot;Load input file...\u0026quot;\u003c/strong\u003e. Finally, click the button \u003cstrong\u003e\u0026quot;Run external solution ...\u0026quot;\u003c/strong\u003e and chose your \u003cem\u003e\u0026quot;.exe\u0026quot;\u003c/em\u003e file. \u003c/p\u003e\u003cp\u003eP/s: Hope you to help with problem in case we want to maximize the area be covered. I just think of the brute force solution and some of the trival greedy approachs.\u003c/p\u003e\u003c/div\u003e","tags":["optimazation","geometry","maybegreedy"]}}