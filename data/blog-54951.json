{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1507123326,"rating":222,"authorHandle":"ivan100sic","modificationTimeSeconds":1507123326,"id":54951,"title":"\u003cp\u003eWhat are the things that you discovered independently?\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHello CodeForces!\u003c/p\u003e\u003cp\u003eI know this happened to everyone — you made an interesting mathematical/algorithmic/whatever discovery and you were very proud of it and later you realized it\u0027s already well known. What\u0027s your story?\u003c/p\u003e\u003cp\u003eI\u0027ll start:\u003c/p\u003e\u003cp\u003eI discovered a variant of Mo\u0027s algorithm around 4 years ago. I was solving the following problem: Given a static array \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e, ..., \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eq\u003c/i\u003e \u003d \u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e)\u003c/span\u003e queries. You are allowed to solve them offline. Each query has the form \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003el\u003c/i\u003e, \u003ci\u003er\u003c/i\u003e)\u003c/span\u003e and you\u0027re supposed to answer, if you were take all the numbers from \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/sub\u003e, ..., \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003er\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e, extract them into another array and then sort that array, what would be the sum of all elements at odd indexes?\u003c/p\u003e\u003cp\u003eThis is how I was thinking: If all the queries could be ordered such that both their left ends and right ends form an increasing sequence, you could answer all those queries by adding/removing elements from some augmented balanced binary tree or segment tree in \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003enlogn\u003c/i\u003e)\u003c/span\u003e. Then again, the same is true when all the queries can be ordered such that their left ends form an increasing and right ends form a decreasing sequence. So, why not decompose the set of queries into such sequences? When we sort the queries by their left end, this becomes equivalent to decomposing an array of numbers (right ends) into several increasing/decreasing subsequences. Then I remembered a theorem which states that, in an array of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e + 1\u003c/span\u003e numbers, there is always an increasing subsequence or a decreasing subsequence of length \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e + 1\u003c/span\u003e — this means that we can decompose any array into \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/32/91/32913ddf691f31b4d68f1a13d186d75779229920.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e such sequences, in time \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/d3/df/d3dfd686207514378d341aaa138650bc622e68bc.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e — perhaps there is a better algorithm but this was good enough for my problem. The final complexity is \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/d3/df/d3dfd686207514378d341aaa138650bc622e68bc.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e — there are \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/32/91/32913ddf691f31b4d68f1a13d186d75779229920.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e sequences of queries and each one can be solved in \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/78/cb/78cbd240f0f43a574eca1a110cf408f9808f17ab.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e.\u003c/p\u003e\u003cp\u003eAlso, what were your silly childhood discoveries?\u003c/p\u003e\u003cp\u003eI remember discovering, when I was around 7, that in some apartments you could run around in a circle through a sequence of doors while in others you can\u0027t — and I really loved those where you can! Later I found out that they were equivalent to cyclic/acyclic graphs.\u003c/p\u003e\u003c/div\u003e","tags":["discussion","stories"]}}