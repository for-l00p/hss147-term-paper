{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1513191659,"rating":-40,"authorHandle":"remidinishanth","modificationTimeSeconds":1513217831,"id":56332,"title":"\u003cp\u003eStrictly Increasing Array / Sequence\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eI am posting this just for \u003cstrong\u003ebeginners\u003c/strong\u003e like me so that we can use such tricks in future and as both the problems are almost similar I just posted them together not to get confused in case.\u003c/p\u003e\u003ch1\u003eQ1.\u003c/h1\u003e\u003cp\u003eYou are given an array of N integers. Suppose you are allowed to change an element into any integer with one operation. Find the minimum number of operations to make the array strictly increasing. (Note that the elements can become \u0026lt;1). The given array contains N positive integers.\u003c/p\u003e \u003cul\u003e   \u003cli\u003e1 ≤ N ≤ 10^5\u003c/li\u003e   \u003cli\u003e1 ≤ ai ≤ 10^9 for 1 \u0026lt;\u003d i \u0026lt;\u003d N\u003c/li\u003e \u003c/ul\u003e\u003ch4\u003eExample:\u003c/h4\u003e\u003cp\u003e1) N \u003d 5\u003cbr /\u003e 1 2 2 3 6\u003cbr /\u003e Sol: 1 2 3 5 6. So the answer is 2\u003c/p\u003e\u003cp\u003e2) N \u003d 3\u003cbr /\u003e 1 1 1\u003cbr /\u003e Sol: −1 1 2. So the answer is 2\u003c/p\u003e\u003cp\u003e3) N \u003d 6\u003cbr /\u003e 4 2 4 4 6 8\u003cbr /\u003e Sol: 1 2 4 5 6 8. So the answer is 2\u003c/p\u003e\u003cp\u003e4) N \u003d 7\u003cbr /\u003e 1 2 2 2 3 4 5\u003cbr /\u003e Sol: -1 0 1 2 3 4 5. So the answer is 3.\u003c/p\u003e\u003ch4\u003eHere is how we can solve this problem:\u003c/h4\u003e\u003cp\u003eSuppose the problem was simply named Non-decreasing Array. Obviously, you want to keep as many numbers as possible unchanged. It follows that you can select the longest non-decreasing subsequence and modify all the other elements so that they\u0027ll respect the rule (by making them equal to values from the subsequence we\u0027ve extracted accordingly). Back to our problem now, we\u0027re looking for a Strictly Increasing Array. If we make another ci \u003d ai - i, the answer is the equal to (n - the longest of the non-decreasing subsequence with no negative number) and for the longest non-decreasing subsequence, a O(nlogn) solution can be used.\u003c/p\u003e\u003ch4\u003eWhy does this work?\u003c/h4\u003e\u003cp\u003eConsider for some i and j, ci \u0026lt;\u003d cj then ai - i \u0026lt;\u003d aj - j that implies ai + j - i \u0026lt;\u003d aj , which means we have enough space to fit a strictly increasing array between i and j.\u003c/p\u003e\u003ch1\u003eQ2.\u003c/h1\u003e\u003cp\u003eNow consider the same problem but with the condition that the resulting sequence should only contain positive integers.\u003c/p\u003e\u003ch4\u003eHere is how we can solve this problem:\u003c/h4\u003e\u003cp\u003eFor each element of the modified(or resulting) sequence we have bi \u0026gt;\u003d i (1\u0026lt;\u003di\u0026lt;\u003dn) and we need to find the longest increasing subsequence of the original sequence ai and ai \u0026gt;\u003d i. We keep such ai unchanged and other values can be changed into the value as their index. \u003c/p\u003e\u003cp\u003eThen we should modify the above solution such that we have to consider longest non-decreasing subsequence only among those numbers such that ai - i \u0026gt;\u003d0 but not the whole array ci. This ensures that the resulting array has the integers which are positive and forms strictly increasing sequence. Because in this way we make sure that all the elements such that ai \u0026lt; i initially have to be changed.\u003c/p\u003e\u003cp\u003eAnother way is to modify the algorithm to only use positive numbers is to append a whole lot of numbers at the start of the array .i.e. change 1,2,9,10,3,15 to -5,-4,-3,-2,-1,1,2,9,10,3,15. Then you can be sure that the optimal answer will never decide to make the 1 go negative because it would cost so much to make all the negative numbers smaller. You only need to add N dummy nodes (the same as the length of the sequence, not the maximum number i.e 10^9 ).\u003c/p\u003e\u003ch4\u003eExample:\u003c/h4\u003e\u003cp\u003eOriginal sequence 1,2,2,2,3,4,5\u003cbr /\u003eAdd dummy elements at start -5,-4,-3,-2,-1,1,2,2,2,3,4,5\u003cbr /\u003eSubtract off position in array -5,-5,-5,-5,-5,-4,-4,-5,-6,-6,-6,-6\u003cbr /\u003eFind longest non-decreasing sequence -5,-5,-5,-5,-5,-4,-4,*,*,*,*,*\u003cbr /\u003eSo answer is to change 5 numbers. 1 2 3 4 5 6 7 \u003c/p\u003e\u003cp\u003e[REF.]\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.codechef.com/SMHT2014/problems/SMHTD\"\u003ehttps://www.codechef.com/SMHT2014/problems/SMHTD\u003c/a\u003e\u003cbr /\u003e\u003ca href\u003d\"https://www.hackerearth.com/problem/algorithm/find-path/\"\u003ehttps://www.hackerearth.com/problem/algorithm/find-path/\u003c/a\u003e \u0026amp;\u003cbr /\u003e\u003ca href\u003d\"https://csacademy.com/contest/round-61/task/strictly-increasing-array/\"\u003ehttps://csacademy.com/contest/round-61/task/strictly-increasing-array/\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e","tags":["lis","array","increasing subsequence","easy-medium"]}}