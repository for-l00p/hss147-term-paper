{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1481316386,"rating":0,"authorHandle":"Kole","modificationTimeSeconds":1481321823,"id":48966,"title":"\u003cp\u003eNeki zadaci\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eSve ovo probajte da otkucate, a linkove svih zadataka možete naći u nekom od dva posta dole.\u003c/p\u003e \u003col\u003e   \u003cli\u003e\u003cp\u003e\u003cstrong\u003eOkružno 2012 A1:\u003c/strong\u003e Treba primetiti da je svako rešenje i delilac sume celog niza. Dakle treba naći delioce sume, kojih sigurno neće biti više od 240. Za svaki delilac treba proveriti koliko najviše grupa može da postoji (čim neka grupa ima sumu deljivu sa tim deliocem, treba nju zatvoriti i otpočeti novu), i ukoliko je taj broj veći ili jednak \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e rešenje postoji.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003e\u003cstrong\u003ePRIME1 (SPOJ):\u003c/strong\u003e \u003cem\u003eCore\u003c/em\u003e ideja: segmentovano sito. Ako je broj složen njegov delilac mora biti u intervalu \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/4d/d9/4dd9a7122a49c2d31ec2ef4a7e2a862b76c7be00.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. Vodeći se tom idejom, sito radimo nad prvih \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/df/38/df38c82e8d38aaf394674e6685cf06541cee2be5.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e brojeva, a onda lako preskačemo na prvi veći li jednak od nekog \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ey\u003c/i\u003e\u003c/span\u003e koje nam treba. Problem markiranja brojeva lako rešavamo tako što \u003cspan class\u003d\"tex-span\"\u003e[\u003ci\u003ea\u003c/i\u003e, \u003ci\u003eb\u003c/i\u003e]\u003c/span\u003e transliramo u \u003cspan class\u003d\"tex-span\"\u003e[0, \u003ci\u003eb\u003c/i\u003e - \u003ci\u003ea\u003c/i\u003e]\u003c/span\u003e, tako da je \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/e2/6c/e26c4d49dac57b1bd8079f8e9bc650103ce14b3c.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. Treba znati da je \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/46/e1/46e170eb1fe18fe083aafe9edf093e9d2371ac0c.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, mada je ta gornja granica jako gruba.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003e\u003cstrong\u003eAlyona and Mex (CF C):\u003c/strong\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003emex\u003c/i\u003e\u003c/span\u003e (najmanji nenegativan broj koji ne pripada nekom skupu). Rešenje je očigledno dužina najkraćeg intervala. Ostaje da se formira traženi niz. Treba napraviti niz oblika \u003cspan class\u003d\"tex-span\"\u003e0, 1, 2, 3, ..., \u003ci\u003ek\u003c/i\u003e - 1, 0, 1, ...\u003c/span\u003e, gde je \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e dužina najkraćeg intervala. Takav niz ima period \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e i koji god podniz dužine veće ili jednako \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e da uzmemo sigurno pokrivamo brojeve od \u003cspan class\u003d\"tex-span\"\u003e0\u003c/span\u003e do \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e - 1\u003c/span\u003e, dakle \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003emex\u003c/i\u003e\u003c/span\u003e sigurno neće biti manji od \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e, što smo i rekli da je rešenje.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003e\u003cstrong\u003eArpa’s obvious problem and Mehrdad’s terrible solution (CF B):\u003c/strong\u003e Rešenje možemo da pravimo dok još učitavamo niz. Važna stvar: \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/61/2c/612c682bad4b3be078148197b9ccf6ac394bb2ce.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, jer je \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/47/99/47993bc40a7f3905ed335499bbbd615fa80b6078.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. Nama treba niz \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ecnt\u003c/i\u003e\u003c/span\u003e kojim ćemo da pamtimo broj pojavljivanja svakog takvog broja, a rešenje u svakom koraku uvećavamo za \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ecnt\u003c/i\u003e[\u003ci\u003ea\u003c/i\u003e]\u003c/span\u003e.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003e\u003cstrong\u003eBeautiful Numbers (CF C):\u003c/strong\u003e Rešenje tražimo prema sumi koju brojevi mogu da uzmu jer broj takvih suma iznosi \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e + 1\u003c/span\u003e. Lako proveravamo da li je takva suma \u003cem\u003edobra\u003c/em\u003e. Za svaku sumu znamo koliko uzimamo cifara \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/span\u003e, a koliko cifara \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/span\u003e uzimamo. Prema tome, za rešenje koristimo poznatu formulu \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/78/49/7849232f20d80108a93de65429d0742297a67894.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e (tzv. permutacije sa ponavljanjem).\u003c/p\u003e\u003c/li\u003e \u003c/ol\u003e\u003cp\u003eKorisna stvar: ukoliko vam treba neka \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eXOR\u003c/i\u003e\u003c/span\u003e osobina (parnost pojavljivanja i koji se to element pojavio neparan broj puta), a da je broj elemenata do 64, možete to uraditi na lak način. Svakom elementu dodelite neki ,,redni broj\u0027\u0027. Ako su to slova, onda je to njihova pozicija u alfabetu, ako su to brojevi do 53 (SIO 2013) onda brojevi trivijalno uzimaju taj poredak. U nekoj promenljivoj čuvate \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eXOR\u003c/i\u003e\u003c/span\u003e i za svaki element xorujete sa \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/6d/39/6d3950110948a72dac361895f4c81483298c5f07.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. Na taj način postižete da se različiti elementi ne mogu među sobom ponišiti jer svaki ima jedinicu na drugačijem mestu.\u003c/p\u003e\u003cp\u003eZadatak u kojem sam to morao da koristim: \u003ca href\u003d\"//codeforces.com/problemset/problem/570/D\"\u003ehttp://codeforces.com/problemset/problem/570/D\u003c/a\u003e. Ovo je graf, radićemo do državnog sigurno, ali ukoliko neko zna DFS neka proba, jako je lep zadatak.\u003c/p\u003e\u003cp\u003eBitovne operacije: Za brojeve oblika \u003cspan class\u003d\"tex-span\"\u003e2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/sup\u003e\u003c/span\u003e u C++ možete pisati \u003ccode\u003e1\u0026lt;\u0026lt;x\u003c/code\u003e što ustvari znači da u binarnom zapisu cifru \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e pomerate \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e mesta ulevo što upravo odgovara operaciji množenja sa \u003cspan class\u003d\"tex-span\"\u003e2\u003c/span\u003e. Analogno \u003ccode\u003e1\u0026gt;\u0026gt;x\u003c/code\u003e cifru \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e pomera udesno za \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e mesta, što odgovara deljenju sa \u003cspan class\u003d\"tex-span\"\u003e2\u003c/span\u003e. Parnost broja možete proveriti sa \u003ccode\u003ex\u0026amp;1\u003c/code\u003e (bitovno \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eAND\u003c/i\u003e\u003c/span\u003e), jer \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e može da vrati samo ako se na prvom mestu s desna nalazi cifra \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e, što može samo ako je broj neparan. C++ ima ugrađene mnoge zgodne funkcije nad binarnim brojevima koje su nam nekad jako potrebne, npr. broj jedinica u binarnom zapisu nekog broja, testiranje bita, prva jedinica s desna (preko potrebno u Fenwickovom stablu)... Njih ćemo pominjati kada budu neophodne, a najviše se koriste u dinamičkom programiranju po bitmaskama. Sve te ugrađene operacije su uvek brže od svega onoga što vi možete sami da iskucate, naravno često neosetno, ali nam njihova svojstva nekad jako pomažu.\u003c/p\u003e\u003c/div\u003e","tags":[]}}