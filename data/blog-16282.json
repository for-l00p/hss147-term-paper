{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1423424360,"rating":73,"authorHandle":"Madiyar","modificationTimeSeconds":1423440428,"id":16282,"title":"\u003cp\u003ec++: a \u0026lt;\u003d b \u0026lt;\u003d c\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eI use python a lot. So, by accidentally I can type this code and compiler won\u0027t give me a error:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e#include \u0026lt;iostream\u0026gt;\nusing namespace std;\n\nint main() {\n\tcout \u0026lt;\u0026lt; (1 \u0026lt;\u003d 2 \u0026lt;\u003d 1);\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eIn python, and some other languages, the expression a \u0026lt;\u003d b \u0026lt;\u003d c is equivalent to a \u0026lt;\u003d b and b \u0026lt;\u003d c. But in c++, this code produces 1 (true). \u003c/p\u003e\u003cp\u003eWhy it compiles successfully? And why it prints 1? \u003c/p\u003e\u003cp\u003e\u003cstrong\u003eHope this blog will prevent someone from possible future mistakes.\u003c/strong\u003e \u003c/p\u003e\u003c/div\u003e","tags":["c++"]}}