{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":true,"creationTimeSeconds":1434537203,"rating":0,"authorHandle":"disa","modificationTimeSeconds":1434537203,"id":18639,"title":"\u003cp\u003eДерево отрезков\u003c/p\u003e","locale":"ru","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cpre\u003e\u003ccode\u003e#include \u0026lt;fstream\u0026gt;\n#include \u0026lt;cstdio\u0026gt;\n#include \u0026lt;cstdlib\u0026gt;\n#include \u0026lt;string\u0026gt;\n#include \u0026lt;vector\u0026gt;\n#include \u0026lt;set\u0026gt;\n#include \u0026lt;algorithm\u0026gt;\n#include \u0026lt;iomanip\u0026gt;\n#include \u0026lt;map\u0026gt;\n#include \u0026lt;cmath\u0026gt;\n#include \u0026lt;queue\u0026gt;\nusing namespace std;                              \n\n\ntypedef long long ll;\n \n#if _DEBUG \nifstream cin (\u0026quot;input.txt\u0026quot;);\nofstream cout(\u0026quot;output.txt\u0026quot;);\n#else\nifstream cin (\u0026quot;segment-tree.in\u0026quot;);\nofstream cout(\u0026quot;segment-tree.out\u0026quot;);\n#endif\n\nconst int maxx \u003d 100000;\n\nstruct str {\n\tint  key, l, r, add;\n};\n\nstr d[maxx * 4 + 3];\n\nint a[maxx + 3], n;\n\nvoid push(int i) {\n\tif(d[i].l + 1 !\u003d d[i].r) {\n\t\td[i * 2].add +\u003d d[i].add;\n\t\td[i * 2 + 1].add +\u003d d[i].add; \n\t}\n\td[i].key +\u003d d[i].add;\n\td[i].add \u003d 0;\n}\n\nvoid build (int i , int l, int r) {\n\td[i].l \u003d l;\n\td[i].r \u003d r;\n\tif(r - l \u003d\u003d 1) {\n\t\td[i].key \u003d a[l];\n\t\treturn ;\n\t}\n\tint m \u003d (l + r) / 2;\n\tbuild(i * 2, l, m);\n\tbuild(i * 2 + 1, m, r);\n\td[i].key \u003d max(d[i * 2].key, d[i * 2 + 1].key);\n}\n\nll get(int i, int l, int r) {\n\tpush(i);\n\tif(d[i].r \u0026lt;\u003d l || d[i].l \u0026gt;\u003d r) {\n\t\treturn -(maxx + 2);\n\t}\n\tif(d[i].l \u0026gt;\u003d l \u0026amp;\u0026amp; d[i].r \u0026lt;\u003d r) {\n\t\treturn d[i].key;\n\t}\n\tll ans1, ans2;\n\tans1 \u003d get(i * 2, l, r);\n\tans2 \u003d get(i * 2 + 1, l, r);\n\treturn max(ans1, ans2);\n}\n\nvoid update (int i, int l, int r, int x) {\n\tpush(i);\n\tif(d[i].r \u0026lt;\u003d l || d[i].l \u0026gt;\u003d r) {\n\t\treturn ;\n\t}\n\tif(d[i].l \u0026gt;\u003d l \u0026amp;\u0026amp; d[i].r \u0026lt;\u003d r) {\n\t\td[i].add +\u003d x;\n\t\tpush(i);\n\t\treturn ;\n\t}\n\tupdate(i * 2, l, r , x);\n\tupdate(i * 2 + 1, l, r, x);\n\td[i].key \u003d max(d[i * 2].key, d[i * 2 + 1].key);\n}\nint main() {\n\tcin \u0026gt;\u0026gt; n;\n\tfor(int i \u003d 1; i \u0026lt;\u003d n; i++) {\n\t\tcin \u0026gt;\u0026gt; a[i];\n\t}\n\tbuild(1, 1, n + 1);\n\tint k;\n\tcin \u0026gt;\u0026gt; k;\n\tfor(int i \u003d 0; i \u0026lt; k; i++) {\n\t\tchar c;\n\t\tcin \u0026gt;\u0026gt; c;\n\t\tif(c \u003d\u003d \u0027g\u0027) {\n\t\t\tint x;\n\t\t\tcin \u0026gt;\u0026gt; x;\n\t\t\tcout \u0026lt;\u0026lt; get(1, x, x + 1) \u0026lt;\u0026lt; \u0027\\n\u0027;\n\t\t}else{\n\t\t\tint x, y, z;\n\t\t\tcin \u0026gt;\u0026gt; x \u0026gt;\u0026gt; y \u0026gt;\u0026gt; z;\n\t\t\tupdate(1, x, y + 1, z);\n\t\t}\n\t}\n\n\n    return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":[]}}