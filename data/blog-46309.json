{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1469722313,"rating":12,"authorHandle":"Noble_Mushtak","modificationTimeSeconds":1469755406,"id":46309,"title":"\u003cp\u003eCommented Solutions to Codeforces Round #364\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eAll solutions below are thoroughly commented and based on the \u003ca href\u003d\"//www.codeforces.com/blog/entry/46283\"\u003eofficial editorial\u003c/a\u003e. I might start doing this for one or two editorials every month starting now because writing alternate solutions for 701C and 701D and writing solutions for 701E and 701F (could not figure out on my own) really helped me understand the problems better. Also, I\u0027m sorry if the later solutions are more clunky; I\u0027m not used to solving problems of that difficulty. Thanks! \u003c/p\u003e\u003ch3\u003e\u003ca href\u003d\"//www.codeforces.com/contest/701/problem/A\"\u003e701A — Cards\u003c/a\u003e\u003c/h3\u003e\u003cp\u003eTheir explanation is pretty straight-forward, so \u003ca href\u003d\"//www.codeforces.com/contest/701/submission/19464068\"\u003ehere\u0027s the solution\u003c/a\u003e.\u003c/p\u003e\u003ch3\u003e\u003ca href\u003d\"//www.codeforces.com/contest/701/problem/B\"\u003e701B — Cells Not Under Attack\u003c/a\u003e\u003c/h3\u003e\u003cp\u003eHere, I deviate from the editorial in two ways:\u003c/p\u003e \u003cul\u003e   \u003cli\u003eBecause I am using C and do not have \u003ccode\u003eset\u003c/code\u003e, I instead mark rows and columns as attacked in an array of \u003ccode\u003ebool\u003c/code\u003es and count the number of attacked rows and columns as I go along.\u003c/li\u003e   \u003cli\u003eTheir formula is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e·\u003ci\u003en\u003c/i\u003e - \u003ci\u003ecnt\u003c/i\u003e\u003c/span\u003e where \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ecnt\u003c/i\u003e \u003d \u003ci\u003eszY\u003c/i\u003e·\u003ci\u003en\u003c/i\u003e + \u003ci\u003eszX\u003c/i\u003e·\u003ci\u003en\u003c/i\u003e - \u003ci\u003eszX\u003c/i\u003e·\u003ci\u003eszY\u003c/i\u003e\u003c/span\u003e. This gives us \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e·\u003ci\u003en\u003c/i\u003e - \u003ci\u003eszY\u003c/i\u003e·\u003ci\u003en\u003c/i\u003e - \u003ci\u003eszX\u003c/i\u003e·\u003ci\u003en\u003c/i\u003e + \u003ci\u003eszX\u003c/i\u003e·\u003ci\u003eszY\u003c/i\u003e \u003d (\u003ci\u003en\u003c/i\u003e - \u003ci\u003eszX\u003c/i\u003e)(\u003ci\u003en\u003c/i\u003e - \u003ci\u003eszY\u003c/i\u003e)\u003c/span\u003e. I use the latter in my solution.\u003c/li\u003e \u003c/ul\u003e\u003cp\u003eHere is \u003ca href\u003d\"//www.codeforces.com/contest/701/submission/19464524\"\u003emy solution for this problem\u003c/a\u003e.\u003c/p\u003e\u003ch3\u003e\u003ca href\u003d\"//www.codeforces.com/contest/701/problem/C\"\u003e701C — They Are Everywhere\u003c/a\u003e\u003c/h3\u003e\u003cp\u003eThe confusing part of their answer is that they\u0027re not really clear about when they\u0027re talking about looping through the different types of letters in \u003ccode\u003es\u003c/code\u003e or all of the letters in order. Here is my \u003ca href\u003d\"//www.codeforces.com/contest/701/submission/19463158\"\u003eimplementation of their solution\u003c/a\u003e.\u003c/p\u003e\u003ch3\u003e\u003ca href\u003d\"//www.codeforces.com/contest/701/problem/D\"\u003e701D — As Fast As Possible\u003c/a\u003e\u003c/h3\u003e\u003cp\u003eHere is \u003ca href\u003d\"//www.codeforces.com/contest/701/submission/19451211\"\u003emy binary search solution\u003c/a\u003e. The problem with their explanation here is it\u0027s out of order, they never actually show their equation for what I called \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e, their variable \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eposM\u003c/i\u003e\u003c/span\u003e convoluted their formula for \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e, and they never actually solve for what I called \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ey\u003c/i\u003e\u003c/span\u003e but instead only briefly mention that solutions must account for the bus going back.\u003c/p\u003e\u003ch3\u003e\u003ca href\u003d\"//www.codeforces.com/contest/701/problem/E\"\u003e701E — Connecting Universities\u003c/a\u003e\u003c/h3\u003e\u003cp\u003eI think the way they explained 701E pretty well other than the fact that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ev\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e is unnecessary since \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ev\u003c/i\u003e\u003c/sub\u003e  \u003d  1\u003c/span\u003e for all \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e\u003c/span\u003e. However, it is missing lots of detail if you\u0027re not so good at working with trees. Here\u0027s \u003ca href\u003d\"//www.codeforces.com/contest/701/submission/19451963\"\u003emy implementation of the editorial solution\u003c/a\u003e.\u003c/p\u003e\u003ch3\u003e\u003ca href\u003d\"//www.codeforces.com/contest/701/problem/F\"\u003e701F — Break Up\u003c/a\u003e\u003c/h3\u003e\u003cp\u003eI could not understand from the editorial\u0027s explanation how to find the second edge in the case of two edges until I looked at \u003ca href\u003d\"//www.codeforces.com/contest/700/submission/19379508\"\u003ethe \u003ccode\u003edfs2()\u003c/code\u003e function from this solution to 701F from Vosatorp\u003c/a\u003e, so thanks to them for this solution!\u003c/p\u003e\u003cp\u003eBasically, in our depth first search, if an edge from \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e in path from \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e\u003c/span\u003e to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003et\u003c/i\u003e\u003c/span\u003e is unnecessary, then there will contain a cycle with \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e and a vertex before \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e in the path. This is because since the edge is unnecessary, there exists another path from \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e\u003c/span\u003e to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003et\u003c/i\u003e\u003c/span\u003e without that edge. Let \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e be the vertex farthest along the original path that is before \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e on this new path. and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003er\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e be the vertex closest to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e that is after it on this new path. Then, using the old path, we get to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e, then \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003er\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e and using the new path, we get to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e. Thus, by this process, we have created a cycle with both \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e, proving our original point. Ergo, by contrapositives, edges where \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e is not in any cycle with a previous vertex in the path are necessary.\u003c/p\u003e\u003cp\u003eThis process seems to be a variation on \u003ca href\u003d\"https://en.wikipedia.org/wiki/Bridge_%28graph_theory%29#Tarjan.27s_Bridge-finding_algorithm\"\u003eTarjan\u0027s Bridge-Finding algorithm\u003c/a\u003e which I did not know before.\u003c/p\u003e\u003cp\u003eOther than that proof of correctness, everything else is pretty much explained in the comments of \u003ca href\u003d\"//www.codeforces.com/contest/701/submission/19470174\"\u003emy re-writing of Vosatorp\u0027s solution in C, without \u003ccode\u003evector\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e\u003ch3\u003e\u003ca href\u003d\"//www.codeforces.com/contest/700/problem/D\"\u003e700D — Huffman Coding on Segment\u003c/a\u003e\u003c/h3\u003e\u003cp\u003eComing when I have enough time/experience to understand the solution!\u003c/p\u003e\u003ch3\u003e\u003ca href\u003d\"//www.codeforces.com/contest/700/problem/E\"\u003e700E — Cool Slogans\u003c/a\u003e\u003c/h3\u003e\u003cp\u003eComing when I have enough time/experience to understand the solution!\u003c/p\u003e\u003c/div\u003e","tags":["#364","editorial","solutions"]}}