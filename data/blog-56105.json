{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1512144331,"rating":0,"authorHandle":"Dehayat","modificationTimeSeconds":1512212635,"id":56105,"title":"\u003cp\u003eWeek 2 contest Tutorial\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003ch1\u003eProblem A:\u003c/h1\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eTags\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eNext array\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eSolution\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eThe answer is the \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003enumberofstations\u003c/i\u003e\u003c/span\u003e \u003cspan class\u003d\"tex-span\"\u003e - \u003c/span\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ethelongesttrainride\u003c/i\u003e\u003c/span\u003e .\u003c/p\u003e\u003cp\u003eSo we need to check where all the trains go and choose the one which saves us the most distance.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHow to implement\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eWe start by iterating on array starting from index \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e - 1\u003c/span\u003e to index \u003cspan class\u003d\"tex-span\"\u003e0\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eIf \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003erecent\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/sub\u003e\u003c/span\u003e\u0027s value has not been set, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003enext\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e \u003d -1 as it cannot go anywhere otherwise \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003enext\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e \u003d \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003erecent\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/sub\u003e\u003c/span\u003e .\u003c/p\u003e\u003cp\u003eThen \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003erecent\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/sub\u003e\u003c/span\u003e \u003d \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eWhen we are done we take the \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003emax\u003c/i\u003e\u003c/span\u003e of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003enext\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e \u003cspan class\u003d\"tex-span\"\u003e - \u003c/span\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e for all \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eThe answer is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e \u003cspan class\u003d\"tex-span\"\u003e - \u003c/span\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003emax\u003c/i\u003e\u003c/span\u003e .\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003ecode\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003e#include \u0026lt;bits/stdc++.h\u0026gt;\nusing namespace std;\nconst int N \u003d 100010;\nint arr[N] ;\nmap\u0026lt;int,int\u0026gt; nxt;\n\nint main(){\n\tint mx \u003d 0 ;\n\tint n;\n\tcin \u0026gt;\u0026gt; n;\n\tfor(int i\u003d0;i\u0026lt;n;i++)\n\t\tcin \u0026gt;\u0026gt; arr[i];\n\tfor(int i\u003dn-1;i\u0026gt;\u003d0;i--){\n\t\tif(nxt.find(arr[i]) !\u003d nxt.end())\n\t\t\tmx \u003d max(mx,nxt[arr[i]] - i);\n\t\tnxt[arr[i]] \u003d i;\n\t}\n\tcout \u0026lt;\u0026lt; n - 1 - mx \u0026lt;\u0026lt; endl;\n    return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\u003ch1\u003eProblem B:\u003c/h1\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eTags\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eAd-hoc\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eSolution\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eThe brute force solution is to keep moving until the current money is not enough to move any more.\u003c/p\u003e\u003cp\u003eOne more optimization we can do so the solution passes is to calculate the number of full cycles we can do, which is \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/84/3c/843c12443ceeb02aa27dfd6b1f1608499ff50f9b.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, now the remaining money is not enough to make another full cycle so we just move until there are no money.\u003c/p\u003e\u003cp\u003ecomplexity : \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eo\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e)\u003c/span\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003ecode\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003e#include \u0026lt;bits/stdc++.h\u0026gt;\nusing namespace std;\nconst int N \u003d 100010;\nint arr[N] ; \n\nint main(){\n\tint n;\n\tlong long k , sum \u003d 0 ;\n\tcin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; k;\n\tfor(int i\u003d0;i\u0026lt;n;i++){\n\t\tscanf(\u0026quot;%d\u0026quot;,\u0026amp;arr[i]);\n\t\tsum +\u003d arr[i];\n\t}\n\tlong long cur \u003d k / sum;\n\tlong long ans \u003d cur * n;\n\tk -\u003d cur * sum;\n\tfor(int i\u003d0;i\u0026lt;n;i++){\n\t\tif(k \u0026lt; arr[i]) break;\n\t\tans++;\n\t\tk-\u003darr[i];\n\t}\n\tcout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; endl;\n    return 0;\n}\n\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\u003ch1\u003eProblem C:\u003c/h1\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eTags\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eAd-hoc\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eSolution\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eThe initial number of white cells equals to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e \u003cspan class\u003d\"tex-span\"\u003e × \u003c/span\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/span\u003e, now when we paint a row we remove \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e - \u003ci\u003ex\u003c/i\u003e\u003c/span\u003e white cells, where \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e is the number of recently removed white cells from that row, that number equals to the number of removed columns because when we remove a column we also remove a cell from each row, when we remove a column we remove \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e - \u003ci\u003ey\u003c/i\u003e\u003c/span\u003e white cells, where \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ey\u003c/i\u003e\u003c/span\u003e is the number of recently remove rows, also because when we remove a row, we remove a white cell from each column.\u003c/p\u003e\u003cp\u003ecomplexity : \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eo\u003c/i\u003e(\u003ci\u003ek\u003c/i\u003e)\u003c/span\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003ecode\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003e#include \u0026lt;bits/stdc++.h\u0026gt;\nusing namespace std;\n\nint main(){\n\tint n, m , k;\n\tscanf(\u0026quot;%d%d%d\u0026quot;,\u0026amp;n,\u0026amp;m,\u0026amp;k);\n\tint removedrows \u003d 0, removedcolumns \u003d 0 ;\n\tlong long cur \u003d (long long)n * m;\n\twhile(k--){\n\t\tchar x;\n\t\tint i;\n\t\tscanf(\u0026quot; %c%d\u0026quot;,\u0026amp;x,\u0026amp;i);\n\t\tif(x \u003d\u003d \u0027R\u0027){\n\t\t\tcur -\u003d (m - removedcolumns);\n\t\t\tremovedrows++;\n\t\t}\n\t\telse{\n\t\t\tcur -\u003d (n - removedrows);\n\t\t\tremovedcolumns++;\n\t\t}\n\t\tprintf(\u0026quot;%lld\\n\u0026quot;,cur);\n\n\t}\n    return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\u003ch1\u003eProblem D:\u003c/h1\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eTags\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eStrings\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eSolution\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eYou just need to make sure that both lines contain the exact same words and every word occurs the same amount of times.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHow to implement\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eWe need iterate over both string and store the frequency of each word stopping at any space or comma.\u003c/p\u003e\u003cp\u003eWhen we are done we check if the frequency of all the words in both strings are the same if so the answer is yes otherwise the answer is no.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003ecode\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cbr /\u003e#include \u0026lt;bits/stdc++.h\u0026gt;\nusing namespace std;\n\nmap\u0026lt;string,int\u0026gt; f1;\n\n\nint main() {\n    string x,y;\n    getline(cin,x);\n    getline(cin,y);\n    string a \u003d \u0026quot;\u0026quot;;\n    for(int i\u003d0;i\u0026lt;x.size();i++){\n        if(x[i]\u003d\u003d\u0027 \u0027||x[i]\u003d\u003d\u0027,\u0027){\n            if(a.size()){\n                f1[a]++;\n                a \u003d \u0026quot;\u0026quot;;\n            }\n        }\n        else{\n            a+\u003dx[i];\n        }\n    }\n    if(a.size()){\n        f1[a]++;\n        a \u003d \u0026quot;\u0026quot;;\n    }\n    for(int i\u003d0;i\u0026lt;y.size();i++){\n        if(y[i]\u003d\u003d\u0027 \u0027||y[i]\u003d\u003d\u0027,\u0027){\n            if(a.size()){\n                f1[a]--;\n                a \u003d \u0026quot;\u0026quot;;\n            }\n        }\n        else{\n            a+\u003dy[i];\n        }\n    }\n    if(a.size()){\n        f1[a]--;\n        a \u003d \u0026quot;\u0026quot;;\n    }\n    map\u0026lt;string,int\u0026gt;::iterator it;\n    for(it \u003d f1.begin();it!\u003df1.end();it++)\n        if(it-\u0026gt;second){\n            cout \u0026lt;\u0026lt; \u0026quot;NO\u0026quot; \u0026lt;\u0026lt; endl;\n            return 0;\n        }\n    cout \u0026lt;\u0026lt; \u0026quot;YES\u0026quot;;\n    return 0;\n}\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e","tags":[]}}