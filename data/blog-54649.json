{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1505906348,"rating":-13,"authorHandle":"Dhanadeepa_Red","modificationTimeSeconds":1505906348,"id":54649,"title":"\u003cp\u003eMaximum sum two non-overlapping subarrays of given size\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eGiven an array, we need to find two subarrays with a specific length K such that sum of these subarrays is maximum among \u003c/p\u003e\u003cp\u003eall possible choices of subarrays.\u003c/p\u003e\u003cp\u003earr size \u0026lt;10^5\u003c/p\u003e\u003cp\u003en\u0026lt;10^3\u003c/p\u003e\u003cp\u003eExamples:\u003c/p\u003e\u003cp\u003eInput : arr[] \u003d [2, 5, 1, 2, 7, 3, 0]\u003c/p\u003e \u003cpre\u003eK \u003d 2\u003c/pre\u003e\u003cp\u003eOutput : 2 5\u003c/p\u003e \u003cpre\u003e7 3\u003c/pre\u003e\u003cp\u003eWe can choose two arrays of maximum sum\u003c/p\u003e\u003cp\u003eas [2, 5] and [7, 3], the sum of these two \u003c/p\u003e\u003cp\u003esubarrays is maximum among all possible \u003c/p\u003e\u003cp\u003echoices of subarrays of length 2.\u003c/p\u003e\u003cp\u003eInput : arr[] \u003d {10, 1, 3, 15, 30, 40, 4, 50, 2, 1}\u003c/p\u003e \u003cpre\u003eK \u003d 3\u003c/pre\u003e\u003cp\u003eOutput : 3 15 30 \u003c/p\u003e \u003cpre\u003e40 4 50\u003c/pre\u003e\u003c/div\u003e","tags":[]}}