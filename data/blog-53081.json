{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":true,"creationTimeSeconds":1499097356,"rating":389,"authorHandle":"ifsmirnov","modificationTimeSeconds":1499117680,"id":53081,"title":"\u003cp\u003eJngen: generic library for generating testcases\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eTwo years ago I came up with an \u003ca href\u003d\"//codeforces.com/blog/entry/20108\"\u003eidea\u003c/a\u003e (Russian only) of making a generic library for creating testcases. Months have passed, thoughts circulated in my mind over and over, and finally I sculpted something in code. Far many things are yet not implemented, but I already frequently use ones which are.\u003c/p\u003e\u003cp\u003eHere it is: \u003ca href\u003d\"https://github.com/ifsmirnov/jngen\"\u003ehttps://github.com/ifsmirnov/jngen\u003c/a\u003e. You can download the library itself (its single header jngen.h) \u003ca href\u003d\"https://raw.githubusercontent.com/ifsmirnov/jngen/master/jngen.h\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eJngen works with arrays, graphs and trees. It also can generate some strings and geometry and provides command-line options parser and cool SVG drawer. Here are some working examples.\u003c/p\u003e \u003cpre\u003e\u003ccode\u003ecout \u0026lt;\u0026lt; Array::id(10).shuffled().add1() \u0026lt;\u0026lt; endl; // permutation of elements from 1 to 10\n\ncout \u0026lt;\u0026lt; Tree::random(100000, 20) \u0026lt;\u0026lt; endl; // \u0026quot;long\u0026quot; tree with elongation 20\n\npair\u0026lt;string, string\u0026gt; test \u003d rnds.antiHash({{mod1, base1}, {mod2, base2}}, \u0026quot;a-z\u0026quot;, 10000); // should be self-describing :)\n\ncout \u0026lt;\u0026lt; rndg.convexPolygon(1000, 1e9) \u0026lt;\u0026lt; endl;\n\ncout \u0026lt;\u0026lt; Graph::random(100000, 200000).connected() \u0026lt;\u0026lt; endl;\n\ncout \u0026lt;\u0026lt; rndm.randomPrime(1e18, 1e18 - 10000000) \u0026lt;\u0026lt; endl;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eAlmost all code is \u003ca href\u003d\"https://github.com/ifsmirnov/jngen#reference\"\u003edocumented\u003c/a\u003e, there are some real-world \u003ca href\u003d\"https://github.com/ifsmirnov/jngen/tree/master/examples\"\u003eexamples\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eGetting started is very easy. If you work with testlib.h and use in your generators only registerGen and rnd.next, replace \u003ccode\u003e#include \u0026quot;testlib.h\u0026quot;\u003c/code\u003e with \u003ccode\u003e#include \u0026quot;jngen.h\u0026quot;\u003c/code\u003e and you\u0027ll see no difference. Compilation will last a bit longer, but there is a \u003ca href\u003d\"https://github.com/ifsmirnov/jngen/blob/master/doc/library_build.md\"\u003eworkaround\u003c/a\u003e which makes it compile even faster than testlib.\u003c/p\u003e\u003cp\u003eI\u0027ll be happy if you try it and share your feelings and feedback. Everyone finds his code and interfaces perfect until shows them to the community.\u003c/p\u003e\u003cp\u003eCurrently the library has much more \u0026quot;basic\u0026quot; things and primitives than \u0026quot;real content\u0026quot; â€“ I mean there are more bricks than practical testcases. We\u0027re working on it: soon several \u0026quot;test suites\u0026quot; will be added, and you\u0027ll be able to create reasonable tests for your, say, LCA-like-queries problem, in several lines of code.\u003c/p\u003e\u003cp\u003eI\u0027d like to thank \u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/zemen\" title\u003d\"International Grandmaster zemen\"\u003ezemen\u003c/a\u003e, \u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/Endagorion\" title\u003d\"International Grandmaster Endagorion\"\u003eEndagorion\u003c/a\u003e and \u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/Errichto\" title\u003d\"International Grandmaster Errichto\"\u003eErrichto\u003c/a\u003e for useful discussions and advice, \u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/Endagorion\" title\u003d\"International Grandmaster Endagorion\"\u003eEndagorion\u003c/a\u003e, \u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/GlebsHP\" title\u003d\"International Grandmaster GlebsHP\"\u003eGlebsHP\u003c/a\u003e and \u003ca class\u003d\"rated-user user-orange\" href\u003d\"/profile/CherryTree\" title\u003d\"Master CherryTree\"\u003eCherryTree\u003c/a\u003e for their libraries from which I could \u003cs\u003eborrow code\u003c/s\u003e learn upon and \u003ca class\u003d\"rated-user user-admin\" href\u003d\"/profile/MikeMirzayanov\" title\u003d\"Headquarters, MikeMirzayanov\"\u003eMikeMirzayanov\u003c/a\u003e for testlib which was a massive source of inspiration on early stages.\u003c/p\u003e\u003c/div\u003e","tags":["jngen","generators","testlib"]}}