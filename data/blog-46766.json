{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1472117370,"rating":160,"authorHandle":"omgcoin","modificationTimeSeconds":1472119268,"id":46766,"title":"\u003cp\u003eI have no improvement at all after 10 months of consistent daily training. How to train more efficiently?\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eI spent more than 10 months of consistent training (almost every day, every week) and I have no improvement at all.\u003c/p\u003e\u003cp\u003eYesterday, my rating is dropped below the level where I was 12th October 2015 (a day of my first contest).\u003c/p\u003e\u003cp\u003eUsually, during contests, I can solve Div2 A for 10-15 minutes, Div2 B for 20-30 minutes, rarely I can solve Div2 C when it\u0027s easy. I was at that level in October 2015 and I\u0027m on the same level right now (August 2016).\u003c/p\u003e\u003cp\u003eI still can\u0027t solve Div2 C problems and I\u0027m still can\u0027t solve problem B quickly without mistakes or being hacked.\u003c/p\u003e\u003cp\u003eSo I have zero progress, zero improvement of my problem solving skills after 10 months of almost every day training.\u003c/p\u003e\u003cp\u003eI think there is something definitely wrong with my training method because it\u0027s absolutely ineffective.\u003c/p\u003e\u003cp\u003eI\u0027m looking for training advice from experienced participants because I don\u0027t want to spent another 10 months and end up exactly at the same level where I was 10 months ago.\u003c/p\u003e\u003cp\u003eMy background: I\u0027m working as C/C++ developer since 2009 (early days I was mainly C developer, currently I mostly C++11 developer).\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eHere is detailed description of my training program:\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eEvery time I\u0027m training on CodeForces, I set up timer for K number of minutes (where K%15 \u003d\u003d 0). For me, it\u0027s psychologically easier to not to be distracted during specific time frame. Also, I have a journal where I put how much minutes I spent on training every day (including contest time). I keep only \u0026quot;clean\u0026quot; time in my journal, i.e. time when I was not distracted at all. I work in silence and don\u0027t listen music during training.\u003c/p\u003e\u003cp\u003eAlso, I keep a journal of solved \u0026quot;hard\u0026quot; problems (every entry: day \u003d\u0026gt; number of solved problems, usually just one). I consider a problem as \u003cstrong\u003ehard\u003c/strong\u003e when the problem \u003cstrong\u003elevel \u0026gt;\u003d Div2 C\u003c/strong\u003e. I consider hard problem as solved in two cases:\u003c/p\u003e \u003col\u003e   \u003cli\u003eI solved problem without any hint;\u003c/li\u003e   \u003cli\u003eI looked at tutorial, then put off problem for a few days, and after try to recreate solution, and make sure that I feel confident that I really understand solution;\u003c/li\u003e \u003c/ol\u003e\u003cp\u003eI don\u0027t consider hard problem as solved if I implement it immediately after I read tutorial or when I don\u0027t feel confident that I really understand solution.\u003c/p\u003e\u003cp\u003eI started training on 10th October 2015.\u003c/p\u003e\u003cp\u003eSince 20th February 2016 I keep journal of how much time I spent. Since 11th May 2016 I keep journal of how much hard problems I solved.\u003c/p\u003e\u003cp\u003eHere is my fresh statistics of training:\u003c/p\u003e\u003cp\u003eI spent \u003cstrong\u003e89.45 hours\u003c/strong\u003e in last \u003cstrong\u003e93 days\u003c/strong\u003e (from May 24th till August 24th). It\u0027s about \u003cstrong\u003e0.96 hours per day\u003c/strong\u003e in average or \u003cstrong\u003e6.73 hours per week\u003c/strong\u003e in average.\u003c/p\u003e\u003cp\u003eI solved \u003cstrong\u003e26\u003c/strong\u003e hard problems in last \u003cstrong\u003e93\u003c/strong\u003e days. It\u0027s about \u003cstrong\u003e1 hard problem in 3.57\u003c/strong\u003e days or \u003cstrong\u003e1 problem in 3.44 hours\u003c/strong\u003e (often combined time for a few days).\u003c/p\u003e\u003cp\u003eUsually, I can train 15, 30 or 45 minutes in the morning before work and 30, 45, 60, 75, 90, 120 minutes in the evening after work.\u003c/p\u003e\u003cp\u003eI\u0027m keeping TODO list of C problems by adding CodeForces rounds to favorites. Usually I add about 20 rounds to favorites (when list is empty) and then work on them starting from down to top of the list till it becomes empty. If I put off problem for a while, I remove from favorites and add it again so that problem will be on top of the list (since I take problems from back of the list).\u003c/p\u003e\u003cp\u003eTypical workflow on problem Div2 C (note that steps could be split into several days):\u003c/p\u003e \u003col\u003e   \u003cli\u003eTrying to solve problem for 1.5 hours (could be split into two days);\u003c/li\u003e   \u003cli\u003eLook to tutorial for a hint. It means I can read only first few sentences of tutorial till I get the idea of how to solve problem but don\u0027t read entire tutorial. For example, I can read that solution uses two dimensional DP array with states k, m. After that I\u0027m trying to came up with rest of solution on my own;\u003c/li\u003e   \u003cli\u003eIf I\u0027m still can not solve after another hour, I read tutorial and comments till I understand idea of solution. It could take hour, two, three during several days till I really understand what tutorial is talking about;\u003c/li\u003e   \u003cli\u003eWhen I finally understand solution, I put off this problem for a while (i.e. put to the top of the list). After a while, I check whether or not I really understood solution. If I can easily recreate solution after one or two weeks, then I really understand;\u003c/li\u003e   \u003cli\u003eI usually can\u0027t solve C problems without hints from tutorial. Sometimes, I can\u0027t even solve it with tutorial since I don\u0027t understand solution at all. In this case I drop the problem for uncertain period of time (i.e. remove from my TODO list);\u003c/li\u003e \u003c/ol\u003e\u003cp\u003eSo usually, my work on a problem Div2 C can take quite a while. For example:\u003c/p\u003e\u003cp\u003eDay 1: Spend 1.5 hour, can not solve;\u003c/p\u003e\u003cp\u003eDay 2: Look for a hint, try to solve with a hint for another 0.5 hours. Still can not solve;\u003c/p\u003e\u003cp\u003eDay 3: Look at tutorial of the problem and all comments for 1 hour, finally understood solution, put off problem for a few days;\u003c/p\u003e\u003cp\u003eDay 4 (after a few days or weeks): Spend 1 hour to implement solution;\u003c/p\u003e\u003cp\u003e\u003cstrong\u003ePossible reasons of inefficiency of my training program:\u003c/strong\u003e\u003c/p\u003e \u003col\u003e   \u003cli\u003eI spent too few hours per day on average. ~1 hour per day is not enough. It will take years till my rating become stable blue;\u003c/li\u003e   \u003cli\u003eI spent too much time on Div2 C problems. 26 problems in 93 days is ridiculously low number. I should somehow solve 26 problems in two weeks, not 93 days to get any measurable progress;\u003c/li\u003e \u003c/ol\u003e\u003cp\u003ePlease, help to fix my training program.\u003c/p\u003e\u003cp\u003eP.S. I read CodeForces classic posts about training:\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"//codeforces.com/blog/entry/17842\"\u003eThe \u0027science\u0027 of training in competitive programming\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"//codeforces.com/blog/entry/20548\"\u003eHow to come up with the solutions: techniques\u003c/a\u003e\u003c/p\u003e\u003cp\u003eI know things like \u003ca href\u003d\"https://en.wikipedia.org/wiki/Zone_of_proximal_development\"\u003ezone of proximal development\u003c/a\u003e\u003c/p\u003e\u003cp\u003eThe problem is that \u003cstrong\u003eDiv2 B\u003c/strong\u003e is too easy (more than 90% of success) while \u003cstrong\u003eDiv2 C\u003c/strong\u003e is too hard (low success rate). It\u0027s too big gap between \u003cstrong\u003eB\u003c/strong\u003e and \u003cstrong\u003eC\u003c/strong\u003e.\u003c/p\u003e\u003c/div\u003e","tags":["training"]}}