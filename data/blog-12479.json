{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":false,"creationTimeSeconds":1401471243,"rating":36,"authorHandle":"HolkinPV","modificationTimeSeconds":1401531001,"id":12479,"title":"\u003cp\u003eCodeforces Round #249 (Div. 2) Editorial\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003ch3\u003e\u003ca href\u003d\"/contest/435/problem/A\" title\u003d\"Codeforces Round 249 (Div. 2)\"\u003e435A - Queue on Bus Stop\u003c/a\u003e\u003c/h3\u003e\u003cp\u003eThe problem could be solved in one cycle by groups. The solution could be implemented in this way:\u003c/p\u003e \u003cpre\u003eint result \u003d 1;\nint people \u003d 0;\n\nfor(int i \u003d 0; i \u0026lt; n; i++)\n{\n    if (people + a[i] \u0026lt;\u003d m)\n        people +\u003d a[i];\n    else\n    {\n        result++;\n        people \u003d a[i];\n    }\n}\n\ncout \u0026lt;\u0026lt; result \u0026lt;\u0026lt; endl;\u003c/pre\u003e\u003ch3\u003e\u003ca href\u003d\"/contest/435/problem/B\" title\u003d\"Codeforces Round 249 (Div. 2)\"\u003e435B - Pasha Maximizes\u003c/a\u003e\u003c/h3\u003e\u003cp\u003eThe problem could solved by greedy algorithm. We will try to pull maximum digits to the beginning. The algorithm could be described in this way:\u003c/p\u003e\u003cp\u003e1) Consider every position in the number from the first, assume that the current position is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e\u003cbr /\u003e2) Find the nearest maximum digit from the next \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e digits of the number, assume that this digit is on position \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e\u003cbr /\u003e3) If this maximum digit is greater than current digit on position \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e, then make series of swaps, push this digit to position \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e, also decrease \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e, that is do \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e \u003d \u003ci\u003ek\u003c/i\u003e - (\u003ci\u003ej\u003c/i\u003e - \u003ci\u003ei\u003c/i\u003e)\u003c/span\u003e\u003c/p\u003e\u003ch3\u003e\u003ca href\u003d\"/contest/435/problem/C\" title\u003d\"Codeforces Round 249 (Div. 2)\"\u003e435C - Cardiogram\u003c/a\u003e\u003c/h3\u003e\u003cp\u003eThis problem is technical, you should implement what is written in the statement. First, you need to calc coordinates of all points of the polyline. Also create matrix for the answer. Coordinate \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ey\u003c/i\u003e\u003c/span\u003e could become negative, so it is useful to double the sizes of the matrix and move the picture up to \u003cspan class\u003d\"tex-span\"\u003e1000\u003c/span\u003e. In the end you should print the answer without unnecessary empty rows.\u003c/p\u003e\u003cp\u003eTo paint the cardiogram you should consider every consecutive pair of points of the polyline and set characters in the answer matrix between them. If the polyline goes up then set slash, otherwise set backslash. To understand the solution better please paint the first test case on the paper, mark coordinates of the points and find what values to set in cycles in your program.\u003c/p\u003e\u003ch3\u003e\u003ca href\u003d\"/contest/435/problem/D\" title\u003d\"Codeforces Round 249 (Div. 2)\"\u003e435D - Special Grid\u003c/a\u003e\u003c/h3\u003e\u003cp\u003eValues \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/span\u003e are not so large, so the solution with complexity \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003emax\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e, \u003ci\u003em\u003c/i\u003e)\u003csup class\u003d\"upper-index\"\u003e3\u003c/sup\u003e)\u003c/span\u003e should pass. It means that you should consider all triangles and check all conditions in \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(1)\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eTo make this check you should precalc arrays of partial sums on all diagonals, rows and columns. After that you could check, that there is no black nodes on the side using one sum-query.\u003c/p\u003e\u003cp\u003eSome hints about this problem and the implementation:\u003c/p\u003e \u003cul\u003e   \u003cli\u003eall correct triangles are isosceles right triangles;\u003c/li\u003e   \u003cli\u003eeither all legs or hypotenuse of the triangle is parallel to the sides of the grid;\u003c/li\u003e   \u003cli\u003eif you know how to solve the problem for two types of the triangles, you can get the whole solution making 4 rotates of the matrix.\u003c/li\u003e \u003c/ul\u003e\u003ch3\u003e\u003ca href\u003d\"/contest/435/problem/E\" title\u003d\"Codeforces Round 249 (Div. 2)\"\u003e435E - Special Graph\u003c/a\u003e\u003c/h3\u003e\u003cp\u003eTo solve this problem you have to paint different correct colorings on the paper. After it you could observe that there are two types of them: vertical and horizontal.\u003c/p\u003e\u003cp\u003eVertical colorings looks like this:\u003c/p\u003e\u003cp\u003eacbcbd...\u003cbr /\u003ebdadac...\u003cbr /\u003eacbcbd...\u003cbr /\u003ebdadac...\u003cbr /\u003eacbcbd...\u003cbr /\u003ebdadac...\u003cbr /\u003e......\u003c/p\u003e\u003cp\u003eIn other words, each vertical has only two colors, odd verticals have equal colors, even verticals have two others. The order of the colors on every vertical could be arbitrary.\u003c/p\u003e\u003cp\u003eHorizontal colorings are the same, they are rotated by 90 degrees. Of course, there are both vertical and horizontal colorings, but it doesn\u0027t change the solution.\u003c/p\u003e\u003cp\u003eSo, you should consider every type of described colorings and check them. That is, you could choose what colors are on the verticals or what colors are on horizontals and check that obtained coloring matches the given matrix.\u003c/p\u003e\u003cp\u003eThe solution\u0027s complexity is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e × \u003ci\u003em\u003c/i\u003e)\u003c/span\u003e.\u003c/p\u003e\u003c/div\u003e","tags":["codeforces","249","tutorial"]}}