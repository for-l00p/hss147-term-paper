{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1504844422,"rating":8,"authorHandle":"liv1n9","modificationTimeSeconds":1504844422,"id":54404,"title":"\u003cp\u003eFind longest paths from every vertices which are not leaves to leaves\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eGiven a tree with n vertices (n \u0026lt;\u003d 1e5), n-1 egdes with positive weight (length). For every vertex that are not leaves, find the longest path from it to a leaf.\u003c/p\u003e\u003cp\u003eI have just come up with an o(n^2) brute-force algorithm, that is for every leaf, we dfs from it and update the result. Can we solve it with better complexity?\u003c/p\u003e\u003c/div\u003e","tags":["tree","longest path","leaf"]}}