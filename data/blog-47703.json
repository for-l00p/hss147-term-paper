{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1476332426,"rating":0,"authorHandle":"shahidul_brur","modificationTimeSeconds":1476386666,"id":47703,"title":"\u003cp\u003eHelp Needed for LightOj 1052\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e\u003cstrong\u003eProblem statement:\u003c/strong\u003e \u003ca href\u003d\"http://www.lightoj.com/volume_showproblem.php?problem\u003d1052\"\u003eProblem link\u003c/a\u003e \u0026quot;One day Jibon started a string of arbitrary (of course positive) length consisting of only \u003cstrong\u003e{a, b}\u003c/strong\u003e. He considered it as 1st string and generated subsequent strings from it by replacing all the b\u0027s with ab and all the a\u0027s with b. For example, if he ith string is abab, (i+1)th string will be b(ab)b(ab) \u003d babbab. He found that the N\u0027th string has length X and M\u0027th string has length Y. He wondered what will be length of the K\u0027th string.\u0026quot;\u003c/p\u003e\u003cp\u003eI observed that the i\u0027th string length, L[i] \u003d L[i-1] + L[i-2]. So, summery is, Given L[n] \u003d x, and L[m] \u003d y, find L[k] \u003d ?, where L[i] \u003d L[i-1] + L[i-2]. If it is impossible, then print \u0026quot;Impossible\u0026quot;.\u003c/p\u003e\u003cp\u003eSince, n and m is not always consecutive, how to find L[k]?\u003c/p\u003e\u003c/div\u003e","tags":["lightoj 1052","matrix exponentiation","recursion","pattern","lightoj"]}}