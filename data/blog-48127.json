{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1477979795,"rating":0,"authorHandle":"zscoder","modificationTimeSeconds":1477979795,"id":48127,"title":"\u003cp\u003eIterating Through All Subsets of A Set (Bitwise Operators)\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eSometimes, you might find that the constraints of a problem allows exponential solutions. It is quite common that some problems have an easy subtask which requires you to brute force by iterating through all subsets. For example, suppose the problem is \u0026quot;Given a set of integers of size \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eN\u003c/i\u003e\u003c/span\u003e, find some subset which has the maximum sum\u0026quot;. There\u0027s an obvious \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e)\u003c/span\u003e solution, but maybe you can\u0027t find the faster solution and Subtask 1 might have constraints like \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eN\u003c/i\u003e ≤ 20\u003c/span\u003e. The naive method would be to enumerate all subsets of the set of integers, and then try the sets one by one to find the best subset. However, iterating through all subsets itself is not trivial, and thus here are some resources explaining how to do this :\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://fishi.devtail.com/weblog/2015/05/18/common-bitwise-techniques-subset-iterations/\"\u003ehttp://fishi.devtail.com/weblog/2015/05/18/common-bitwise-techniques-subset-iterations/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.topcoder.com/community/data-science/data-science-tutorials/a-bit-of-fun-fun-with-bits/\"\u003ehttps://www.topcoder.com/community/data-science/data-science-tutorials/a-bit-of-fun-fun-with-bits/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://apps.topcoder.com/forums/%3bjsessionid\u003dE09FA75A6E638BF03B4DE179C3F53FAB?module\u003dThread\u0026amp;threadID\u003d642641\u0026amp;start\u003d0\u0026amp;mc\u003d8#1106145\"\u003ehttps://apps.topcoder.com/forums/%3bjsessionid\u003dE09FA75A6E638BF03B4DE179C3F53FAB?module\u003dThread\u0026amp;threadID\u003d642641\u0026amp;start\u003d0\u0026amp;mc\u003d8#1106145\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"//codeforces.com/blog/entry/12551\"\u003ehttp://codeforces.com/blog/entry/12551\u003c/a\u003e\u003c/p\u003e\u003cp\u003eThis skill might come in handy even at IOI level. (though most likely you will only get Subtask 1 using this) There\u0027re also many other cool stuff you can do with Bitwise Operators. Note that this method can be extended to iterate through, say, all binary strings of length \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e etc...\u003c/p\u003e\u003cp\u003eHere are 2 problems from past MCO qualifiers with subtasks that accepts exponential solutions :\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.hackerrank.com/contests/mco-qualifying-round-2/challenges/e-justin-and-multiple-choice-test\"\u003eProblem 1 (Subtask 2)\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.hackerrank.com/contests/mco-qualifying-round-3/challenges/e-justin-and-train-stations\"\u003eProblem 2 (Subtask 1, Subtask 2 requires one more trick)\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e","tags":[]}}