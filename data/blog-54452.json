{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1505060811,"rating":47,"authorHandle":"RussianCodeCup","modificationTimeSeconds":1505060811,"id":54452,"title":"\u003cp\u003eRussian Code Cup 2017 Finals — Results and Editorial\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eFirst of all, congratulations to \u003ca class\u003d\"rated-user user-legendary\" href\u003d\"/profile/moejy0viiiiiv\" title\u003d\"Legendary grandmaster moejy0viiiiiv\"\u003e\u003cspan class\u003d\"legendary-user-first-letter\"\u003em\u003c/span\u003eoejy0viiiiiv\u003c/a\u003e for winning, \u003ca class\u003d\"rated-user user-legendary\" href\u003d\"/profile/LHiC\" title\u003d\"Legendary grandmaster LHiC\"\u003e\u003cspan class\u003d\"legendary-user-first-letter\"\u003eL\u003c/span\u003eHiC\u003c/a\u003e and \u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/jcccccccccccccccccccccsb\" title\u003d\"International Grandmaster jcccccccccccccccccccccsb\"\u003ejcccccccccccccccccccccsb\u003c/a\u003e for coming second and third. The Final Round proved to be quite challenging, and we are happy that the results are tight.\u003c/p\u003e\u003cp\u003eThe round was prepared by \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/Aksenov239\" title\u003d\"Candidate Master Aksenov239\"\u003eAksenov239\u003c/a\u003e, \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/GShark\" title\u003d\"Expert GShark\"\u003eGShark\u003c/a\u003e, \u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/izban\" title\u003d\"International Grandmaster izban\"\u003eizban\u003c/a\u003e, \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/manoprenko\" title\u003d\"Candidate Master manoprenko\"\u003emanoprenko\u003c/a\u003e, \u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/niyaznigmatul\" title\u003d\"International Grandmaster niyaznigmatul\"\u003eniyaznigmatul\u003c/a\u003e, \u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/qwerty787788\" title\u003d\"International Grandmaster qwerty787788\"\u003eqwerty787788\u003c/a\u003e and \u003ca class\u003d\"rated-user user-legendary\" href\u003d\"/profile/SpyCheese\" title\u003d\"Legendary grandmaster SpyCheese\"\u003e\u003cspan class\u003d\"legendary-user-first-letter\"\u003eS\u003c/span\u003epyCheese\u003c/a\u003e, supervisor \u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/andrewzta\" title\u003d\"Grandmaster andrewzta\"\u003eandrewzta\u003c/a\u003e. Special thanks for this round goes to \u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/izban\" title\u003d\"International Grandmaster izban\"\u003eizban\u003c/a\u003e who is the author of problems D, E and F, and also gave a lot of important comments for all problems of the round.\u003c/p\u003e\u003cp\u003eNow let us move on to the editorial.\u003c/p\u003e\u003cdiv class\u003d\"problem-statement\"\u003e\u003cdiv class\u003d\"header\"\u003e\u003cdiv class\u003d\"title\"\u003eA. Set Theory\u003c/div\u003e\u003c/div\u003e\u003cdiv\u003e\u003cp\u003eFirst let us prove that the answer is always \u003cspan class\u003d\"tex-font-style-tt\"\u003eYES\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eLet us iterate over \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e and check if summing it up with all \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e values don\u0027t result in values that we already have. If no conflict is found, add the corresponding \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eLet us give some estimate for the maximum element of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u003c/span\u003e. The reason that we cannot include \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003c/sub\u003e\u003c/span\u003e, to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u003c/span\u003e is the equality \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/sub\u003e + \u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/sub\u003e \u003d \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003c/sub\u003e + \u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003c/sub\u003e\u003c/span\u003e, so \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003c/sub\u003e \u003d \u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/sub\u003e - (\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003c/sub\u003e - \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/sub\u003e)\u003c/span\u003e. Each element of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u003c/span\u003e forbids \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e)\u003c/span\u003e values, so \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003emax\u003c/i\u003e(\u003ci\u003eB\u003c/i\u003e)\u003c/span\u003e is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e3\u003c/sup\u003e)\u003c/span\u003e. That means that the answer always exists for the given constraints.\u003c/p\u003e\u003cp\u003eNow let us speed up the test that we can add a number to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u003c/span\u003e. Let us use an array \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ebad\u003c/i\u003e\u003c/span\u003e, that marks the numbers that we are not able to include to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u003c/span\u003e. When trying the value \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e, we can add it to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u003c/span\u003e if it is not marked in \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ebad\u003c/i\u003e\u003c/span\u003e. Now the numbers that are equal to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e + \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/sub\u003e - \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003c/sub\u003e\u003c/span\u003e are forbidden, let us mark them in \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ebad\u003c/i\u003e\u003c/span\u003e. The complexity is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e3\u003c/sup\u003e)\u003c/span\u003e for each test case.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"problem-statement\"\u003e\u003cdiv class\u003d\"header\"\u003e\u003cdiv class\u003d\"title\"\u003eB. Similar Words\u003c/div\u003e\u003c/div\u003e\u003cdiv\u003e\u003cp\u003eLet us consider the following \u003cspan class\u003d\"tex-font-style-it\"\u003esimilarity\u003c/span\u003e graph: the vertices are the prefixes of the given words, two vertices are connected by an edge if the corresponding words are similar. Note that the set of vertices in this graph is the same as in the trie for the given words, so it doesn\u0027t exceed the sum of lengths of words.\u003c/p\u003e\u003cp\u003eLet us prove that the resulting graph is a forest. If two words are similar, let us call the shorter one the parent of the longer one. Each vertex now has at most one parent, and there are no cycles, so the graph is a set of trees — a forest.\u003c/p\u003e\u003cp\u003eNow the required set is the independent set in the constructed similarity graph, so we can use dynamic programming or greedy algorithm to find it.\u003c/p\u003e\u003cp\u003eThere are two ways to construct the similarity graph.\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-font-style-bf\"\u003eWay 1. Hashes\u003c/span\u003e For each prefix find its hash, make a set of all hashes. Now for each prefix remove its first letter, check if such hash exists. If it does, connect them by an edge.\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-font-style-bf\"\u003eWay 2. Aho-Corasick\u003c/span\u003e\u003c/p\u003e\u003cp\u003eLet us build Aho-Corasick automaton for the given set of words. The vertices of the similarity graph are automaton vertices. An edge exists between two vertices if the suffix link from one of them goes to the other one, and their depths differ by exacly \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"problem-statement\"\u003e\u003cdiv class\u003d\"header\"\u003e\u003cdiv class\u003d\"title\"\u003eC. Eleventh Birthday\u003c/div\u003e\u003c/div\u003e\u003cdiv\u003e\u003cp\u003eLet us use divisibility rule for eleven. The number is divisible by eleven if the sum of digits at odd positions is equal to the sum of digits at even positions modulo 11. So for each number on a card there are only two parameters that we care about: the sign interchanging sum of its digits with digits at odd positions positive and digits at even position negative, and the parity of its digit count.\u003c/p\u003e\u003cp\u003eLet us divide all cards to two groups: with even digit count and with odd digit count. Let us first put cards with numbers that have odd count of digits. Half of them (rounded up) will have their sign interchanging sum used as positive, other half as negative. Let us use dynamic programming to find the number of ways to sum them up to have a given sum modulo 11. The state includes the number of cards considered, the number of cards that are used as positive, and the current sum modulo 11. There are two transitions: take the current card as positive, and take it as negative.\u003c/p\u003e\u003cp\u003eIf there are no cards with odd digit count, no matter how you order even digit count cards the result modulo 11 is the same. So the answer is either \u003cspan class\u003d\"tex-span\"\u003e0\u003c/span\u003e or \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e!\u003c/span\u003e. In the other case each even digit count card can be used either as positive, or as negative, independent of the other cards. Use analogous dynamic programming to count the number of ways to get each possible sum modulo 11. \u003c/p\u003e\u003cp\u003eFinally, combine results for even and odd digit count cards, getting the total sum modulo 11 equal to 0. \u003c/p\u003e\u003cp\u003eTime complexity is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e)\u003c/span\u003e. \u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"problem-statement\"\u003e\u003cdiv class\u003d\"header\"\u003e\u003cdiv class\u003d\"title\"\u003eD. Masha and Cactus\u003c/div\u003e\u003c/div\u003e\u003cdiv\u003e\u003cp\u003eLet us use dynamic programming for a rooted tree and some data structures. Denote as \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ev\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e the maximal total beauty of edges that have both ends in a subtree of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e\u003c/span\u003e, such that if we add them all to the subtree it would be a cactus.\u003c/p\u003e\u003cp\u003eTo calculate \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ev\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e let us consider two cases: \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e\u003c/span\u003e belongs to some cycle, or it doesn\u0027t. If it doesn\u0027t belong to any cycle, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ev\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e is equal to the sum of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eu\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e for all children \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eu\u003c/i\u003e\u003c/span\u003e of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e\u003c/span\u003e. \u003c/p\u003e\u003cp\u003eIf \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e\u003c/span\u003e belongs to a cycle, let us iterate over all possible cycles it can belong to. Such cycle is generated by an added edge \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ex\u003c/i\u003e, \u003ci\u003ey\u003c/i\u003e)\u003c/span\u003e such that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eLCA\u003c/i\u003e(\u003ci\u003ex\u003c/i\u003e, \u003ci\u003ey\u003c/i\u003e) \u003d \u003ci\u003ev\u003c/i\u003e\u003c/span\u003e. Try all possible such edges and then temporarily delete a path from \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ey\u003c/i\u003e\u003c/span\u003e from a tree, calculate the sum of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eu\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e for all \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eu\u003c/i\u003e\u003c/span\u003e — roots of the isolated subtrees after the deletion of the path, and add it to the beauty of \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ex\u003c/i\u003e, \u003ci\u003ey\u003c/i\u003e)\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eNow we have an \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003enm\u003c/i\u003e)\u003c/span\u003e solution.\u003c/p\u003e\u003cp\u003eTo speed up this solution let us use some data structures. First, we need to calculate \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eLCA\u003c/i\u003e\u003c/span\u003e for all endpoints of the given edges, any fast enough standard algorithm is fine. The second thing to do is to be able to calculate the sum of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eu\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e for all subtrees after removing the path. To do it, use the following additional values: \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eg\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eu\u003c/i\u003e\u003c/sub\u003e \u003d \u003ci\u003ef\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ep\u003c/i\u003e\u003c/sub\u003e - \u003ci\u003ef\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eu\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e, where \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003c/span\u003e is the parent of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eu\u003c/i\u003e\u003c/span\u003e, and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ev\u003c/i\u003e\u003c/sub\u003e \u003d \u003ci\u003esum\u003c/i\u003e(\u003ci\u003ef\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eu\u003c/i\u003e\u003c/sub\u003e)\u003c/span\u003e, where \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eu\u003c/i\u003e\u003c/span\u003e are the children of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e\u003c/span\u003e. \u003c/p\u003e\u003cp\u003eNow the sum of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eu\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e for all subtrees after \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e - \u003ci\u003ey\u003c/i\u003e\u003c/span\u003e path removal is the sum of the following values: \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ey\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ev\u003c/i\u003e\u003c/sub\u003e - \u003ci\u003ef\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ex\u003c/i\u003e\u0027\u003c/sub\u003e - \u003ci\u003ef\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ey\u003c/i\u003e\u0027\u003c/sub\u003e\u003c/span\u003e, the sum of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eg\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e for all \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e at \u003cspan class\u003d\"tex-span\"\u003e[\u003ci\u003ex\u003c/i\u003e, \u003ci\u003ex\u003c/i\u003e\u0027)\u003c/span\u003e, the sum of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eg\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e for all \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e at \u003cspan class\u003d\"tex-span\"\u003e[\u003ci\u003ey\u003c/i\u003e, \u003ci\u003ey\u003c/i\u003e\u0027)\u003c/span\u003e, where \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u0027\u003c/span\u003e is the child of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e\u003c/span\u003e that has \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e in its subtree, and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ey\u003c/i\u003e\u0027\u003c/span\u003e is the child of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e\u003c/span\u003e that has \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ey\u003c/i\u003e\u003c/span\u003e in its subtree. We need some data structure for a tree that supports value change in a vertex and the sum for a path, range tree or Fenwick are fine. The complexity is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e((\u003ci\u003en\u003c/i\u003e + \u003ci\u003em\u003c/i\u003e)\u003ci\u003elog\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e))\u003c/span\u003e.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"problem-statement\"\u003e\u003cdiv class\u003d\"header\"\u003e\u003cdiv class\u003d\"title\"\u003eE. Satellites\u003c/div\u003e\u003c/div\u003e\u003cdiv\u003e\u003cp\u003eAny point \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eX\u003c/i\u003e\u003c/span\u003e can be given by two angles \u003cspan class\u003d\"tex-span\"\u003eα \u003d \u003ci\u003eXAB\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003eβ \u003d \u003ci\u003eXBA\u003c/i\u003e\u003c/span\u003e. \u003c/p\u003e\u003ccenter\u003e \u003cimg class\u003d\"tex-graphics\" src\u003d\"/predownloaded/dd/ae/ddaeff9f56aea5e6940b469b7289d992483609f9.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" width\u003d\"453px\" /\u003e \u003c/center\u003e\u003cp\u003eThe point \u003cspan class\u003d\"tex-span\"\u003e(α\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e, β\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e)\u003c/span\u003e is in coverage area of a satellite at the point \u003cspan class\u003d\"tex-span\"\u003e(α\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e, β\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e)\u003c/span\u003e, if \u003cspan class\u003d\"tex-span\"\u003eα\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e ≤ α\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003eβ\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e ≤ β\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eLet two satellites that want to create a communication channel are at points \u003cspan class\u003d\"tex-span\"\u003e(α\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e, β\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e)\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e(α\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e, β\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e)\u003c/span\u003e. Repeater must be positioned in such point \u003cspan class\u003d\"tex-span\"\u003e(α\u003csub class\u003d\"lower-index\"\u003e0\u003c/sub\u003e, β\u003csub class\u003d\"lower-index\"\u003e0\u003c/sub\u003e)\u003c/span\u003e, that \u003cspan class\u003d\"tex-span\"\u003eα\u003csub class\u003d\"lower-index\"\u003e0\u003c/sub\u003e ≤ \u003ci\u003emin\u003c/i\u003e(α\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e, α\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e)\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003eβ\u003csub class\u003d\"lower-index\"\u003e0\u003c/sub\u003e ≤ \u003ci\u003emin\u003c/i\u003e(β\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e, β\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e)\u003c/span\u003e. To make it harder for it to get to other satellites coverage area, it is reasonable to maximize \u003cspan class\u003d\"tex-span\"\u003eα\u003csub class\u003d\"lower-index\"\u003e0\u003c/sub\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003eβ\u003csub class\u003d\"lower-index\"\u003e0\u003c/sub\u003e\u003c/span\u003e: \u003cspan class\u003d\"tex-span\"\u003eα\u003csub class\u003d\"lower-index\"\u003e0\u003c/sub\u003e \u003d \u003ci\u003emin\u003c/i\u003e(α\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e, α\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e)\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003eβ\u003csub class\u003d\"lower-index\"\u003e0\u003c/sub\u003e \u003d \u003ci\u003emin\u003c/i\u003e(β\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e, β\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e)\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eNow let us move to a solution. Consider a query of type \u003cspan class\u003d\"tex-span\"\u003e3\u003c/span\u003e: you are given two satellites at points \u003cspan class\u003d\"tex-span\"\u003e(α\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e, β\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e)\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e(α\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e, β\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e)\u003c/span\u003e. You must check whether the point \u003cspan class\u003d\"tex-span\"\u003e(α\u003csub class\u003d\"lower-index\"\u003e0\u003c/sub\u003e, β\u003csub class\u003d\"lower-index\"\u003e0\u003c/sub\u003e) \u003d (\u003ci\u003emin\u003c/i\u003e(α\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e, α\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e), \u003ci\u003emin\u003c/i\u003e(β\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e, β\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e))\u003c/span\u003e is not in the coverage area of any other satellite. That means that among all satellites with \u003cspan class\u003d\"tex-span\"\u003eα ≥ α\u003csub class\u003d\"lower-index\"\u003e0\u003c/sub\u003e\u003c/span\u003e the maximum value of \u003cspan class\u003d\"tex-span\"\u003eβ\u003c/span\u003e is smaller than \u003cspan class\u003d\"tex-span\"\u003eβ\u003csub class\u003d\"lower-index\"\u003e0\u003c/sub\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eThe solution is offline, it considers all satellites from the test data and just turns them on and off. Sort all satellites by \u003cspan class\u003d\"tex-span\"\u003eα\u003c/span\u003e. Each moment for each satellite we store its \u003cspan class\u003d\"tex-span\"\u003eβ\u003c/span\u003e if it exists, or \u003cspan class\u003d\"tex-span\"\u003e - ∞\u003c/span\u003e if it doesn\u0027t. Let us build a range tree for maximum, and update values as satellites come and go. The query is a range maximum. To avoid considering the satellites from the query, change their values to \u003cspan class\u003d\"tex-span\"\u003e - ∞\u003c/span\u003e before the query, and restore them afterwards.\u003c/p\u003e\u003cp\u003eThe next thing to do is to get rid of floating point numbers. Instead of calculating the angle values, we will only compare them using cross product. Similarly, instead of storing \u003cspan class\u003d\"tex-span\"\u003eβ\u003c/span\u003e values in range tree, we will store indices and compare them by cross product in integers.\u003c/p\u003e\u003cp\u003eThe final remark: we need to check that the point \u003cspan class\u003d\"tex-span\"\u003e(α\u003csub class\u003d\"lower-index\"\u003e0\u003c/sub\u003e, β\u003csub class\u003d\"lower-index\"\u003e0\u003c/sub\u003e)\u003c/span\u003e is not inside the planet. The point is inside the planet, if the angle \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eAXB\u003c/i\u003e\u003c/span\u003e is obtuse, that can be checked by a scalar product of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eXA\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eXB\u003c/i\u003e\u003c/span\u003e. The point \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eX\u003c/i\u003e\u003c/span\u003e can have non-integer coordinates, so we will not look for it, but will use colinear vectors from among those connecting satellite points to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u003c/span\u003e.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"problem-statement\"\u003e\u003cdiv class\u003d\"header\"\u003e\u003cdiv class\u003d\"title\"\u003eF. To Play or not to Play\u003c/div\u003e\u003c/div\u003e\u003cdiv\u003e\u003cp\u003eWe give the main ideas of the solution, leaving proofs as an exercise.\u003c/p\u003e\u003cp\u003eLet us introduce coordinates \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ey\u003c/i\u003e(\u003ci\u003ex\u003c/i\u003e)\u003c/span\u003e, where \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e \u003d \u003ci\u003eexp\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e - \u003ci\u003eexp\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003c/span\u003e, and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ey\u003c/i\u003e \u003d \u003ci\u003eexp\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/span\u003e (\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eexp\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eexp\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003c/span\u003e — experience of the first and the second player, respectively). Let us proceed with time, and keep the set of possible states at this plane. It is a polygon.\u003c/p\u003e\u003cp\u003eLemma 1: in the optimal solution if at some moment both players can play the game simultaneously, they should do so.\u003c/p\u003e\u003cp\u003eNow consider all moments of time, one after another. There are three transitions that modify the polygon:\u003c/p\u003e\u003cul\u003e \u003cli\u003e The first player can play for \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003et\u003c/i\u003e\u003c/span\u003e seconds. The new polygon is the Minkowski sum of the previous polygon and the degenerate polygon: segment with two vertices \u003cspan class\u003d\"tex-span\"\u003e(0, 0)\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003et\u003c/i\u003e, \u003ci\u003et\u003c/i\u003e)\u003c/span\u003e. \u003c/li\u003e\u003cli\u003e The second player can play for \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003et\u003c/i\u003e\u003c/span\u003e seconds. The new polygon is the Minkowski sum of the previous polygon and the segment with vertices \u003cspan class\u003d\"tex-span\"\u003e(0, 0)\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e( - \u003ci\u003et\u003c/i\u003e, 0)\u003c/span\u003e. \u003c/li\u003e\u003cli\u003e Both players can play for \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003et\u003c/i\u003e\u003c/span\u003e seconds. Now all points with \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e-coordinates \u003cspan class\u003d\"tex-span\"\u003e[ - \u003ci\u003eC\u003c/i\u003e;\u003ci\u003eC\u003c/i\u003e]\u003c/span\u003e have \u003cspan class\u003d\"tex-span\"\u003e2\u003ci\u003et\u003c/i\u003e\u003c/span\u003e added to their \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ey\u003c/i\u003e\u003c/span\u003e coordinate, and other points have \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003et\u003c/i\u003e\u003c/span\u003e added to their \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ey\u003c/i\u003e\u003c/span\u003e coordinate. \u003c/li\u003e\u003c/ul\u003e\u003cp\u003eLet us now see how the polygon looks like. It is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e-monotonous polygon (each line parallel to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ey\u003c/i\u003e\u003c/span\u003e-axis intersects it via a segment), the lower bound of this polygon is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ey\u003c/i\u003e \u003d 0\u003c/span\u003e if \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e ≤ 0\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ey\u003c/i\u003e \u003d \u003ci\u003ex\u003c/i\u003e\u003c/span\u003e if \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e \u0026gt; 0\u003c/span\u003e. Let us see how the upper bound of the polygon looks like.\u003c/p\u003e\u003cp\u003eWe want to prove that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ey\u003c/i\u003e\u003c/span\u003e-coordinate of the upper bound of the polygon doesn\u0027t decrease, and it only contains segments that move by vectors \u003cspan class\u003d\"tex-span\"\u003e( + 1, 0)\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e( + 1,  + 1)\u003c/span\u003e. \u003c/p\u003e\u003cp\u003eWe attempt an induction, and the induction step is fine for the first two transitions. But the third transition can make the upper bound non-monotonous at a point \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e \u003d \u003ci\u003eC\u003c/i\u003e\u003c/span\u003e. To fix it, let us change the definition of our polygon.\u003c/p\u003e\u003cp\u003eInstead of storing all possible reachable points, we will keep larger set, that contains the original set, and for each of its point we can get maximal experience for the first player not greater than what we could originally get.\u003c/p\u003e\u003cp\u003eLemma 2: if at some moment \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003et\u003c/i\u003e\u003c/span\u003e we take two points \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eP\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e \u003d (\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e, \u003ci\u003ey\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e)\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eP\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e \u003d (\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e, \u003ci\u003ey\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e)\u003c/span\u003e such that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eC\u003c/i\u003e ≤ \u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e ≤ \u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003c/span\u003e, and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ey\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e ≥ \u003ci\u003ey\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003c/span\u003e, and our player start training from those states, the maximal experience for point \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eP\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003c/span\u003e is not greater than for the point \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eP\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/span\u003e. \u003c/p\u003e\u003cp\u003eSo we can expand our upper bound for \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e from \u003cspan class\u003d\"tex-span\"\u003e[\u003ci\u003eC\u003c/i\u003e; + \u003ci\u003einf\u003c/i\u003e)\u003c/span\u003e by a maximum value of the correct upper bound and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ey\u003c/i\u003e \u003d \u003ci\u003ey\u003c/i\u003e(\u003ci\u003eC\u003c/i\u003e)\u003c/span\u003e. The similar proof works for a line \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ey\u003c/i\u003e \u003d \u003ci\u003ey\u003c/i\u003e(\u003ci\u003eC\u003c/i\u003e) - (\u003ci\u003eC\u003c/i\u003e - \u003ci\u003ex\u003c/i\u003e)\u003c/span\u003e for \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e in \u003cspan class\u003d\"tex-span\"\u003e( - \u003ci\u003einf\u003c/i\u003e;\u003ci\u003eC\u003c/i\u003e]\u003c/span\u003e. \u003c/p\u003e\u003cp\u003eNow we have an upper bound as a polyline that contains \u003cspan class\u003d\"tex-span\"\u003e( + 1, 0)\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e( + 1,  + 1)\u003c/span\u003e segments. All is left to do is to modify the polyline using the described transitions. This can be done using some appropriate data structure, treap for example. The solution works in \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003enlog\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e))\u003c/span\u003e.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e","tags":[]}}