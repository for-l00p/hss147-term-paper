{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1494737948,"rating":-3,"authorHandle":"Solipsist2.0","modificationTimeSeconds":1494738004,"id":51980,"title":"\u003cp\u003eTree Question\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eSuppose there was a tree with \u003cstrong\u003eN\u003c/strong\u003e nodes ( 1 \u0026lt;\u003d N \u0026lt;\u003d 100,000) and \u003cstrong\u003eQ\u003c/strong\u003e (1 \u0026lt;\u003d Q \u0026lt;\u003d 100,000) queries. Each node is given a value 0 or 1. Each query is in the form \u003cstrong\u003ea b\u003c/strong\u003e where a \u0026lt;\u003d b. Each query asks for the number of paths in the tree where the sum of the nodes on each of the paths is between \u003cstrong\u003ea\u003c/strong\u003e and \u003cstrong\u003eb\u003c/strong\u003e. How do I calculate this efficiently?\u003c/p\u003e\u003cp\u003eI know centroid decomposition can handle it for a single query, but how do I handle it for multiple?\u003c/p\u003e\u003c/div\u003e","tags":[]}}