{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1424179489,"rating":51,"authorHandle":"I_love_Hoang_Yen","modificationTimeSeconds":1424321826,"id":16457,"title":"\u003cp\u003eYet another blog post about cin vs scanf\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHi,\u003c/p\u003e\u003cp\u003eToday I tried to solve \u003ca href\u003d\"/contest/286/problem/C\" title\u003d\"Codeforces Round 176 (Div. 1)\"\u003e286C - Main Sequence\u003c/a\u003e, which required to read \u0026amp; print \u003cspan class\u003d\"tex-span\"\u003e10\u003csup class\u003d\"upper-index\"\u003e6\u003c/sup\u003e\u003c/span\u003e ints.\u003c/p\u003e\u003cp\u003eThere are already many blog posts that compares performance of cin, cout (with \u003ccode\u003eios::sync_with_stdio(false)\u003c/code\u003e of course) vs printf, scanf. And the test results shown that for ints, cin and cout are equally fast (and sometimes even faster) than scanf, printf. But my submissions do not agree:\u003c/p\u003e \u003cul\u003e   \u003cli\u003escanf + printf: \u003ca href\u003d\"/contest/286/submission/9881086\" title\u003d\"Submission 9881086 by I_love_Hoang_Yen\"\u003e9881086\u003c/a\u003e --\u0026gt; AC 966ms\u003c/li\u003e   \u003cli\u003escanf + cout: \u003ca href\u003d\"/contest/286/submission/9881146\" title\u003d\"Submission 9881146 by I_love_Hoang_Yen\"\u003e9881146\u003c/a\u003e --\u0026gt; AC 1434ms\u003c/li\u003e   \u003cli\u003ecin + printf: \u003ca href\u003d\"/contest/286/submission/9881138\" title\u003d\"Submission 9881138 by I_love_Hoang_Yen\"\u003e9881138\u003c/a\u003e --\u0026gt; AC 1684ms\u003c/li\u003e   \u003cli\u003ecin + cout: \u003ca href\u003d\"/contest/286/submission/9882075\" title\u003d\"Submission 9882075 by I_love_Hoang_Yen\"\u003e9882075\u003c/a\u003e --\u0026gt; TLE\u003c/li\u003e \u003c/ul\u003e\u003cp\u003eNote: I used \u003ccode\u003ecout \u0026lt;\u0026lt; endl;\u003c/code\u003e in my submissions, but it prints endl only twice, so that should not be a problem here.\u003c/p\u003e\u003cp\u003eAs you can see, except from input/output, my code is exactly the same. Am I doing anything wrong here?\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eUPD\u003c/strong\u003e: I found another problem that cin/cout failed:\u003c/p\u003e \u003cul\u003e   \u003cli\u003eMy submission with cin/cout: \u003ca href\u003d\"/contest/341/submission/9919391\" title\u003d\"Submission 9919391 by I_love_Hoang_Yen\"\u003e9919391\u003c/a\u003e\u003c/li\u003e   \u003cli\u003eA previously accepted code that use cin/cout but now got TLE: \u003ca href\u003d\"/contest/341/submission/9919511\" title\u003d\"Submission 9919511 by I_love_Hoang_Yen\"\u003e9919511\u003c/a\u003e. This problem has warning \u0026quot;Package for this problem was not updated...\u0026quot;, but the code doesn\u0027t use anything fancy, and also the printf/scanf version passed system test in 436ms (time limit is 1000ms). So I\u0027m guessing that it is indeed because of cin/cout.\u003c/li\u003e \u003c/ul\u003e\u003cp\u003eSo, most likely, \u003ccode\u003eios::sync_with_stdio(false);\u003c/code\u003e does not work well with the GNU C++ 4.9.2 which is used in Codeforces.\u003c/p\u003e\u003c/div\u003e","tags":["cin","cout","printf","scanf"]}}