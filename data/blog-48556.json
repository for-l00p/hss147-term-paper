{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":true,"creationTimeSeconds":1479862205,"rating":32,"authorHandle":"Bekzhan.Kassenov","modificationTimeSeconds":1479862895,"id":48556,"title":"\u003cp\u003eInteresting C++ problem\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHello CodeForces community!\u003c/p\u003e\u003cp\u003eRecently I\u0027ve recalled one interesting C++ problem. In short: is it possible to write functions \u003ccode\u003eaction\u003c/code\u003e and \u003ccode\u003econd\u003c/code\u003e in such a way, so that the following code snippets work differently:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e// Snippet #1:\naction();\nwhile (cond()) {\n    action();\n}\n\u003c/code\u003e\u003c/pre\u003e \u003cpre\u003e\u003ccode\u003e// Snippet #2:\ndo {\n    action();\n} while (cond());\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eMore formally: suppose you\u0027re given the following three files:\u003c/p\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003ecommon.h\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003e#include \u0026lt;iostream\u0026gt;\n\nbool cond() {}\n\nvoid action() {\n    std::cout \u0026lt;\u0026lt; \u0026quot;Action\u0026quot; \u0026lt;\u0026lt; std::endl;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003emain_while.cpp\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003e#include \u0026quot;common.h\u0026quot;\n\nint main() {\n    action();\n    while (cond()) {\n        action();\n    }\n    return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003emain_do_while.cpp\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003e#include \u0026quot;common.h\u0026quot;\n\nint main() {\n    do {\n        action();\n    } while (cond());\n    return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\u003cp\u003eYou\u0027re only allowed to modify \u003ccode\u003ecommon.h\u003c/code\u003e. You have to do that in such a way, so that \u003ccode\u003eAction\u003c/code\u003e word is printed different amount of times by execution of \u003ccode\u003emain_while.cpp\u003c/code\u003e and \u003ccode\u003emain_do_while.cpp\u003c/code\u003e. \u003c/p\u003e\u003cp\u003eOne of the possible solutions (try to think yourself before opening the spoiler!):\u003c/p\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eDirty hack\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003e#include \u0026lt;iostream\u0026gt;\n\nbool cond() {\n    #define do if(true)\n    static int attempt \u003d 0;\n    attempt++;\n    return attempt % 2 !\u003d 0;\n}\n\nvoid action() {\n    std::cout \u0026lt;\u0026lt; \u0026quot;Action\u0026quot; \u0026lt;\u0026lt; std::endl;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThis soluion has obvious disadvantages. It \u0026quot;hacks\u0026quot; the language and doesn\u0027t have any interesting point. Actually, trying \u003ccode\u003edefine\u003c/code\u003e was my first idea.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003cp\u003eShare your solutions in the comments and don\u0027t forget to hide them under the spoilers! It would be interesting to see something smarter (e.g. solution which will work in any language with analogues of \u003ccode\u003ewhile\u003c/code\u003e and \u003ccode\u003edo-while\u003c/code\u003e)\u003c/p\u003e\u003c/div\u003e","tags":["c++","interesting problems","dirty hack"]}}