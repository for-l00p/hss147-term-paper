{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1502430721,"rating":0,"authorHandle":"Los_Angelos_Laycurse","modificationTimeSeconds":1502430721,"id":53784,"title":"\u003cp\u003euva 13233 Easy Permutation Problem\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e\u003ca href\u003d\"https://uva.onlinejudge.org/index.php?option\u003dcom_onlinejudge\u0026amp;Itemid\u003d8\u0026amp;page\u003dshow_problem\u0026amp;problem\u003d5156\"\u003ehttps://uva.onlinejudge.org/index.php?option\u003dcom_onlinejudge\u0026amp;Itemid\u003d8\u0026amp;page\u003dshow_problem\u0026amp;problem\u003d5156\u003c/a\u003e\u003c/p\u003e\u003cp\u003eis there O(N^2) solution???\u003c/p\u003e\u003cp\u003eI have used at least three approach to solve this problem.first two get TLE, last one AC 50 ms(the time is surprising me,because I use O(n^3) precal +constant optimizition..\u003c/p\u003e\u003cp\u003ethe second one I use O(n^2)precal +O(n^2*log(n)) FFT obviously it will TLE because there are 1500 test cases..\u003c/p\u003e\u003cp\u003ethe third one I use O(n^3) dp[0][i][j][s] record to fill first i empty cells,there are j numbers which is smaller than a1 and s numbers bigger than a(i+1) and ai\u0026lt;a(i+1) dp[1][i][j][s] means ai\u0026gt;a(i+1). in order to get O(1)transfer we can recodrd sum[0][i][j][s]..\u003c/p\u003e\u003cp\u003eto speed up the process of O(N^3) we only need to record states that is visit by the input,so I sort the input increasing by n use scroll array. use f[2002][2002] record f[n][a1-1]\u003dmax(f[n][a1-1],n-an)\u003c/p\u003e \u003cpre\u003efor(i\u003d1998;i\u0026gt;\u003d0;i--)\n                        for(j\u003di;j\u0026gt;\u003d0;j--)\n                           f[i][j]\u003dmax(f[i][j],f[i+1][j]-1);\u003c/pre\u003e\u003cp\u003efor each first two state (i,j) the third state that visit is only [0,min(i-j,f[i][j])], this speed up made my code 50ms..\u003c/p\u003e\u003c/div\u003e","tags":[]}}