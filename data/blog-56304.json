{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1513088189,"rating":1,"authorHandle":"Unlimited_Time","modificationTimeSeconds":1513088189,"id":56304,"title":"\u003cp\u003eNotes on Codeforces Beta Round #99, A, B, C, D, E (Segment tree with lazy propagation)\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e\u003ca href\u003d\"/contest/139/problem/A\" title\u003d\"Codeforces Beta Round 99 (Div. 2)\"\u003e139A - Petr and Book\u003c/a\u003e\u003c/p\u003e\u003cp\u003eWe can first calculate the total number of pages that can be finished within one week. Then, we divide the total number of pages by this number and obtain the residual. Finally, for this residual, we find the last day on which the whole book is finished.\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"/contest/139/problem/B\" title\u003d\"Codeforces Beta Round 99 (Div. 2)\"\u003e139B - Wallpaper\u003c/a\u003e\u003c/p\u003e\u003cp\u003eThe description seems a little difficult to understand...\u003c/p\u003e\u003cp\u003eWe should first rotate the wall papers with 90 degrees so that the stripes are vertical. Then, we cut it into as many pieces as possible according to the height of the room. Next, we compute the total length that these pieces can cover, and finally obtain the number of rolls that is necessary to decorate the whole room.\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"/contest/139/problem/C\" title\u003d\"Codeforces Beta Round 99 (Div. 2)\"\u003e139C - Literature Lesson\u003c/a\u003e\u003c/p\u003e\u003cp\u003eA straightforward implementation problem, but one needs take care of “corner” cases.\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"/contest/139/problem/D\" title\u003d\"Codeforces Beta Round 99 (Div. 2)\"\u003e139D - Digits Permutations\u003c/a\u003e\u003c/p\u003e\u003cp\u003eThis is in fact an exhaustive search problem.\u003c/p\u003e\u003cp\u003eAt first, we enumerate the number of 0s at the end. Then, we enumerate all the combinations of the first sum that is equal to 10, counting from right to left. Finally, we find all the digits that have sum equal to 9. This algorithm has complexity \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(10\u003ci\u003eN\u003c/i\u003e)\u003c/span\u003e, and we only need record the maximum number of consecutive 0s among all the enumeration and the corresponding combination.\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"/contest/139/problem/E\" title\u003d\"Codeforces Beta Round 99 (Div. 2)\"\u003e139E - Mushroom Gnomes - 2\u003c/a\u003e\u003c/p\u003e\u003cp\u003eI think this is a very nice problem to practice segment tree with lazy propagation. One can find a lot of materials on the Internet about this technique, and one could also read chapter 28 in book \u003ca href\u003d\"//codeforces.com/blog/entry/50728\"\u003eCompetitive Programmer\u0027s Handbook — a new book on competitive programming\u003c/a\u003e, which provides many detailed descriptions and talks about how to implement it.\u003c/p\u003e\u003cp\u003eBesides, there is still one important issue that should be considered. We should be very careful of precision problem. Instead of directly using probability domain, it is better to convert it into logarithm domain, since this can in general achieve a better dynamic range by replacing multiplication with addition. However, if the probability is zero, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003elog\u003c/i\u003e(0)\u003c/span\u003e will lead to an exceptional case. To avoid this, we can aasign, for instance, \u003cspan class\u003d\"tex-span\"\u003e - 1000\u003c/span\u003e instead of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003elog\u003c/i\u003e(0)\u003c/span\u003e.\u003c/p\u003e\u003c/div\u003e","tags":[]}}