{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":false,"creationTimeSeconds":1457031532,"rating":68,"authorHandle":"IlyaKheifets","modificationTimeSeconds":1457076363,"id":43551,"title":"\u003cp\u003eEditorial Codeforces Round #344 (Div. 2)\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e\u003ca href\u003d\"/contest/631/problem/A\" title\u003d\"Codeforces Round 344 (Div. 2)\"\u003e631A - Interview\u003c/a\u003e\u003c/p\u003e\u003cp\u003eYou should know only one fact to solve this task: \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/d1/37/d1374a682a54b647fe6b500cae696971e398abe6.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. This fact can be proved by the \u003ca href\u003d\"https://en.wikipedia.org/wiki/Truth_table\"\u003etruth table\u003c/a\u003e. Let\u0027s use this fact: \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/d1/63/d163d41e39c6dde8670b5802e1dd927615731507.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. Also \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/73/02/730233092dc2d23ef31c4f925a37f5cf70e858d7.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. According two previous formulas we can get that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e(\u003ci\u003ea\u003c/i\u003e, 1, \u003ci\u003en\u003c/i\u003e) ≥ \u003ci\u003ef\u003c/i\u003e(\u003ci\u003ea\u003c/i\u003e, \u003ci\u003ei\u003c/i\u003e, \u003ci\u003ej\u003c/i\u003e)\u003c/span\u003e. Finally we can get the answer. It\u0027s equal to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e(\u003ci\u003ea\u003c/i\u003e, 1, \u003ci\u003eN\u003c/i\u003e) + \u003ci\u003ef\u003c/i\u003e(\u003ci\u003eb\u003c/i\u003e, 1, \u003ci\u003eN\u003c/i\u003e)\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eTime: \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/d1/49/d149e37848c7f7e231f2f79fcfe74bfa4ddab02a.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003eMemory: \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/d1/49/d149e37848c7f7e231f2f79fcfe74bfa4ddab02a.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"//www.codeforces.com/contest/631/submission/16501234\"\u003eC++\u003c/a\u003e \u003ca href\u003d\"//www.codeforces.com/contest/631/submission/16501281\"\u003ePython3\u003c/a\u003e \u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"/contest/631/problem/B\" title\u003d\"Codeforces Round 344 (Div. 2)\"\u003e631B - Print Check\u003c/a\u003e\u003c/p\u003e\u003cp\u003eLet\u0027s define \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003etimeR\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e as a number of last query, wich repaint row with number \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003etimeC\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e – as number of last query, wich repaint column with number \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e. The value in cell \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ei\u003c/i\u003e, \u003ci\u003ej\u003c/i\u003e)\u003c/span\u003e is equal \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003emax\u003c/i\u003e(\u003ci\u003etimeR\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e, \u003ci\u003etimeC\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e)\u003c/sub\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eTime: \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/04/92/04926753ebc09167f1683674abc27153bad21a83.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003eMemory: \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/6a/b9/6ab97ddf3c0f07375d4e3332ec3c8fc3959d03d2.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"//www.codeforces.com/contest/631/submission/16501244\"\u003eC++\u003c/a\u003e \u003ca href\u003d\"//www.codeforces.com/contest/631/submission/16501289\"\u003ePython3\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"/contest/631/problem/C\" title\u003d\"Codeforces Round 344 (Div. 2)\"\u003e631C - Report\u003c/a\u003e\u003c/p\u003e\u003cp\u003eIf we have some pair of queries that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003er\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e ≥ \u003ci\u003er\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e \u0026gt; \u003ci\u003ej\u003c/i\u003e\u003c/span\u003e, then we can skip query with number \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e. Let\u0027s skip such queries. After that we get an array of sorted queries (\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003er\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e ≤ \u003ci\u003er\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e \u0026gt; \u003ci\u003ej\u003c/i\u003e\u003c/span\u003e). Let\u0027s sort subarray \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003csub class\u003d\"lower-index\"\u003e\u003c/sub\u003e..\u003ci\u003emax\u003c/i\u003e(\u003ci\u003er\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e)\u003c/sub\u003e\u003c/span\u003e and copy it to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/span\u003e. For proccessing query with number \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e we should record to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003er\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e - 1\u003c/sub\u003e..\u003ci\u003er\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/sub\u003e\u003c/span\u003e first or last(it depends on \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003et\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e - 1\u003c/sub\u003e\u003c/span\u003e) \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003er\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e - 1\u003c/sub\u003e - \u003ci\u003er\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e + 1\u003c/span\u003e elementes of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/span\u003e. After that this elements should be extract from \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/span\u003e. You should remember that you need to sort subarray \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1..\u003ci\u003er\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/sub\u003e\u003c/sub\u003e\u003c/span\u003e, after last query.\u003c/p\u003e\u003cp\u003eTime: \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/bc/4a/bc4a5645481efd3793cf086fe07ab0656bbd7ddd.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003eMemeory: \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/c8/05/c805fd9c073f24d0806cca3bda7b9c2bb0882a63.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"//www.codeforces.com/contest/631/submission/16501250\"\u003eC++\u003c/a\u003e \u003ca href\u003d\"//www.codeforces.com/contest/631/submission/16501304\"\u003ePython3\u003c/a\u003e \u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"/contest/631/problem/D\" title\u003d\"Codeforces Round 344 (Div. 2)\"\u003e631D - Messenger\u003c/a\u003e\u003c/p\u003e\u003cp\u003eLet\u0027s define \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eS\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003c/sub\u003e[\u003ci\u003ei\u003c/i\u003e]\u003c/span\u003e as \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e - \u003ci\u003eth\u003c/i\u003e\u003c/span\u003e block of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eS\u003c/i\u003e\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eT\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003c/sub\u003e[\u003ci\u003ei\u003c/i\u003e]\u003c/span\u003e — as \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e - \u003ci\u003eth\u003c/i\u003e\u003c/span\u003e block of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eT\u003c/i\u003e\u003c/span\u003e.Also \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eS\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003c/sub\u003e[\u003ci\u003el\u003c/i\u003e..\u003ci\u003er\u003c/i\u003e] \u003d \u003ci\u003eS\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003c/sub\u003e[\u003ci\u003el\u003c/i\u003e]\u003ci\u003eS\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003c/sub\u003e[\u003ci\u003el\u003c/i\u003e + 1]...\u003ci\u003eS\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003c/sub\u003e[\u003ci\u003er\u003c/i\u003e]\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eT\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003c/sub\u003e[\u003ci\u003el\u003c/i\u003e..\u003ci\u003er\u003c/i\u003e] \u003d \u003ci\u003eT\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003c/sub\u003e[\u003ci\u003el\u003c/i\u003e]\u003ci\u003eT\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003c/sub\u003e[\u003ci\u003el\u003c/i\u003e + 1]...\u003ci\u003eT\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003c/sub\u003e[\u003ci\u003er\u003c/i\u003e]\u003c/span\u003e.\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eT\u003c/i\u003e\u003c/span\u003e is substring of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eS\u003c/i\u003e\u003c/span\u003e, if \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eS\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003c/sub\u003e[\u003ci\u003el\u003c/i\u003e + 1..\u003ci\u003er\u003c/i\u003e - 1] \u003d \u003ci\u003eT\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003c/sub\u003e[2..\u003ci\u003em\u003c/i\u003e - 1]\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eS\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003c/sub\u003e[\u003ci\u003el\u003c/i\u003e].\u003ci\u003el\u003c/i\u003e \u003d \u003ci\u003eT\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003c/sub\u003e[1].\u003ci\u003el\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eS\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003c/sub\u003e[\u003ci\u003el\u003c/i\u003e].\u003ci\u003ec\u003c/i\u003e ≥ \u003ci\u003eT\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003c/sub\u003e[1].\u003ci\u003ec\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eS\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003c/sub\u003e[\u003ci\u003er\u003c/i\u003e].\u003ci\u003el\u003c/i\u003e \u003d \u003ci\u003eT\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003c/sub\u003e[\u003ci\u003em\u003c/i\u003e].\u003ci\u003el\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eS\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003c/sub\u003e[\u003ci\u003er\u003c/i\u003e].\u003ci\u003ec\u003c/i\u003e ≥ \u003ci\u003eT\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003c/sub\u003e[\u003ci\u003em\u003c/i\u003e].\u003ci\u003ec\u003c/i\u003e\u003c/span\u003e. Let\u0027s find all matches of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eT\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003c/sub\u003e[\u003ci\u003el\u003c/i\u003e + 1..\u003ci\u003er\u003c/i\u003e - 1]\u003c/span\u003e in \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eS\u003c/i\u003e\u003c/span\u003e and chose from this matches, witch is equal \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eT\u003c/i\u003e\u003c/span\u003e.You can do this by \u003ca\u003eKnuth–Morris–Pratt algorithm\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eThis task has a some tricky test cases:\u003c/p\u003e \u003col\u003e   \u003cli\u003e\u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/91/4e/914e3213ae14dbfea713175d11acaf05c67a21bd.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e and \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/d5/fa/d5fa99b59eca8fdae95792d29d25a34725b9ad05.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. Letters in the adjacent blocks are may be same.This problem can be solved by the union of adjacent blocks with same letter.\u003c/li\u003e   \u003cli\u003e\u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/3e/9a/3e9a5445c554ac29c4b7ca29af702a7b241abf32.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e and \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/64/dd/64ddd9eb8f27133b3ba8915aecc832cc39c9f684.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. Count of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eT\u003c/i\u003e\u003c/span\u003e blocks are less than 3. Such cases can be proccess singly.\u003c/li\u003e   \u003cli\u003e\u003cp\u003e\u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/f8/83/f8834ba640747a37dc30267356e01fb9703f4509.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e and \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/5a/3a/5a3af37bf39b39e878d5391a1101b5be49cb1ddb.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. Answer for this test should be stored at long long. \u003c/p\u003e\u003c/li\u003e \u003c/ol\u003e\u003cp\u003eTime: \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/c8/05/c805fd9c073f24d0806cca3bda7b9c2bb0882a63.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003eMemory: \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/c8/05/c805fd9c073f24d0806cca3bda7b9c2bb0882a63.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"//www.codeforces.com/contest/631/submission/16501261\"\u003eC++\u003c/a\u003e\u003ca href\u003d\"//www.codeforces.com/contest/631/submission/16501311\"\u003ePython3\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"/contest/631/problem/E\" title\u003d\"Codeforces Round 344 (Div. 2)\"\u003e631E - Product Sum\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/c7/9f/c79f379d39dfd0141a0a029e77cae82d8a809cff.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003eThe operation, which has been described in the statement, is cyclic shift of some subarray. Let\u0027s try to solve this problem separately for left cyclic shift and for right cyclic shift. Let\u0027s define \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/0c/bf/0cbf1575903ccc7fb3841716e5efabf0e5b149fd.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e as answer before(or without) cyclic shift, \u003cspan class\u003d\"tex-span\"\u003eΔ\u003ci\u003eans\u003c/i\u003e \u003d \u003ci\u003eans\u003c/i\u003e - \u003ci\u003eans\u003c/i\u003e\u0027\u003c/span\u003e — difference between answer after cyclic shift and before. This difference can be found by next formulas:\u003c/p\u003e\u003cp\u003eFor left cyclic shift:\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003eΔ\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003el\u003c/i\u003e, \u003ci\u003er\u003c/i\u003e\u003c/sub\u003e \u003d (\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/sub\u003e·\u003ci\u003er\u003c/i\u003e + \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003el\u003c/i\u003e + 1\u003c/sub\u003e·\u003ci\u003el\u003c/i\u003e + ... + \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003er\u003c/i\u003e\u003c/sub\u003e·(\u003ci\u003er\u003c/i\u003e - 1)) - (\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/sub\u003e·\u003ci\u003el\u003c/i\u003e + \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003el\u003c/i\u003e + 1\u003c/sub\u003e·(\u003ci\u003el\u003c/i\u003e + 1) + ... + \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003er\u003c/i\u003e\u003c/sub\u003e·\u003ci\u003er\u003c/i\u003e) \u003d \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/sub\u003e·(\u003ci\u003er\u003c/i\u003e - \u003ci\u003el\u003c/i\u003e) - (\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003el\u003c/i\u003e + 1\u003c/sub\u003e + \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003el\u003c/i\u003e + 2\u003c/sub\u003e + ... + \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003er\u003c/i\u003e\u003c/sub\u003e)\u003c/span\u003e\u003c/p\u003e\u003cp\u003eFor right cyclic shift:\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003eΔ\u0027\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003el\u003c/i\u003e, \u003ci\u003er\u003c/i\u003e\u003c/sub\u003e \u003d (\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/sub\u003e·(\u003ci\u003el\u003c/i\u003e + 1) + \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003el\u003c/i\u003e + 1\u003c/sub\u003e·(\u003ci\u003el\u003c/i\u003e + 2) + ... + \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003er\u003c/i\u003e\u003c/sub\u003e·\u003ci\u003el\u003c/i\u003e) + (\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/sub\u003e·\u003ci\u003el\u003c/i\u003e + \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003el\u003c/i\u003e + 1\u003c/sub\u003e·(\u003ci\u003el\u003c/i\u003e + 1) + ... + \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003er\u003c/i\u003e\u003c/sub\u003e·\u003ci\u003er\u003c/i\u003e) \u003d (\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/sub\u003e + \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003el\u003c/i\u003e + 1\u003c/sub\u003e + ... + \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003er\u003c/i\u003e - 1\u003c/sub\u003e) + \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003er\u003c/i\u003e\u003c/sub\u003e·(\u003ci\u003el\u003c/i\u003e - \u003ci\u003er\u003c/i\u003e)\u003c/span\u003e\u003c/p\u003e\u003cp\u003eYou can find this values with complexity \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/7e/81/7e81579a315624c5848da11ea399bc66c3bb1f2c.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, using prefix sums, \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/b3/e9/b3e95aed9e74b019a363f2348d103a9b9350f4eb.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e.\u003c/p\u003e\u003cp\u003e\u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/8a/dd/8add60ce0cfa7eac11b4482ef05362838c7e4a66.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003eLet\u0027s try to rewrite previous formulas:\u003c/p\u003e\u003cp\u003eFor left cyclic shift: \u003cspan class\u003d\"tex-span\"\u003eΔ\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003el\u003c/i\u003e, \u003ci\u003er\u003c/i\u003e\u003c/sub\u003e \u003d (\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/sub\u003e·\u003ci\u003er\u003c/i\u003e - \u003ci\u003esum\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003er\u003c/i\u003e\u003c/sub\u003e) + (\u003ci\u003esum\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/sub\u003e - \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/sub\u003e·\u003ci\u003el\u003c/i\u003e)\u003c/span\u003e\u003c/p\u003e\u003cp\u003eFor right cyclic shift: \u003cspan class\u003d\"tex-span\"\u003eΔ\u0027\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003el\u003c/i\u003e, \u003ci\u003er\u003c/i\u003e\u003c/sub\u003e \u003d (\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003er\u003c/i\u003e\u003c/sub\u003e·\u003ci\u003el\u003c/i\u003e - \u003ci\u003esum\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003el\u003c/i\u003e - 1\u003c/sub\u003e) + (\u003ci\u003esum\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003er\u003c/i\u003e - 1\u003c/sub\u003e - \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003er\u003c/i\u003e\u003c/sub\u003e·\u003ci\u003er\u003c/i\u003e)\u003c/span\u003e\u003c/p\u003e\u003cp\u003eYou can see, that if you fix \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/span\u003e for left shift and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003er\u003c/i\u003e\u003c/span\u003e for right shift, you can solve this problem with complexity \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/b5/64/b564e9c970a5e7d29ca9b153427bcc98a608ba4d.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e using \u003ca href\u003d\"http://wcipeg.com/wiki/Convex_hull_trick\"\u003eConvex Hull Trick\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eTime: \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/b5/64/b564e9c970a5e7d29ca9b153427bcc98a608ba4d.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003eMemory: \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/d1/49/d149e37848c7f7e231f2f79fcfe74bfa4ddab02a.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"//www.codeforces.com/contest/631/submission/16501267\"\u003eC++\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e","tags":[]}}