{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1419246194,"rating":-21,"authorHandle":"terminated","modificationTimeSeconds":1419246194,"id":15317,"title":"\u003cp\u003eSUFFIX ARRAY USING STL\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eI recently was doing \u003ca href\u003d\"http://www.spoj.com/problems/DISUBSTR/\"\u003ethis\u003c/a\u003e problem on spoj.It was about finding the number of distinct sub-string in a string.\u003ca href\u003d\"http://en.wikipedia.org/wiki/Suffix_array\"\u003eSuffix array\u003c/a\u003e was to be used but i didn\u0027t knew about suffix arrays.I searched on net and learned about suffix array but when I moved towards implemention all codes available online were a bit lengthy so I implemented my own and came out with this--\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e#include \u0026quot;bits/stdc++.h\u0026quot;\nusing namespace std;\n int main(int argc, char const *argsorted_suffixes[])\n{\n\t\n\t\tset\u0026lt;string\u0026gt; set1;\n\n\t\tstring s\u003d\u0026quot;aabaab\u0026quot;;\n\n\t\tint n\u003ds.length();\n\t\t/*inserting all possible suffixes of string in set1*/\n\t\tfor (int i \u003d 0; i \u0026lt; n ; ++i) \n\t\t{\n\t\t\tset1.insert(s.substr(i,n-i));\n\t\t}\n\n\t\tvector\u0026lt;string\u0026gt; sorted_suffixes(set1.begin(),set1.end()); /*suffix vector(array)*/\n\t\t/*Building LCP table*/\n\t\tint LCP[set1.size()];\n\n\t\tLCP[0]\u003d0;\n\n\t\tstring s4,s5;\n\n\t\tfor(int i\u003d1;i\u0026lt;sorted_suffixes.size();i++)\n\t\t{\n\t\t\ts4\u003dsorted_suffixes[i-1];\n\t\t\ts5\u003dsorted_suffixes[i];\n\t\t\tint c\u003d0;\n\t\t\tfor(int j\u003d0;j\u0026lt;s4.length();j++)\n\t\t\t{\n\t\t\t\tif(s4[j]\u003d\u003ds5[j])\n\t\t\t\t\tc++;\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tLCP[i]\u003dc;\n\n\n\t\t}\n\t\t/*LCP TABLE CONSTRUCTED*/\n\t\tfor (int i \u003d 0; i \u0026lt; sorted_suffixes.size(); ++i)\n\t\t{\n\t\t\tcout\u0026lt;\u0026lt;sorted_suffixes[i]\u0026lt;\u0026lt;\u0026quot; \u0026quot;\u0026lt;\u0026lt;LCP[i]\u0026lt;\u0026lt;endl;\n\t\t}\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eHere I have not constructed a suffix array rather I have a vector of strings which has the suffixes in sorted order and I think it doesn\u0027t make a difference to either have a container of indexes or to have a container of sorted suffixes. This is easy to code and understand.I have tested it for many cases and it works fine, If there is any bug in my code please point out!\u003c/p\u003e\u003c/div\u003e","tags":["c++","suffix array"]}}