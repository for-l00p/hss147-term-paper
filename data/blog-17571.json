{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":false,"creationTimeSeconds":1429987835,"rating":30,"authorHandle":"knightL","modificationTimeSeconds":1429987835,"id":17571,"title":"\u003cp\u003eStandings Builder\u003c/p\u003e","locale":"ru","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eНе возникало ли у вас желания посмотреть, как бы вы выступили, если бы участвовали в каком-то контесте? Вам хотелось бы, чтобы в таблице результатов во время тренировок было больше команд? Или же вы хотели объединить результаты нескольких площадок соревнований в одну? Если да, то эта программа как раз для вас B-). Вашему вниманию представляется Standings Builder — программа на C++, которая умеет объединять результаты соревнований и разворачивать виртуальные контесты. Более того, можно полностью переформатировать результаты, добавив дополнительные поля или удалив лишние. Ссылка на GitHub: \u003ca href\u003d\"https://github.com/knightL/StandingsBuilder\"\u003ehttps://github.com/knightL/StandingsBuilder\u003c/a\u003e .\u003c/p\u003e\u003cp\u003eМожно выделить следующие фичи:\u003c/p\u003e \u003col\u003e   \u003cli\u003e\u003cp\u003e\u003cb\u003eМодульная структура программы.\u003c/b\u003e Сборкой данных занимаются классы программы, которые называются парсерами. В конфигурации можно комбинировать их в любых сочетаниях и количествах. В данный момент реализованы 3 парсера для таблиц Ejudge, NEERC и xml файлов NEERC. Для проведения виртуальных контестов включен вспомогательный \u0026quot;парсер\u0026quot; Timer, который на самом деле ничего не парсит, но зато позволяет отсчитывать время от какого-то фиксированного момента. Если же вам не подходят готовые решения, вам всего лишь нужно создать класс-наследник базового класса, реализовать 5 обязательных методов и добавить команду registerParser в main.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003e\u003cb\u003eГибкая настройка результирующей таблицы.\u003c/b\u003e Таблица строится с помощью пользовательского LUA скрипта, поэтому может иметь любую форму и любое содержание. В дополнение к этому, есть вспомогательные атрибуты у парсеров Prefix и Style. Prefix допишется к названию команд, с которыми парсер работает. Style сохраняется для команд похожим образом, его можно получить при обработке в LUA.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003e\u003cb\u003eПростая структура конфигурационного файла.\u003c/b\u003e Конфигурационный файл представляет из себя XML файл. Все основные параметры программы являются детьми корневого тега. Для обработки можно добавлять произвольное количество парсеров. Каждый парсер представляет из себя тег внутри  и может иметь как атрибуты так и вложенные теги. При создании конкретного парсера в программе в конструктор будет передано всё дерево, относящееся к нему. Общая структура следующая:\u003c/p\u003e\u003c/li\u003e \u003c/ol\u003e \u003cpre\u003e\u003ccode\u003e    \u0026lt;Builder\u0026gt;\n      \u0026lt;ProblemCount\u0026gt;11\u0026lt;/ProblemCount\u0026gt;\n      \u0026lt;RefreshRate\u0026gt;300\u0026lt;/RefrestRate\u0026gt;\n      \u0026lt;OutputFile\u0026gt;output.html\u0026lt;/OutputFile\u0026gt;\n      \u0026lt;OutputScript\u0026gt;script.lua\u0026lt;/OutputScript\u0026gt;\n      \u0026lt;Parsers\u0026gt;\n        ...Список парсеров...\n      \u0026lt;/Parsers\u0026gt;\n    \u0026lt;/Builder\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eОсновной платформой, под которую программа была написана, является Linux. Ну или, говоря более конкретно Debian и Ubuntu. Графического интерфейса нет. Для установки, если все зависимости удовлетворены, достаточно написать классические ./configure , make и/или make install . Для запуска программе необходимо предоставить один аргумент — .xml файл с конфигурацией. Под Windows старая версия собиралась, но это было давно и с тех пор в проект добавилась зависимость от lua. Как вспомню и соберу, так выложу.\u003c/p\u003e\u003cp\u003eНа данный момент в зависимостях у программы 2(+1) библиотеки: две основные: libxml2 и liblua5.2, без которых программа не соберется, и одна дополнительная libcurl, с помощью которой программа скачивает файлы из интернет.\u003c/p\u003e\u003cp\u003eНу и в завершении я хочу привести пример конфигурации и результата работы программы, которая объединит таблицы 1/8 ACM ICPC Украины, который прошел сегодня. Результаты построены с использованием замороженных таблиц, размороженные еще не все есть.\u003c/p\u003e\u003cp\u003eРезультаты восточного региона пришлось скачать вручную в файл southStandings.html, потому что по непонятным причинам curl и wget скачивают что-то двоичное, похожее на архив...\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://yadi.sk/d/RBaXX4zbcczC9\"\u003eЭта\u003c/a\u003e веб-страница была сгенерирована с помощью следующего конфигурационного файла:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e \u0026lt;Builder\u0026gt;\n   \u0026lt;ProblemCount\u0026gt;N\u0026lt;/ProblemCount\u0026gt;\n   \u0026lt;RefreshRate\u0026gt;300\u0026lt;/RefreshRate\u0026gt;\n   \u0026lt;OutputFile\u0026gt;output.html\u0026lt;/OutputFile\u0026gt;\n   \u0026lt;OutputScript\u0026gt;outputEjudgeStyle.lua\u0026lt;/OutputScript\u0026gt;\n   \u0026lt;Parsers\u0026gt;\n     \u0026lt;EjudgeParser URL\u003d\u0026quot;http://olimp.vntu.edu.ua/standings82.php\u0026quot; IgnoreColumns\u003d\u0026quot;3\u0026quot; Prefix\u003d\u0026quot;Kyiv: \u0026quot; /\u0026gt;\n     \u0026lt;EjudgeParser Path\u003d\u0026quot;southStandings.html\u0026quot; IgnoreColumns\u003d\u0026quot;3\u0026quot; Prefix\u003d\u0026quot;South: \u0026quot;/\u0026gt;\n     \u0026lt;EjudgeParser URL\u003d\u0026quot;http://olymp.franko.lviv.ua/ejudge/standings.html\u0026quot; Prefix\u003d\u0026quot;West: \u0026quot; Timeless\u003d\u0026quot;Yes\u0026quot;/\u0026gt;\n     \u0026lt;EjudgeParser URL\u003d\u0026quot;http://olimp.vntu.edu.ua/standings78.php\u0026quot; IgnoreColumns\u003d\u0026quot;3\u0026quot; Prefix\u003d\u0026quot;East: \u0026quot; /\u0026gt;\n     \u0026lt;EjudgeParser URL\u003d\u0026quot;http://acm.khnu.km.ua/result021.php\u0026quot; Prefix\u003d\u0026quot;Center: \u0026quot; Timeless\u003d\u0026quot;Yes\u0026quot;/\u0026gt;\n   \u0026lt;/Parsers\u0026gt;\n \u0026lt;/Builder\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":["виртуальные контесты","объединение результатов"]}}