{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1436642625,"rating":0,"authorHandle":"nilsilu95","modificationTimeSeconds":1436642625,"id":19172,"title":"\u003cp\u003eHelp BIT or Segment tree, print lexicographic kth smallest character \u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cpre\u003e\u003ccode\u003eGiven a string(S) of alphabets(lower case only,a-z) of length N\u0026lt;(10**6), do two kind of operations(total of M\u0026lt;(10**5):\n\nType 1: 0 index c: Replace S[index] by char c.\nType 2: 1 LeftLimit RightLimit K :  Print the lexicographically Kth smallest character in the sub-string of String S starting from LeftLimit to RightLimit, inclusively.(The lexicographic order means that the words are arranged in a similar fashion as they are presumed to appear in a dictionary)\n\nInput format:\nThe first line contains 2 space separated integers N and Q, denoting the length of the string and the number of operations respectively.\nThe next line has a string S of length N.\nThe next Q lines denote the update/print operations, where 0 and 1 denote the type of operation which has to happen.\n\nOutput format:\nFor each print operation, output the lexicographically Kth smallest character in the substring of S starting from LeftLimit to RightLimit if possible, else print \u0026quot;Out of range.\u0026quot; (Without quotes)\n\n\n1 \u0026lt;\u003d Size of the string(N) \u0026lt;\u003d 10**6\n1 \u0026lt;\u003d Number of queries(M) \u0026lt;\u003d 10**5\n1 \u0026lt;\u003d LeftLimit, RightLimit, index \u0026lt;\u003d N\nc is a lowercase Latin letter only\n1 \u0026lt;\u003d K \u0026lt;\u003d N\nS contains only lowercase latin letters (a to z).\n\nSample Input\n 5 3\naabbc\n1 2 5 3\n0 3 a\n1 3 3 1\n\n\nSample Output\n b\na\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eWhich datastructure should be used?I think BIT or segment tree should be used,but how ? How to do the lexicographically kth one?( i saw this problem while doing xseed hiring challenge at hackerearth)\u003c/p\u003e\u003c/div\u003e","tags":["binary indexed tree","segment tree"]}}