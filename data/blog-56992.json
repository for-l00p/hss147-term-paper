{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":true,"creationTimeSeconds":1515434064,"rating":463,"authorHandle":"tourist","modificationTimeSeconds":1515436307,"id":56992,"title":"\u003cp\u003eHello 2018 -- Tutorial\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHere is the tutorial of Hello 2018. Enjoy!\u003c/p\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eModular Exponentiation\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eProblem writer: \u003ca class\u003d\"rated-user user-legendary\" href\u003d\"/profile/tourist\" title\u003d\"Legendary grandmaster tourist\"\u003e\u003cspan class\u003d\"legendary-user-first-letter\"\u003et\u003c/span\u003eourist\u003c/a\u003e \u003c/p\u003e\u003cdiv class\u003d\"problemTutorial\" problemcode\u003d\"913A\"\u003eTutorial is loading...\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eSolution\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003e#include \u0026lt;bits/stdc++.h\u0026gt;\n\nusing namespace std;\n\nint main() {\n  int n, m;\n  scanf(\u0026quot;%d %d\u0026quot;, \u0026amp;n, \u0026amp;m);\n  printf(\u0026quot;%d\\n\u0026quot;, n \u0026gt;\u003d 31 ? m : m % (1 \u0026lt;\u0026lt; n));\n  return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eChristmas Spruce\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eProblem writer: \u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/BudAlNik\" title\u003d\"Grandmaster BudAlNik\"\u003eBudAlNik\u003c/a\u003e \u003c/p\u003e\u003cdiv class\u003d\"problemTutorial\" problemcode\u003d\"913B\"\u003eTutorial is loading...\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eC++ solution\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003e#include \u0026lt;bits/stdc++.h\u0026gt;\n\nusing namespace std;\n\nint main() {\n  int n;\n  cin \u0026gt;\u0026gt; n;\n  vector\u0026lt;int\u0026gt; p(n), deg(n);\n  for (int i \u003d 1; i \u0026lt; n; i++) {\n    cin \u0026gt;\u0026gt; p[i];\n    p[i]--;\n    deg[p[i]]++;\n  }\n  vector\u0026lt;int\u0026gt; sons_leaves(n);\n  for (int i \u003d 0; i \u0026lt; n; i++) {\n    if (deg[i] \u003d\u003d 0) {\n      sons_leaves[p[i]]++;\n    }\n  }\n  for (int i \u003d 0; i \u0026lt; n; i++) {\n    if (deg[i] \u0026gt; 0 \u0026amp;\u0026amp; sons_leaves[i] \u0026lt; 3) {\n      puts(\u0026quot;No\u0026quot;);\n      return 0;\n    }\n  }\n  puts(\u0026quot;Yes\u0026quot;);\n  return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003ePython solution\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003en \u003d int(input())\np \u003d [int(input()) - 1 for _ in range(n - 1)]\nleafs \u003d list(filter(lambda x: not x in p, range(n)))\nlp \u003d [x for i, x in enumerate(p) if i + 1 in leafs]\nx \u003d min(lp.count(k) for k in p)\nprint(\u0026quot;Yes\u0026quot; if x \u0026gt;\u003d 3 else \u0026quot;No\u0026quot;)\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eParty Lemonade\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eProblem writer: \u003ca class\u003d\"rated-user user-legendary\" href\u003d\"/profile/tourist\" title\u003d\"Legendary grandmaster tourist\"\u003e\u003cspan class\u003d\"legendary-user-first-letter\"\u003et\u003c/span\u003eourist\u003c/a\u003e \u003c/p\u003e\u003cdiv class\u003d\"problemTutorial\" problemcode\u003d\"913C\"\u003eTutorial is loading...\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eSolution\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003e#include \u0026lt;bits/stdc++.h\u0026gt;\n\nusing namespace std;\n\nint main() {\n  int n, L;\n  scanf(\u0026quot;%d %d\u0026quot;, \u0026amp;n, \u0026amp;L);\n  vector\u0026lt;int\u0026gt; c(n);\n  for (int i \u003d 0; i \u0026lt; n; i++) {\n    scanf(\u0026quot;%d\u0026quot;, \u0026amp;c[i]);\n  }\n  for (int i \u003d 0; i \u0026lt; n - 1; i++) {\n    c[i + 1] \u003d min(c[i + 1], 2 * c[i]);\n  }\n  long long ans \u003d (long long) 4e18;\n  long long sum \u003d 0;\n  for (int i \u003d n - 1; i \u0026gt;\u003d 0; i--) {\n    int need \u003d L / (1 \u0026lt;\u0026lt; i);\n    sum +\u003d (long long) need * c[i];\n    L -\u003d need \u0026lt;\u0026lt; i;\n    ans \u003d min(ans, sum + (L \u0026gt; 0) * c[i]);\n  }\n  cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; endl;\n  return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eToo Easy Problems\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eProblem writer: \u003ca class\u003d\"rated-user user-legendary\" href\u003d\"/profile/tourist\" title\u003d\"Legendary grandmaster tourist\"\u003e\u003cspan class\u003d\"legendary-user-first-letter\"\u003et\u003c/span\u003eourist\u003c/a\u003e \u003c/p\u003e\u003cdiv class\u003d\"problemTutorial\" problemcode\u003d\"913D\"\u003eTutorial is loading...\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eSolution with binary search\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003e#include \u0026lt;bits/stdc++.h\u0026gt;\n\nusing namespace std;\n\nint main() {\n  int n, T;\n  scanf(\u0026quot;%d %d\u0026quot;, \u0026amp;n, \u0026amp;T);\n  vector\u0026lt;int\u0026gt; a(n), t(n);\n  for (int i \u003d 0; i \u0026lt; n; i++) {\n    scanf(\u0026quot;%d %d\u0026quot;, \u0026amp;a[i], \u0026amp;t[i]);\n  }\n  vector\u0026lt;int\u0026gt; res;\n  int low \u003d 0, high \u003d n;\n  while (low \u0026lt; high) {\n    int mid \u003d (low + high + 1) \u0026gt;\u0026gt; 1;\n    vector\u0026lt; pair\u0026lt;int,int\u0026gt; \u0026gt; e;\n    for (int i \u003d 0; i \u0026lt; n; i++) {\n      if (a[i] \u0026gt;\u003d mid) {\n        e.emplace_back(t[i], i);\n      }\n    }\n    sort(e.begin(), e.end());\n    bool ok \u003d false;\n    if ((int) e.size() \u0026gt;\u003d mid) {\n      int sum \u003d 0;\n      for (int i \u003d 0; i \u0026lt; mid; i++) {\n        sum +\u003d e[i].first;\n      }\n      if (sum \u0026lt;\u003d T) {\n        ok \u003d true;\n        res.resize(mid);\n        for (int i \u003d 0; i \u0026lt; mid; i++) {\n          res[i] \u003d e[i].second;\n        }\n      }\n    }\n    if (ok) {\n      low \u003d mid;\n    } else {\n      high \u003d mid - 1;\n    }\n  }\n  int sz \u003d (int) res.size();\n  printf(\u0026quot;%d\\n%d\\n\u0026quot;, sz, sz);\n  for (int i \u003d 0; i \u0026lt; sz; i++) {\n    if (i \u0026gt; 0) {\n      putchar(\u0027 \u0027);\n    }\n    printf(\u0026quot;%d\u0026quot;, res[i] + 1);\n  }\n  printf(\u0026quot;\\n\u0026quot;);\n  return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eSolution with set\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003e#include \u0026lt;bits/stdc++.h\u0026gt;\n\nusing namespace std;\n\nint main() {\n  int n, T;\n  scanf(\u0026quot;%d %d\u0026quot;, \u0026amp;n, \u0026amp;T);\n  vector\u0026lt; vector\u0026lt; pair\u0026lt;int, int\u0026gt; \u0026gt; \u0026gt; at(n + 1);\n  for (int i \u003d 0; i \u0026lt; n; i++) {\n    int foo, bar;\n    scanf(\u0026quot;%d %d\u0026quot;, \u0026amp;foo, \u0026amp;bar);\n    at[foo].emplace_back(bar, i);\n  }\n  vector\u0026lt;int\u0026gt; res;\n  set\u0026lt; pair\u0026lt;int, int\u0026gt; \u0026gt; s;\n  int sum \u003d 0;\n  for (int k \u003d n; k \u0026gt; 0; k--) {\n    for (auto \u0026amp;p : at[k]) {\n      sum +\u003d p.first;\n      s.emplace(p);\n    }\n    while ((int) s.size() \u0026gt; k) {\n      sum -\u003d (--s.end())-\u0026gt;first;\n      s.erase(--s.end());\n    }\n    if ((int) s.size() \u003d\u003d k \u0026amp;\u0026amp; sum \u0026lt;\u003d T) {\n      for (auto \u0026amp;p : s) {\n        res.push_back(p.second);\n      }\n      break;\n    }\n  }\n  int sz \u003d (int) res.size();\n  printf(\u0026quot;%d\\n%d\\n\u0026quot;, sz, sz);\n  for (int i \u003d 0; i \u0026lt; sz; i++) {\n    if (i \u0026gt; 0) {\n      putchar(\u0027 \u0027);\n    }\n    printf(\u0026quot;%d\u0026quot;, res[i] + 1);\n  }\n  printf(\u0026quot;\\n\u0026quot;);\n  return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eLogical Expression\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eProblem writer: \u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/BudAlNik\" title\u003d\"Grandmaster BudAlNik\"\u003eBudAlNik\u003c/a\u003e \u003c/p\u003e\u003cdiv class\u003d\"problemTutorial\" problemcode\u003d\"913E\"\u003eTutorial is loading...\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eSolution 1\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003e#include \u0026lt;iostream\u0026gt;\n#include \u0026lt;set\u0026gt;\n#include \u0026lt;vector\u0026gt;\n#include \u0026lt;string\u0026gt;\n\nusing namespace std;\n\nbool ls(const string\u0026amp; a, const string\u0026amp; b) {\n\tif (a.length() \u003d\u003d b.length()) return a \u0026lt; b;\n\treturn a.length() \u0026lt; b.length();\n}\n\nstruct Expression {\n\tint p, t;\n\tstring e;\n\n\tExpression(string _e, int t_, int _p) : e(_e), t(t_), p(_p) {}\n\n\tbool operator \u0026lt; (const Expression\u0026amp; ex) const {\n\t\tif (ex.e \u003d\u003d e) {\n\t\t\tif (t !\u003d ex.t) {\n\t\t\t\treturn t \u0026lt; ex.t;\n\t\t\t}\n\t\t\treturn p \u0026lt; ex.p;\n\t\t}\n\t\treturn ls(e, ex.e);\n\t}\n};\n\nset\u0026lt;Expression\u0026gt; q;\n\nconst int FULL \u003d 0xff;\nconst vector\u0026lt;int\u0026gt; B \u003d {1, 2, 4, 8, 16, 32, 64, 128};\nconst int X_TABLE \u003d B[4] + B[5] + B[6] + B[7];\nconst int Y_TABLE \u003d B[2] + B[3] + B[6] + B[7];\nconst int Z_TABLE \u003d B[1] + B[3] + B[5] + B[7];\n\nstring dp[1 \u0026lt;\u0026lt; 8][3];\n\nvoid add(int pr, const string\u0026amp; s, int mask) {\n\tif (dp[mask][pr].empty() || ls(s, dp[mask][pr])) {\n\t\tdp[mask][pr] \u003d s;\n\t\tExpression e(s, mask, pr);\n\t\tq.insert(e);\n\t}\n}\n\nint main() {\n\tadd(2, \u0026quot;x\u0026quot;, X_TABLE);\n\tadd(2, \u0026quot;y\u0026quot;, Y_TABLE);\n\tadd(2, \u0026quot;z\u0026quot;, Z_TABLE);\n\twhile (!q.empty()) {\n\t\tauto e \u003d *q.begin();\n\t\tq.erase(q.begin());\n\n\t\tif (e.p \u003d\u003d 2) {\n\t\t\tadd(2, \u0026quot;!\u0026quot; + e.e, ~e.t \u0026amp; FULL);\n\t\t\tadd(1, e.e, e.t);\n\t\t}\n\n\t\tif (e.p \u003d\u003d 1) {\n\t\t\tfor (int mask \u003d 0; mask \u0026lt; FULL; ++mask) {\n\t\t\t\tif (!dp[mask][2].empty()) {\n\t\t\t\t\tadd(1, dp[mask][2] + \u0026quot;\u0026amp;\u0026quot; + e.e, mask \u0026amp; e.t);\n\t\t\t\t\tadd(1, e.e + \u0026quot;\u0026amp;\u0026quot; + dp[mask][2], mask \u0026amp; e.t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tadd(2, \u0026quot;(\u0026quot; + e.e + \u0026quot;)\u0026quot;, e.t);\n\t\t\tadd(0, e.e, e.t);\n\t\t}\n\n\t\tif (e.p \u003d\u003d 0) {\n\t\t\tfor (int mask \u003d 0; mask \u0026lt; FULL; ++mask) {\n\t\t\t\tfor (int pr \u003d 1; pr \u0026lt;\u003d 2; ++pr) {\n\t\t\t\t\tif (!dp[mask][pr].empty()) {\n\t\t\t\t\t\tadd(0, dp[mask][pr] + \u0026quot;|\u0026quot; + e.e, mask | e.t);\n\t\t\t\t\t\tadd(0, e.e + \u0026quot;|\u0026quot; + dp[mask][pr], mask | e.t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tadd(2, \u0026quot;(\u0026quot; + e.e + \u0026quot;)\u0026quot;, e.t);\n\t\t}\n\t}\n\n\t\n\tint n;\n\tcin \u0026gt;\u0026gt; n;\n\twhile (n--) {\n\t\tstring s;\n\t\tcin \u0026gt;\u0026gt; s;\n\t\tint mask \u003d 0;\n\t\tfor (int i \u003d 0; i \u0026lt; 8; ++i) {\n\t\t\tif (s[i] \u003d\u003d \u00271\u0027) {\n\t\t\t\tmask |\u003d (1 \u0026lt;\u0026lt; i);\n\t\t\t}\n\t\t}\n\n\t\tcout \u0026lt;\u0026lt; dp[mask][0] \u0026lt;\u0026lt; endl;\n\t}\n\n\treturn 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eSolution 2\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003e#include \u0026lt;bits/stdc++.h\u0026gt;\n\nusing namespace std;\n\nstring res[256][3];\nbool changed;\n\nvoid update(string \u0026amp;a, string \u0026amp;b) {\n  if (a \u003d\u003d \u0026quot;\u0026quot; || (b.length() \u0026lt; a.length() || (b.length() \u003d\u003d a.length() \u0026amp;\u0026amp; b \u0026lt; a))) {\n    changed \u003d true;\n    a \u003d b;\n  }\n}\n\nint main() {\n  res[(1 \u0026lt;\u0026lt; 4) + (1 \u0026lt;\u0026lt; 5) + (1 \u0026lt;\u0026lt; 6) + (1 \u0026lt;\u0026lt; 7)][0] \u003d \u0026quot;x\u0026quot;;\n  res[(1 \u0026lt;\u0026lt; 2) + (1 \u0026lt;\u0026lt; 3) + (1 \u0026lt;\u0026lt; 6) + (1 \u0026lt;\u0026lt; 7)][0] \u003d \u0026quot;y\u0026quot;;\n  res[(1 \u0026lt;\u0026lt; 1) + (1 \u0026lt;\u0026lt; 3) + (1 \u0026lt;\u0026lt; 5) + (1 \u0026lt;\u0026lt; 7)][0] \u003d \u0026quot;z\u0026quot;;\n  changed \u003d true;\n  while (changed) {\n    changed \u003d false;\n    for (int i \u003d 0; i \u0026lt; 256; i++) {\n      for (int j \u003d 0; j \u0026lt; 3; j++) {\n        if (res[i][j] \u003d\u003d \u0026quot;\u0026quot;) {\n          continue;\n        }\n        { // op \u003d\u003d 0\n          string s \u003d res[i][j];\n          if (j \u0026gt; 0) {\n            s \u003d \u0026quot;(\u0026quot; + s + \u0026quot;)\u0026quot;;\n          }\n          s \u003d \u0026quot;!\u0026quot; + s;\n          update(res[i ^ 255][0], s);\n        }\n        for (int ii \u003d 0; ii \u0026lt; 256; ii++) {\n          for (int jj \u003d 0; jj \u0026lt; 3; jj++) {\n            if (res[ii][jj] \u003d\u003d \u0026quot;\u0026quot;) {\n              continue;\n            }\n            for (int op \u003d 1; op \u0026lt;\u003d 2; op++) {\n              string s \u003d res[i][j];\n              if (j \u0026gt; op) {\n                s \u003d \u0026quot;(\u0026quot; + s + \u0026quot;)\u0026quot;;\n              }\n              string t \u003d res[ii][jj];\n              if (jj \u0026gt; op) {\n                t \u003d \u0026quot;(\u0026quot; + t + \u0026quot;)\u0026quot;;\n              }\n              string w \u003d s + (op \u003d\u003d 1 ? \u0027\u0026amp;\u0027 : \u0027|\u0027) + t;\n              update(res[op \u003d\u003d 1 ? (i \u0026amp; ii) : (i | ii)][op], w);\n            }\n          }\n        }\n      }\n    }\n  }\n  int tt;\n  cin \u0026gt;\u0026gt; tt;\n  while (tt--) {\n    string z;\n    cin \u0026gt;\u0026gt; z;\n    int mask \u003d 0;\n    for (int i \u003d 0; i \u0026lt; 8; i++) {\n      mask |\u003d (z[i] - \u00270\u0027) \u0026lt;\u0026lt; i;\n    }\n    string best \u003d \u0026quot;\u0026quot;;\n    for (int j \u003d 0; j \u0026lt; 3; j++) {\n      update(best, res[mask][j]);\n    }\n    cout \u0026lt;\u0026lt; best \u0026lt;\u0026lt; endl;\n  }\n  return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eStrongly Connected Tournament\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eProblem writer: \u003ca class\u003d\"rated-user user-orange\" href\u003d\"/profile/YakutovDmitriy\" title\u003d\"International master YakutovDmitriy\"\u003eYakutovDmitriy\u003c/a\u003e \u003c/p\u003e\u003cdiv class\u003d\"problemTutorial\" problemcode\u003d\"913F\"\u003eTutorial is loading...\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eSolution\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003e#include \u0026lt;bits/stdc++.h\u0026gt;\n\nusing namespace std;\n\nconst int md \u003d 998244353;\n\ninline void add(int \u0026amp;a, int b) {\n  a +\u003d b;\n  if (a \u0026gt;\u003d md) a -\u003d md;\n}\n\ninline void sub(int \u0026amp;a, int b) {\n  a -\u003d b;\n  if (a \u0026lt; 0) a +\u003d md;\n}\n\ninline int mul(int a, int b) {\n  return (int) ((long long) a * b % md);\n}\n\ninline int power(int a, long long b) {\n  int res \u003d 1;\n  while (b \u0026gt; 0) {\n    if (b \u0026amp; 1) {\n      res \u003d mul(res, a);\n    }\n    a \u003d mul(a, a);\n    b \u0026gt;\u0026gt;\u003d 1;\n  }\n  return res;\n}\n\ninline int inv(int a) {\n  return power(a, md - 2);\n}\n\nint main() {\n  int n, P, Q;\n  cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; P \u0026gt;\u0026gt; Q;\n  int p \u003d mul(P, inv(Q));\n  vector\u0026lt; vector\u0026lt;int\u0026gt; \u0026gt; p_win(n + 1, vector\u0026lt;int\u0026gt;(n + 1, 0));\n  p_win[0][0] \u003d 1;\n  for (int i \u003d 0; i \u0026lt; n; i++) {\n    for (int j \u003d 0; j \u0026lt;\u003d i; j++) {\n      add(p_win[i + 1][j], mul(p_win[i][j], power(p, j)));\n      add(p_win[i + 1][j + 1], mul(p_win[i][j], power((1 - p + md) % md, i - j)));\n    }\n  }\n  vector\u0026lt;int\u0026gt; p_strong(n + 1);\n  for (int i \u003d 1; i \u0026lt;\u003d n; i++) {\n    p_strong[i] \u003d 1;\n    for (int j \u003d 1; j \u0026lt; i; j++) {\n      sub(p_strong[i], mul(p_strong[j], p_win[i][j]));\n    }\n  }\n  vector\u0026lt;int\u0026gt; res(n + 1);\n  res[1] \u003d 0;\n  for (int i \u003d 2; i \u0026lt;\u003d n; i++) {\n    res[i] \u003d 0;\n    for (int j \u003d 1; j \u0026lt; i; j++) {\n      int coeff \u003d mul(p_strong[j], p_win[i][j]);\n      int games \u003d (res[j] + res[i - j]) % md;\n      add(games, j * (j - 1) / 2 + j * (i - j));\n      add(res[i], mul(coeff, games));\n    }\n    add(res[i], mul(i * (i - 1) / 2, p_strong[i]));\n    res[i] \u003d mul(res[i], inv((1 - p_strong[i] + md) % md));\n  }\n  cout \u0026lt;\u0026lt; res[n] \u0026lt;\u0026lt; endl;\n  return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003ePower Substring\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eProblem writer: \u003ca class\u003d\"rated-user user-orange\" href\u003d\"/profile/YakutovDmitriy\" title\u003d\"International master YakutovDmitriy\"\u003eYakutovDmitriy\u003c/a\u003e \u003c/p\u003e\u003cdiv class\u003d\"problemTutorial\" problemcode\u003d\"913G\"\u003eTutorial is loading...\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003ePython solution\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cbr /\u003edef dlog(x, n):\n  bigMod \u003d 5 ** n\n  ans \u003d [None, 0, 1, 3, 2][x % 5]\n  val \u003d 2 ** ans % bigMod\n  mod, phi \u003d 5, 4\n  phiVal \u003d 2 ** phi % bigMod\n  for i in range(2, n + 1):\n    nextMod \u003d mod * 5\n    while val % nextMod !\u003d x % nextMod:\n      val \u003d val * phiVal % bigMod\n      ans +\u003d phi\n    phi *\u003d 5\n    phiVal \u003d (phiVal *\n              phiVal % bigMod *\n              phiVal % bigMod *\n              phiVal % bigMod *\n              phiVal % bigMod)\n    mod \u003d nextMod\n  return ans\n\ndef main():\n  inp \u003d input()\n  n \u003d len(inp)\n  a \u003d int(inp)\n  for m in range(n + 1):\n    l \u003d a * 10 ** m\n    x, mod \u003d l, 2 ** (n + m)\n    if x % mod !\u003d 0:\n      x +\u003d mod - x % mod\n    if x % 5 \u003d\u003d 0:\n      x +\u003d mod\n    if x \u0026lt; l + 10 ** m:\n      assert x % mod \u003d\u003d 0 and x % 5 !\u003d 0\n      x \u003d x // mod\n      mod \u003d 5 ** (n + m)\n      print(n + m + dlog(x % mod, n + m))\n      return\n  assert False\n\nif __name__ \u003d\u003d \u0027__main__\u0027:\n  cnt \u003d int(input())\n  for i in range(cnt):\n    main()\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eC++ solution\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003e#include \u0026lt;bits/stdc++.h\u0026gt;\n\nusing namespace std;\n\ninline long long mul(long long a, long long b, long long md) {\n  long long res \u003d 0;\n  while (b \u0026gt; 0) {\n    if (b \u0026amp; 1) {\n      res +\u003d a; if (res \u0026gt;\u003d md) res -\u003d md;\n    }\n    a +\u003d a; if (a \u0026gt;\u003d md) a -\u003d md;\n    b \u0026gt;\u0026gt;\u003d 1;\n  }\n  return res;\n}\n\ninline long long power(long long a, long long b, long long md) {\n  long long res \u003d 1;\n  while (b \u0026gt; 0) {\n    if (b \u0026amp; 1) {\n      res \u003d mul(res, a, md);\n    }\n    a \u003d mul(a, a, md);\n    b \u0026gt;\u0026gt;\u003d 1;\n  }\n  return res;\n}\n\nint main() {\n  int tt;\n  cin \u0026gt;\u0026gt; tt;\n  while (tt--) {\n    long long a;\n    cin \u0026gt;\u0026gt; a;\n    int n \u003d (int) to_string(a).length();\n    for (int m \u003d 0; ; m++) {\n      long long b \u003d (-a) \u0026amp; ((1LL \u0026lt;\u0026lt; (n + m)) - 1);\n      if ((a + b) % 5 \u003d\u003d 0) {\n        b +\u003d (1LL \u0026lt;\u0026lt; (n + m));\n      }\n      if ((b \u003d\u003d 0 \u0026amp;\u0026amp; m \u003d\u003d 0) || (int) to_string(b).length() \u0026lt;\u003d m) {\n        long long c \u003d (a + b) \u0026gt;\u0026gt; (n + m);\n        long long t \u003d vector\u0026lt;long long\u0026gt;{-1, 0, 1, 3, 2}[c % 5];\n        long long p5 \u003d 5;\n        for (int i \u003d 1; i \u0026lt; n + m; i++) {\n          while (power(2, t, p5 * 5) !\u003d c % (p5 * 5)) {\n            t +\u003d p5 / 5 * 4;\n          }\n          p5 *\u003d 5;\n        }\n        t +\u003d n + m;\n        cout \u0026lt;\u0026lt; t \u0026lt;\u0026lt; endl;\n        break;\n      }\n      a *\u003d 10;\n    }\n  }\n  return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eDon\u0027t Exceed\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eProblem writer: \u003ca class\u003d\"rated-user user-legendary\" href\u003d\"/profile/tourist\" title\u003d\"Legendary grandmaster tourist\"\u003e\u003cspan class\u003d\"legendary-user-first-letter\"\u003et\u003c/span\u003eourist\u003c/a\u003e \u003c/p\u003e\u003cdiv class\u003d\"problemTutorial\" problemcode\u003d\"913H\"\u003eTutorial is loading...\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eO(n^5) solution\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003e#include \u0026lt;bits/stdc++.h\u0026gt;\n\nusing namespace std;\n\nconst int md \u003d 998244353;\n\ninline void add(int \u0026amp;a, int b) {\n  a +\u003d b;\n  if (a \u0026gt;\u003d md) a -\u003d md;\n}\n\ninline void sub(int \u0026amp;a, int b) {\n  a -\u003d b;\n  if (a \u0026lt; 0) a +\u003d md;\n}\n\ninline int mul(int a, int b) {\n  return (int) ((long long) a * b % md);\n}\n\ninline int power(int a, long long b) {\n  int res \u003d 1;\n  while (b \u0026gt; 0) {\n    if (b \u0026amp; 1) {\n      res \u003d mul(res, a);\n    }\n    a \u003d mul(a, a);\n    b \u0026gt;\u0026gt;\u003d 1;\n  }\n  return res;\n}\n\ninline int inv(int a) {\n  return power(a, md - 2);\n}\n\nconst int N \u003d 77;\n\nint C[N][N];\n\ntypedef vector\u0026lt;int\u0026gt; poly;\n\npoly integrate(poly a) {\n  poly b \u003d {0};\n  for (int i \u003d 0; i \u0026lt; (int) a.size(); i++) {\n    b.push_back(mul(a[i], inv(i + 1)));\n  }\n  return b;\n}\n\nvoid sub(poly \u0026amp;a, poly b) {\n  while (a.size() \u0026lt; b.size()) {\n    a.push_back(0);\n  }\n  for (int i \u003d 0; i \u0026lt; (int) b.size(); i++) {\n    sub(a[i], b[i]);\n  }\n}\n\npoly plug(poly a, int delta) {\n  // a(x + delta)\n  poly b(a.size(), 0);\n  for (int i \u003d 0; i \u0026lt; (int) a.size(); i++) {\n    for (int j \u003d 0; j \u0026lt;\u003d i; j++) {\n      add(b[j], mul(a[i], mul(C[i][j], power(delta, i - j))));\n    }\n  }\n  return b;\n}\n\nint eval(poly a, int x) {\n  int res \u003d 0;\n  for (int i \u003d (int) a.size() - 1; i \u0026gt;\u003d 0; i--) {\n    res \u003d mul(res, x);\n    add(res, a[i]);\n  }\n  return res;\n}\n\nconst int COEFF \u003d 1000000;\n\nint main() {\n  for (int i \u003d 0; i \u0026lt; N; i++) {\n    for (int j \u003d 0; j \u0026lt; N; j++) {\n      C[i][j] \u003d (j \u003d\u003d 0 ? 1 : (i \u003d\u003d 0 ? 0 : (C[i - 1][j] + C[i - 1][j - 1]) % md));\n    }\n  }\n  int n;\n  cin \u0026gt;\u0026gt; n;\n  vector\u0026lt;int\u0026gt; x(n), fracs;\n  for (int i \u003d 0; i \u0026lt; n; i++) {\n    double foo;\n    cin \u0026gt;\u0026gt; foo;\n    x[i] \u003d (int) (foo * COEFF + 0.5);\n    fracs.push_back(x[i] % COEFF);\n  }\n  fracs.push_back(0);\n  sort(fracs.begin(), fracs.end());\n  fracs.resize(unique(fracs.begin(), fracs.end()) - fracs.begin());\n  int cnt \u003d (int) fracs.size();\n  vector\u0026lt;int\u0026gt; point(n * cnt + 1);\n  for (int i \u003d 0; i \u0026lt;\u003d n * cnt; i++) {\n    point[i] \u003d mul(i / cnt * COEFF + fracs[i % cnt], inv(COEFF));\n  }\n  vector\u0026lt;int\u0026gt; cut(n);\n  for (int i \u003d 0; i \u0026lt; n; i++) {\n    cut[i] \u003d (int) (find(point.begin(), point.end(), mul(x[i], inv(COEFF))) - point.begin());\n  }\n  vector\u0026lt;poly\u0026gt; a(n * cnt);\n  for (int i \u003d 0; i \u0026lt; n * cnt; i++) {\n    a[i] \u003d {i \u0026lt; min(cnt, cut[0]) ? 1 : 0};\n  }\n  for (int id \u003d 1; id \u0026lt; n; id++) {\n    for (int i \u003d 0; i \u0026lt; n * cnt; i++) {\n      a[i] \u003d integrate(a[i]);\n    }\n    for (int i \u003d n * cnt - 1; i \u0026gt;\u003d 0; i--) {\n      sub(a[i][0], eval(a[i], point[i]));\n      for (int j \u003d i - 1; j \u0026gt;\u003d i - cnt \u0026amp;\u0026amp; j \u0026gt;\u003d 0; j--) {\n        add(a[i][0], eval(a[j], point[j + 1]));\n        if (j \u0026gt; i - cnt) {\n          sub(a[i][0], eval(a[j], point[j]));\n        } else {\n          sub(a[i], plug(a[i - cnt], md - 1));\n        }\n      }\n    }\n    for (int i \u003d cut[id]; i \u0026lt; n * cnt; i++) {\n      a[i] \u003d {0};\n    }\n  }\n  int ans \u003d 0;\n  for (int i \u003d 0; i \u0026lt; n * cnt; i++) {\n    poly b \u003d integrate(a[i]);\n    add(ans, eval(b, point[i + 1]));\n    sub(ans, eval(b, point[i]));\n  }\n  printf(\u0026quot;%d\\n\u0026quot;, ans);\n  return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eO(n^4) solution\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003e#include \u0026lt;bits/stdc++.h\u0026gt;\n\nusing namespace std;\n\nconst int md \u003d 998244353;\n\ninline void add(int \u0026amp;a, int b) {\n  a +\u003d b;\n  if (a \u0026gt;\u003d md) a -\u003d md;\n}\n\ninline void sub(int \u0026amp;a, int b) {\n  a -\u003d b;\n  if (a \u0026lt; 0) a +\u003d md;\n}\n\ninline int mul(int a, int b) {\n  return (int) ((long long) a * b % md);\n}\n\ninline int power(int a, long long b) {\n  int res \u003d 1;\n  while (b \u0026gt; 0) {\n    if (b \u0026amp; 1) {\n      res \u003d mul(res, a);\n    }\n    a \u003d mul(a, a);\n    b \u0026gt;\u0026gt;\u003d 1;\n  }\n  return res;\n}\n\ninline int inv(int a) {\n  return power(a, md - 2);\n}\n\ntypedef vector\u0026lt;int\u0026gt; poly;\n\npoly integrate(poly a) {\n  poly b \u003d {0};\n  for (int i \u003d 0; i \u0026lt; (int) a.size(); i++) {\n    b.push_back(mul(a[i], inv(i + 1)));\n  }\n  return b;\n}\n\nvoid sub(poly \u0026amp;a, poly b) {\n  while (a.size() \u0026lt; b.size()) {\n    a.push_back(0);\n  }\n  for (int i \u003d 0; i \u0026lt; (int) b.size(); i++) {\n    sub(a[i], b[i]);\n  }\n}\n\nint eval(poly a, int x) {\n  int res \u003d 0;\n  for (int i \u003d (int) a.size() - 1; i \u0026gt;\u003d 0; i--) {\n    res \u003d mul(res, x);\n    add(res, a[i]);\n  }\n  return res;\n}\n\nconst int COEFF \u003d 1000000;\n\nint main() {\n  int n;\n  cin \u0026gt;\u0026gt; n;\n  vector\u0026lt;int\u0026gt; x(n), fracs;\n  for (int i \u003d 0; i \u0026lt; n; i++) {\n    double foo;\n    cin \u0026gt;\u0026gt; foo;\n    x[i] \u003d (int) (foo * COEFF + 0.5);\n    fracs.push_back(x[i] % COEFF);\n  }\n  fracs.push_back(0);\n  sort(fracs.begin(), fracs.end());\n  fracs.resize(unique(fracs.begin(), fracs.end()) - fracs.begin());\n  int cnt \u003d (int) fracs.size();\n  vector\u0026lt;int\u0026gt; point(n * cnt + 1);\n  for (int i \u003d 0; i \u0026lt;\u003d n * cnt; i++) {\n    point[i] \u003d i / cnt * COEFF + fracs[i % cnt];\n  }\n  vector\u0026lt;int\u0026gt; cut(n);\n  for (int i \u003d 0; i \u0026lt; n; i++) {\n    cut[i] \u003d (int) (find(point.begin(), point.end(), x[i]) - point.begin());\n  }\n  vector\u0026lt;int\u0026gt; sz(n * cnt);\n  for (int i \u003d 0; i \u0026lt; n * cnt; i++) {\n    sz[i] \u003d mul((point[i + 1] - point[i] + md) % md, inv(COEFF));\n  }\n  vector\u0026lt;poly\u0026gt; a(n * cnt);\n  vector\u0026lt;int\u0026gt; sum(n * cnt);\n  for (int i \u003d 0; i \u0026lt; n * cnt; i++) {\n    a[i] \u003d i \u0026lt; min(cnt, cut[0]) ? vector\u0026lt;int\u0026gt;{0, 1} : vector\u0026lt;int\u0026gt;{0};\n    sum[i] \u003d a[i].size() \u003d\u003d 1 ? 0 : sz[i];\n  }\n  for (int id \u003d 1; id \u0026lt; n; id++) {\n    for (int i \u003d n * cnt - 1; i \u0026gt;\u003d 0; i--) {\n      if (i \u0026gt;\u003d cut[id]) {\n        a[i] \u003d {0};\n        sum[i] \u003d 0;\n      } else {\n        for (int j \u003d i - 1; j \u0026gt;\u003d i - cnt \u0026amp;\u0026amp; j \u0026gt;\u003d 0; j--) {\n          add(a[i][0], sum[j]);\n        }\n        if (i - cnt \u0026gt;\u003d 0) {\n          sub(a[i], a[i - cnt]);\n        }\n        a[i] \u003d integrate(a[i]);\n        sum[i] \u003d eval(a[i], sz[i]);\n      }\n    }\n  }\n  int ans \u003d 0;\n  for (int i \u003d 0; i \u0026lt; n * cnt; i++) {\n    add(ans, sum[i]);\n  }\n  printf(\u0026quot;%d\\n\u0026quot;, ans);\n  return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e","tags":[]}}