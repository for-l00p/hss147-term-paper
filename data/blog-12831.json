{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1403648041,"rating":0,"authorHandle":"leetz","modificationTimeSeconds":1403650128,"id":12831,"title":"\u003cp\u003eHelp with local acm problem\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eI\u0027m preparing for the ACM competition in my country and i\u0027m pretty stuck with this problem, I don\u0027t know what algorithm to use either... Given a puzzle pattern you need to tell if it can be constructed only by using pieces with the pieces that have L-shape (as shown on the right image below).\u003c/p\u003e\u003cp\u003e\u003cimg alt\u003d\" \" src\u003d\"/predownloaded/73/33/73333ec883384b41589a7beab52c273d1d711e9e.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003eSo in this example answer is YES because pattern in the left can be constructed by this piece. Pieces are always the same, pattern is given in the input.\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eInput\nThe first line of input contains one positive integer T (1 \u0026lt;\u003d T \u0026lt;\u003d 100), the number of test cases.\n\nEach test case starts with a line that contains two integers H and W (1 \u0026lt;\u003d H, W \u0026lt;\u003d 500), which represent the height and width of the grid containing the pattern. The following H lines, each containing W characters, denote the grid. Each character is either \u0027R\u0027 (red), \u0027W\u0027 (white) or \u0027.\u0027 (empty space). Each grid contains at least one \u0027R\u0027 or \u0027W\u0027 character.\n\nOutput\nFor each test case, on a separate line, output either \u0027YES\u0027 if it is possible to construct the pattern with the puzzle pieces, or \u0027NO\u0027 otherwise.\n\nConstraints\nTime limit: 15 seconds\nMemory limit: 64 megabytes\n\nExamples\n\ninput                                      output\n2                                          YES\n3 3                                        NO\nW..\nRW.\nWRW\n3 4\nRWW.\nWWRW\n..WR \n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":["acm-icpc","algorithms","help"]}}