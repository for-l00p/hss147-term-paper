{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":false,"creationTimeSeconds":1400327712,"rating":3,"authorHandle":"Fcdkbear","modificationTimeSeconds":1400327712,"id":12329,"title":"\u003cp\u003eРазбор Тренировки 14.05.2014\u003c/p\u003e","locale":"ru","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e\u003cstrong\u003eЗадача А\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eВ этой задаче нужно написать динамику, которая отвечает на такой вопрос. \u0026quot;Я стою на ступеньке p. Какую максимальную сумму можно набрать, дойдя до ступеньки n?\u0026quot; Переходы очевидны — или идем на одну ступеньку вперед или на две. Сложность \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e)\u003c/span\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://pastebin.com/XxuEeLsZ\"\u003eКод\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eЗадача B\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eЗадача абсолютно аналогична предыдущей. Единственное отличие — чуть-чуть изменяются переходы и появляются запрещенные клеточки. Еще нужно аккуратно обработать случаи, когда решения нет. Детали в коде. Сложность \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e)\u003c/span\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://pastebin.com/BkKVD4YA\"\u003eКод\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eЗадача С\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eНапишем динамику по позиции коня — номеру строчки и столбца, в которых он стоит. Тогда количество способов попасть в нижнюю правую клетку из текущей клетки равна сумме способов от клеточки, в которую я попаду после хода первого типа и от клеточки, в которую я попаду после хода второго типа. Ответ — значение динамики в точке (0,0). Сложность \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e * \u003ci\u003eM\u003c/i\u003e)\u003c/span\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://pastebin.com/CVq9GUbY\"\u003eКод\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eЗадача D\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eЗадача аналогичная предыдущей. Состояние абсолютно такое же, переходы делаем так как сказано в условии. Сложность \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e * \u003ci\u003eM\u003c/i\u003e)\u003c/span\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://pastebin.com/c9GKQeHc\"\u003eКод\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eЗадача E\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eНапишем динамику по позиции на горке. Заметим, что из текущей клеточки (x,y) мы переходим в клеточки (x+1,y) и (x+1,y+1). Дальше все стандартно. Сложность \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e * \u003ci\u003eM\u003c/i\u003e)\u003c/span\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://pastebin.com/ZZb5WvVL\"\u003eКод\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eЗадача F\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eДавайте сначала сгенерируем все пирамидки размера, не превышеющего 300000 и посмотрим сколько их. Их всего около 120. Отлично, тогда пишем такую динамику. Пусть у нас осталось m ядер. переберем какую пирамидку будем сейчас строить, обновим ответ. Сложность выходит \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003em\u003c/i\u003e * \u003ci\u003esize\u003c/i\u003e)\u003c/span\u003e, где size — размер допустимого множества пирамидок. Еще важный момент — количество тестов не влияет на нашу сложность. Действительно, нам не нужно пересчитывать динамику каждый раз для каждого теста, ее значение не меняется от теста к тесту.\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://pastebin.com/YcxsNGQm\"\u003eКод\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eЗадача G\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eТак как наш граф ориентированный и ациклический — можно писать очень тупую динамику. Заведем динамику по номеру вершины. Внутри переберем все ребра, исходящие из нее, и вызовем динамику от второго конца ребра. При необходимости обновим ответ. Работать это все будет за \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e + \u003ci\u003eM\u003c/i\u003e)\u003c/span\u003e, ведь каждое ребро мы посмотрим ровно 1 раз.\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://pastebin.com/6UvRcGzm\"\u003eКод\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eЗадача H\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eДавайте набирать наше множество в порядке возрастания чисел. Заведем динамику по числу, которое мы сейчас рассматриваем (v) и сумме, которая у нас осталась (s). Тогда перехода всего два:\u003c/p\u003e\u003cp\u003e1) Мы используем v. Тогда мы переходим в состояние v+v, s-v. (так как следующее число как минимум в два раза больше текущего)\u003c/p\u003e\u003cp\u003e2) Мы не используем v. Переходим в состояние v+1, s.\u003c/p\u003e\u003cp\u003eСложность \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e)\u003c/span\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://pastebin.com/nJ7ZV4uX\"\u003eКод\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eЗадача I\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eНапишем динамику по тому, сколько веса мы еще можем положить в рюкзак и номеру текущего слитка. Тогда наши переходы — или пропустить текущий слиток, или, если вес позволяет — взять текущий слиток. Из обоих переходов нужно выбрать максимум.\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://pastebin.com/2h9A06SZ\"\u003eКод\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eЗадача J\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eНапишем динамику по позиции в строке и по параметру, который показывает, правда ли, что предыдущий символ был буква а. Тогда при переходаъ мы всегда можем поставить буквы a, c. Букву b мы можем поставить только, если предыдущий символ не был равен букве a. Сложность будет \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e)\u003c/span\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://pastebin.com/ABaVTmZf\"\u003eКод\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eЗадача K\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eНа самом деле мы решаем задачу Иосифа — очень известную задачу. Как ее решать? Пусть мы хотим посчитать ответ для N человек. Мы можем узнать, какой чувак вылетит в результате одного хода. Отлично, давайте найдем номер того, с кого будет начинатся отсчет после его вылета — это следующий после вылетевшего чувак — назовем его start. Рекурсивно решим задачу для N-1 человека, получим какое-то значение k. Отсчитаем k человек от чувака с номером start — это и будет ответом для текущего состояния динамика. Все операции нужно делать за \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(1)\u003c/span\u003e, и тогда общая сложность будет \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e)\u003c/span\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://pastie.org/9184402\"\u003eКод\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e","tags":["динамика","разбор"]}}