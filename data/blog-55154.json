{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1507845161,"rating":2,"authorHandle":"acmASCIS","modificationTimeSeconds":1507845161,"id":55154,"title":"\u003cp\u003eWeek02 — Recursion\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003ch1\u003e- What is a function?\u003c/h1\u003e\u003cp\u003eA function relates an input to an output. It is like a machine that has an input and output, and the output is related somehow to the input.\u003c/p\u003e\u003cp\u003eEx: f(X) \u003d 2X + 1 \u003d\u0026gt; f(1) \u003d 2*(1) + 1 \u003d 3, f(2) \u003d 2*(2) + 1 \u003d 5, and so on. \u003c/p\u003e\u003ch1\u003e- What is recursion?\u003c/h1\u003e\u003cp\u003e\u003cimg alt\u003d\" \" src\u003d\"/predownloaded/b8/a7/b8a703d3059ccb7e93f007a0c8d5526b180535e6.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003eRecursion is the method of defining sequence or a function in terms of previously defined values.\u003c/p\u003e\u003cp\u003eEx: --- If we want to calculate the factorial of a number N and it’s denoted by N!\u003c/p\u003e\u003cp\u003e(The factorial of a number N is the product of all positive number less than or equal to N)\u003c/p\u003e\u003cp\u003eEx: 5! \u003d 5*4*3*2*1.\u003c/p\u003e\u003cp\u003eWe know that 0! And 1! Are equal to 1\u003c/p\u003e\u003cp\u003eSo we can express the factorial of a number N by the function:\u003c/p\u003e \u003cul\u003e   \u003cli\u003e\u003cp\u003ef(N) \u003d\u003c/p\u003e\u003cp\u003e• 1, If N \u003d 0 or N \u003d 1\u003c/p\u003e\u003cp\u003e• N*f(N-1), Otherwise\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e\u003cp\u003e\u003cimg alt\u003d\" \" src\u003d\"/predownloaded/7f/63/7f63800d2b398889d4e1b2e132e052a2a6a2bdb1.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e \u003c/p\u003e\u003ch2\u003e- Another Example:\u003c/h2\u003e\u003cp\u003eNumber bases:\u003c/p\u003e \u003cul\u003e   \u003cli\u003e\u003cp\u003eDecimal: the standard system for representing a number in which every the value of every digit is equal to the value of the digit * 10 to the power of the index of the digit, Ex: 123 \u003d 1*(10^2) +2*(10^1) +3*(10^0).\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eBinary: another system for representing a number in which every the value of every digit is equal to the value of the digit * 2 to the power of the index of the digit, Ex: 101 \u003d 1*(2^2) +0*(2^1) +1*(2^0). \u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e\u003cp\u003eWe can convert a number from decimal to binary by using the function:\u003c/p\u003e \u003cul\u003e   \u003cli\u003e\u003cp\u003ef(N) \u003d\u003c/p\u003e   \u003cpre\u003e- If N \u003d 0, 0\n\n- If N \u003d 1, 1\n\n- Otherwise:\n\n    1. If N is odd, f(N/2)+1\n\n    2. If N is even, f(N/2)+0\u003c/pre\u003e\u003c/li\u003e \u003c/ul\u003e\u003cp\u003eLet’s convert 20 in decimal to binary:\u003c/p\u003e \u003col\u003e   \u003cli\u003e\u003cp\u003ef(20) \u003d f(10)+0\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003ef(10) \u003d f(5)+0\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003ef(5) \u003d f(2)+1\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003ef(2) \u003d f(1)+0\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003ef(1) \u003d1 \u003d\u0026gt; f(2) \u003d 10 \u003d\u0026gt; f(5) \u003d 101 \u003d\u0026gt; f(10) \u003d 1010 \u003d\u0026gt; f(20) \u003d 10100.\u003c/p\u003e\u003c/li\u003e \u003c/ol\u003e\u003cp\u003eThus 20 in decimal \u003d 10100 in binary.\u003c/p\u003e\u003ch1\u003e- Steps of recursion:\u003c/h1\u003e \u003col\u003e   \u003cli\u003e\u003cp\u003eIf the given instance of the problem is small or simple enough:\u003c/p\u003e   \u003cul\u003e     \u003cli\u003eSolve it and get back.\u003c/li\u003e   \u003c/ul\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eElse:\u003c/p\u003e   \u003cul\u003e     \u003cli\u003eReduce the problem to one or more simpler instances of the same problem.\u003c/li\u003e   \u003c/ul\u003e   \u003cul\u003e     \u003cli\u003eGo to step number 1 again with the simple instances.\u003c/li\u003e   \u003c/ul\u003e\u003c/li\u003e \u003c/ol\u003e\u003ch1\u003e- Backtracking:\u003c/h1\u003e\u003cp\u003eNow that you know about recursion what is backtracking?\u003c/p\u003e\u003cp\u003eRecursion is the key in backtracking .\u003c/p\u003e\u003cp\u003eAs the name suggests we backtrack to find the solution.\u003c/p\u003e\u003cp\u003eWe start with one possible move out of many available moves and try to solve the problem if we are able to solve the problem with the selected move then we will print the solution else we will backtrack and select some other move and try to solve it.\u003c/p\u003e\u003cp\u003eIf none if the moves work out we will claim that there is no solution for the problem.\u003c/p\u003e\u003cp\u003eSo, while solving a problem using recursion, we break the given problem into smaller ones.\u003c/p\u003e\u003cp\u003eLet\u0027s say we have a problem A and we divided it into three smaller problems B, C and D Now it may be the case that the solution to A does not depend on all the three subproblems, in fact we don\u0027t even know on which one it depends.\u003c/p\u003e\u003cp\u003eLet\u0027s take a situation.\u003c/p\u003e\u003cp\u003eSuppose you are standing in front of three tunnels, one of which is having a bag of gold at its end, but you don\u0027t know which one. So you\u0027ll try all three.\u003c/p\u003e\u003cp\u003eFirst go in tunnel 1, if that is not the one, then come out of it, and go into tunnel 2, and again if that is not the one, come out of it and go into tunnel 3.\u003c/p\u003e\u003cp\u003eSo basically in backtracking we attempt solving a subproblem, and if we don\u0027t reach the desired solution, then undo whatever we did for solving that subproblem, and try solving another subproblem.\u003c/p\u003e\u003ch1\u003e- References:\u003c/h1\u003e\u003cp\u003e\u003ca href\u003d\"http://www.purplemath.com/modules/nextnumb3.htm\"\u003elink1\u003c/a\u003e — \u003ca href\u003d\"https://en.wikibooks.org/wiki/Discrete_Mathematics/Recursion#What_is_recursion.3F\"\u003elink2\u003c/a\u003e — \u003ca href\u003d\"https://www.khanacademy.org/math/algebra/sequences/constructing-arithmetic-sequences/a/writing-recursive-formulas-for-arithmetic-sequences\"\u003elink3\u003c/a\u003e — \u003ca href\u003d\"https://mathbitsnotebook.com/Algebra2/Sequences/SSRefreshRecursive.html\"\u003elink4\u003c/a\u003e-- \u003ca href\u003d\"https://www.hackerearth.com/practice/basic-programming/recursion/recursion-and-backtracking/tutorial/\"\u003elink5\u003c/a\u003e\u003c/p\u003e\u003ch2\u003eInception Movie huh?\u003c/h2\u003e\u003cp\u003e\u003cimg alt\u003d\" \" src\u003d\"/predownloaded/4d/50/4d504d0a50765e38e7c7b8765ce0c67e407c44fe.gif\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003c/div\u003e","tags":[]}}