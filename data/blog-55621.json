{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1509977180,"rating":0,"authorHandle":"Light","modificationTimeSeconds":1509977180,"id":55621,"title":"\u003cp\u003eEnd\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eWith that last contest, our Codability course has come to an end.\u003c/p\u003e\u003cp\u003eIt was my pleasure teaching you all, it was really great and I really hope you could benefit from it as well. Before I write a bit about the last lecture, let me tell you a bit of things:\u003c/p\u003e \u003cul\u003e   \u003cli\u003e\u003cp\u003eYou \u003cstrong\u003eall\u003c/strong\u003e are really good and have bright minds. Whether its programming or anything else you decide to love and do in your life, trust me that the limit to your success is only where you decide it to be.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eClearing that up, if you want to benefit as much as possible from the course you\u0027ve taken, be sure to get to know everything we discussed in detail, and go back to ALL the contests here on this group and try to solve everything!\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003ePractice, practice and more practice.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eGoogle is your friend.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eLearn to enjoy it and build the passion for problem solving, because unless you see the beauty in it don\u0027t expect to keep going for long.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eI really hope you all set your eyes on the top places in the upcoming JOI, you have really good knowledge assuming you understood what I taught you, you just need to learn to use it correctly and you\u0027ll do great.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eDon\u0027t take a break, especially not a long one. Keep learning and solving by yourself even if there\u0027s no one teaching you or no contest coming soon, it all builds up.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eAs I said before, you can use this group to communicate and help each other, feel free to post about any problems you have.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eAnd at last, believe in yourselves.\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e\u003cp\u003eAlso I would like to specifically thank Amal and Mariam for being great volunteers, they have worked hard to prepare contests and knowledge for you all, so be sure to thank them if you see them :D\u003c/p\u003e\u003cp\u003eThank you all for being great students and I really hope to see you become better and better in the future.\u003c/p\u003e \u003chr /\u003e\u003cp\u003eAbout our last lecture, it was mainly a revision and answering any questions you all had, here are a few points worth mentioning:\u003c/p\u003e \u003cul\u003e   \u003cli\u003ePairs: pairs are simple data structures that lets us group 2 variables together (even from different data types), it\u0027s helpful and simple.\u003c/li\u003e \u003c/ul\u003e\u003cp\u003e\u003ca href\u003d\"http://www.cplusplus.com/reference/utility/pair/\"\u003ehttp://www.cplusplus.com/reference/utility/pair/\u003c/a\u003e\u003c/p\u003e \u003cul\u003e   \u003cli\u003e\u003cp\u003eSubstrings: a substring is a contiguous part of a string (there are n*(n-1)/2 such substrings), and an easy way to find and work with them is using the substring function in C++, if we have a string s, then we can use \u003ccode\u003es.substr(idx, len);\u003c/code\u003e to pick the substring starting at index \u0026quot;idx\u0026quot; and having length \u0026quot;len\u0026quot;. Another way to do that is to make a new string, and loop from left to right adding each letter to this new string, whatever suits you.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eReading and Printing Strings: as I told you, an easier way if we can do it is using a character array instead of a string, that\u0027ll give us the ability to use scanf and printf easily (look it up if you don\u0027t remember how). If we need to use strings, we can avoid cin by reading a char array then saying string\u003darray, then work again with the string (it\u0027ll be much faster). For output, since we know that the string is an object containing a char array, we can access that array and print it using printf by using c_str() function as follows: \u003ccode\u003eprintf(\u0026quot;%s\\n\u0026quot;,s.c_str());\u003c/code\u003e and it\u0027ll be fast.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eData Structures: we discussed some usages of the STL Data Structures (Queue, Stack, Set, Map). If you need to remember them, refer to the post related to them or use Google to find any info you want.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eBinary Representation of Numbers: a binary representation of a number is how it\u0027s written in numbers base-2, we sometimes need to deal with numbers in Binary, one way to do that is to do it manually as follows:\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e \u003cpre\u003e\u003ccode\u003e#include \u0026lt;bits/stdc++.h\u0026gt;\nusing namespace std;\n\nint main(){\n\tint n;\n\tcin\u0026gt;\u0026gt;n;\n\tvector\u0026lt;int\u0026gt; bin;\n\twhile(n){\n\t\tbin.push_back(n%2);\n\t\tn/\u003d2;\n\t}\n\treverse(bin.begin(), bin.end());\n\tfor(int i\u003d0; i\u0026lt;bin.size(); ++i)\n\t\tprintf(\u0026quot;%d\u0026quot;, bin[i]);\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eAnd another way to do that is using what\u0027s called Bitwise Operators, that are special operators in C++ that lets you access the bits stored in the memory of the PC. Read more about them here:\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.topcoder.com/community/data-science/data-science-tutorials/a-bit-of-fun-fun-with-bits/\"\u003ehttps://www.topcoder.com/community/data-science/data-science-tutorials/a-bit-of-fun-fun-with-bits/\u003c/a\u003e\u003c/p\u003e\u003cp\u003eA tutorial for the last contest will be uploaded in the next few days.\u003c/p\u003e\u003cp\u003eGood luck to you all! :D\u003c/p\u003e\u003c/div\u003e","tags":[]}}