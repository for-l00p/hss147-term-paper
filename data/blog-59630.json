{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1527060030,"rating":42,"authorHandle":"duckladydinh","modificationTimeSeconds":1527468591,"id":59630,"title":"\u003cp\u003eHELP!!! A little question about Monte Carlo Tree Search?\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eUpdated: Thank to \u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/marX\" title\u003d\"Grandmaster marX\"\u003emarX\u003c/a\u003e, my old question has found its answer, but a new one\u0027s just arrived. I hope you all can continue helping me in understanding this.\u003c/p\u003e\u003cp\u003eHello everyone,\u003c/p\u003e\u003cp\u003eI am sure that many of you have known this algorithm. As far as I am concerned, it is one of the most popular techniques in AI. I am learning it and I have a lot of questions regarding the intuition behind it, and hence I am writing today, with hope that some of you can share your experience with me.\u003c/p\u003e\u003cp\u003eTo summarize a bit, a MCTS algorithm is consisted of 4 phases â€” Select, Expand, Simulate and Propagate, and is based on a formula called UCB1 to balance between exploitation and exploration. \u003c/p\u003e\u003cp\u003e[NEW QUESTION] My new question is: does MCTS have memory, by which I mean if it does learn to form its experience, save that experience somewhere and retrieve it for query? I asked this because even after understanding how the tree is formed, I find no information for how to query the tree. The only example with clear code and real serious problem I have found (which confused me and made me doubt MCTS) is after analyzing \u003ca href\u003d\"http://www.ice.ci.ritsumei.ac.jp/~ftgaic/Downloadfiles/MctsAi.java\"\u003ethis (the main body)\u003c/a\u003e and \u003ca href\u003d\"http://www.ice.ci.ritsumei.ac.jp/~ftgaic/Downloadfiles/Node.java\"\u003ethis (the tree node)\u003c/a\u003e. In this case, for every time we want to make an action (in the process()), they \u0026quot;create a completely new tree\u0026quot; and only take action after that by considering actions from \u0026quot;only the root\u0026quot; node (\u0026quot;all\u0026quot; other codes in that website use the same idea). In other words, each action is somewhat \u0026quot;independent\u0026quot; of the previous one. Is this the true nature of MCTS? If not (hopefully), could you please give me some references for how I can efficiently use all MCTS past experience and make a query? Thank you so much.\u003c/p\u003e\u003cp\u003e[ANSWER FOUND] My first concern is about the UCB1 formula, that is UCB1 \u003d (total wins / total visits) + C * sqrt(ln(total visits in parent node) / total visits in current node). My question is what will change if I, instead of using \u0026quot;total number of wins\u0026quot;, use something like \u0026quot;total reward\u0026quot; (which may be HP loss, energy increase and so on)? In such case, will the term sqrt(ln(total visits in parent node) / total visits in current node) stay the same?\u003c/p\u003e\u003cp\u003eThank you for your time and consideration. I am looking forward to hearing from you.\u003c/p\u003e\u003c/div\u003e","tags":[]}}