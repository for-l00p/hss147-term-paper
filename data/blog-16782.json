{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":false,"creationTimeSeconds":1425500990,"rating":3,"authorHandle":"Fcdkbear","modificationTimeSeconds":1425501460,"id":16782,"title":"\u003cp\u003eРазбор олимпиады ВНТУ по информатике\u003c/p\u003e","locale":"ru","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e\u003cstrong\u003eО контесте\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eЗадачи для вас готовили я и \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/OutSide\" title\u003d\"Expert OutSide\"\u003eOutSide\u003c/a\u003e. В подготовке нам помагал \u003ca class\u003d\"rated-user user-orange\" href\u003d\"/profile/Igel_SK\" title\u003d\"Master Igel_SK\"\u003eIgel_SK\u003c/a\u003e, за что ему большое спасибо.\u003c/p\u003e\u003cp\u003eМы поздравляем победителей:\u003c/p\u003e\u003cp\u003e1) \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/Sherbina_Evgeniy\" title\u003d\"Expert Sherbina_Evgeniy\"\u003eSherbina_Evgeniy\u003c/a\u003e\u003c/p\u003e\u003cp\u003e2) \u003ca class\u003d\"rated-user user-black\" href\u003d\"/profile/moznuy\" title\u003d\"Unrated, moznuy\"\u003emoznuy\u003c/a\u003e\u003c/p\u003e\u003cp\u003e3) \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/FxF\" title\u003d\"Expert FxF\"\u003eFxF\u003c/a\u003e\u003c/p\u003e\u003cp\u003eЕсть два плохих момента:\u003c/p\u003e\u003cp\u003e1) Так случилось, что авторское и тестовое решение в задаче Е имели в себе одинаковый баг. К счастью, это ни на что не повлияло — единственный сабмит по задаче падает на том же тесте с таким же вердиктом, как и на контесте. Мы приносим свои извинения за эту ошибку и очень рады, что она никак не повлияла на ход контеста.\u003c/p\u003e\u003cp\u003e2) На 19-ой минуте юзер \u003ca class\u003d\"rated-user user-black\" href\u003d\"/profile/moznuy\" title\u003d\"Unrated, moznuy\"\u003emoznuy\u003c/a\u003e сдал скопипащенное с сайта e-maxx.ru решение задачи F. Формально, насколько мне известно (сообщите мне, пожалуйста, если это не так), это не было запрещено организаторами контеста, поэтому никакое правило нарушено не было. Мы решили написать общее оповещение о том, что сторонний код использовать можно. По-моему, это решение самое адекватное в сложившейся ситуации. Интересно услышать ваше мнение на случай если вы не согласны с таким решением.\u003c/p\u003e\u003cp\u003eПерейдем к разбору задач.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003e[Задача А]\u003c/strong\u003e(\u003ca href\u003d\"http://codeforces.ru/gym/100621/problem/A\"\u003ehttp://codeforces.ru/gym/100621/problem/A\u003c/a\u003e)\u003c/p\u003e\u003cp\u003eАвтор: \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/OutSide\" title\u003d\"Expert OutSide\"\u003eOutSide\u003c/a\u003e\u003c/p\u003e\u003cp\u003eВ задаче требуется посчитать сумму по всем шарам вероятностей того, что этот шар будет выбран. Другими словами, нужно посчитать вероятность того, что будет выбран любой из шаров. Мы знаем, что Катя гарантировано выберет какойто из шаров. Соответственно вне зависимости от количества шаров и их оттенков ответ на все тесты одинаковый и равен 1.\u003c/p\u003e\u003cp\u003eСложность решения — О(1)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://pastebin.com/YsKcffy0\"\u003eКод\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003e[Задача B]\u003c/strong\u003e(\u003ca href\u003d\"http://codeforces.ru/gym/100621/problem/B\"\u003ehttp://codeforces.ru/gym/100621/problem/B\u003c/a\u003e)\u003c/p\u003e\u003cp\u003eАвтор: \u003ca class\u003d\"rated-user user-orange\" href\u003d\"/profile/Fcdkbear\" title\u003d\"Master Fcdkbear\"\u003eFcdkbear\u003c/a\u003e\u003c/p\u003e\u003cp\u003eПерепишем первое условие как \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ey\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e \u0026gt; \u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e + \u003ci\u003ey\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e\u003c/p\u003e\u003cp\u003eТеперь для каждой точки \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e нам нужно рассмотреть все точки \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e с индексами от 1 до \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e-1 такие, что \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ey\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e \u0026gt; \u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e + \u003ci\u003ey\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e и выбрать среди таких точек точку с максимальным игриком.\u003c/p\u003e\u003cp\u003eБудем делать это следующим образом. Будем держать наши точки в двух массивах. Один из них отсортирован по \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ey\u003c/i\u003e\u003c/span\u003e, а второй по \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e + \u003ci\u003ey\u003c/i\u003e\u003c/span\u003e. Будем идти по превому массиву и постепенно добавлять нужные точки из второго массива (с суммой координат, не превышающей текущий \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ey\u003c/i\u003e\u003c/span\u003e второго массива) в какуюто структуру данных, которая умеет быстро находить максимум на отрезке. Идеально для таких целей подходит дерево отрезков. Так как массивы отсортированы, для того чтобы все работало быстро можно использовать метод двух указателей. Детали в коде.\u003c/p\u003e\u003cp\u003eСложность решения — О(NlogN)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://pastebin.com/gRj9j15L\"\u003eКод\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003e[Задача С]\u003c/strong\u003e(\u003ca href\u003d\"http://codeforces.ru/gym/100621/problem/C\"\u003ehttp://codeforces.ru/gym/100621/problem/C\u003c/a\u003e)\u003c/p\u003e\u003cp\u003eАвтор: \u003ca class\u003d\"rated-user user-orange\" href\u003d\"/profile/Fcdkbear\" title\u003d\"Master Fcdkbear\"\u003eFcdkbear\u003c/a\u003e\u003c/p\u003e\u003cp\u003eДавайте подумаем, как отвечать на запросы второго типа. \u003c/p\u003e\u003cp\u003eОчевидно, что нам хотелось бы поставить на первую позицию минимальный символ в строке. Однако, мы не всегда можем это сделать.\u003c/p\u003e\u003cp\u003eПосле того, как мы возьмем наш минимальный символ, нам нужно будет набрать еще k-1 символов. Это означает, что на текущую позицию мы можем использовать символы с индексами от 1 до n-k+1 включительно. То есть первым сиволом ответа будет минимальный символ строки из описанного выше отрезка. Пусть этот символ находиится на позиции pos. Тогда чтобы узнать второй символ, нам нужно решить аналогичную задачу, только отрезок, на котором стоит искать минимум, равен [pos+1; n-k]. Отсюда следует, что когда мы выбираем текущий минимум на отрезке, в случае, если он встречается несколько раз, выгодно брать тот минимальный символ, индекс которого минимален (то есть если есть две буквы a на 2 и 4 позиции, то нужно брать ту, которая находится на второй позиции).\u003c/p\u003e\u003cp\u003eИ того, нам вновь нужна структура, которая умеет находить минимум на отрезке и менять элемент (вспомним про первый запрос). Для этого идеально подходит дерево отрезков :)\u003c/p\u003e\u003cp\u003eСлонжость решения O(k*N*LogN)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://pastebin.com/HtRHaMuN\"\u003eКод\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003e[Задача D]\u003c/strong\u003e(\u003ca href\u003d\"http://codeforces.ru/gym/100621/problem/D\"\u003ehttp://codeforces.ru/gym/100621/problem/D\u003c/a\u003e)\u003c/p\u003e\u003cp\u003eАвтор: \u003ca class\u003d\"rated-user user-orange\" href\u003d\"/profile/Fcdkbear\" title\u003d\"Master Fcdkbear\"\u003eFcdkbear\u003c/a\u003e\u003c/p\u003e\u003cp\u003eЗаметим, что ответ ответы по двум координатам не зависят друг от друга. То есть можно отдельно найти минимальный ответ по строчкам, по столбцам и просуммировать их.\u003c/p\u003e\u003cp\u003eКак искать ответ по строчкам? Для каждой строчки будем держать, сколько интересных улиц есть на ней. Тогда для каждой строчки несложно посчитать сколько интересных строчек есть до нее и после нее, а так же сумму номеров этих строчек. Зная эти данные легко за О(1) посчитать ответ для текущей строчки.\u003c/p\u003e\u003cp\u003eОтвет для столбиков ищется аналогично.\u003c/p\u003e\u003cp\u003eСложность решения O(N*M) \u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://pastebin.com/WaRK29Te\"\u003eКод\u003c/a\u003e (в нем реализована чуть другая, хотя и похожая, идея)\u003c/p\u003e\u003cp\u003e\u003cstrong\u003e[Задача E]\u003c/strong\u003e(\u003ca href\u003d\"http://codeforces.ru/gym/100621/problem/E\"\u003ehttp://codeforces.ru/gym/100621/problem/E\u003c/a\u003e)\u003c/p\u003e\u003cp\u003eАвтор: \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/OutSide\" title\u003d\"Expert OutSide\"\u003eOutSide\u003c/a\u003e\u003c/p\u003e\u003cp\u003eРешение состоит из нескольких шагов.\u003c/p\u003e\u003cp\u003e1) Найти количество путей длины k между всеми парами четная вершина-нечетная вершина.\u003c/p\u003e\u003cp\u003eДля этого можно использовать динамику dp[v1][v2][k] — она показывает, сколько есть путей из вершины v1 в вершину v2 длины k. Переход — перебрать всех соседей вершины v2 в реверснутом графе (если в обычном графе есть ребро a-\u0026gt;b, в реверснутом будет ребро b-\u0026gt;a, и так для всех ребер). База — если k\u003d0, то если v2\u003d\u003dv1 — вернем 1, иначе 0\u003c/p\u003e\u003cp\u003eТак же эту же часть можно решить вознесением матрицы смежности в степень k.\u003c/p\u003e\u003cp\u003eВ обоих случаях сложность этапа равна \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e3\u003c/sup\u003e * \u003ci\u003ek\u003c/i\u003e)\u003c/span\u003e\u003c/p\u003e\u003cp\u003e2) Найти нужное разбиение на пары. По факту, перед нами — задача о назначениях. Ее можно решить \u003ca href\u003d\"https://ru.wikipedia.org/wiki/%D0%92%D0%B5%D0%BD%D0%B3%D0%B5%D1%80%D1%81%D0%BA%D0%B8%D0%B9_%D0%B0%D0%BB%D0%B3%D0%BE%D1%80%D0%B8%D1%82%D0%BC\"\u003eвенгерским алгоритмом\u003c/a\u003e либо максимальным потоком минимальной стоимости.\u003c/p\u003e\u003cp\u003eВо втором решении граф строится следующим образом:\u003c/p\u003e\u003cp\u003e1) Из фиктивной вершины-истока проведем во все синие планеты ребро с пропускнйо способностью 1 и ценой 0.\u003c/p\u003e\u003cp\u003e2) Из всех красных планет проведем ребро в фиктивную вершины-сток с пропускнйо способностью 1 и ценой 0.\u003c/p\u003e\u003cp\u003e3) Между каждой парой синяя-красная планета проведем ребро с пропускной способностью 1 и ценой, равной количеству путей между этим планетами, взятой со знаком минус.\u003c/p\u003e\u003cp\u003eСложность этапа зависит от выбранной сложности. \u003c/p\u003e\u003cp\u003eВ коде реализован второй способ, сложность — O(N^4) с очень маленькой константой\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://pastebin.com/wsgtDxHB\"\u003eКод\u003c/a\u003e \u003c/p\u003e\u003cp\u003e\u003cstrong\u003e[Задача F]\u003c/strong\u003e(\u003ca href\u003d\"http://codeforces.ru/gym/100621/problem/F\"\u003ehttp://codeforces.ru/gym/100621/problem/F\u003c/a\u003e)\u003c/p\u003e\u003cp\u003eАвтор: \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/OutSide\" title\u003d\"Expert OutSide\"\u003eOutSide\u003c/a\u003e\u003c/p\u003e\u003cp\u003eВ задаче требуется построить выпуклую оболочку и сказать, сколько в ней точек. Автор специально дал маленькие ограничения, чтобы проходило решение со сложностью \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e3\u003c/sup\u003e)\u003c/span\u003e\u003c/p\u003e\u003cp\u003eЭто решение имеет следующий вид. Сначала избавимся от дубликатов всех точек и от точек, которые являются внутренними для какогото отрезка. Теперь переберем все пары точек, и посмотрим или остальные точки лежат по какую-то одну сторону от текущего отрезка. Если да — текущий отрезок входит в выпуклую оболочку, иначе — нет.\u003c/p\u003e\u003cp\u003eЕстественно, алгоритм Грехема тоже получа АС.\u003c/p\u003e\u003cp\u003eСложность — \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e3\u003c/sup\u003e)\u003c/span\u003e либо же \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eNlogN\u003c/i\u003e)\u003c/span\u003e, зависит от реализации.\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://pastebin.com/QEaFBgX7\"\u003eКод\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003e[Задача G]\u003c/strong\u003e(\u003ca href\u003d\"http://codeforces.ru/gym/100621/problem/G\"\u003ehttp://codeforces.ru/gym/100621/problem/G\u003c/a\u003e)\u003c/p\u003e\u003cp\u003eАвтор: \u003ca class\u003d\"rated-user user-orange\" href\u003d\"/profile/Fcdkbear\" title\u003d\"Master Fcdkbear\"\u003eFcdkbear\u003c/a\u003e\u003c/p\u003e\u003cp\u003eВ задаче, по факту, для каждого индекса i нужно найти такой индекс j\u0026gt;i, что a[j]\u0026gt;a[i] и a[j] максимально. Для того, чтобы это сделать, будем идти по массиву справа налево и просто обновлять текущий максимум\u003c/p\u003e\u003cp\u003eСложность — O(N)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://pastebin.com/V2kTN4iH\"\u003eКод\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003e[Задача H]\u003c/strong\u003e(\u003ca href\u003d\"http://codeforces.ru/gym/100621/problem/H\"\u003ehttp://codeforces.ru/gym/100621/problem/H\u003c/a\u003e)\u003c/p\u003e\u003cp\u003eАвтор: \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/OutSide\" title\u003d\"Expert OutSide\"\u003eOutSide\u003c/a\u003e\u003c/p\u003e\u003cp\u003eЗакореним дерево в вершине 0. Для каждой вершины теперь посчитаем динамику: сколько кроликов находится в поддереве этой вершины (в том числе и в ней самой). \u003c/p\u003e\u003cp\u003eТеперь посчитаем, сколько пар кроликов пройдут через каждое из ребер. Пусть мы смотрим ребро u-\u0026gt;v и причем u — родитель v. Тогда через ребро u-\u0026gt;v пройдет dp[v]*(total-dp[v]) кроликов (total — общее количество кроликов). Ответ для каждого ребра умножим на количество белочек на нем и просуммируем по всем ребрам\u003c/p\u003e\u003cp\u003eСложность — O(N)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://pastebin.com/XdeK4whV\"\u003eКод\u003c/a\u003e\u003c/p\u003e\u003cp\u003eНа этом все. Вопросы, пожалуйста, оставляйте в комментариях.\u003c/p\u003e\u003c/div\u003e","tags":["разбор","олимпиада","информатика"]}}