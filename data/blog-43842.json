{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":false,"creationTimeSeconds":1458224389,"rating":0,"authorHandle":"HellKitsune","modificationTimeSeconds":1458224389,"id":43842,"title":"\u003cp\u003eОсновные конструкции языка C++\u003c/p\u003e","locale":"ru","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e\u003cstrong\u003eПустая программа с поясняющими комментариями\u003c/strong\u003e\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e#define \u0026lt;bits/stdc++.h\u0026gt; //набор стандартных библиотек C++\n\nusing namespace std; //пространство имён std, без этой строчки пришлось бы писать std::string вместо string, std::cin вместо cin, и так далее\n\n//здесь можно объявлять глобальные переменные\n\nint main() {\n    //код программы\n    return 0; //по завершению программы возвращаем значение 0, т.е. программа завершилась без ошибок\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cstrong\u003eОбъявление переменных, ввод-вывод\u003c/strong\u003e\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e//цель данной программы, считать из консоли два числа, и вывести их сумму\n#define \u0026lt;bits/stdc++.h\u0026gt;\n\nusing namespace std;\n\nint main() {\n    int a, b; //объявление переменных (сначала тип, в данном случае int - целое число от -2^31 до 2^31 - 1, затем сами переменные через запятую)\n    cin \u0026gt;\u0026gt; a \u0026gt;\u0026gt; b; //ввод производится из cin (сокращение от console input)\n    int c \u003d a + b; //новую переменную можно объявить в любом месте\n    //присвоение в C++ - знак равенства (в отличие от :\u003d в паскале)\n    cout \u0026lt;\u0026lt; a + b \u0026lt;\u0026lt; endl; //вывод производится в cout (console output). Направление стрелочек отличается от ввода.\n    //endl - перейти на новую строку\n    return 0; \n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cstrong\u003eМассивы, циклы\u003c/strong\u003e\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e/*  цель данной программы, считать из консоли число n, затем массив из n чисел,\n    и вывести на экран сумму чисел массива */\n#include \u0026lt;bits/stdc++.h\u0026gt;\n\nusing namespace std;\n\nint n;\nint a[100]; //массив a, содержит элементы от a[0] до a[99]. !!не содержит элемент a[100]\n\nint main() {\n    cin \u0026gt;\u0026gt; n;\n    //циклы в C++ задаются тремя операторами, разделенными точкой с запятой\n    //первый: действие, выполняемое до начала цикла (присвоить переменной i значение 0)\n    //второй: условие, до которого цикл выполняется (i \u0026lt; n)\n    //третий: что делать после каждой итерации (в данном случае, прибавляем к i единицу)\n    //заметьте, что такой цикл пройдет по элементам от a[0] до a[n - 1]\n    //так писать правильно, потому как в C++ индексы массивов нумеруются с нуля\n    for (int i \u003d 0; i \u0026lt; n; ++i) {\n        cin \u0026gt;\u0026gt; a[i];\n    }\n    int sum \u003d 0;\n    for (int i \u003d 0; i \u0026lt; n; ++i) {\n        sum +\u003d a[i]; //sum +\u003d a[i] то же самое, что sum \u003d sum + a[i]\n    }\n    cout \u0026lt;\u0026lt; sum \u0026lt;\u0026lt; endl;\n    return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cstrong\u003eУсловия\u003c/strong\u003e\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e/*  цель данной программы, считать число n, затем массив из n чисел,\n    вывести на экран сначала количество элементов в массиве, равных нулю,\n    затем количество положительных элементов, делящихся на 3\n    затем сумму элементов, делящихся либо на 3, либо на 5\n*/\n#include \u0026lt;bits/stdc++.h\u0026gt;\n\nusing namespace std;\n\nint n;\nint a[100];\n\nint main() {\n    cin \u0026gt;\u0026gt; n;\n    for (int i \u003d 0; i \u0026lt; n; ++i) {\n        cin \u0026gt;\u0026gt; a[i];\n    }\n    int zeroes \u003d 0, positiveAndDivide3 \u003d 0, sum \u003d 0;\n    for (int i \u003d 0; i \u0026lt; n; ++i) {\n        if (a[i] \u003d\u003d 0) {\n            ++zeroes;\n        }\n        if (a[i] \u0026gt; 0 \u0026amp;\u0026amp; a[i] % 3 \u003d\u003d 0) { //and в C++ записывается как \u0026amp;\u0026amp;, mod как %\n            ++positiveAndDivide3;\n        }\n        if (a[i] % 3 \u003d\u003d 0 || a[i] % 5 \u003d\u003d 0) { //or записывается как ||\n            sum +\u003d a[i];\n        }\n    }\n    cout \u0026lt;\u0026lt; zeroes \u0026lt;\u0026lt; endl;\n    cout \u0026lt;\u0026lt; positiveAndDivide3 \u0026lt;\u0026lt; endl;\n    cout \u0026lt;\u0026lt; sum \u0026lt;\u0026lt; endl;\n    return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cstrong\u003eСтроки\u003c/strong\u003e\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e/*  цель данной программы, считать из входных данных строку,\n    и вывести на экран YES, если она является палиндромом, и NO в противном случае */\n\n#include \u0026lt;bits/stdc++.h\u0026gt;\n\nusing namespace std;\n\nstring s;\n\nint main() {\n    cin \u0026gt;\u0026gt; s;\n    //строка считывается до пробела, табуляции или перехода на новую строчку,\n    //т.е. в случае входных данных вида ab bc cde, нужно считывать три строки\n    int len \u003d s.length();\n    int half \u003d len / 2;\n    //s.length() - получить длину строки\n    //длина строки - целое число, поэтому при делении на 2 в C++ мы так же получаем целое число\n    //2 / 2 равно одному, 3 / 2 так же равно одному\n    //в то же время 3.0 / 2 уже равно 1.5\n    //дописав .0 к числу 3, мы получили переменную типа double (число с плавающей точкой двойной точности)\n    bool isPalindrome \u003d true; //переменные типа bool принимают только значения true и false\n    for (int i \u003d 0; i \u0026lt; half; ++i) {\n        if (s[i] !\u003d s[len - 1 - i]) { //проверяем, что i\u0027й слева символ не равен i\u0027му справа символу\n            isPalindrome \u003d false; //если так, то строка не палиндром\n            break; //можно выйти из цикла и не проверять строку дальше\n        }\n    }\n    if (isPalindrome) {\n        cout \u0026lt;\u0026lt; \u0026quot;YES\u0026quot; \u0026lt;\u0026lt; endl;\n    } else {\n        cout \u0026lt;\u0026lt; \u0026quot;NO\u0026quot; \u0026lt;\u0026lt; endl;\n    }\n    return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":[]}}