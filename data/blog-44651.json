{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1462118251,"rating":156,"authorHandle":"Shafaet","modificationTimeSeconds":1470121721,"id":44651,"title":"\u003cp\u003eIntro to Staircase Nim + Editorial for HackerRank \u0026quot;Move the Coins\u0026quot;\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eLet\u0027s learn about Staircase Nim by solving \u003ca href\u003d\"https://www.hackerrank.com/contests/world-codesprint-april/challenges/move-the-coins\"\u003emove the coins\u003c/a\u003e problem that appeared in HackerRank April World Codesprint. Among the problems I have ever created, its one of my favorites. If you don\u0027t want to solve that problem but want to learn about staircase-nim, just read the first part of this blog.\u003c/p\u003e\u003cp\u003eLet\u0027s start with some backgrounds.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eStaircase Nim\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eThis problem is a variation of Staircase Nim problem, which is a not-very-well-known variation of classic Nim problem. If you don\u0027t know what Nim Game is, I suggest you first to learn about it.\u003c/p\u003e\u003cp\u003eIn Staircase Nim, there is a staircase with n steps, indexed from \u003cspan class\u003d\"tex-span\"\u003e0\u003c/span\u003e to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e - 1\u003c/span\u003e. In each step, there are zero or more coins. See the figure below:\u003c/p\u003e\u003cp\u003e\u003cimg alt\u003d\" \" src\u003d\"/predownloaded/7f/5f/7f5f84db9753e70e28ca89fe4bbb5da278c24133.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003eTwo players play in turns. In his/her move a player can choose a step \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e \u0026gt; 0\u003c/span\u003e and move one or more coins to step \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e - 1\u003c/span\u003e. The player who is unable to make a move lose the game. That means the game ends when all the coins are in step \u003cspan class\u003d\"tex-span\"\u003e0\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eNow you have to decide who will win the game if both players play optimally.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eObservation\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eWe can divide the steps into two types, odd steps, and even steps. Now let\u0027s think what will happen if a player \u003cstrong\u003eA\u003c/strong\u003e move a coin from an even step to an odd step. Player \u003cstrong\u003eB\u003c/strong\u003e can move those coins to an odd position and the state of the game won\u0027t change.\u003c/p\u003e\u003cp\u003eBut if \u003cstrong\u003eA\u003c/strong\u003e move a coin from an odd step to an even step, similar logic won\u0027t work. Because there can be situation where player \u003cstrong\u003eB\u003c/strong\u003e won\u0027t be able to move those coins to another odd step to restore the state. \u003c/p\u003e\u003cp\u003eFrom this we can agree that coins in even steps are useless, they don\u0027t affect game state. If I am in a winning position and you move a coin from an even step, I will move those coins again to another even step and will remain in a winning position.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eDetermine Winning Position\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eNow we agreed that only coins to odd steps count. If you take one or more coins from an odd step and move them to an even step, the coins become useless! Remember even steps are useless, So moving to even step is just like throwing them away. Now we can imagine coins in an odd-step as a pile of stones in a standard Nim game.\u003c/p\u003e\u003cp\u003e\u003cimg alt\u003d\" \" src\u003d\"/predownloaded/54/7a/547a7df500a84baec44486d9131ab2cfc1cc023e.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003eNow its easy, just find the xorsum of all odd steps and we are done!\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eMove the Coins\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eIn the HackerRank problem, there is a tree and each node can contain zero or more coins.\u003c/p\u003e\u003cp\u003e\u003cimg alt\u003d\" \" src\u003d\"/predownloaded/33/f4/33f432781e699eceab6dab6cd0482bd68d43147c.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003eIn each move, a player can move one or more coin from a node (which is not the root) to its parent node. If a player can\u0027t make a move, he/she loses the game.\u003c/p\u003e\u003cp\u003eThis is same as Staircase nim but on a tree. You just need to calculate the distance between each node and the root. Now find the xorsum of all odd distance nodes. This can be done using a dfs, complexity \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eV\u003c/i\u003e + \u003ci\u003eE\u003c/i\u003e)\u003c/span\u003e.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eHow to answer Alice\u0027s Questions?\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eNow, let\u0027s discuss updating the xorsum for each question. Suppose \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ed\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/span\u003e is the distance between \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eu\u003c/i\u003e\u003c/span\u003e. For node \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eu\u003c/i\u003e\u003c/span\u003e, you must \u003cem\u003eremove\u003c/em\u003e the edge between \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eu\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e(\u003ci\u003eu\u003c/i\u003e)\u003c/span\u003e and \u003cem\u003eadd\u003c/em\u003e an edge between \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eu\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e\u003c/span\u003e. Suppose \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ed\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003c/span\u003e is the new distance between \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eu\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e; if \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ed\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e%2 \u003d \u003ci\u003ed\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e%2\u003c/span\u003e, it won\u0027t change the xorsum because \u003cem\u003eodd\u003c/em\u003e distance nodes still have \u003cem\u003eodd\u003c/em\u003e distances (the same is true for \u003cem\u003eeven\u003c/em\u003e distance nodes).\u003c/p\u003e\u003cp\u003eIf \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ed\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e%2! \u003d \u003ci\u003ed\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e%2\u003c/span\u003e, all the \u003cem\u003eodd\u003c/em\u003e distance nodes in subtree \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eu\u003c/i\u003e\u003c/span\u003e will become \u003cem\u003eeven\u003c/em\u003e distance nodes, and all the \u003cem\u003eeven\u003c/em\u003e distance nodes in subtree \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eu\u003c/i\u003e\u003c/span\u003e will become \u003cem\u003eodd\u003c/em\u003e distance nodes. If you save the xorsum of \u003cem\u003eodd\u003c/em\u003e and \u003cem\u003eeven\u003c/em\u003e distance nodes separately, you can easily update it for each question.\u003c/p\u003e\u003cp\u003eA question will be invalid if \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eu\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e\u003c/span\u003e belong to the same subtree. You can then easily find that using the finishing time in depth-first-search. Some did it by finding LCA but that\u0027s too much.\u003c/p\u003e\u003cp\u003eThe complexity of answering each question is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(1)\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eThat\u0027s all! I will be grateful if you point out the mistakes.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eA Game Theory Contest\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eThere will be a \u003ca href\u003d\"https://www.hackerrank.com/contests/5-days-of-game-theory/challenges\"\u003emulti-day Game Theory Contest\u003c/a\u003e in HackerRank on 13th May, targeted mainly to the one who just started learning game theory but last two days will contain some harder problems. \u003c/p\u003e\u003cp\u003eThe contest is prepared by \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/allllekssssa\" title\u003d\"Эксперт allllekssssa\"\u003eallllekssssa\u003c/a\u003e, \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/forthright48\" title\u003d\"Кандидат в мастера forthright48\"\u003eforthright48\u003c/a\u003e and me (with the help of \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/wanbo\" title\u003d\"Кандидат в мастера wanbo\"\u003ewanbo\u003c/a\u003e, as always). Hope to see you in the contest!\u003c/p\u003e\u003c/div\u003e","tags":["game theory","hackerrank","nim"]}}