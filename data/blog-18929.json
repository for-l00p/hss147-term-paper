{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1435489181,"rating":0,"authorHandle":"NeverSayNever","modificationTimeSeconds":1435489208,"id":18929,"title":"\u003cp\u003eCODECHEF LUNCH TIME PROBLEM \u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHello codeforces community,\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.codechef.com/problems/CHEFDTRE\"\u003eproblem link\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.codechef.com/viewsolution/7298175\"\u003emysolution link\u003c/a\u003e\u003c/p\u003e\u003cp\u003eI tried the following solution in this problem and got TLE for the subtask2. For each union operation i tried to merge smaller size set into bigger size set and added element to the corresponding balanced bst. so for each union operation i will be taking time O((number of element in smaller size set) * (log(element in the bigger size set)) and find the kth element in O(log(size of given set)). what is the worst case complexity of this solution ? I think it is O(N*log^2(N)) amortized. O(N*log^2(N)) was it unacceptable ? Please help me.\u003c/p\u003e\u003c/div\u003e","tags":[]}}