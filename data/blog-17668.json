{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1430556124,"rating":0,"authorHandle":"Armyx","modificationTimeSeconds":1430556154,"id":17668,"title":"\u003cp\u003eBinary indexed tree â€” initialization\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eI have learned this awesome data structure. It\u0027s clear for me that operations like add and sum works in O(log n) time, but is there any known trick to reduce complexity of initialization ? Let\u0027s say I want to start with an array array[] \u003d { 2,4,5,7,0,0,1,6 } instead of 0\u0027s . Now I have to iterate through array and call add(array[i]) on each element which require O(log n) time, so the total complexity will be O(n log n). Can we do it better ?\u003c/p\u003e\u003c/div\u003e","tags":["binary indexed tree"]}}