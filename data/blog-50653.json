{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1488010803,"rating":19,"authorHandle":"AmberFrame","modificationTimeSeconds":1488011209,"id":50653,"title":"\u003cp\u003eMy solution to 776G\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHere\u0027s another method. Let\u0027s assume the maximum digit of number x is p.For example, the maximum digit of 260d7 is d(13).\u003c/p\u003e\u003cp\u003eIf the binary form of number x contains 2^p ,then x will get a decrease after those steps.Otherwise,it not.\u003c/p\u003e\u003cp\u003eNow you see that only p matters the result.We can enumerate the p and form a dp[i][0/1][0/1], which means IN THE FIRST i DIGITS,whether x\u0026lt;L or x\u003dL and whether the p has appeared in x.We can enumerate the next digit to transfer it.If the current digit we enumerate contains 2^p,we just simply discuss about it.\u003c/p\u003e\u003cp\u003eTime Complexity:O(T*16*16*2*2*16)\u003c/p\u003e\u003cp\u003eCode:\u003ca href\u003d\"/contest/776/submission/24938218\" title\u003d\"Submission 24938218 by AmberFrame\"\u003e24938218\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e","tags":["dynamic programming","776g"]}}