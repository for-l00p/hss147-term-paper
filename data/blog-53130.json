{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1499267267,"rating":-10,"authorHandle":"lm010","modificationTimeSeconds":1499267380,"id":53130,"title":"\u003cp\u003eNeed help in this lcs related dp problem\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHello , i came across the problem the problem statement is like this.\u003c/p\u003e\u003cp\u003eYou are given a string S and you have to find minimum index j LCS(S[1, j], rev(S[j + 1, N])) is maximum, where lcs is longest common subsequence between two strings.\u003c/p\u003e\u003cp\u003eMy approach :- firstly i tried to find lcs for every index which will be O(n^3). Then i tried to find length of Longest Palindromic subsequence of a string. let val\u003dlength of Longest Palindromic subsequence. So my final answer will be floor(val/2). Now to find a minimum j i backtrack and find what lps is and then according to that j will be retured. The problem which i faced was i was able to find length correctly for pre test cases but index was not minimum , as there can be more than one lps in string. now my question is whether my approach of finding lps length is correct or not ? and please suggest some good approach to find solution for this question ?\u003c/p\u003e\u003cp\u003ei am not able to see that question now so , i can not share the link.\u003c/p\u003e\u003c/div\u003e","tags":["2d-dp"]}}