{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1474317410,"rating":-11,"authorHandle":"thecortex","modificationTimeSeconds":1474317410,"id":47216,"title":"\u003cp\u003eRussian Code Cup 2016 — Finals :: Problem A — Closing ceremony\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eWhat is the Pseudo Code for the solution to this problem \u003ca href\u003d\"/contest/720/problem/A\" title\u003d\"Russian Code Cup 2016 - Finals [Unofficial Mirror, Div. 1 Only Recommended]\"\u003e720A - Closing ceremony\u003c/a\u003e ?\u003c/p\u003e\u003cp\u003eI\u0027m n\u0027t sure if this guess is correct;\u003c/p\u003e\u003cp\u003e1 — make two priority queues / heaps 2 — fill the heaps with the distances from point(0,0) and point(0,m+1) in quadratic time O(2*n*m) 3 — sort queues of audience k, l\u003dn*m-k in ascending order 4 — for each attendee of the audience from both queues (pick the one with smaller stamina) in time of O(2*n*m) 5 ----- pop the minimum / top of the heap corresponding to the entry point either (0,0) or (0,m+1) 6 ----- if point was taken before, then get pop next min 7 ----- if point\u0027s distance from entry \u0026gt; stamina of attendee, then return false and terminate 8 ----- mark the point as taken, so that the other heap doesn\u0027t pick it\u003c/p\u003e\u003cp\u003eAny better approaches?\u003c/p\u003e\u003c/div\u003e","tags":["priority queue","grid","sorting"]}}