{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1527569713,"rating":5,"authorHandle":"Lakh","modificationTimeSeconds":1527572243,"id":59733,"title":"\u003cp\u003eNeed help in a segment tree problem\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eI am trying to solve \u003ca href\u003d\"https://www.hackerrank.com/contests/world-codesprint-13/challenges/landslide\"\u003ehttps://www.hackerrank.com/contests/world-codesprint-13/challenges/landslide\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eHere given a tree of N(N\u0026lt;\u003d2*10^5) nodes and Q (Q\u0026lt;\u003d2*10^5) queries of 3 types:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e1. d x y -- Remove the edge between city x and y if it exists else ignore this query.\n2. c x y -- Add the edge between city x and y if previously an edge was present between x and y else ignore this query.\n3. q x y -- Find the distance between x and y if there exists a path between x and y else print \u0026quot;impossible\u0026quot;.\n\u003c/code\u003e\u003c/pre\u003e \u003cpre\u003e\u003ccode\u003eMy approach:\n\nI first performed dfs to store the in[] and out[] time of each node and code for finding LCA of two nodes. Now I created a segment tree on the basis of the in[] array and initialized each node to value 1 meaning that all nodes are initially form a single connected component. I took a variable counter\u003d2. \n\nNow for query of first type , suppose x is parent of y then I just updated all nodes in subtree of y to value counter using lazy propagation such that it represents a different component and increment counter by 1.\n\nFor query of 2nd type, if x was parent of y previously, then I just updated the entire subtree of y to the current value in node x so that entire subtree of y is again attached to subtree of x and y becomes part of the component to which x belongs.\n\nFor query of 3rd type I first computed LCA of x and y then determined the current values of node x, node y and node[LCA(x,y)]. If all the three values are not same then this means that x and y are not connected else i just print the distance between the nodes x and y as dis[x]+dis[y]-2*dis[LCA(x,y)]\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eSome of the tescases are failing. I am not able to understand what is wrong with my approach. Please suggest the problem with this approach.\u003c/p\u003e\u003cp\u003eMy code: \u003ca href\u003d\"https://ideone.com/cXf4NX\"\u003ehttps://ideone.com/cXf4NX\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e","tags":["tree","lca","dfs"]}}