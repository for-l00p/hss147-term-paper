{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1517931549,"rating":3,"authorHandle":"Unlimited_Time","modificationTimeSeconds":1517931549,"id":57588,"title":"\u003cp\u003eNotes on Codeforces Beta Round #115, Div2- A, B, C, D\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e\u003ca href\u003d\"/contest/175/problem/A\" title\u003d\"Codeforces Round 115\"\u003e175A - Robot Bicorn Attack\u003c/a\u003e\u003c/p\u003e\u003cp\u003eWe can enumerate all the feasible division that divides the given sequence into three parts. For each part, we check whether it has leading zeros (be careful that “0” does not have leading zeros) and whether it exceeds \u003cspan class\u003d\"tex-span\"\u003e10\u003csup class\u003d\"upper-index\"\u003e6\u003c/sup\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"/contest/175/problem/B\" title\u003d\"Codeforces Round 115\"\u003e175B - Plane of Tanks: Pro\u003c/a\u003e\u003c/p\u003e\u003cp\u003eStraightforward implementation solves this problen. It is suggested that when asked to compare \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e / \u003ci\u003eb\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ec\u003c/i\u003e / \u003ci\u003ed\u003c/i\u003e\u003c/span\u003e, one should equivalently check \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e × \u003ci\u003ed\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e × \u003ci\u003ec\u003c/i\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"/contest/175/problem/C\" title\u003d\"Codeforces Round 115\"\u003e175C - Geometry Horse\u003c/a\u003e\u003c/p\u003e\u003cp\u003eThe main idea is greedy algorithm. It is obvious that lower points should be assigned with smaller factors, and thus we should sort one array in an increasing order of points and another array in an increasing order of factors, and multiply them and add the results together.\u003c/p\u003e\u003cp\u003eHere are two issues that we should take care of. One is that the number of factors may be less than the total number of figures. In this case, we should append extra factors equal to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003et\u003c/i\u003e + 1\u003c/span\u003e to the end of sorted factor array so that every point will have a corresponding factor. The second issue is that the factor array is given in a form of “prefix sum”, as \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e]\u003c/span\u003e denotes the total number of operations that we need implement in order to increase the factor value from \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e + 1\u003c/span\u003e, rather than the number of operations that we need to increase factor from \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e + 1\u003c/span\u003e.\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"/contest/175/problem/D\" title\u003d\"Codeforces Round 115\"\u003e175D - Plane of Tanks: Duel\u003c/a\u003e\u003c/p\u003e\u003cp\u003eAt first, we need two tables, one for “us” and the other one for our rival, written as \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edp\u003c/i\u003e1[\u003ci\u003ei\u003c/i\u003e][\u003ci\u003ej\u003c/i\u003e]\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edp\u003c/i\u003e2[\u003ci\u003ei\u003c/i\u003e][\u003ci\u003ej\u003c/i\u003e]\u003c/span\u003e, to denote the probability that after the opposite player\u0027s \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e-th shot, the defensive side still has hp equal to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e. These two tables can be computed based on techniques similar to pascal\u0027s triangle. In fact, both the two tables have infinite size, since it is possible that no shot pierce each other, and thus both the two players can survive as many rounds as they “want”. Nevertheless, it is sufficient to calculate the table to some finite round. The reason is that as long as the probability that one pierces the opposite player is not zero, the probability that one survives to the \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/span\u003e-th round has some coefficient \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003em\u003c/i\u003e)\u003c/sup\u003e\u003c/span\u003e, which can be omitted compared with \u003cspan class\u003d\"tex-span\"\u003e10\u003csup class\u003d\"upper-index\"\u003e - 4\u003c/sup\u003e\u003c/span\u003e if \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/span\u003e exceeds some threshold. Tutorials suggest that this value should be \u003cspan class\u003d\"tex-span\"\u003e5000\u003c/span\u003e, while I think that \u003cspan class\u003d\"tex-span\"\u003e2000\u003c/span\u003e is enough (perhaps I am wrong)...\u003c/p\u003e\u003cp\u003eThen, we define the “first event”, i.e., if we win, we win after the first shot, second shot, third shot, and so on. These events are independent with each other and thus we can compute each of them independently and finally add the results together. To win after the \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e-th shot, we should calculate the number of rival\u0027s shot before our \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e-th shot, and the probability that we survive can be directly obtained from the previously computed table. Furthermore, we should also calculate the probability that the rival survives after our \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ei\u003c/i\u003e - 1)\u003c/span\u003e-th shot but has \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ehp\u003c/i\u003e \u003d 0\u003c/span\u003e after our \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e-th shot, which can also be directly queried from our table.\u003c/p\u003e\u003cp\u003eThis problem inspires me that sometimes, instead of simulating two players alternatively, it is more convenient to focus on one player\u0027s behavior and check what happens after his move.\u003c/p\u003e\u003c/div\u003e","tags":[]}}