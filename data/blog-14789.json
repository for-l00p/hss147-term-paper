{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1416582591,"rating":8,"authorHandle":"NeverSayNever","modificationTimeSeconds":1416582591,"id":14789,"title":"\u003cp\u003eBinary Indexed Tree\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHello Everyone,\u003c/p\u003e\u003cp\u003eI would like to ask something about range update in Binary Indexed Tree. I am familiar with the range update in BIT in log(N). \u003c/p\u003e\u003cp\u003eadding of function F(x) \u003d x*(x+1)/2 or other polynomial function to the range can be easily handled with bit.\u003c/p\u003e\u003cp\u003eBut what if we need to replace the old values with the new values in the range like instead of adding x to every number in the range [L,R] we need to replace every number in the range [L,R] by x.\u003c/p\u003e\u003cp\u003eI also know that this can be handled using lazy propagation in segment tree. But i want to know if there exists any approach which make use of BIT. \u003c/p\u003e\u003cp\u003eIf somehow we are able to make every element in range[L,R] zero then we can simply add the number x to the range[L,R].\u003c/p\u003e\u003cp\u003eIf anyone has some idea or can help me ....\u003c/p\u003e\u003c/div\u003e","tags":[]}}