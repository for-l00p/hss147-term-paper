{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1476377435,"rating":-5,"authorHandle":"skavurskaa","modificationTimeSeconds":1476377435,"id":47724,"title":"\u003cp\u003eMin weight perfect matching on complete bipartite graph?\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eProblem statement: Given a complete bipartite graph \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eK\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eN\u003c/i\u003e,â€‰\u003ci\u003eN\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e with weights \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eW\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003euv\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e assigned to each edge \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003euv\u003c/i\u003e\u003c/span\u003e, find a perfect matching with minimal sum of edge weights among all perfect matchings.\u003c/p\u003e\u003cp\u003eIs there any easy to code polynomial algorithm for this problem? I know an easy way to solve it using subset dp in \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003eN\u003c/i\u003e\u003c/sup\u003e)\u003c/span\u003e, and i also think that it is possible to modify the Hungarian Algorithm to solve this problem. But is there any easier algorithm considering it is always a complete bipartite graph? I don\u0027t care too much about the time complexity as long as it is polynomial.\u003c/p\u003e\u003cp\u003eThanks in advance!\u003c/p\u003e\u003c/div\u003e","tags":[]}}