{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1506179088,"rating":6,"authorHandle":"vamaddur","modificationTimeSeconds":1506179088,"id":54717,"title":"\u003cp\u003eNumber of Pairs of Non-Intersecting Palindromic Substrings in a String\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e\u003ca href\u003d\"https://dmoj.ca/problem/dmopc15c7p6\"\u003eProblem Link\u003c/a\u003e\u003c/p\u003e\u003cp\u003eMy strategy is to compute the number of palindromic substrings from index 0 to index i in a prefix sum array, and then compute the number of palindromic substrings from i+1 to strlen(N)-1 in a suffix sum array. We can then sum the products of prefix[i]*suffix[i+1] and somehow account for overcounting to get our answer. My main issue is finding the number of palindromic substrings in O(N) time (O(N^2) is not feasible as N could be up to 10^5).\u003c/p\u003e\u003cp\u003eIs my method reasonable, and if so, how can I solve the subproblem of finding the number of palindromic substrings in a prefix?\u003c/p\u003e\u003cp\u003ePlease help, and thanks in advance!\u003c/p\u003e\u003c/div\u003e","tags":["palindromes","#strings"]}}