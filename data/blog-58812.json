{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1523167776,"rating":16,"authorHandle":"kfqg","modificationTimeSeconds":1523168466,"id":58812,"title":"\u003cp\u003eProblem requiring solution that is vulnerable to hash collisions\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eI was reading the tutorial of CF 763D, a problem about tree isomorphism. The solution involved computing polynomial hashes of all possible subtrees of a tree (max 10^5 vertices), and then comparing the hashes as a substitute for checking tree equality. It seems to me like the solution is vulnerable to hash collisions.\u003c/p\u003e\u003cp\u003eI\u0027m relatively new to competitive programming. Is it normal for there to be problems that require solutions that are vulnerable to hash collisions? Shouldn\u0027t a good problem be one that is provably solvable for 100% of all possible inputs?\u003c/p\u003e\u003cp\u003eThe problem is here: \u003ca href\u003d\"//codeforces.com/problemset/problem/763/D\"\u003ehttp://codeforces.com/problemset/problem/763/D\u003c/a\u003e\u003c/p\u003e\u003cp\u003eThe tutorial is here: \u003ca href\u003d\"//codeforces.com/blog/entry/50205\"\u003ehttp://codeforces.com/blog/entry/50205\u003c/a\u003e\u003c/p\u003e\u003cp\u003erng_58 also wrote a blog post on this: \u003ca href\u003d\"http://rng-58.blogspot.com/2017/02/hashing-and-probability-of-collision.html\"\u003ehttp://rng-58.blogspot.com/2017/02/hashing-and-probability-of-collision.html\u003c/a\u003e. The solution given there also has a nonzero hash collision probability.\u003c/p\u003e\u003c/div\u003e","tags":["#hashing","#graph","#trees"]}}