{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1434378246,"rating":0,"authorHandle":"TsunamiNextYear","modificationTimeSeconds":1434470968,"id":18589,"title":"\u003cp\u003eDay2 Editorial\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e\u003cstrong\u003eProblem A.\u003c/strong\u003e \u003ca href\u003d\"//codeforces.com/contest/214/problem/A\"\u003eSystem of Equations\u003c/a\u003e\u003c/p\u003e\u003cp\u003eThe problem asks for number of different integer solutions for 2 variables given 2 equations.\u003c/p\u003e\u003cp\u003eFirst we need to observe that the given constraint \u003cstrong\u003e1 \u0026lt;\u003d n, m \u0026lt;\u003d 1000.\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eThis means that a, b \u0026lt;\u003d sqrt(1000) ... So \u003cstrong\u003e0 \u0026lt;\u003d a, b \u0026lt;\u003d 31\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eSo we have 32 possible values for the variable a [0...31]\u003c/p\u003e\u003cp\u003eAlso we have 32 possible values for the variable b [0...32]\u003c/p\u003e\u003cp\u003eWe will loop through all possible combinations for the variables a, b and check if this combination validates the given equations or not.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eCode:\u003c/strong\u003e \u003ca href\u003d\"//codeforces.com/contest/214/submission/11609268\"\u003e11609268\u003c/a\u003e\u003c/p\u003e \u003chr /\u003e\u003cp\u003e\u003cstrong\u003eProblem B.\u003c/strong\u003e \u003ca href\u003d\"//codeforces.com/problemset/problem/381/A\"\u003eSereja and Dima\u003c/a\u003e\u003c/p\u003e\u003cp\u003eComing soon.\u003c/p\u003e \u003chr /\u003e\u003cp\u003e\u003cstrong\u003eProblem C.\u003c/strong\u003e \u003ca href\u003d\"//codeforces.com/problemset/problem/545/A\"\u003eToy Cars\u003c/a\u003e\u003c/p\u003e\u003cp\u003eThis is a direct implementation problem.\u003c/p\u003e\u003cp\u003eWe will first assume that all cars are good, then we will process collisions one by one.\u003c/p\u003e\u003cp\u003eWe will change any car to a bad car if it turned over in at least one collision.\u003c/p\u003e\u003cp\u003eAt the end we will output the good cars.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eCode:\u003c/strong\u003e \u003ca href\u003d\"//codeforces.com/contest/545/submission/11609303\"\u003e11609303\u003c/a\u003e\u003c/p\u003e \u003chr /\u003e\u003cp\u003e\u003cstrong\u003eProblem D.\u003c/strong\u003e \u003ca href\u003d\"//codeforces.com/problemset/problem/538/B\"\u003eD. Quasi Binary\u003c/a\u003e\u003c/p\u003e \u003cul\u003e   \u003cli\u003e\u003cp\u003eThis is somehow a tricky problem that needs careful analysis.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eYou are given a number n that needs to be represented as the summation of decimal numbers that consists only of zeros or ones using minimal number of summands.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eLet\u0027s think of the given number as the summation of multiples of powers of ten\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e\u003cp\u003eFor example the number 63547 can be represented as:\u003c/p\u003e\u003cp\u003e6 * 10^4 + 3 * 10^3 + 5 * 10^2 + 4 * 10^1 + 7 * 10^0\u003c/p\u003e \u003cul\u003e   \u003cli\u003eNow let\u0027s make the most important observation for this problem ... adding any \u003cstrong\u003edifferent\u003c/strong\u003e powers of ten together will always yield a number that consists of zeros and ones only.\u003c/li\u003e \u003c/ul\u003e\u003cp\u003eAdding any \u003cstrong\u003esimilar\u003c/strong\u003e powers of ten together will always yield a number that includes a digit other than 0 or 1\u003c/p\u003e\u003cp\u003eFor example:\u003c/p\u003e\u003cp\u003e10^4 + 10^2 + 10^0 \u003d 10101\u003c/p\u003e\u003cp\u003e10^3 + 10^2 + 10^1 \u003d 1110\u003c/p\u003e\u003cp\u003e10^4 + 10^4 \u003d 20000\u003c/p\u003e \u003cul\u003e   \u003cli\u003eNow back to our example n \u003d 63547\u003c/li\u003e \u003c/ul\u003e\u003cp\u003en \u003d 6 * 10^4 + 3 * 10^3 + 5 * 10^2 + 4 * 10^1 + 7 * 10^0\u003c/p\u003e\u003cp\u003eWe will take one copy of each different power of ten and add them together.\u003c/p\u003e\u003cp\u003eFirst step: 10^4 + 10^3 + 10^2 + 10^1 + 10^0 \u003d 11111\\n remaining: 52437\u003c/p\u003e\u003cp\u003eSecond step: 10^4 + 10^3 + 10^2 + 10^1 + 10^0 \u003d 11111\\n remaining: 41326\u003c/p\u003e\u003cp\u003eThird step: 10^4 + 10^3 + 10^2 + 10^1 + 10^0 \u003d 11111\\n remaining: 30215\u003c/p\u003e\u003cp\u003eFourth step: 10^4 + NULL + 10^2 + 10^1 + 10^0 \u003d 10111\\n remaining: 20105\u003c/p\u003e\u003cp\u003eWe keep repeating these steps till the remaining is zero.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eCode:\u003c/strong\u003e \u003ca href\u003d\"//codeforces.com/contest/538/submission/11609317\"\u003e11609317\u003c/a\u003e\u003c/p\u003e \u003chr /\u003e\u003cp\u003e\u003cstrong\u003eProblem E.\u003c/strong\u003e \u003ca href\u003d\"//codeforces.com/problemset/problem/476/B\"\u003eE. Dreamoon and WiFi\u003c/a\u003e\u003c/p\u003e\u003cp\u003eThis was the hardest problem in the contest.\u003c/p\u003e\u003cp\u003eYou had two strings X and Y consisting of either \u0027+\u0027 or \u0027-\u0027 .. where string y has some unknown positions \u0027?\u0027\u003c/p\u003e\u003cp\u003eFor any unknown position it can be \u0027+\u0027 or \u0027-\u0027 with equal probability.\u003c/p\u003e\u003cp\u003eWe want to calculate the probability that both strings will lead to the same position.\u003c/p\u003e\u003cp\u003eLet\u0027s denote the \u003cstrong\u003enumber of \u0027?\u0027 in the second string as d\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eNow for the second string we have 2^d possibilities as for each \u0027?\u0027 can either be \u0027+\u0027 or \u0027-\u0027.\u003c/p\u003e\u003cp\u003eSo we have \u003cstrong\u003etotal_possibilities \u003d 2^d\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eWe are interested in calculating the \u003cstrong\u003eprobability\u003c/strong\u003e which is \u003cstrong\u003evalid_possibilities / total_possibilities\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eSo we need to calculate the number of \u003cstrong\u003evalid possibilities\u003c/strong\u003e.\u003c/p\u003e\u003cp\u003eLet\u0027s do a brute force search that tries every possible scenario and decides it is a valid possibility or not.\u003c/p\u003e\u003cp\u003eFor example if the second string is \u0026quot;+???\u0026quot;, We will try:\u003c/p\u003e \u003cul\u003e   \u003cli\u003e\u003cstrong\u003e\u0026quot;++++\u0026quot;\u003c/strong\u003e\u003c/li\u003e   \u003cli\u003e\u003cstrong\u003e\u0026quot;+++-\u0026quot;\u003c/strong\u003e\u003c/li\u003e   \u003cli\u003e\u003cstrong\u003e\u0026quot;++-+\u0026quot;\u003c/strong\u003e\u003c/li\u003e   \u003cli\u003e\u003cstrong\u003e\u0026quot;++--\u0026quot;\u003c/strong\u003e\u003c/li\u003e   \u003cli\u003e\u003cstrong\u003e\u0026quot;+-++\u0026quot;\u003c/strong\u003e\u003c/li\u003e   \u003cli\u003e\u003cstrong\u003e\u0026quot;+-+-\u0026quot;\u003c/strong\u003e\u003c/li\u003e   \u003cli\u003e\u003cstrong\u003e\u0026quot;+--+\u0026quot;\u003c/strong\u003e\u003c/li\u003e   \u003cli\u003e\u003cstrong\u003e\u0026quot;+---\u0026quot;\u003c/strong\u003e\u003c/li\u003e \u003c/ul\u003e\u003cp\u003eAs you can see this looks like binary representation of some number.\u003c/p\u003e\u003cp\u003eSo in fact, we can loop over all possibilities of the second string by looping on numbers instead of actually generating the string.\u003c/p\u003e\u003cp\u003eLet\u0027s take a look at the implementation.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eCode:\u003c/strong\u003e \u003ca href\u003d\"//codeforces.com/contest/476/submission/11609334\"\u003e11609334\u003c/a\u003e\u003c/p\u003e \u003chr /\u003e\u003cp\u003e\u003cstrong\u003eProblem F.\u003c/strong\u003e \u003c/p\u003e\u003cp\u003eComing soon.\u003c/p\u003e\u003c/div\u003e","tags":[]}}