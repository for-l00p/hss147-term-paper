{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":true,"creationTimeSeconds":1481612133,"rating":16,"authorHandle":"DreamingBoy","modificationTimeSeconds":1481624238,"id":49024,"title":"\u003cp\u003eHard DP problem.\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHi CodeForces.\u003c/p\u003e\u003cp\u003eI won\u0027t give link of problen and explain statement of problem, because this problem has more easier solution. But i want implement my solution idea, but i have problems with realization, and i need your help.\u003c/p\u003e\u003cp\u003eIn problem i must calculate dp\u003c/p\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003elike\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003efor (int i \u003d 1; i \u0026lt;\u003d n; i++){\n  int mn \u003d inf, mx \u003d -inf;\n  for (int j \u003d i; j \u0026gt;\u003d 1; j--){\n    mn \u003d min(mn, a[j]), mx \u003d max(mx, a[j]);\n    dp[i] \u003d max(dp[i], dp[j - 1] + (mx - mn));\n  }\n}\n\nProblem can not be solved in O(N^2), because N \u0026lt;\u003d 10^6\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003eI think, exist way to calculate dp mush faster -\u0026gt; dp[i] \u003d max(dp[j - 1] + (mx[j] - mn[j])) 1 \u0026lt;\u003d j \u0026lt; i\u003c/code\u003e\u003c/p\u003e\u003cp\u003e\u003ccode\u003emx[j] -\u0026gt; maximum from j to i\u003c/code\u003e\u003c/p\u003e\u003cp\u003e\u003ccode\u003emn[j] -\u0026gt; minimum from j to i\u003c/code\u003e\u003c/p\u003e\u003cp\u003eThanks in advance!\u003c/p\u003e\u003c/div\u003e","tags":[]}}