{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1438807567,"rating":10,"authorHandle":"BitHashTech","modificationTimeSeconds":1438807567,"id":19606,"title":"\u003cp\u003eApproach for Contest #Pi D. One-Dimensional Battle Ships\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eGreetings people ,\u003c/p\u003e\u003cp\u003eI am happy to share my approach to problem D. One-Dimensional Battle Ships in today\u0027s contest , however I didn\u0027t get it AC during the contest , I think the statement was not so clear for me , I thought it wanted to find a move from these moves to be the first and to make sure that after it Bob will be sure of Alice\u0027s cheating , and the sample didn\u0027t make it clearer .. \u003c/p\u003e\u003cp\u003eThe point , the problem wanted to follow each shot by their order and apply them then when you come to one of them that is the answer save it and if you didn\u0027t find any answer print -1 .\u003c/p\u003e\u003cp\u003eSo my final approach was to find maximum number of ships that can be put in a space , that would be easy with binary search , if this condition holds ( numberOfShips * LengthOfShip + numberOfShips-1 ) that is the whole length of the ships + 1 space between each 2 ships .. \u003c/p\u003e\u003cp\u003eI used 1 set-data_structure and 1 map-data_structure so that I can insert new shots and get previous value of segment ( left hand of the new shot ( the next shot form left or 0 ) — right hand of the new shot ( the next shot from right or n+1 ) ) and subtract it from the MaxNumOfShips then find max number of ships that can be put in ( left hand new shot — position of new shot ) and ( position of new shot — right hand of new shot ) and add it to the MaxNumOfShips , and save their value in the map ,\u003c/p\u003e\u003cp\u003eIf MaxNumOfShips \u0026lt; K ( number of ships ) then we got an answer and we save it \u003c/p\u003e\u003cp\u003eWe can easily get what segment value by using ( map\u0026lt; pair \u0026lt; int , int \u0026gt; , int \u0026gt; ) which holds lefthand , righthand and the value , and we use set \u0026lt; int \u0026gt; S to put shots in their right place .\u003c/p\u003e\u003cp\u003eThank you .\u003c/p\u003e\u003c/div\u003e","tags":["data structures","binary search","editorial","approach"]}}