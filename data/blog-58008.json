{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1519477083,"rating":1,"authorHandle":"Ahmad_Elsagheer","modificationTimeSeconds":1519478805,"id":58008,"title":"\u003cp\u003e[Editorial] A_2: Problem A. BADR-Solutions\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eThis problem is different from other segment tree problems since it is not clear \u0026quot;how can we use a segment tree for it?!\u0026quot;. Let\u0027s try to break down the problem into subproblems and find out how can we combine things together.\u003c/p\u003e\u003ch4\u003eSuperiority Tree\u003c/h4\u003e\u003cp\u003eFirst of all, we should observe that the superiority relationship forms a \u003cstrong\u003etree\u003c/strong\u003e. The superiority tree of the sample is shown below: \u003cimg alt\u003d\" \" src\u003d\"/predownloaded/66/18/66189dc2aec14d2dae89be202bb9c6874f51ea89.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003ch4\u003eNearby Co-workers\u003c/h4\u003e\u003cp\u003eThe second observation is that the street can be represented as an array \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003c/span\u003e of length \u003cspan class\u003d\"tex-span\"\u003e10\u003csup class\u003d\"upper-index\"\u003e5\u003c/sup\u003e\u003c/span\u003e, where \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e is the number of startup employees living at the point \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e. Each employee \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e can make friends with people who live in a specific \u003cstrong\u003erange\u003c/strong\u003e of the street. You can calculate this range using \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e only.\u003c/p\u003e\u003ch4\u003eCombining superiority tree with street ranges\u003c/h4\u003e\u003cp\u003eIf we build a segment tree on the street array, we can figure out the total number of people who live in his acceptable range. However, some people living in this range are not this employee\u0027s superiors. So, how can we avoid overcounting?\u003c/p\u003e\u003cp\u003eThe trick is to find the answer for each employee using the superiority tree. More specifically, when we want to find the answer for employee \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e, the street array \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003c/span\u003e should contain only the superiors for employee \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e. For example, to find the answer for employee \u003cspan class\u003d\"tex-span\"\u003e5\u003c/span\u003e, the street array \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003c/span\u003e should have \u003cspan class\u003d\"tex-span\"\u003e0\u003c/span\u003e in all cells except in the cells of employees \u003cspan class\u003d\"tex-span\"\u003e2\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e. \u003cimg alt\u003d\" \" src\u003d\"/predownloaded/03/b9/03b96d8fac3df3a8390216e44fa0d1f5ca697ac0.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003eSo, we can traverse the superiority tree starting from the root with our street array initially empty. When we visit employee \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e, we can compute his answer all his superiors are in the array. After that, we have to add employee \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e to the array. Now, we can safely go and answer all his subordinates. After doing so, we should remove employee \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e from the array before going back to the direct manager. \u003c/p\u003e\u003cp\u003eThe last part is very similar to what we did in A_1: Problem A. Fully-Persistent Queue. We will compute the answers with a recursive function that traverses the tree.\u003c/p\u003e\u003c/div\u003e","tags":[]}}