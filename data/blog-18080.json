{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":false,"creationTimeSeconds":1432501338,"rating":77,"authorHandle":"Endagorion","modificationTimeSeconds":1432501338,"id":18080,"title":"\u003cp\u003eYandex.Algorithm 2015 Round 1 Editorial\u003c/p\u003e","locale":"ru","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eJust a few quick notes about problems (not the full-sized editorial as usual).\u003c/p\u003e\u003ch3\u003eA — Buildind a Bookshelf\u003c/h3\u003e\u003cp\u003eIterate over all possible lengths of top/floor \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003et\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e and walls \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ew\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e (note that they can be equal); reserve two planks of chosen lengths for each. If there are \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e planks of length \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e left, there should at least \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/44/d3/44d36feb918af11a2a785d24225302b99c76b10c.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e (be careful not to divide by zero of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ew\u003c/i\u003e\u003c/sub\u003e \u003d 1\u003c/span\u003e!) departments of width \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e. The number of inner walls is equal to the number of departments, except for the case when the total width of departments is equal to the width of the bookshelf (we don\u0027t need the last inner wall). Check if there are sufficient planks for inner walls, and also if the departments fit into the bookshelf; also, excessive inner walls should placed in the free space. That\u0027s an \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e3\u003c/sup\u003e)\u003c/span\u003e solution; finally, notice that the floor should be longer than all the shelves, thus it makes sense to try only the two largest types of planks for the floor. Finally, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e)\u003c/span\u003e.\u003c/p\u003e\u003ch3\u003eB — Flatland Division\u003c/h3\u003e\u003cp\u003eThe most failed problem of the contest. Most accepted solutions are for this problem, I guess, due to a) it was in the beginning of the problemset, and b) this type of problem occurs frequently on many contests. I apologize for the low quality of the problem.\u003c/p\u003e\u003cp\u003eThe idea is as follows: the dividing line can be moved so that is nearly passes throw some two cities. Iterate over the pair of these \u0027border\u0027 cities, and find the total population on both sides of the line; choose the best option. To speed up, fix one border city and rotate the line around it. there are \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e)\u003c/span\u003e events when a changes side respective to the line; sort them by angle and process iteratively. That makes up for an \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/72/30/7230f4eaf59a69a03c16cd0bc0dada6b3daaf9c0.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e solution. I tried to make sure no \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e3\u003c/sup\u003e)\u003c/span\u003e solutions pass, but it seems I failed even at that. \u003d(\u003c/p\u003e\u003ch3\u003eC — Solitaire Simplified\u003c/h3\u003e\u003cp\u003eThere is a straightforward \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e4\u003c/sup\u003e)\u003c/span\u003e DP solution which basically stores all the interesting info about the state of the game; it can be probably optimized to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e3\u003c/sup\u003e)\u003c/span\u003e. I will describe another, more thought-requiring solution.\u003c/p\u003e\u003cp\u003eConsider an inverse permutation of the deck; that is, if the \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e-th number of the deck is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e, numbers \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eq\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e are determined by \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eq\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/sub\u003e \u003d \u003ci\u003ei\u003c/i\u003e\u003c/span\u003e. The number 1 will be surely thrown out on the first discarded through the cards; the number will be discarded on the first pass if \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eq\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e \u0026gt; \u003ci\u003eq\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/span\u003e or \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eq\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e \u0026gt; \u003ci\u003eq\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e3\u003c/sub\u003e \u0026gt; ... \u0026gt; \u003ci\u003eq\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e; and so on.\u003c/p\u003e\u003cp\u003eWe see that on each pass through the cards maximal increasing prefix and maximal decreasing suffix of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eq\u003c/i\u003e\u003c/span\u003e will be discarded; on the next pass the new maximal monotonous prefix and suffix will be discarded and so on. Suppose there will be \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/span\u003e passes through the deck, and the final number is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e; this means that there are exactly \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e - 1\u003c/span\u003e increases in \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eq\u003c/i\u003e\u003c/span\u003e to the right of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e, and exactly \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e - 1\u003c/span\u003e drops (or, in other words, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e - (\u003ci\u003em\u003c/i\u003e - 1)\u003c/span\u003e increases) to the left of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e; thus the total number of increases will be \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e - 1\u003c/span\u003e regardless of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/span\u003e. The problem reduced to a classic one: count the number of permutations of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e number with exactly \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e - 1\u003c/span\u003e increases. It can be done straightforwardly in \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e3\u003c/sup\u003e)\u003c/span\u003e, or even faster using some \u003ca href\u003d\"http://en.wikipedia.org/wiki/Eulerian_number\"\u003eingenious formulas\u003c/a\u003e.\u003c/p\u003e\u003ch3\u003eD — Xor\u003c/h3\u003e\u003cp\u003eComing up.\u003c/p\u003e\u003ch3\u003eE — Tree Growing\u003c/h3\u003e\u003cp\u003eThe information about the tree can be stored simply as a sequence of operations. The sizes of the tree after each operation will also be useful. The \u0026quot;+ \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e\u0026quot; is thus trivial.\u003c/p\u003e\u003cp\u003eNow to find the distance between two vertices. This can be divided into two tasks: finding depth (distance from the root) \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ed\u003c/i\u003e(\u003ci\u003ev\u003c/i\u003e)\u003c/span\u003e of the vertex \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e\u003c/span\u003e given its number, and determining depth of the LCA of two vertices; the distance is given by \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ed\u003c/i\u003e(\u003ci\u003ex\u003c/i\u003e) + \u003ci\u003ed\u003c/i\u003e(\u003ci\u003ey\u003c/i\u003e) - 2\u003ci\u003ed\u003c/i\u003e(\u003ci\u003elca\u003c/i\u003e(\u003ci\u003ex\u003c/i\u003e, \u003ci\u003ey\u003c/i\u003e))\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eIf \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e \u003d 1\u003c/span\u003e, the depth is clearly 0. Otherwise, the number of the subtree of the root which contains \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e\u003c/span\u003e is \u003cspan class\u003d\"tex-span\"\u003e⌊ (\u003ci\u003ev\u003c/i\u003e - 1) / \u003ci\u003es\u003c/i\u003e\u003c/span\u003e, where \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e\u003c/span\u003e is the size of a single subtree. Similarly, the number of vertex \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e\u003c/span\u003e in the subtree in its original numeration is \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/26/95/26958967db729a6055b09db9f9fe4d00fb1bfbdd.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. We have reduced the problem to the similar one concerning the subtree; treat it recursively. The sequence of sizes provides all the necessary information; thus, the depth can be found in \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eh\u003c/i\u003e)\u003c/span\u003e, where \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eh\u003c/i\u003e\u003c/span\u003e is the height of the tree.\u003c/p\u003e\u003cp\u003eTo find LCA of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ey\u003c/i\u003e\u003c/span\u003e, proceed similarly; the root of the current tree if the LCA if one of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e or \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ey\u003c/i\u003e\u003c/span\u003e is the root, or they are contained in different subtrees. Thus, the depth of LCA can also be found in \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eh\u003c/i\u003e)\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eUnfortunately, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eh\u003c/i\u003e\u003c/span\u003e can be rather large. However, there can be very few operations (less than 60) with \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e ≥ 2\u003c/span\u003e as the total number of vertices is at most \u003cspan class\u003d\"tex-span\"\u003e10\u003csup class\u003d\"upper-index\"\u003e18\u003c/sup\u003e\u003c/span\u003e. We can store the operations with \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e \u003d 1\u003c/span\u003e in compressed form, as they just attach one edge to the root of tree. Finally, all the operations with little enhancement can be done in \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eh\u003c/i\u003e\u0027)\u003c/span\u003e, where \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eh\u003c/i\u003e\u0027\u003c/span\u003e is the number of operations with \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e \u0026gt; 1\u003c/span\u003e.\u003c/p\u003e\u003ch3\u003eF — To Saw Or Not To Saw\u003c/h3\u003e\u003cp\u003eIf \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e \u003d \u003ci\u003ec\u003c/i\u003e\u003c/span\u003e, the answer is simply \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003emin\u003c/i\u003e(\u003ci\u003eb\u003c/i\u003e, \u003ci\u003ed\u003c/i\u003e)\u003c/span\u003e (the shortest sawtooth length).\u003c/p\u003e\u003cp\u003eOtherwise, suppose \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e \u0026gt; \u003ci\u003ec\u003c/i\u003e\u003c/span\u003e. Consider the space between two sawtooths of \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ec\u003c/i\u003e, \u003ci\u003ed\u003c/i\u003e)\u003c/span\u003e-saws; we may as well consider the \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ea\u003c/i\u003e, \u003ci\u003eb\u003c/i\u003e)\u003c/span\u003e-saw wrapped up around the space. The ends of the sawtooths of \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ea\u003c/i\u003e, \u003ci\u003eb\u003c/i\u003e)\u003c/span\u003e-saw form a modular sequence \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/57/61/5761bb09ec2018981c233d476b5cc16309f1ce51.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, which is the same set of ends as the periodical sequence with diffence \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/a8/fb/a8fbd4785e518750b9815156b0b48a4d42370d49.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e; thus the \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ea\u003c/i\u003e, \u003ci\u003eb\u003c/i\u003e)\u003c/span\u003e-saw can be changed to the saw with difference \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/a8/fb/a8fbd4785e518750b9815156b0b48a4d42370d49.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e but the same angle of sawtooths. Finally, we arrive at the previous situation with the common difference of \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/a8/fb/a8fbd4785e518750b9815156b0b48a4d42370d49.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e; the saw with the least steep angle of sawtooth will determine the maximal length. Thus, the answer is \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/17/04/1704552af7298eac98f28b468bf7bdbaae13606a.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. Do not forget to use 64-bit integers for multiplication.\u003c/p\u003e\u003c/div\u003e","tags":[]}}