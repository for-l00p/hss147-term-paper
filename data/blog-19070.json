{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1436009276,"rating":-6,"authorHandle":"shyam81295","modificationTimeSeconds":1436009276,"id":19070,"title":"\u003cp\u003e327 a — Flipping game \u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003ch4\u003eMy first problem of Dynamic Programming\u003c/h4\u003e\u003cp\u003eLogic: max (total_1s + max (number_of_0s_in_subarray))\u003c/p\u003e\u003cp\u003eThe key to solve this problem is to make use of Kadane\u0027s Algorithm. Kadance\u0027s Algorithm basically is used to find the maximum sum in a contiguous subarray of an array. \u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"//codeforces.com/blog/entry/13713\"\u003eClick here for link for Kadane\u0027s Algorithm Explanation\u003c/a\u003e\u003c/p\u003e\u003cp\u003eAlso, important point to note is that : In input, atleast one number 0 is required for flipping purposes, but if all are 1s in input, then answer will be (total_1s — 1) because atleast one number should be flipped.\u003c/p\u003e\u003c/div\u003e","tags":["#dp"]}}