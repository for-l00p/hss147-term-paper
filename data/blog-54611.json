{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1505779668,"rating":5,"authorHandle":"UmCaraLegal","modificationTimeSeconds":1505779668,"id":54611,"title":"\u003cp\u003eInverting Strings ( Shortest Path )\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHi everyone.\u003c/p\u003e\u003cp\u003eThe problem is given 3 strings \u003cstrong\u003eI, S, F\u003c/strong\u003e How many moves (it should be minimum) are needed to transform String I to string S and transform string S to string F.\u003c/p\u003e\u003cp\u003eA move on a string \u003cstrong\u003eS\u003c/strong\u003e consists of choosing two integers \u003cstrong\u003ei, j\u003c/strong\u003e (0 \u0026lt;\u003d i \u0026lt;\u003d j \u0026lt;\u003d | S |) and inverting this substring. For example: S \u003d ABCDE . If i \u003d 1 and j \u003d 4, the string will be DCBAE\u003c/p\u003e\u003cp\u003eInput:\u003c/p\u003e\u003cp\u003eThe input consist of 3 strings \u003cstrong\u003eI, S, F\u003c/strong\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003e|I| \u0026lt;\u003d 10\u003c/strong\u003e **** \u003cstrong\u003e|I| \u003d |S| \u003d |F|\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eExample:\u003c/p\u003e\u003cp\u003eabc cba cab\u003c/p\u003e\u003cp\u003eThe output should be \u003cstrong\u003e2\u003c/strong\u003e\u003c/p\u003e \u003chr /\u003e\u003cp\u003eI was trying to solve it using a BFS but I think it will get TLE because the worst case will exist N! strings and for every string I need to choose two elements to invert\u003c/p\u003e\u003cp\u003eAnyone have any idea how to solve it ? :D\u003c/p\u003e\u003c/div\u003e","tags":["strings","inversions","dijkstra","dynamic programming","backtracking","brute force"]}}