{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1521125359,"rating":11,"authorHandle":"back_slash","modificationTimeSeconds":1521125359,"id":58380,"title":"\u003cp\u003eChef And Interval Painting March Long CodeChef\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHello Everyone, Chef And Interval Painting was one of the most interesting problem of March Long. I am writing this blog for 2 main reasons listed below. \u003c/p\u003e \u003col\u003e   \u003cli\u003e\u003cp\u003eI am having a hard time in understanding the editorial. And the interesting thing is I haven\u0027t even reached to the harder part of the editorial yet i.e. the NTT part. I can\u0027t understand the DP relation that they have written in the first statement. How can we say that the number of ways for exactly r colors to be visible at the end won\u0027t depend on the choice of colors which are visible? According to me because we are coloring in a specific order which can\u0027t be changed, I think it should depend on the choice of colors. It would be great if someone can provide a better approach to arrive at the solution or if someone has a different DP relation that can be used to solve the problem.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eThe second reason is during the contest I was able to figure out a DP relation which can be used to solve the problem in O(N^2) time. But obviously, I was not able to convert that approach to a better complexity. So, I wanted to share my approach and if anyone can provide a suggestion on is it possible to apply NTT to my approach or not. \u003c/p\u003e\u003c/li\u003e \u003c/ol\u003e\u003cp\u003eSo basically, the approach which I used was dp[N][K] will denote the number of distinct coloring of an array of size N after K rounds and the only twist is coloring a subarray of size 0 is also a valid round.\u003c/p\u003e\u003cp\u003eSo, the relation would be fairly simple \u003c/p\u003e \u003ccenter\u003e\u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/cd/11/cd1117d664f51f426e1351f0fd726e9f28c466f1.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/center\u003e\u003cp\u003eThe basic logic used is same that start from reverse and coloring a subarray of any size in some round X won\u0027t affect the coloring in the previous i.e. (X-1)th round. And the final answer for some value of N,K will be \u003c/p\u003e \u003ccenter\u003e\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eAns\u003c/i\u003e[\u003ci\u003eN\u003c/i\u003e][\u003ci\u003eK\u003c/i\u003e] \u003d \u003ci\u003edp\u003c/i\u003e[\u003ci\u003eN\u003c/i\u003e][\u003ci\u003eK\u003c/i\u003e] - \u003ci\u003edp\u003c/i\u003e[\u003ci\u003eN\u003c/i\u003e][\u003ci\u003eK\u003c/i\u003e - 1];\u003c/span\u003e\u003c/center\u003e\u003cp\u003eI don\u0027t know if the above relation can be solved in less time complexity or not. But any suggestion related to the problem are welcomed.\u003c/p\u003e\u003cp\u003eThanks !!\u003c/p\u003e\u003c/div\u003e","tags":[]}}