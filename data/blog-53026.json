{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1498874844,"rating":18,"authorHandle":"Sherlock2000","modificationTimeSeconds":1498874889,"id":53026,"title":"\u003cp\u003eA question about SRM717 div1 easy\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHi guys, i participated srm717 last night, and submitted q1, here is my idea (but failed in system test, i have no idea)\u003c/p\u003e\u003cp\u003eFirst we know there is one and only one solution, which makes the difficulty of this problem locate on constructing the graph.\u003c/p\u003e\u003cp\u003eSo i came up with a greedy idea:\u003c/p\u003e\u003cp\u003e(1) we sort S[] from small to big, then we bruteforce i from 1 -\u0026gt; n\u003c/p\u003e\u003cp\u003e(2) we try to choose some nodes to be connected with node i, the nodes should satisfy that\u003c/p\u003e\u003cp\u003ethey haven\u0027t been connected with i yet\u003c/p\u003e\u003cp\u003etheir outdegree should be as small as possible\u003c/p\u003e\u003cp\u003ethen i passed all the examples but got failed in system test.. i am a bit curious\u003c/p\u003e\u003cp\u003ebtw the contest is not active therefore i can\u0027t see the test data\u003c/p\u003e\u003cp\u003eThanks guys :)\u003c/p\u003e\u003c/div\u003e","tags":[]}}