{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1522141305,"rating":0,"authorHandle":"strawberrry","modificationTimeSeconds":1522141305,"id":58586,"title":"\u003cp\u003eRound #239 solution\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cblockquote\u003e\u003cp\u003eA. B. C. D are solved at 3.27\u003c/p\u003e\u003cp\u003eE 现在还蜜汁\u003ccode\u003eWrong answer on test 8\u003c/code\u003e，等解决了再以\u003ccode\u003eCommand\u003c/code\u003e形式发题解，好难啊QAQ\u003c/p\u003e \u003c/blockquote\u003e\u003ch3\u003eA. \u003ca href\u003d\"//codeforces.com/group/oQtXiLyxgw/contest/408/problem/A\"\u003eLine to Cashier\u003c/a\u003e\u003c/h3\u003e \u003cblockquote\u003e\u003cp\u003e\u003cstrong\u003e分类：\u003c/strong\u003e \u003ccode\u003eimplementation\u003c/code\u003e\u003c/p\u003e \u003c/blockquote\u003e\u003cp\u003e对于每个柜台，模拟去算它走完流程所需要花费的时间，最后取个最小值就是答案。\u003c/p\u003e\u003ch3\u003eB. \u003ca href\u003d\"//codeforces.com/group/oQtXiLyxgw/contest/408/problem/B\"\u003eGarland\u003c/a\u003e\u003c/h3\u003e \u003cblockquote\u003e\u003cp\u003e\u003cstrong\u003e分类：\u003c/strong\u003e \u003ccode\u003eimplementation\u003c/code\u003e\u003c/p\u003e \u003c/blockquote\u003e\u003cp\u003e题意有点模糊，就是统计a串和b串是否有不相同的字符，有则不合法，否则每种字符对答案贡献为出现次数较小的那个串。\u003c/p\u003e\u003ch3\u003eC. \u003ca href\u003d\"//codeforces.com/group/oQtXiLyxgw/contest/408/problem/C\"\u003eTriangle\u003c/a\u003e\u003c/h3\u003e \u003cblockquote\u003e\u003cp\u003e\u003cstrong\u003e分类：\u003c/strong\u003e \u003ccode\u003ebrute force\u003c/code\u003e \u003ccode\u003egeometry\u003c/code\u003e\u003c/p\u003e \u003c/blockquote\u003e\u003cp\u003e英语不好导致连直角三角形都认不得，明白题意以后，显然 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/span\u003e 和 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/span\u003e 都很小，暴力去把它们拆成 \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/5d/60/5d6009c039fe3ee7a162da18b33b9bc71760a142.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e （注意可能有多个解，得开个\u003ccode\u003evector\u003c/code\u003e存起来），如果不能拆，则显然无解，否则把直角顶点平移到原点，贪心地根据直角关系建立好直角边，去讨论斜边情况：\u003c/p\u003e \u003cul\u003e   \u003cli\u003e斜边是否平行 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e 轴。\u003c/li\u003e   \u003cli\u003e斜边是否存在（也就是那两条直角边的夹角是否是90度）\u003c/li\u003e \u003c/ul\u003e\u003cp\u003e细节挺多（其实是自己不擅长写几何）\u003c/p\u003e\u003ch3\u003eD. \u003ca href\u003d\"//codeforces.com/group/oQtXiLyxgw/contest/408/problem/D\"\u003eLong Path\u003c/a\u003e\u003c/h3\u003e \u003cblockquote\u003e\u003cp\u003e\u003cstrong\u003e分类：\u003c/strong\u003e \u003ccode\u003edp\u003c/code\u003e\u003c/p\u003e \u003c/blockquote\u003e\u003cp\u003e不难想到这题得用动态规划解决（这种带计数取模的，除了找规律就是dp了），关键在于怎么设计状态：\u003c/p\u003e\u003cp\u003e观察到 \u003cspan class\u003d\"tex-span\"\u003e1 ≤ \u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e ≤ \u003ci\u003ei\u003c/i\u003e\u003c/span\u003e ，也就是说，点 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e (\u003ci\u003ei\u003c/i\u003e \u0026gt; 1)\u003c/span\u003e 一定是从前一个点 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e - 1\u003c/span\u003e 走过来的。那么到了点 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e 以后，因为是第一次到，所以一定是先去走 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e 的位置，当第二遍走到 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e 这个位置时候（偶数次），才会走向点 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e + 1\u003c/span\u003e ，假设 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e(\u003ci\u003ei\u003c/i\u003e)\u003c/span\u003e 表示第一次走到点 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e 所需要的步数，那么考虑从 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e - 1\u003c/span\u003e 如何转移到 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e （因为 \u003cstrong\u003e第一次\u003c/strong\u003e 到 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e 点一定是由 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e - 1\u003c/span\u003e 走到的 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e 点），根据刚才分析第一次到 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e - 1\u003c/span\u003e 点以后，会先走去 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e - 1\u003c/sub\u003e\u003c/span\u003e 位置，花费 \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e 步，接下来从 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e - 1\u003c/sub\u003e\u003c/span\u003e 往哪走就取决于点 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e - 1\u003c/sub\u003e\u003c/span\u003e 它的状态（和奇偶性有关）。\u003c/p\u003e\u003cp\u003e由于 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e - 1\u003c/sub\u003e ≤ \u003ci\u003ei\u003c/i\u003e - 1\u003c/span\u003e ，你已经从 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e - 1\u003c/sub\u003e\u003c/span\u003e 往右走了，而且是上一次往右走以后第一次回来，说明 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e - 1\u003c/sub\u003e\u003c/span\u003e 的状态一定是偶数，因为状态如果是奇数你只可能倒着走！那么这就和第一次到 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e 的状态相同，因此再容斥掉一个 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e(\u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e - 1\u003c/sub\u003e)\u003c/span\u003e 就是从 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e - 1\u003c/sub\u003e\u003c/span\u003e 到 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e - 1\u003c/span\u003e 的步数了，即 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e(\u003ci\u003ei\u003c/i\u003e - 1) - \u003ci\u003ef\u003c/i\u003e(\u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e - 1\u003c/sub\u003e)\u003c/span\u003e ，最后再从 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e - 1\u003c/span\u003e 走到 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e 花费 \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e 步，因此 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e(\u003ci\u003ei\u003c/i\u003e) \u003d \u003ci\u003ef\u003c/i\u003e(\u003ci\u003ei\u003c/i\u003e - 1) + 1 + \u003ci\u003ef\u003c/i\u003e(\u003ci\u003ei\u003c/i\u003e - 1) - \u003ci\u003ef\u003c/i\u003e(\u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e - 1\u003c/sub\u003e) + 1\u003c/span\u003e ，化简一下就是 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e(\u003ci\u003ei\u003c/i\u003e) \u003d 2\u003ci\u003ef\u003c/i\u003e(\u003ci\u003ei\u003c/i\u003e - 1) - \u003ci\u003ef\u003c/i\u003e(\u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e - 1\u003c/sub\u003e) + 2\u003c/span\u003e ，递推下去 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e + 1)\u003c/span\u003e 就是答案！\u003c/p\u003e\u003c/div\u003e","tags":[]}}