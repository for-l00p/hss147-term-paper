{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1403343070,"rating":59,"authorHandle":".o.","modificationTimeSeconds":1403450607,"id":12759,"title":"\u003cp\u003eAn unusual and great task with shortest paths\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHi, everyone! \u003c/p\u003e\u003cp\u003e2014 World Cup Brasil has started, and I was looking for interesting problems. I found a nice IOI-style problem from \u003ca href\u003d\"http://www.ioi-jp.org/camp/2014/2014-sp-tasks/index.html\"\u003eJapanese Olympiad In Informatics 2014\u003c/a\u003e (this is not the online contest!). If you know how to read Japanese, you can find the problem \u0026quot;Kanji Shiritori\u0026quot; from \u003ca href\u003d\"http://www.ioi-jp.org/camp/2014/2014-sp-tasks/2014-sp-d4.pdf\"\u003ethe statement file\u003c/a\u003e. Here is the translation of the problem, powered by Google Translation and me :D\u003c/p\u003e \u003chr /\u003e\u003cp\u003eYou are given a weighted directed graph. The graph consists of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eN\u003c/i\u003e\u003c/span\u003e (\u003cspan class\u003d\"tex-span\"\u003e2 ≤ \u003ci\u003eN\u003c/i\u003e ≤ 300\u003c/span\u003e) vertices and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eM\u003c/i\u003e\u003c/span\u003e (\u003cspan class\u003d\"tex-span\"\u003e1 ≤ \u003ci\u003eM\u003c/i\u003e ≤ \u003ci\u003eN\u003c/i\u003e × (\u003ci\u003eN\u003c/i\u003e - 1)\u003c/span\u003e) edges, and there are no loops or multiple edges in this graph. The vertices are numbered by integers from \u003cspan class\u003d\"tex-span\"\u003e0\u003c/span\u003e to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eN\u003c/i\u003e - 1\u003c/span\u003e, and the edges are numbered by integers from \u003cspan class\u003d\"tex-span\"\u003e0\u003c/span\u003e to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eM\u003c/i\u003e - 1\u003c/span\u003e. The \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e-th edge goes from vertex \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e to vertex \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e, and the weight of this edge is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eC\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e. (\u003cspan class\u003d\"tex-span\"\u003e0 ≤ \u003ci\u003eA\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e \u0026lt; \u003ci\u003eN\u003c/i\u003e, 0 ≤ \u003ci\u003eB\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e \u0026lt; \u003ci\u003eN\u003c/i\u003e, \u003ci\u003eA\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e ≠ \u003ci\u003eB\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e, 1 ≤ \u003ci\u003eC\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e ≤ 10\u003csup class\u003d\"upper-index\"\u003e16\u003c/sup\u003e\u003c/span\u003e)\u003c/p\u003e\u003cp\u003eAnna and Bruno have to solve \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eQ\u003c/i\u003e\u003c/span\u003e (\u003cspan class\u003d\"tex-span\"\u003e1 ≤ \u003ci\u003eQ\u003c/i\u003e ≤ 60\u003c/span\u003e) queries during a exam. Each query is given by two integers \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eS\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eT\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e (\u003cspan class\u003d\"tex-span\"\u003e0 \u0026lt; \u003ci\u003eS\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e, \u003ci\u003eT\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e \u0026lt; \u003ci\u003eN\u003c/i\u003e, \u003ci\u003eS\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e ≠ \u003ci\u003eT\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e), which means that they have to find the shortest \u0026quot;path\u0026quot; from vertex \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eS\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e to vertex \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eT\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e. It is guaranteed that such path always exists. If there are many possible answers, they can write any of them.\u003c/p\u003e\u003cp\u003eBoth Anna and Bruno are given the whole graph and the description of the queries. (Of course, those are the same) Unfortunately, Bruno has forgotten the weight of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eK\u003c/i\u003e\u003c/span\u003e (\u003cspan class\u003d\"tex-span\"\u003e1 ≤ \u003ci\u003eK\u003c/i\u003e ≤ 5\u003c/span\u003e) distinct edges. (He just forgot the \u0027weight\u0027, not the \u0027whole edge\u0027) Fortunately(?), the start vertex of each queries are all the same. \u003c/p\u003e\u003cp\u003e(Formally, Bruno has forgotten the weight of the \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eU\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e0\u003c/sub\u003e\u003c/span\u003e-th, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eU\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/span\u003e-th, ..., \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eU\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eK\u003c/i\u003e - 1\u003c/sub\u003e\u003c/span\u003e-th edge. So Bruno doesn\u0027t know the values of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eC\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eU\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e0\u003c/sub\u003e\u003c/sub\u003e, \u003ci\u003eC\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eU\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/sub\u003e, ..., \u003ci\u003eC\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eU\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eK\u003c/i\u003e - 1\u003c/sub\u003e\u003c/sub\u003e\u003c/span\u003e. It is guaranteed that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eU\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e0\u003c/sub\u003e\u003c/sub\u003e \u003d \u003ci\u003eA\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eU\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/sub\u003e \u003d ... \u003d \u003ci\u003eA\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eU\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eK\u003c/i\u003e - 1\u003c/sub\u003e\u003c/sub\u003e\u003c/span\u003e.)\u003c/p\u003e\u003cp\u003eBruno told Anna that he had forgotten the weight of some edges and gave Anna \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eU\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e0\u003c/sub\u003e, \u003ci\u003eU\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e, ..., \u003ci\u003eU\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eK\u003c/i\u003e - 1\u003c/sub\u003e\u003c/span\u003e. Anna wanted to tell Bruno the weights, but the exam was going to start, so Anna decided to give information during the test by tapping the desk. By one tap, Anna can send a single bit to Bruno.\u003c/p\u003e\u003cp\u003eIf Anna taps the desk too much, the supervisor will know that they were cheating. So Anna has to give Bruno as least bits as possible. Let the number of such bits \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eL\u003c/i\u003e\u003c/span\u003e. Can you make a strategy for Anna and Bruno? If \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eL\u003c/i\u003e ≤ 64\u003c/span\u003e you can get full score.\u003c/p\u003e \u003chr /\u003e\u003cp\u003eAt first I read this problem, I couldn\u0027t find any solution near 64 bits. But after I introduced this problem to my friends, unbelievably (at least for me), \u003ca class\u003d\"rated-user user-orange\" href\u003d\"/profile/gs12117\" title\u003d\"Master gs12117\"\u003egs12117\u003c/a\u003e found an algorithm that just requires 22 bits!\u003c/p\u003e\u003cp\u003eHis solution is quite simple: For each weight-unknown edge, Anna sends the number of queries whose shortest path passes that edge. With this information, Bruno can find which shortest path(answer for the queries) passes each weight-unknown edge and restore the answer.\u003c/p\u003e\u003cp\u003eHere is the proof below. Because of my poor English skill, I think it is hard to understand. I\u0027m sorry about that.\u003c/p\u003e\u003cp\u003eFor all \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eu\u003c/i\u003e, \u003ci\u003ev\u003c/i\u003e\u003c/span\u003e (\u003cspan class\u003d\"tex-span\"\u003e0 \u0026lt; \u003ci\u003eu\u003c/i\u003e, \u003ci\u003ev\u003c/i\u003e \u0026lt; \u003ci\u003eN\u003c/i\u003e, \u003ci\u003eu\u003c/i\u003e ≠ \u003ci\u003ev\u003c/i\u003e\u003c/span\u003e), the shortest path from vertex \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eu\u003c/i\u003e\u003c/span\u003e to vertex \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e\u003c/span\u003e passes at most one unknown edge. This is because the start vertex of the weight-unknown edges are all the same. If the path passes more than one weight-unknown edge, there must be an positive cycle in that path, and it is obviously not optimal.\u003c/p\u003e\u003cp\u003eFor each query(shortest path) that passes an weight-unknown edge, we define an \u0026quot;benefit\u0026quot; for this (query, weight-unknown edge) pair.\u003c/p\u003e \u003cul\u003e   \u003cli\u003eLet the weight-unknown edge goes from vertex \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003c/span\u003e to vertex \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eq\u003c/i\u003e\u003c/span\u003e.\u003c/li\u003e   \u003cli\u003eLet the query \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003es\u003c/i\u003e, \u003ci\u003et\u003c/i\u003e)\u003c/span\u003e.\u003c/li\u003e   \u003cli\u003eLet \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edist\u003c/i\u003e(\u003ci\u003ea\u003c/i\u003e, \u003ci\u003eb\u003c/i\u003e)\u003c/span\u003e the length of the shortest path from vertex \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/span\u003e to vertex \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/span\u003e. If undefined, it is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003einf\u003c/i\u003e\u003c/span\u003e.\u003c/li\u003e   \u003cli\u003e(benefit) \u003d \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edist\u003c/i\u003e(\u003ci\u003ea\u003c/i\u003e, \u003ci\u003eb\u003c/i\u003e) - \u003ci\u003edist\u003c/i\u003e(\u003ci\u003ea\u003c/i\u003e, \u003ci\u003ep\u003c/i\u003e) - \u003ci\u003edist\u003c/i\u003e(\u003ci\u003eq\u003c/i\u003e, \u003ci\u003eb\u003c/i\u003e)\u003c/span\u003e\u003c/li\u003e \u003c/ul\u003e\u003cp\u003eIf the shortest path passes \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ep\u003c/i\u003e, \u003ci\u003eq\u003c/i\u003e)\u003c/span\u003e, the length of the shortest path decreases by \u0026quot;(the benefit achieved by passing \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ep\u003c/i\u003e, \u003ci\u003eq\u003c/i\u003e)\u003c/span\u003e) — (the length of edge \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ep\u003c/i\u003e, \u003ci\u003eq\u003c/i\u003e)\u003c/span\u003e)\u0026quot;. \u003c/p\u003e\u003cp\u003eLet\u0027s fix the query. (i.e. the source and the sink of the shortest path) If this value is negative for all weight-unknown edges, it is better for the shortest path not to pass any weight-unknown edge. Otherwise, the shortest path must pass the weight-unknown edge which has the maximum benefit.\u003c/p\u003e\u003cp\u003eBruno can calculate the benefit for all (query, weight-unknown edge) pairs, and find the shortest path. For this, Bruno has to maximize the total benefit following the restriction that Anna has given to her. This can be done by solving \u003ca href\u003d\"http://en.wikipedia.org/wiki/Assignment_problem\"\u003ethe assignment problem\u003c/a\u003e. There are many ways to make such matrix. We can use Hungarian method, but because of the low constraints, DP is enough. Now, let\u0027s prove that the result we have found is correct.\u003c/p\u003e\u003cp\u003eTake a look the sum of the total weight of all shortest paths that Bruno calculated for all queries. Let\u0027s denote this sum as \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eS\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/span\u003e. This equals to the sum of,\u003c/p\u003e \u003cul\u003e   \u003cli\u003e(the sum of the total weight of all shortest paths except the weight of the weight-unknown edges)\u003c/li\u003e   \u003cli\u003efor each weight-unknown edge, (the number of queries that passes the edge) \u003cspan class\u003d\"tex-span\"\u003e × \u003c/span\u003e (the length of that edge)\u003c/li\u003e \u003c/ul\u003e\u003cp\u003eLet\u0027s calculate the sum described above with no weight-unknown edges, and say this \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eS\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003c/span\u003e\u003c/p\u003e\u003cp\u003eIf we decrease \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eS\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/span\u003e by (the total benefit achieved by passing the weight-unknown edges) minus the sum of (the number of queries that passes the edge) \u003cspan class\u003d\"tex-span\"\u003e × \u003c/span\u003e (the length of that edge) for each weight-unknown edge, the value becomes \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eS\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003c/span\u003e. \u003c/p\u003e\u003cp\u003eThe increased value is a constant for Bruno because it is a restriction given by Anna. Thus, maximizing the total benefit obeying Anna\u0027s restriction equals to minimizing the sum of the total weight of the shortest paths.\u003c/p\u003e\u003cp\u003eWhat if Bruno\u0027s result is not optimal? It means that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eS\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e \u0026gt; \u003ci\u003eS\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003c/span\u003e. And it also means that (the total benefit calculated by Anna) is bigger than (the total benefit calculated by Bruno), and this is false because Bruno followed the restriction given by Anna. \u003c/p\u003e\u003cp\u003eTherefore we can conclude that Bruno\u0027s result is optimal.\u003c/p\u003e\u003cp\u003eThere are \u003cspan class\u003d\"tex-span\"\u003e\u003csub class\u003d\"lower-index\"\u003e6\u003c/sub\u003e\u003ci\u003eH\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e60\u003c/sub\u003e \u003d 8259888 ≤ 2\u003csup class\u003d\"upper-index\"\u003e23\u003c/sup\u003e - 1\u003c/span\u003e different states, so we can use only 22 bits. If you don\u0027t want to code this part, you can just send the number of queries passing each weight-unknown edge. This costs 30 bits.\u003c/p\u003e\u003cp\u003eThis is the implemention of the solution: \u003ca href\u003d\"http://pastebin.com/nxP21WaW\"\u003eAnna\u003c/a\u003e, \u003ca href\u003d\"http://pastebin.com/6VCFYxs7\"\u003eBruno\u003c/a\u003e Most part is coded by \u003ca class\u003d\"rated-user user-orange\" href\u003d\"/profile/ainta\" title\u003d\"Master ainta\"\u003eainta\u003c/a\u003e.\u003c/p\u003e \u003chr /\u003e\u003cp\u003eHow do you think about this solution? I think it\u0027s brilliant and optimal for this problem, but it is quite hard to implement. I saw the official implementation, and it seemed quite simple, but I can\u0027t get the idea.\u003c/p\u003e \u003cul\u003e   \u003cli\u003eSorry for the confusing title :| If you have a great title, please write in the comments\u003c/li\u003e \u003c/ul\u003e\u003c/div\u003e","tags":["shortest path","joi 2014"]}}