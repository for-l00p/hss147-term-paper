{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1466462026,"rating":230,"authorHandle":"Enchom","modificationTimeSeconds":1466462026,"id":45562,"title":"\u003cp\u003eDoubt about CodeChef solution\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHello everybody,\u003c/p\u003e\u003cp\u003eAs most of you know recently the June long challenge in CodeChef finished and I want to bring attention to one specific problem — \u003ca href\u003d\"https://www.codechef.com/problems/FRJUMP\"\u003eChef and cities\u003c/a\u003e. Roughly the part of the solution that is difficult to come up with can be summarised as:\u003c/p\u003e\u003cp\u003e\u0026quot;You have an array of N integers and you have two types of queries — update some integer or ask about the first digit of the product of all numbers.\u0026quot; (The original problem has more details but they are solved trivially)\u003c/p\u003e\u003cp\u003eI was eager to see some real solution (unlike cheats with double values) so I checked the \u003ca href\u003d\"https://discuss.codechef.com/questions/82125/frjump-editorial\"\u003eauthor solution\u003c/a\u003e and to my surprise it did something very simple — it calculated the log of the product and used it to find the first digit.\u003c/p\u003e\u003cp\u003eNow this is okay in theory, it is okay in mathematics — but my first thought was \u0027what about precision?\u0027. Surely if you have some tricky number then you might get some precision error and since you\u0027re looking simply for the first digit — there\u0027s not relative error allowed. So I quickly came up with the following test:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e9\n3 3 11 41 101 271 3541 9091 27961\n1\n2 1\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eYou can confirm yourself that :\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e3*3*11*41*101*271*3541*9091*27961 \u003d 99999999999999999999\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eAnd unless I\u0027ve missed something crucial it seems that it\u0027s a valid test. However all three solutions provided by the author in his analysis (\u0027Setter\u0027, \u0027Tester\u0027, \u0027Editorialist\u0027) would print 1 as a first digit, just as my cheaty solution with double values does.\u003c/p\u003e\u003cp\u003eThis test is incredibly small given the constraints. You have integers with values up to \u003cspan class\u003d\"tex-span\"\u003e10\u003csup class\u003d\"upper-index\"\u003e9\u003c/sup\u003e\u003c/span\u003e and up to \u003cspan class\u003d\"tex-span\"\u003e10\u003csup class\u003d\"upper-index\"\u003e5\u003c/sup\u003e\u003c/span\u003e of them. This allows the product to contain thousands and thousands of digits, making me seriously doubt \u003cstrong\u003eany\u003c/strong\u003e solution based on floating point numbers.\u003c/p\u003e\u003cp\u003eI was wondering if a proper solution even exists at all? Am I overlooking some constraint or just missing something or is the author solution plain wrong?\u003c/p\u003e\u003c/div\u003e","tags":["codechef","june challenge","frjump","chef and cities"]}}