{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1425253776,"rating":3,"authorHandle":"marius135","modificationTimeSeconds":1425253776,"id":16715,"title":"\u003cp\u003eSegment tree or binary indexed tree for binary array ?\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eI am interested in knowing if there is a data structure that can offer better than O(log n) average complexity and offers the following 2 operations:\u003c/p\u003e\u003cp\u003eIncrement x-\u0026gt; V[x] \u003d 1 (all elements are initially 0) Query (1-\u0026gt;y) all query are 1 based...\u003c/p\u003e\u003cp\u003eI know I will have O(n) increases and O(n) queries and want better than O(n log n) total time...\u003c/p\u003e\u003c/div\u003e","tags":["binary indexed tree","segment tree","advanced data structure"]}}