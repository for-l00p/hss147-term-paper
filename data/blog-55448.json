{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1509119912,"rating":2,"authorHandle":"bradyawn","modificationTimeSeconds":1509119912,"id":55448,"title":"\u003cp\u003eHow to speed up Prim\u0027s Algorithm?\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eMy implementation of Prim\u0027s is really slow.\u003c/p\u003e\u003cp\u003eSo I searched up a fast way to do Prim\u0027s algorithm on geeksforgeeks.com, it is here: \u003ca href\u003d\"http://www.geeksforgeeks.org/greedy-algorithms-set-5-prims-minimum-spanning-tree-mst-2/\"\u003ehttp://www.geeksforgeeks.org/greedy-algorithms-set-5-prims-minimum-spanning-tree-mst-2/\u003c/a\u003e It is O(V^2). It uses two disjoint sets and finds the minimum edges between them with an adjacency matrix.\u003c/p\u003e\u003cp\u003eBut the website has a faster way: \u003ca href\u003d\"http://www.geeksforgeeks.org/greedy-algorithms-set-5-prims-mst-for-adjacency-list-representation/\"\u003ehttp://www.geeksforgeeks.org/greedy-algorithms-set-5-prims-mst-for-adjacency-list-representation/\u003c/a\u003e It is O(ElogV). It uses an adjacency list and a priority_queue to speed up Prim\u0027s.\u003c/p\u003e\u003cp\u003eI understand the concept of Prim\u0027s, but my implementation is really \u003cstrong\u003eslow\u003c/strong\u003e.\u003c/p\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003ePrim\u0027s in O(V^3)\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"https://pastebin.com/gQ72V5xL\"\u003ehttps://pastebin.com/gQ72V5xL\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003cp\u003eIt is O(V^3).\u003c/p\u003e\u003cp\u003eHere is the problem it applies to (very straight forward): \u003ca href\u003d\"http://www.spoj.com/problems/MST/\"\u003ehttp://www.spoj.com/problems/MST/\u003c/a\u003e â€” I got AC my but my algorithm is very slow\u003c/p\u003e\u003cp\u003eHow can I improve this implementation?\u003c/p\u003e\u003c/div\u003e","tags":["prims","minimum spanning tree","help"]}}