{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1519058688,"rating":11,"authorHandle":"WuHongxun","modificationTimeSeconds":1519060014,"id":57885,"title":"\u003cp\u003eDoubt About 98E \u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eRecently I gave a second thought on the solution of 98E and got confused about some technical detail. It occurs to me that there may be something wrong with the problem.\u003c/p\u003e\u003cp\u003eIn the \u003ca href\u003d\"//codeforces.com/blog/entry/2323\"\u003eeditorial\u003c/a\u003e, it claims that the expected utility for \u0026quot;bluffing and move on\u0026quot; should be 1-P(n,m-1) and the reason was \u0026quot;In the same manner we fill other cells of the matrix.\u0026quot;. Obviously not a compelling reason. \u003c/p\u003e\u003cp\u003eI guess the writer\u0027s proof was something like this: Since the opponent chooses to move on. It must lose when I\u0027m not bluffing. So it chooses to behave optimally in the case that I am bluffing which is equivalent to the case that I showed and discarded this card.\u003c/p\u003e\u003cp\u003eThe problem is that they are actually not equivalent because I did not discard that card. Since f[n][m] may not coincide with 1 — f[m][n], I can bluff about this card even though the opponent knows I\u0027m bluffing. I waste a step and change the state to 1 — f[m][n] instead, and I may actually benefit from it. The cards known by the opponent but not discarded matters!\u003c/p\u003e\u003cp\u003eSo now the claim made in the editorial seems quite suspicious. I\u0027m looking forward to a clear and intuitive explanation. Any idea ? \u003c/p\u003e\u003c/div\u003e","tags":[]}}