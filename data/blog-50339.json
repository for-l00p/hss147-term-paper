{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1486700062,"rating":-5,"authorHandle":"IkramulMurad","modificationTimeSeconds":1486700062,"id":50339,"title":"\u003cp\u003eMemory Limit Exceed on Dijkstra\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHi, I was solving problem \u0026quot;20C â€” Dijkstra?\u0026quot;. At first, I implemented through priority_queue. I got verdict \u0026quot;memory limit exceeded on test 31\u0026quot;. I then realised that, if a single node relaxed more than once, priority_queue enqueue the node more than once. This may be the cause of memory limit exceed.\u003c/p\u003e\u003cp\u003eThen I have designed another algorithm with c++ std::set. I kept all the pair of cost and node number in that set. Then whenever a node to be relaxed, I firstly erase that node from the set, then update the node cost and insert to the set again. I believe this algorithm needs O(n) memory. Because there at most n pairs in the set. But I got verdict \u0026quot;memory limit exceeded on test 31\u0026quot; again. I don\u0027t know how it takes more memory or which test cases make it inefficient.\u003c/p\u003e\u003cp\u003eMy implementation: \u003ca href\u003d\"http://ideone.com/2vNqOS\"\u003ehttp://ideone.com/2vNqOS\u003c/a\u003e\u003c/p\u003e\u003cp\u003eThis is my first post. Thanks in advance. :)\u003c/p\u003e\u003c/div\u003e","tags":["dijkstra","shortest path","memory limit"]}}