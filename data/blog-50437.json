{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1487140851,"rating":13,"authorHandle":"haleyk100198","modificationTimeSeconds":1487140927,"id":50437,"title":"\u003cp\u003eA problem about trees\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eRecently I have came across thinking about this question, and this is the formal version of the problem:\u003c/p\u003e\u003cp\u003eGiven a tree, with some of the nodes labelled with a group number. If we start from the root of the tree, what is the minimum amount of edge that we have to come across to visit at least one node from each group? In case if you are traversing an edge more than once, it must be counted multiplely.\u003c/p\u003e\u003cp\u003eFor a better understanding, this is the scenario that I have came acrossed IRL. During a physics experiment related to centripetal force, I have to place a different amount of mass (which is guaranteed to be a combination of some weight provided by the lab, but the combination is not guaranteed to be unique) in order to test the relation between mass and force. Since I am a clumsy person and adjusting the amount of mass may affect the radius of the circular motion and induce more errors to the experiment result, I want to reduce the amount of times that I have to replace the weights to minimize the error while still able to get all required combination of mass for my lab report. In particular, the mass holder holds mass in a stack style, so I can\u0027t just reach a state and then just jump back to the root state.\u003c/p\u003e\u003cp\u003eI know this problem could be solved by bitmask dp, but the exponential time complexity is rather disgusting, so I am thinking if using tree algorithms could help improve it (Though generating the tree also has a poor time complexity â€” but at least now solving how to reach at least one node from each group sounds engaging and useful). I\u0027ve been thinking about LCA but it doesn\u0027t seem to get too much better. Would someone share some thoughts on how to solve the problem in a \u0026quot;faster\u0026quot; way? \u003c/p\u003e\u003cp\u003eI am also thinking about variations about this question such as not requiring to go back the root node (heck, I will just leave the mass on the holder for the lab workers to pack them), or starting from an arbitary root node (The last group may just be as lazy as me and decides to leave the mass on the holder, but now I am just considering that I am starting with the zero state). In case if someone solved the original version of the problem in polynomial time complexity, I would also like to learn how to solve the problem for these variations of the problem.\u003c/p\u003e\u003c/div\u003e","tags":["randomthoughts","tree","dp"]}}