{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1474336189,"rating":20,"authorHandle":"minimario","modificationTimeSeconds":1474406962,"id":47222,"title":"\u003cp\u003eFare and Balanced: WA :\u0027( \u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHi Guys!\u003c/p\u003e\u003cp\u003eI\u0027m back, with another problem! \u003ca href\u003d\"https://icpcarchive.ecs.baylor.edu/index.php?option\u003dcom_onlinejudge\u0026amp;Itemid\u003d8\u0026amp;category\u003d43\u0026amp;page\u003dshow_problem\u0026amp;problem\u003d2450\"\u003eLink!\u003c/a\u003e I have tried to debug for 3 days now to no avail :\u0027( ... so I\u0027d be a really happy if some of you could help :D\u003c/p\u003e\u003cp\u003eAnyways, on to the algo:\u003c/p\u003e\u003cp\u003eI first toposorted the data, and maintained 2 DPs: \u003c/p\u003e \u003cpre\u003e\u003ccode\u003edp[i][0] \u003d minimum length to make all paths from topo[i] to topo[n] the same length without any tolls (on any path)\ndp[i][1] \u003d minimum length to make all paths from topo[i] to topo[n] the same length with at most 1 toll (on some path)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eSo the transition seems something like this:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003edp[i][0] \u003d dp[j][0] if all the d(i, j) + dp[j][0] are the same (j is a child of i)\ndp[i][0] \u003d MAX otherwise (impossible)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eNow, for dp[i][1], let\u0027s consider j\u0027s that are children of i. For some j, if dp[j][0] is not MAX (it\u0027s possible to do), then let\u0027s add (dp[j][0], 0) to a vector. Otherwise, if dp[j][1] is not MAX, let\u0027s add (dp[j][1], 1). Now, let\u0027s sort the vector and find the maximum dp value. This represents the final length of the road. But for the other values, if the dp value is less than the final length and it came from a dp[some][1], then we stop, and dp[i][1] \u003d INF. Else, dp[i][1] \u003d the max dp value.\u003c/p\u003e\u003cp\u003eI have the code here, but it\u0027s wrong:\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://ideone.com/gNvux3\"\u003eCode\u003c/a\u003e\u003c/p\u003e\u003cp\u003eI am aware that if there is a solution, the overall price for each path will be the longest path from start to end in the graph. I used this to try to debug, but it didn\u0027t help.\u003c/p\u003e\u003cp\u003eI have some test cases \u003ca href\u003d\"https://www.dropbox.com/sh/z14ynqnmfw1uh3a/AABC9WwqxmIc07_J5C6Hr3l5a?dl\u003d0\"\u003ehere\u003c/a\u003e, but the ones that fail are really big. (Also, I just completely ignored the \u0026quot;printing fares\u0026quot; part, because my calculation of the final path length is incorrect for many cases)\u003c/p\u003e\u003c/div\u003e","tags":["topo sort","icpc","debugging","wa luvs me"]}}