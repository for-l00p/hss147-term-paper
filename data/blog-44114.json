{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1459420016,"rating":-30,"authorHandle":"Farnan.PUST","modificationTimeSeconds":1459438627,"id":44114,"title":"\u003cp\u003eস্ট্রিং এর সাবস্ট্রিং বের করার ক্ষেত্রে জটিলতা (Complexity between Naive approach \u0026amp; KMP algorithm for searching substring from a string)\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eKnuth–Morris–Pratt(KMP) algorithm এর searching approach, নরমাল naive approach এর থেকে আলাদা।\u003c/p\u003e\u003cp\u003eTime Complixity: Naive approach O(m*n) KMP এর O(m+n)\u003c/p\u003e\u003cp\u003eস্বাভাবিক ভাবেই KMP algo ভাল ।\u003c/p\u003e\u003cp\u003eএকটা জিনিষ ভোগাচ্ছিল, C++ এর string searching কি naive approach ব্যাবহার করে,নাকি KMP অথবা আরো ভাল কোন algo ব্যাবহার করে? শেষে পেলাম, \u0026quot;In essence if you\u0027re just looking for a substring, there is no reason to implement something like KMP because the library version will be roughly as fast as yours.\u0026quot;\u003c/p\u003e\u003cp\u003eলিঙ্ক: \u003ca\u003ehttp://old.blog.phusion.nl/…/06/efficient-substring-search…/\u003c/a\u003e\u003c/p\u003e\u003cp\u003eবুজলাম যে,string টা খুব একটা বড় না হলে , সাধারণ C++:string:find() ব্যাবহার করাই ভাল।তবে Time Complexity এর খেলা শুরু হলে naive approach আর কার্যকরী নয়, KMP এর মত algo লাগবেই।\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://en.wikipedia.org/wiki/Knuth%E2%80%93Morris%E2%80%93Pratt_algorithm\"\u003ehttps://en.wikipedia.org/wiki/Knuth%E2%80%93Morris%E2%80%93Pratt_algorithm\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e","tags":[]}}