{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1488594632,"rating":28,"authorHandle":"marlonbymendes","modificationTimeSeconds":1488594663,"id":50797,"title":"\u003cp\u003eWhy do we add the least significant bit while updating some index in Fenwick trees?\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eSeveral guides explain how Fenwick trees (BIT) work (and they do it pretty well), but I don\u0027t see any intuition or proof on it\u0027s correctness, specially the update operation. I\u0027ve used BIT before and I know \u0026quot;how\u0026quot; it works, but not \u0026quot;why\u0026quot; the update operation works.\u003c/p\u003e\u003cp\u003eHere\u0027s the usual update code, taken from Topcoder\u0027s tutorial.\u003c/p\u003e \u003cpre\u003e\u003ccode\u003evoid update(int idx ,int val){\n    while (idx \u0026lt;\u003d MaxVal){\n        tree[idx] +\u003d val;\n        idx +\u003d (idx \u0026amp; -idx);\n    }\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003ePopular guides on BIT (don\u0027t actually answer the \u0026quot;why\u0026quot; question):\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.topcoder.com/community/data-science/data-science-tutorials/binary-indexed-trees/\"\u003eTopcoder\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.geeksforgeeks.org/binary-indexed-tree-or-fenwick-tree-2/\"\u003eGeeksForGeeks\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.youtube.com/watch?v\u003dCWDQJGaN1gY\u0026amp;t\u003d1107s\"\u003eTushar Roy\u0027s video\u003c/a\u003e\u003c/p\u003e\u003cp\u003eAlso, \u003ca class\u003d\"rated-user user-orange\" href\u003d\"/profile/pllk\" title\u003d\"International master pllk\"\u003epllk\u003c/a\u003e recent book, page 86. \u003ca href\u003d\"https://cses.fi/book.pdf\"\u003eLink\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e","tags":[]}}