{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1500749195,"rating":26,"authorHandle":"haleyk100198","modificationTimeSeconds":1500775575,"id":53436,"title":"\u003cp\u003eIs it possible to trim FFT processed term without inversing it?\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003ch2\u003eProblem\u003c/h2\u003e\u003cp\u003eGiven (x+a1) * (x+a2) * (x+a3) * ... * (x+an), find the coefficient of the term x^k.\u003c/p\u003e\u003cp\u003eIn the case of n, k \u0026lt;\u003d 10^5, one way to approach the problem is to use FFT to convolute the terms layer by layer, by eventually raising the maximum power of the terms. (i.e. evaluate the terms grouped in two, four, eight etc. terms) The time complexity of this approach is around O(N*log^2(N)).\u003c/p\u003e\u003cp\u003eIn another case where k \u0026lt;\u0026lt; n, where k is way smaller than n, or in this case of: (a1*x^k + a2* x^(k-1) + .... + ak) * (b1*x^k + .... + bk) * (c1*x^k + ... + ck) * ..... (n polymials of x^k)\u003c/p\u003e\u003cp\u003eWhere O((n*k)log^2(n*k)) is on the verge of risking TLE \u003c/p\u003e\u003cp\u003eI wonder if it is possible to trim the terms so that we don\u0027t have to evaluate beyond k \u0026lt;\u003d 2^i terms as if we are convoluting the polynomials with brute force. \u003c/p\u003e\u003cp\u003eAs all the original terms have effect on all values after FFT, I assume that one could not naively extract the least significant 2^i terms from the FFT array, so inverse FFT should be applied before trimming (And O(nlogn) isn\u0027t too expensive anyways). Yet, I would like to know if there exist an approach which works around this step.\u003c/p\u003e \u003chr /\u003e\u003cp\u003eInspired by: \u003ca href\u003d\"https://www.hackerrank.com/challenges/permutation-equations\"\u003ehttps://www.hackerrank.com/challenges/permutation-equations\u003c/a\u003e \u003c/p\u003e\u003cp\u003eThere exists a solution which involves finding the coefficient of (x+n-2) * (x+n-1) * ... (x+2) where k \u0026lt;\u003d 60.\u003c/p\u003e\u003c/div\u003e","tags":["fft"]}}