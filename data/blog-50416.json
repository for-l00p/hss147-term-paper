{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1487022589,"rating":-16,"authorHandle":"saisumit","modificationTimeSeconds":1487022951,"id":50416,"title":"\u003cp\u003eHACKERRANK hour-of-code-round-ii\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHello people , I am stuck at this problem \u003ca href\u003d\"https://www.hackerrank.com/contests/hour-of-code-round-ii/challenges/sitting-arrangements\"\u003eSITTING ARRANGEMENTS\u003c/a\u003e , i read the editorial but couldn\u0027t figure why the solution works, if anyone can provide an explanation/proof for the solution , it would be great. Thanks in advance :) \u003c/p\u003e\u003cp\u003eThis is the author\u0027s solution \u003c/p\u003e \u003cpre\u003e\u003ccode\u003e\u003cbr /\u003e#include\u0026lt;bits/stdc++.h\u0026gt;\nusing namespace std;\ntypedef long long int ll;\nll solve(ll n,ll m)\n{\n    if(n\u003d\u003d0||m\u003d\u003d0)\n        return 0;\n    else if(n%2\u003d\u003d0\u0026amp;\u0026amp;m%2\u003d\u003d0)\n        return solve(n/2,m/2); // Halving both dimensions doesn\u0027t change the number of tiles\n    else if(n%2\u003d\u003d0\u0026amp;\u0026amp;m%2\u003d\u003d1)\n        return (n+solve(n/ 2,m/ 2));// Use a row of 1x1 tiles\n    else if(n%2\u003d\u003d1\u0026amp;\u0026amp;m%2\u003d\u003d0)\n        return (m+solve(n/ 2,m/ 2));// Use a column of 1x1 tiles\n    else\n        return (n+m-1+solve(n/2,m/2)); //ROW OR COLUMN (WHICHEVER OVERLAP)\n}\nint main()\n{\n    ll t;\n    cin\u0026gt;\u0026gt;t;\n    while(t--)\n    {\n        ll n,m,i,j,p,q,r;\n        cin\u0026gt;\u0026gt;n\u0026gt;\u0026gt;m;\n        cout\u0026lt;\u0026lt;solve(n,m)\u0026lt;\u0026lt;endl;\n    }\n}\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":["combinations","maths","recursion"]}}