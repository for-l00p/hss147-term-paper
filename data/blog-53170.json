{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1499482500,"rating":296,"authorHandle":"adamant","modificationTimeSeconds":1499610682,"id":53170,"title":"\u003cp\u003eEasiest HLD with subtree queries\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHi everyone!\u003c/p\u003e\u003cp\u003e\u003cstrong\u003etl;dr.\u003c/strong\u003e If you write the following code:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003evoid dfs_sz(int v \u003d 0)\n{\n    sz[v] \u003d 1;\n    for(auto \u0026amp;u: g[v])\n    {\n        dfs_sz(u);\n        sz[v] +\u003d sz[u];\n        if(sz[u] \u0026gt; sz[g[v][0]])\n            swap(u, g[v][0]);\n    }\n}\n\nvoid dfs_hld(int v \u003d 0)\n{\n    in[v] \u003d t++;\n    rin[in[v]] \u003d v;\n    for(auto u: g[v])\n    {\n        nxt[u] \u003d (u \u003d\u003d g[v][0] ? nxt[v] : u);\n        dfs_hld(u);\n    }\n    out[v] \u003d t;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThen you will have such array that subtree of \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/5e/e7/5ee7dafd39be90b8743ef8b57dbad10343efcd8b.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e correspond to segment \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/f2/87/f2878e2dd0df5809a8fdece0e2ef95455adfb815.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e and the path from \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/5e/e7/5ee7dafd39be90b8743ef8b57dbad10343efcd8b.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e to the last vertex in ascending heavy path from \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/5e/e7/5ee7dafd39be90b8743ef8b57dbad10343efcd8b.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e (which is \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/4a/b9/4ab95ff2dfc070ac5265be16ce9cc4be661015a6.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e) will be \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/f3/38/f338b905601b16302ea626c7472a699d8917c35d.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e subsegment which gives you the opportunity to process queries on pathes and subtrees simultaneously in the same segment tree.\u003c/p\u003e \u003ccenter\u003e\u003cimg src\u003d\"/predownloaded/be/01/be019bbaa15bbf621a0cf018b15e778c02aeb104.jpg\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/center\u003e\u003cp\u003eInspired by \u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/Nobik_Glem\" title\u003d\"Grandmaster Nobik_Glem\"\u003eNobik_Glem\u003c/a\u003e\u0027s \u003ca href\u003d\"//codeforces.com/blog/entry/12239\"\u003earticle\u003c/a\u003e and \u003ca class\u003d\"rated-user user-legendary\" href\u003d\"/profile/Alex_2oo8\" title\u003d\"Legendary grandmaster Alex_2oo8\"\u003e\u003cspan class\u003d\"legendary-user-first-letter\"\u003eA\u003c/span\u003elex_2oo8\u003c/a\u003e\u0027s problem \u003ca href\u003d\"https://www.codechef.com/problems/OAK\"\u003ePersistent Oak\u003c/a\u003e. You can find my solution to this problem \u003ca href\u003d\"https://www.codechef.com/viewsolution/14441608\"\u003ehere\u003c/a\u003e to learn how it can be used to maintain persistent hld over the tree.\u003c/p\u003e\u003c/div\u003e","tags":["hld","euler tour","decomposition","hot lady decomposition"]}}