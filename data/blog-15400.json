{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1419636094,"rating":-5,"authorHandle":"Magikarp","modificationTimeSeconds":1419665532,"id":15400,"title":"\u003cp\u003eUVA 191 Intersection. Getting Wrong Answer.\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHi, please help me figure out where I went wrong.\u003c/p\u003e\u003cp\u003eproblem link: \u003ca href\u003d\"http://uva.onlinejudge.org/index.php?option\u003dcom_onlinejudge\u0026amp;Itemid\u003d8\u0026amp;page\u003dshow_problem\u0026amp;problem\u003d127\"\u003ehttp://uva.onlinejudge.org/index.php?option\u003dcom_onlinejudge\u0026amp;Itemid\u003d8\u0026amp;page\u003dshow_problem\u0026amp;problem\u003d127\u003c/a\u003e\u003c/p\u003e\u003cp\u003emy code: \u003c/p\u003e \u003cpre\u003e\u003ccode\u003e    #include\u0026lt;bits/stdc++.h\u0026gt;\n    using namespace std;\n\n    struct point\n    {\n        int x,y;\n    };\n\n    struct line\n    {\n        point p1,p2;\n    };\n\n    //checks if point q lies on line segment pr.\n    bool onSegment(point p,point q,point r)\n    {\n        if(q.x\u0026lt;\u003dmax(p.x,r.x) \u0026amp;\u0026amp; q.x\u0026gt;\u003dmin(p.x,r.x) \u0026amp;\u0026amp; q.y\u0026lt;\u003dmax(p.y,r.y) \u0026amp;\u0026amp; q.y\u0026gt;\u003dmin(p.y,r.y))\n        {\n            //cout\u0026lt;\u0026lt;p.x\u0026lt;\u0026lt;\u0026quot;,\u0026quot;\u0026lt;\u0026lt;p.y\u0026lt;\u0026lt;\u0026quot; \u0026quot;\u0026lt;\u0026lt;q.x\u0026lt;\u0026lt;\u0026quot;,\u0026quot;\u0026lt;\u0026lt;q.y\u0026lt;\u0026lt;\u0026quot; \u0026quot;\u0026lt;\u0026lt;r.x\u0026lt;\u0026lt;\u0026quot;,\u0026quot;\u0026lt;\u0026lt;r.y\u0026lt;\u0026lt;\u0026quot; lolololol\u0026quot;\u0026lt;\u0026lt;endl;\n            return true;\n        }\n\n        return false;\n    }\n\n    int turn(point p,point q,point r)\n    {\n        int result\u003d(r.x-q.x)*(p.y-q.y)-(r.y-q.y)*(p.x-q.x);\n        if(result\u0026lt;0)return -1;//right\n        if(result\u0026gt;0)return 1;//left\n        return 0;//collinear\n    }\n\n    bool ccw(point p,point q,point r)\n    {\n       // cout\u0026lt;\u0026lt;\u0026quot;check \u0026quot;\u0026lt;\u0026lt;p.x\u0026lt;\u0026lt;\u0026quot;,\u0026quot;\u0026lt;\u0026lt;p.y\u0026lt;\u0026lt;\u0026quot; \u0026quot;\u0026lt;\u0026lt;q.x\u0026lt;\u0026lt;\u0026quot;,\u0026quot;\u0026lt;\u0026lt;q.y\u0026lt;\u0026lt;\u0026quot; \u0026quot;\u0026lt;\u0026lt;r.x\u0026lt;\u0026lt;\u0026quot;,\u0026quot;\u0026lt;\u0026lt;r.y\u0026lt;\u0026lt;\u0026quot;--\u0026gt; \u0026quot;\u0026lt;\u0026lt;turn(p,q,r)\u0026lt;\u0026lt;endl;\n        return turn(p,q,r) ;\n    }\n\n    bool intersection(line line1,line line2)\n    {\n        int o1\u003dccw(line1.p1,line1.p2,line2.p1);\n        int o2\u003dccw(line1.p1,line1.p2,line2.p2);\n        int o3\u003dccw(line2.p1,line2.p2,line1.p1);\n        int o4\u003dccw(line2.p1,line2.p2,line1.p2);\n        if( o1 !\u003d o2 \u0026amp;\u0026amp; o3 !\u003d o4)\n            return 1;\n        //special cases\n        if(o1\u003d\u003d0 \u0026amp;\u0026amp; onSegment(line1.p1,line2.p1,line1.p2))\n            return true;\n        if(o2\u003d\u003d0 \u0026amp;\u0026amp; onSegment(line1.p1,line2.p2,line1.p2))\n            return true;\n        if(o3\u003d\u003d0 \u0026amp;\u0026amp; onSegment(line2.p1,line1.p1,line2.p2))\n            return true;\n        if(o4\u003d\u003d0 \u0026amp;\u0026amp; onSegment(line2.p1,line1.p2,line2.p2))\n            return true;\n\n        return false;\n    }\n\n    int main()\n    {\n\n        int n;\n        cin\u0026gt;\u0026gt;n;\n        while(n--)\n        {\n\n            point pp1,pp2,pp3,pp4,pp5,pp6;\n\n            cin\u0026gt;\u0026gt; pp5.x \u0026gt;\u0026gt;pp5.y \u0026gt;\u0026gt;pp6.x \u0026gt;\u0026gt;pp6.y;\n            cin\u0026gt;\u0026gt;pp1.x\u0026gt;\u0026gt;pp1.y\u0026gt;\u0026gt;pp3.x\u0026gt;\u0026gt;pp3.y;\n\n            if(pp1.x\u0026gt;pp3.x)\n            {\n                pp1.x^\u003dpp3.x^\u003dpp1.x^\u003dpp3.x;\n            }\n            if(pp1.y\u0026lt;pp3.y)\n            {\n                pp1.y^\u003dpp3.y^\u003dpp1.y^\u003dpp3.y;\n            }\n\n            if(pp5.x\u0026gt;\u003dpp1.x \u0026amp;\u0026amp; pp5.x\u0026lt;\u003d pp3.x \u0026amp;\u0026amp; pp5.y\u0026gt;\u003dpp3.y \u0026amp;\u0026amp; pp5.y \u0026lt;\u003dpp1.y)\n            {\n                cout\u0026lt;\u0026lt;\u0026quot;T\u0026quot;\u0026lt;\u0026lt;endl;continue;\n            }\n\n\n            pp2.x\u003dpp1.x;\n            pp2.y\u003dpp3.y;\n            pp4.x\u003dpp3.x;\n            pp4.y\u003dpp1.y;\n\n\n            line l1,l2,l3,l4,l5;\n\n            l1.p1\u003dpp1;            l1.p2\u003dpp2;\n\n            l2.p1\u003dpp2;            l2.p2\u003dpp3;\n\n            l3.p1\u003dpp3;            l3.p2\u003dpp4;\n\n            l4.p1\u003dpp4;            l4.p2\u003dpp1;\n\n            l5.p1\u003dpp5;            l5.p2\u003dpp6;\n\n\n            int result\u003dintersection(l5,l1);\n            if(result)\n            {\n                cout\u0026lt;\u0026lt;\u0026quot;T\u0026quot;\u0026lt;\u0026lt;endl;\n                continue;\n            }\n            result\u003dintersection(l5,l2);\n            if(result)\n            {\n                cout\u0026lt;\u0026lt;\u0026quot;T\u0026quot;\u0026lt;\u0026lt;endl;\n                continue;\n            }\n            result\u003dintersection(l5,l3);\n            if(result)\n            {\n                cout\u0026lt;\u0026lt;\u0026quot;T\u0026quot;\u0026lt;\u0026lt;endl;\n                continue;\n            }\n            result\u003dintersection(l5,l4);\n            if(result)\n            {\n                cout\u0026lt;\u0026lt;\u0026quot;T\u0026quot;\u0026lt;\u0026lt;endl;\n                continue;\n            }\n\n            cout\u0026lt;\u0026lt;\u0026quot;F\u0026quot;\u0026lt;\u0026lt;endl;\n\n        }\n        return 0;\n    }\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":["geometry","uva","wrong answer"]}}