{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1502764819,"rating":3,"authorHandle":"comtalyst.","modificationTimeSeconds":1502796481,"id":53856,"title":"\u003cp\u003e[Solved] Is there any faster way to solve Graph Realization problem?\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eProblem statement : Given a degree sequence \u003cstrong\u003eD\u003c/strong\u003e. Can we create a simple graph (graph without self loops and parallel edges) from \u003cstrong\u003eD\u003c/strong\u003e?\u003c/p\u003e\u003cp\u003eThis is a classical problem that can be solved by using \u003ca\u003eHavel-Hakimi\u003c/a\u003e algorithm or \u003ca\u003eErdős–Gallai theorem\u003c/a\u003e. Both of them have time complexity O(n^2). But I have found a task with N \u0026lt;\u003d 100000 which is incompatible with O(n^2) algorithms. Is there any faster method to solve this?\u003c/p\u003e\u003cp\u003e(Edited) There are no any special conditions in this task\u003c/p\u003e\u003cp\u003e(Edited) \u003cstrong\u003eSolved!!\u003c/strong\u003e Optimize Erdős-Gallai Algorithm by using binary search to find \u003cstrong\u003emin(di,k)\u003c/strong\u003e of each k efficiently. New time complexity is O(n log n). Thanks \u003ca class\u003d\"rated-user user-orange\" href\u003d\"/profile/gainullin.ildar\" title\u003d\"Международный мастер gainullin.ildar\"\u003egainullin.ildar\u003c/a\u003e and \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/rekt_n00b\" title\u003d\"Кандидат в мастера rekt_n00b\"\u003erekt_n00b\u003c/a\u003e for this idea!\u003c/p\u003e\u003cp\u003eLink for Erdős-Gallai algorithm : \u003ca\u003ehttps://en.wikipedia.org/wiki/Erdős–Gallai_theorem\u003c/a\u003e\u003c/p\u003e\u003cp\u003eThanks everyone for replying.\u003c/p\u003e\u003c/div\u003e","tags":["graphs","graph theory","classical problems"]}}