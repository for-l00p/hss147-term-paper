{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":true,"creationTimeSeconds":1507738231,"rating":0,"authorHandle":"niyaznigmatul","modificationTimeSeconds":1507738231,"id":55135,"title":"\u003cp\u003eКусочек кода с первой лекции по C++\u003c/p\u003e","locale":"ru","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cpre\u003e\u003ccode\u003e#include \u0026lt;iostream\u0026gt;\n#include \u0026lt;algorithm\u0026gt;\n#include \u0026lt;vector\u0026gt;\n\nusing namespace std;\n\nstruct student {\n\tint age;\n\tint height;\n};\n\nint age_of_max_height(student a, student b) {\n\tif (a.height \u0026gt; b.height) {\n\t\treturn a.age;\n\t} else {\n\t\treturn b.age;\n\t}\n}\n\nbool operator\u0026lt;(student a, student b) {\n\treturn a.height \u0026lt; b.height;\n}\n\n/*bool compare_by_height(student a, student b) {\n\treturn a.height \u0026lt; b.height;\n}*/\n\nvoid add_age(vector\u0026lt;student\u0026gt; \u0026amp;a) {\n\tfor (unsigned int i \u003d 0; i \u0026lt; a.size(); i++) {\n//\t\tcout \u0026lt;\u0026lt; i \u0026lt;\u0026lt; endl;\n\t\ta[i].age++;\n\t}\n}\n\nvoid foo(int \u0026amp;x) {\n\tcout \u0026lt;\u0026lt; \u0026quot;x \u003d \u0026quot; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl;\n}\n\nint main() {\n\tint n;\n\tcin \u0026gt;\u0026gt; n;\n\tvector\u0026lt;student\u0026gt; s(n);\n\tfor (int i \u003d 0; i \u0026lt; n; i++) {\n\t\tint x, y;\n\t\tcin \u0026gt;\u0026gt; x \u0026gt;\u0026gt; y;\n\t\ts[i] \u003d {x, y}; // C++11, x -- age, y -- height\n\t}\n\tsort(s.begin(), s.end());\n\tadd_age(s);\n\tfor (int i \u003d 0; i \u0026lt; n; i++) {\n\t\tcout \u0026lt;\u0026lt; s[i].age \u0026lt;\u0026lt; \u0027 \u0027 \u0026lt;\u0026lt; s[i].height \u0026lt;\u0026lt; \u0027\\n\u0027;\n\t}\n\tstudent f \u003d min(s[0], s[1]);\n\tcout \u0026lt;\u0026lt; \u0026quot;f \u003d (\u0026quot; \u0026lt;\u0026lt; f.age \u0026lt;\u0026lt; \u0026quot;, \u0026quot; \u0026lt;\u0026lt; f.height \u0026lt;\u0026lt; \u0026quot;)\\n\u0026quot;;\n//\tcout \u0026lt;\u0026lt; \u0026quot;asd \u0026quot; \u0026lt;\u0026lt; age_of_max_height(s[0], s[1]) \u0026lt;\u0026lt; \u0027\\n\u0027;*/\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":[]}}