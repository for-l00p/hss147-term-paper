{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1472718153,"rating":65,"authorHandle":"VastoLorde95","modificationTimeSeconds":1475653869,"id":46881,"title":"\u003cp\u003e[Unofficial] Editorial — Google APAC 2017 Round B\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003ch1\u003e\u003ca href\u003d\"https://code.google.com/codejam/contest/5254487/dashboard\"\u003eProblem A. Sherlock and Parentheses\u003c/a\u003e\u003c/h1\u003e\u003cp\u003e\u003cstrong\u003eCategory\u003c/strong\u003e: Ad-Hoc, Math, Greedy\u003c/p\u003e\u003cp\u003eLet\u0027s define \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e \u003d \u003ci\u003emin\u003c/i\u003e(\u003ci\u003eL\u003c/i\u003e, \u003ci\u003eR\u003c/i\u003e)\u003c/span\u003e. Then the claim is that the sequence \u003cspan class\u003d\"tex-span\"\u003e()()...()\u003c/span\u003e consisting of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e pairs of \u0026quot;\u003cspan class\u003d\"tex-span\"\u003e()\u003c/span\u003e\u0026quot; will give us the maximum answer \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/ca/e7/cae733ffb175a11a18505d0994baf46e729369db.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eProof\u003c/strong\u003e:\u003c/p\u003e\u003cp\u003eLet\u0027s look at some sequence \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eT\u003c/i\u003e \u003d (\u003ci\u003eS\u003c/i\u003e)\u003c/span\u003e where \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eS\u003c/i\u003e\u003c/span\u003e is also a balanced parenthesis sequence of length \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/span\u003e. Let\u0027s denote by \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eX\u003c/i\u003e(\u003ci\u003eS\u003c/i\u003e)\u003c/span\u003e, the number of sub-strings of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eS\u003c/i\u003e\u003c/span\u003e that are also balanced and by \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eX\u003c/i\u003e\u0027(\u003ci\u003eS\u003c/i\u003e)\u003c/span\u003e the number of balanced parenthesis sub-strings that include the first and last characters of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eS\u003c/i\u003e\u003c/span\u003e (In fact this will be just 1). Then \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eX\u003c/i\u003e(\u003ci\u003eT\u003c/i\u003e) \u003d \u003ci\u003eX\u003c/i\u003e(\u003ci\u003eS\u003c/i\u003e) + \u003ci\u003eX\u003c/i\u003e\u0027(\u003ci\u003eS\u003c/i\u003e)\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eIt should be easy to prove that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eX\u003c/i\u003e\u0027(\u003ci\u003eS\u003c/i\u003e) ≤ \u003ci\u003eX\u003c/i\u003e(\u003ci\u003eS\u003c/i\u003e)\u003c/span\u003e (simply because \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eX\u003c/i\u003e\u0027(\u003ci\u003eS\u003c/i\u003e)\u003c/span\u003e is a constrained version of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eX\u003c/i\u003e(\u003ci\u003eS\u003c/i\u003e)\u003c/span\u003e)\u003c/p\u003e\u003cp\u003eIf we rearrange our sequence \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eT\u003c/i\u003e\u003c/span\u003e to make another sequence \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eT\u003c/i\u003e\u0027 \u003d \u0026quot;\u003ci\u003eS\u003c/i\u003e()\u0026quot;\u003c/span\u003e, then \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eX\u003c/i\u003e(\u003ci\u003eT\u003c/i\u003e\u0027) ≥ \u003ci\u003eX\u003c/i\u003e(\u003ci\u003eS\u003c/i\u003e) + \u003ci\u003eX\u003c/i\u003e\u0027(\u003ci\u003eS\u003c/i\u003e)\u003c/span\u003e. The greater than equal to sign comes because we might have balanced sub-strings consisting of a suffix of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eS\u003c/i\u003e\u003c/span\u003e and the final pair of brackets.\u003c/p\u003e\u003cp\u003eThus, we have that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eX\u003c/i\u003e(\u003ci\u003eT\u003c/i\u003e\u0027) ≥ \u003ci\u003eX\u003c/i\u003e(\u003ci\u003eS\u003c/i\u003e) + \u003ci\u003eX\u003c/i\u003e\u0027(\u003ci\u003eS\u003c/i\u003e) \u003d \u003ci\u003eX\u003c/i\u003e(\u003ci\u003eT\u003c/i\u003e)\u003c/span\u003e. Thus by rearranging the sequence in this manner, we will never perform worse. If we keep applying this operation on each string, we will finally end up with a sequence of the form \u003cspan class\u003d\"tex-span\"\u003e()()...()\u003c/span\u003e possibly followed by non-zero number of \u003cspan class\u003d\"tex-span\"\u003e(\u003c/span\u003e or \u003cspan class\u003d\"tex-span\"\u003e)\u003c/span\u003e\u003c/p\u003e\u003ch1\u003e\u003ca href\u003d\"https://code.google.com/codejam/contest/5254487/dashboard#s\u003dp1\"\u003eProblem B. Sherlock and Watson Gym Secrets\u003c/a\u003e\u003c/h1\u003e\u003cp\u003e\u003cstrong\u003eCategory\u003c/strong\u003e: Math, DP\u003c/p\u003e\u003cp\u003eLet\u0027s look at all valid pairs \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ei\u003c/i\u003e, \u003ci\u003ej\u003c/i\u003e)\u003c/span\u003e in which \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e is fixed. Then, if \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/sup\u003e \u003ci\u003emod\u003c/i\u003e \u003ci\u003ek\u003c/i\u003e \u003d \u003ci\u003er\u003c/i\u003e\u003c/span\u003e then \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/sup\u003e \u003ci\u003emod\u003c/i\u003e \u003ci\u003ek\u003c/i\u003e \u003d (\u003ci\u003ek\u003c/i\u003e - \u003ci\u003er\u003c/i\u003e) \u003ci\u003emod\u003c/i\u003e \u003ci\u003ek\u003c/i\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eThere are only \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e possible values of the remainder after division. Since \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e is small enough, if we can quickly determine how many numbers \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e exist such that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/sup\u003e \u003ci\u003emod\u003c/i\u003e \u003ci\u003ek\u003c/i\u003e \u003d \u003ci\u003er\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/sup\u003e \u003ci\u003emod\u003c/i\u003e \u003ci\u003ek\u003c/i\u003e \u003d (\u003ci\u003ek\u003c/i\u003e - \u003ci\u003er\u003c/i\u003e) \u003ci\u003emod\u003c/i\u003e \u003ci\u003ek\u003c/i\u003e\u003c/span\u003e then we can simply multiply these quantities and get our answer. Thus the reduced problem statement is —\u003c/p\u003e\u003cp\u003eFind the number of numbers \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e ≤ \u003ci\u003eN\u003c/i\u003e\u003c/span\u003e such that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/sup\u003e \u003ci\u003emod\u003c/i\u003e \u003ci\u003ek\u003c/i\u003e \u003d \u003ci\u003er\u003c/i\u003e\u003c/span\u003e for all \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/76/9a/769a264efff6111045324830682be8c47d5a0725.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e.\u003c/p\u003e\u003cp\u003eLet\u0027s denote by \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edp\u003c/i\u003e1[\u003ci\u003er\u003c/i\u003e]\u003c/span\u003e \u003d number of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e ≤ \u003ci\u003eN\u003c/i\u003e\u003c/span\u003e such that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/sup\u003e \u003ci\u003emod\u003c/i\u003e \u003ci\u003ek\u003c/i\u003e \u003d \u003ci\u003er\u003c/i\u003e\u003c/span\u003e. We will try to compute \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edp\u003c/i\u003e1\u003c/span\u003e from \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003er\u003c/i\u003e \u003d 0\u003c/span\u003e to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e - 1\u003c/span\u003e in time \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/0a/41/0a413c751807411be26e1ca01e4ffc4223046c69.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003eLet\u0027s make another observation — \u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/sup\u003e \u003ci\u003emod\u003c/i\u003e \u003ci\u003ek\u003c/i\u003e \u003d (\u003ci\u003ei\u003c/i\u003e + \u003ci\u003ek\u003c/i\u003e)\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/sup\u003e \u003ci\u003emod\u003c/i\u003e \u003ci\u003ek\u003c/i\u003e \u003d (\u003ci\u003ei\u003c/i\u003e + 2\u003ci\u003ek\u003c/i\u003e)\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/sup\u003e \u003ci\u003emod\u003c/i\u003e \u003ci\u003ek\u003c/i\u003e \u003d (\u003ci\u003ei\u003c/i\u003e + \u003ci\u003ex\u003c/i\u003e * \u003ci\u003ek\u003c/i\u003e)\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/sup\u003e \u003ci\u003emod\u003c/i\u003e \u003ci\u003ek\u003c/i\u003e\u003c/span\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eProof:\u003c/strong\u003e\u003c/p\u003e \u003ccenter\u003e\u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ei\u003c/i\u003e + \u003ci\u003ex\u003c/i\u003e * \u003ci\u003ek\u003c/i\u003e)\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/sup\u003e \u003ci\u003emod\u003c/i\u003e \u003ci\u003ek\u003c/i\u003e \u003d (\u003ci\u003ei\u003c/i\u003e \u003ci\u003emod\u003c/i\u003e \u003ci\u003ek\u003c/i\u003e + (\u003ci\u003ex\u003c/i\u003e * \u003ci\u003ek\u003c/i\u003e) \u003ci\u003emod\u003c/i\u003e \u003ci\u003ek\u003c/i\u003e)\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/sup\u003e \u003ci\u003emod\u003c/i\u003e \u003ci\u003ek\u003c/i\u003e\u003c/span\u003e\u003c/center\u003e \u003ccenter\u003e\u003cspan class\u003d\"tex-span\"\u003e \u003d (\u003ci\u003ei\u003c/i\u003e + 0)\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/sup\u003e \u003ci\u003emod\u003c/i\u003e \u003ci\u003ek\u003c/i\u003e \u003d \u003ci\u003ei\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/sup\u003e \u003ci\u003emodk\u003c/i\u003e\u003c/span\u003e\u003c/center\u003e\u003cp\u003eNow \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e + \u003ci\u003ex\u003c/i\u003e × \u003ci\u003ek\u003c/i\u003e ≤ \u003ci\u003en\u003c/i\u003e\u003c/span\u003e. This implies that \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/7a/49/7a49f4d6a71ca8726f28c2617a0ffaad263820bb.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e.\u003c/p\u003e\u003cp\u003eThus if we know that for some \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e ≤ \u003ci\u003eK\u003c/i\u003e\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/sup\u003e \u003ci\u003emod\u003c/i\u003e \u003ci\u003ek\u003c/i\u003e\u003c/span\u003e is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003er\u003c/i\u003e\u003c/span\u003e then there are \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e + 1\u003c/span\u003e such numbers which also have the same remainder.\u003c/p\u003e\u003cp\u003eThis gives us a quick way to compute \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edp\u003c/i\u003e1\u003c/span\u003e\u003c/p\u003e \u003cpre\u003e\u003ccode\u003efor i \u003d 1 to k:\n    r \u003d pow(i, a) mod k\n    x \u003d (n-i) / k\n    dp1[r] +\u003d x + 1\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eSimilarly, we can compute \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edp\u003c/i\u003e2[\u003ci\u003er\u003c/i\u003e]\u003c/span\u003e which denotes the number \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e ≤ \u003ci\u003eN\u003c/i\u003e\u003c/span\u003e such that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/sup\u003e \u003ci\u003emod\u003c/i\u003e \u003ci\u003ek\u003c/i\u003e \u003d \u003ci\u003er\u003c/i\u003e\u003c/span\u003e\u003c/p\u003e\u003cp\u003eNow our final answer is \u003c/p\u003e \u003ccenter\u003e\u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/94/ac/94acd2d56982d7766424836eb945c7ae33c8e816.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/center\u003e \u003cpre\u003e\u003ccode\u003eans \u003d 0\nfor i \u003d 0 to k-1:\n    ans +\u003d dp1[i] * dp2[(k-i)%k]\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eBut we need to exclude the cases when \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e \u003d \u003ci\u003ej\u003c/i\u003e\u003c/span\u003e\u003c/p\u003e\u003cp\u003eTo handle this we can simply iterate one last time from \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e \u003d 1\u003ci\u003etok\u003c/i\u003e\u003c/span\u003e and find all the cases when \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ei\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/sup\u003e\u0026amp;\u003ci\u003ethinsp\u003c/i\u003e;+  \u003ci\u003ei\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/sup\u003e) \u003ci\u003emod\u003c/i\u003e \u003ci\u003ek\u003c/i\u003e \u003d 0\u003c/span\u003e. and subtract \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/24/2d/242d139c546f628d1768859e7d8bcefb2b28eea8.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e from the answer for all such \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e\u003c/p\u003e \u003cpre\u003e\u003ccode\u003efor i \u003d 1 to k\n    if pow(i,a) + pow(i,b) mod k \u003d\u003d 0:\n        ans -\u003d ((n-i)/k + 1)\n\u003c/code\u003e\u003c/pre\u003e\u003ch1\u003e\u003ca href\u003d\"https://code.google.com/codejam/contest/5254487/dashboard#s\u003dp2\"\u003eProblem C. Watson and Intervals\u003c/a\u003e\u003c/h1\u003e\u003cp\u003e\u003cstrong\u003eCategory\u003c/strong\u003e: Greedy, Line Sweep\u003c/p\u003e\u003cp\u003eRefer to this \u003ca href\u003d\"//codeforces.com/blog/entry/46812?#comment-313039\"\u003ecomment\u003c/a\u003e\u003c/p\u003e\u003ch1\u003e\u003ca href\u003d\"https://code.google.com/codejam/contest/5254487/dashboard#s\u003dp3\"\u003eProblem D. Sherlock and Permutation Sorting\u003c/a\u003e\u003c/h1\u003e\u003cp\u003e\u003cstrong\u003eCategory\u003c/strong\u003e: DP, Math\u003c/p\u003e\u003cp\u003eSince \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eN\u003c/i\u003e\u003c/span\u003e is too large to enumerate all permutations, we need to come up with a clever way to compute the final answer. There are several hints in the problem that we can pick up on. Firstly there can be at most \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eN\u003c/i\u003e\u003c/span\u003e distinct values of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e(\u003ci\u003ep\u003c/i\u003e)\u003c/span\u003e. But there are \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eN\u003c/i\u003e!\u003c/span\u003e different permutations. This means that a lot of permutations are going to have the same value of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e(\u003ci\u003ep\u003c/i\u003e)\u003c/span\u003e. Thus it seems reasonable to try and find some way to compute the number of permutations which have the same value \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e(\u003ci\u003ep\u003c/i\u003e)\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eOur second hint comes from the statement \u0026quot;all elements in a chunk are smaller than all elements in any later chunk\u0026quot;. Trying some permutations out on pen and paper gives us the following claim — \u003c/p\u003e\u003cp\u003eIf there is a valid way to divide a permutation into chunks, then there must exists a right most chunk. Moreover, if the size of the right most chunk is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eX\u003c/i\u003e\u003c/span\u003e, then it must consist of the largest \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eX\u003c/i\u003e\u003c/span\u003e elements of the permutation.\u003c/p\u003e\u003cp\u003eThe first part of the above statement is trivial. The second part can be proven by way of contradiction by trying to partition the permutation in a way where at least one element in the rightmost chunk is not one of the largest \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eX\u003c/i\u003e\u003c/span\u003e elements. Let this smallest element in the right most chunk be \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e. If \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e is in the right most chunk, then one of the largest \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eX\u003c/i\u003e\u003c/span\u003e elements \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e is to the left. Since \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e \u0026gt; \u003ci\u003ei\u003c/i\u003e\u003c/span\u003e, this means that this is not a valid way to partition the permutation into chunks.\u003c/p\u003e\u003cp\u003eBut we don\u0027t just want to partition the permutation into chunks but we want the maximum number of chunks. To take this into consideration, let\u0027s define the notion of a primitive right most chunk. The right most chunk of size \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eX\u003c/i\u003e\u003c/span\u003e of some partition of the permutation is said to be primitive, if it does not contain a proper suffix of length \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eY\u003c/i\u003e \u0026lt; \u003ci\u003eX\u003c/i\u003e\u003c/span\u003e which also consists of the \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eY\u003c/i\u003e\u003c/span\u003e largest elements i.e. if any suffix of a right most chunk \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eC\u003c/i\u003e\u003c/span\u003e is not a primitive chunk, then \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eC\u003c/i\u003e\u003c/span\u003e is said to be a primitive chunk.\u003c/p\u003e\u003cp\u003eWhy have we defined such a complex notation? This is motivated by the fact that if a right most chunk contains a suffix of size \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eY\u003c/i\u003e\u003c/span\u003e which contains the largest \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eY\u003c/i\u003e\u003c/span\u003e elements of the permutation, then we can split the current chunks into two chunks of size \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eX\u003c/i\u003e - \u003ci\u003eY\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eY\u003c/i\u003e\u003c/span\u003e such that this will also be a valid partition and the number of chunks in our partition will increase by \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eThus we have another lemma — \u003c/p\u003e\u003cp\u003eIf a permutation \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003c/span\u003e is divided into \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e(\u003ci\u003ep\u003c/i\u003e)\u003c/span\u003e number of chunks, then the right most chunk in this partition must necessarily be a primitive chunk!\u003c/p\u003e\u003cp\u003eNow, let\u0027s use the tools at hand to make our third observation to crack this problem.\u003c/p\u003e\u003cp\u003eLet\u0027s assume that the size of the primitive chunk in a maximum partition of a permutation \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003c/span\u003e of size \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eN\u003c/i\u003e\u003c/span\u003e has size \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eX\u003c/i\u003e\u003c/span\u003e. We know that this consists of the largest \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eX\u003c/i\u003e\u003c/span\u003e elements of the permutation of size \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eN\u003c/i\u003e\u003c/span\u003e. We should notice that all the chunks on the left are just the maximum way to partition a permutation \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u0027\u003c/span\u003e where \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u0027\u003c/span\u003e is the suffix of length \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eN\u003c/i\u003e\u003c/span\u003e \u003cspan class\u003d\"tex-span\"\u003e - \u003c/span\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eX\u003c/i\u003e\u003c/span\u003e of the permutation \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eSo what does this mean? We have a recursive way to partition a given permutation into the maximum number of chunks! Start from the right and find the right most index \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e such that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e... \u003ci\u003eN\u003c/i\u003e]\u003c/span\u003e contains the largest \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eN\u003c/i\u003e - \u003ci\u003ei\u003c/i\u003e + 1\u003c/span\u003e elements of the permutation. This must necessarily be the primitive chunk of the permutation p. Thus we can recursively compute the chunks for \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e[1... \u003ci\u003ei\u003c/i\u003e - 1]\u003c/span\u003e and append p[i \\dots N] to get the maximum way to partition \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003c/span\u003e! Great, but we can make an even more powerful observation. You don\u0027t necessarily have to append \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e... \u003ci\u003eN\u003c/i\u003e]\u003c/span\u003e to the chunks of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e[1... \u003ci\u003ei\u003c/i\u003e - 1]\u003c/span\u003e. In fact any primitive chunk of size \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eN\u003c/i\u003e - \u003ci\u003ei\u003c/i\u003e + 1\u003c/span\u003e can be appended to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e[1... \u003ci\u003ei\u003c/i\u003e - 1]\u003c/span\u003e and the value of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e(\u003ci\u003ep\u003c/i\u003e)\u003c/span\u003e for each of these permutations will be the same!\u003c/p\u003e\u003cp\u003eLet\u0027s have a look at these statements using some more formal notation.\u003c/p\u003e\u003cp\u003eDefine \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eprim\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e)\u003c/span\u003e to be the number of primitive chunks of size \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e. Observe that value of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eprim\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e)\u003c/span\u003e is independent of the actual values of set but only depends on the size of the set i.e. number of primitive chunks consisting of \u003cspan class\u003d\"tex-span\"\u003e{1, 2, 3}\u003c/span\u003e is the same as number of primitive chunks consisting of \u003cspan class\u003d\"tex-span\"\u003e{100, 101, 102}\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eDefine \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003esum\u003c/i\u003e_\u003ci\u003ef\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e)\u003c/span\u003e to be the sum of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e(\u003ci\u003ep\u003c/i\u003e)\u003c/span\u003e of all permutations \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003c/span\u003e of size \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e. Using our observations from above, we can create a recurrence relation for \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003esum\u003c/i\u003e_\u003ci\u003ef\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e)\u003c/span\u003e in terms of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eprim\u003c/i\u003e()\u003c/span\u003e\u003c/p\u003e \u003ccenter\u003e\u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/54/cc/54ccdc03063887e10ba38e5ccb921f95e7d8c211.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/center\u003e\u003cp\u003eHow did we get this recurrence? Let the size of the primitive chunk in optimal partition be \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e - \u003ci\u003ei\u003c/i\u003e\u003c/span\u003e. There are \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eprim\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e - \u003ci\u003ei\u003c/i\u003e)\u003c/span\u003e ways to choose such a primitive chunk consisting of the \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e - \u003ci\u003ei\u003c/i\u003e\u003c/span\u003e largest elements. If we choose any permutation \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u0027\u003c/span\u003e of size \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e, it can be a prefix of permutations with primitive chunks of size \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e - \u003ci\u003ei\u003c/i\u003e\u003c/span\u003e. For each such permutation \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u0027\u003c/span\u003e, we have the relation \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e(\u003ci\u003ep\u003c/i\u003e) \u003d \u003ci\u003ef\u003c/i\u003e(\u003ci\u003ep\u003c/i\u003e\u0027) + 1\u003c/span\u003e. \u003c/p\u003e\u003cp\u003eThus,\u003c/p\u003e \u003ccenter\u003e\u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/5a/25/5a25b29dbaa4374d1798beb55508e493296cdaa2.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/center\u003e\u003cp\u003eThere are \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e!\u003c/span\u003e number of permutations of size \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e and each of them can be append with one of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eprim\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e - \u003ci\u003ei\u003c/i\u003e)\u003c/span\u003e primitive chunks. Thus \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/39/ec/39eccbb84ba92f170a306ce65322c19fe21bc281.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003eIf we can compute \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eprim\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e)\u003c/span\u003e for all possible values of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e, we can compute the sum of all values of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e(\u003ci\u003ep\u003c/i\u003e)\u003c/span\u003e for permutations of size \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e in \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/ea/26/ea26350dd8496edcc681089063982e2fff6200d4.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e time.\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ePrim\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e)\u003c/span\u003e can be computed by the following recurrence relation\u003c/p\u003e \u003ccenter\u003e\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ePrim\u003c/i\u003e(0) \u003d 0\u003c/span\u003e\u003c/center\u003e \u003ccenter\u003e\u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/8f/0c/8f0c3c19fbff170b2c5e4675e22ec9bdab6a2b84.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/center\u003e\u003cp\u003eThis also takes \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/ea/26/ea26350dd8496edcc681089063982e2fff6200d4.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e time. But the question is asking us to compute the sum of the squares of all \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e(\u003ci\u003ep\u003c/i\u003e)\u003c/span\u003e! We will take care of this by using some math to build a third and final recurrence :)\u003c/p\u003e\u003cp\u003eNow it is time to make the final observation and make a final notation.\u003c/p\u003e\u003cp\u003eLet \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003esqrsum\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e)\u003c/span\u003e denote the sum of squares of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e(\u003ci\u003ep\u003c/i\u003e)\u003c/span\u003e over all permutations \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003c/span\u003e of size \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e\u003c/p\u003e\u003cp\u003eWe know that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e(\u003ci\u003ep\u003c/i\u003e) \u003d \u003ci\u003ef\u003c/i\u003e(\u003ci\u003ep\u003c/i\u003e\u0027) + 1\u003c/span\u003e where \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u0027\u003c/span\u003e is the prefix of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003c/span\u003e after the primitive chunk of size \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003en\u003c/i\u003e - \u003ci\u003ei\u003c/i\u003e)\u003c/span\u003e is removed. Squaring both sides, we get\u003c/p\u003e \u003ccenter\u003e\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e(\u003ci\u003ep\u003c/i\u003e)\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e \u003d \u003ci\u003ef\u003c/i\u003e(\u003ci\u003ep\u003c/i\u003e\u0027)\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e + 2 * \u003ci\u003ef\u003c/i\u003e(\u003ci\u003ep\u003c/i\u003e\u0027) + 1\u003c/span\u003e\u003c/center\u003e\u003cp\u003eIf we fix the primitive chunk \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eC\u003c/i\u003e\u003c/span\u003e of the permutation \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003c/span\u003e and take the sum of over all valid \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u0027\u003c/span\u003e, we would get\u003c/p\u003e \u003ccenter\u003e\u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/e7/4e/e74e31b523a9ad9ce880fc9f039a868b41bc7f12.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/center\u003e\u003cp\u003eFor any primitive chunk of size \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e - \u003ci\u003ei\u003c/i\u003e\u003c/span\u003e, the RHS of the above equation remains that sum.\u003c/p\u003e\u003cp\u003eThus\u003c/p\u003e \u003ccenter\u003e\u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/b9/3d/b93d9b09661de4ecbe474e76aa82fad58066912b.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/center\u003e\u003cp\u003eIf we take the sum over all possible primitive chunk sizes we will get sqrsum(n)\u003c/p\u003e\u003cp\u003eThus\u003c/p\u003e \u003ccenter\u003e\u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/03/fe/03fee2cdc2435990478655d8e9336266142279ad.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/center\u003e\u003cp\u003eThus we have our final recurrence relation.\u003c/p\u003e\u003cp\u003eThis can also be computed in \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/ea/26/ea26350dd8496edcc681089063982e2fff6200d4.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. \u003c/p\u003e\u003cp\u003eThus our final answer is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003esqrsum\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e)\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eP.S. Did you\u0027ll have simpler ways to solve any of these questions?\u003c/p\u003e\u003c/div\u003e","tags":["apac","2017","google","editorial"]}}