{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1481245133,"rating":-42,"authorHandle":"clashroyale","modificationTimeSeconds":1481245133,"id":48949,"title":"\u003cp\u003eCheating\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eI\u0027m afraid oyu8201 is cheating, his code:#include \u0026lt;bits/stdc++.h\u0026gt;\u003c/p\u003e\u003ch1\u003edefine fr(a, init, end) for(int a \u003d init; a \u0026lt; end; ++a)\u003c/h1\u003e\u003ch1\u003edefine add_wedge(a, b, c) to[z] \u003d b; ant[z] \u003d adj[a]; adj[a] \u003d z; cost[z] \u003d c; z++\u003c/h1\u003e\u003ch1\u003edefine add_edge(a, b) to[z] \u003d b; ant[z] \u003d adj[a]; adj[a] \u003d z++\u003c/h1\u003e\u003ch1\u003edefine fre(i, u) for(int i \u003d adj[u]; i !\u003d -1; i \u003d ant[i])\u003c/h1\u003e\u003ch1\u003edefine sc(a) scanf(\u0026quot;%d\u0026quot;, \u0026amp;a)\u003c/h1\u003e\u003ch1\u003edefine debug(x) cerr \u0026lt;\u0026lt; \u0026quot;\u0026gt;\u0026gt;\u0026gt; \u0026quot; \u0026lt;\u0026lt; #x \u0026lt;\u0026lt; \u0026quot; \u003d \u0026quot; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl;\u003c/h1\u003e\u003ch1\u003edefine dbg(x) if(1) cerr \u0026lt;\u0026lt; \u0026quot;\u0026gt;\u0026gt;\u0026gt; \u0026quot; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl;\u003c/h1\u003e\u003ch1\u003edefine _ \u0026lt;\u0026lt; \u0026quot; , \u0026quot; \u0026lt;\u0026lt;\u003c/h1\u003e\u003ch1\u003edefine endl \u0027\\n\u0027\u003c/h1\u003e\u003cp\u003eusing namespace std;\u003c/p\u003e\u003cp\u003etypedef long long ll; typedef pair\u0026lt;int, int\u0026gt; ii;\u003c/p\u003e\u003cp\u003econst int N \u003d int(1e6);\u003c/p\u003e\u003cp\u003eint col[N]; int to[N], ant[N], adj[N], z;\u003c/p\u003e\u003cp\u003evoid dfs(int u) {  fre(i, u)  {  if(col[to[i]] \u003d\u003d -1)  {  col[to[i]] \u003d col[u] ^ 1;  dfs(to[i]);  }  } } int main() { ios::sync_with_stdio(false);cin.tie(NULL);\u003c/p\u003e \u003cpre\u003ememset(col, -1, sizeof col);\nmemset(adj, -1, sizeof adj);\nz \u003d 0;\n\nint n;\ncin \u0026gt;\u0026gt; n;\n\nint a, b;\nvector\u0026lt;ii\u0026gt; p;\n\nfr(i, 0, n)\n{\n    cin \u0026gt;\u0026gt; a \u0026gt;\u0026gt; b;\n    --a, --b;\n    add_edge(a, b);\n    add_edge(b, a);\n    p.push_back({a, b});\n}\n\nfr(i, 0, 2 * n)\n{\n    add_edge(i, i + 1);\n    add_edge(i + 1, i);\n    ++i;\n}\n\nfr(i, 0, 2 * n)\n{\n    if(col[i] \u003d\u003d -1)\n    {\n        col[i] \u003d 0;\n        dfs(i);\n    }\n}\n\nfr(i, 0, n)\n{\n    cout \u0026lt;\u0026lt; col[p[i].first] + 1 \u0026lt;\u0026lt; \u0027 \u0027 \u0026lt;\u0026lt; col[p[i].second] + 1 \u0026lt;\u0026lt; endl;\n}\n\nreturn 0;\u003c/pre\u003e\u003cp\u003e}\u003c/p\u003e\u003cp\u003emy code: #include \u0026lt;bits/stdc++.h\u0026gt;\u003c/p\u003e\u003ch1\u003edefine fr(a, init, end) for(int a \u003d init; a \u0026lt; end; ++a)\u003c/h1\u003e\u003ch1\u003edefine add_wedge(a, b, c) to[z] \u003d b; ant[z] \u003d adj[a]; adj[a] \u003d z; cost[z] \u003d c; z++\u003c/h1\u003e\u003ch1\u003edefine add_edge(a, b) to[z] \u003d b; ant[z] \u003d adj[a]; adj[a] \u003d z++\u003c/h1\u003e\u003ch1\u003edefine fre(i, u) for(int i \u003d adj[u]; i !\u003d -1; i \u003d ant[i])\u003c/h1\u003e\u003ch1\u003edefine sc(a) scanf(\u0026quot;%d\u0026quot;, \u0026amp;a)\u003c/h1\u003e\u003ch1\u003edefine debug(x) cerr \u0026lt;\u0026lt; \u0026quot;\u0026gt;\u0026gt;\u0026gt; \u0026quot; \u0026lt;\u0026lt; #x \u0026lt;\u0026lt; \u0026quot; \u003d \u0026quot; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl;\u003c/h1\u003e\u003ch1\u003edefine dbg(x) if(1) cerr \u0026lt;\u0026lt; \u0026quot;\u0026gt;\u0026gt;\u0026gt; \u0026quot; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl;\u003c/h1\u003e\u003ch1\u003edefine _ \u0026lt;\u0026lt; \u0026quot; , \u0026quot; \u0026lt;\u0026lt;\u003c/h1\u003e\u003ch1\u003edefine endl \u0027\\n\u0027\u003c/h1\u003e\u003cp\u003eusing namespace std;\u003c/p\u003e\u003cp\u003etypedef long long ll; typedef pair\u0026lt;int, int\u0026gt; ii;\u003c/p\u003e\u003cp\u003econst int N \u003d int(1e6);\u003c/p\u003e\u003cp\u003eint col[N]; int to[N], ant[N], adj[N], z;\u003c/p\u003e\u003cp\u003evoid dfs(int u) {  fre(i, u)  {  if(col[to[i]] \u003d\u003d -1)  {  col[to[i]] \u003d col[u] ^ 1;  dfs(to[i]);  }  } } int main() { ios::sync_with_stdio(false);cin.tie(NULL);\u003c/p\u003e \u003cpre\u003ememset(col, -1, sizeof col);\nmemset(adj, -1, sizeof adj);\nz \u003d 0;\n\nint n;\ncin \u0026gt;\u0026gt; n;\n\nint a, b;\nvector\u0026lt;ii\u0026gt; p;\n\nfr(i, 0, n)\n{\n    cin \u0026gt;\u0026gt; a \u0026gt;\u0026gt; b;\n    --a, --b;\n    add_edge(a, b);\n    add_edge(b, a);\n    p.push_back({a, b});\n}\n\nfr(i, 0, 2 * n)\n{\n    add_edge(i, i + 1);\n    add_edge(i + 1, i);\n    ++i;\n}\n\nfr(i, 0, 2 * n)\n{\n    if(col[i] \u003d\u003d -1)\n    {\n        col[i] \u003d 0;\n        dfs(i);\n    }\n}\n\nfr(i, 0, n)\n{\n    cout \u0026lt;\u0026lt; col[p[i].first] + 1 \u0026lt;\u0026lt; \u0027 \u0027 \u0026lt;\u0026lt; col[p[i].second] + 1 \u0026lt;\u0026lt; endl;\n}\n\nreturn 0;\u003c/pre\u003e\u003cp\u003e}\u003c/p\u003e\u003c/div\u003e","tags":[]}}