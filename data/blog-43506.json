{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1456924063,"rating":0,"authorHandle":"dorellin","modificationTimeSeconds":1456924082,"id":43506,"title":"\u003cp\u003eGema Aula 1 2016 — Editorial\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003ePrimeiramente, parabéns a todos que tentaram resolver os exercícios! Foi uma surpresa positiva, com gente submetendo código até na semana seguinte. \u003c/p\u003e\u003cp\u003eEsse contest round foi preparador por \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/tomasf\" title\u003d\"Candidate Master tomasf\"\u003etomasf\u003c/a\u003e e \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/lfdorelli\" title\u003d\"Expert lfdorelli\"\u003elfdorelli\u003c/a\u003e, com ajuda do \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/danft\" title\u003d\"Candidate Master danft\"\u003edanft\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eO primeiro problema \u003ca href\u003d\"/group/gy03x0glsj/contest/206245/problem/A\" title\u003d\"GEMA Aula 1 2016\"\u003e206245A - Soma\u003c/a\u003e, imprimir o resultado de A+B, foi resolvido em aula:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e#include \u0026lt;bits/stdc++.h\u0026gt;\n\nusing namespace std;\n\nint main (void) {\n\tint a,b;\n\tcin \u0026gt;\u0026gt; a \u0026gt;\u0026gt; b;\n\tcout \u0026lt;\u0026lt; a + b \u0026lt;\u0026lt; endl;\n\treturn 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eNão havia nenhum segredo nele. No código acima, a biblioteca \u003ccode\u003ebits/stdc++\u003c/code\u003e incluí todas as bibliotecas padrão do C++. \u003c/p\u003e\u003cp\u003eO próximo problema, Xadrez, também tinha uma solução simples que usava o resultado inteiro da divisão por 2:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e#include \u0026lt;bits/stdc++.h\u0026gt;\n\nusing namespace std;\n\nint main (void) {\n\tint a,b;\n\tcin \u0026gt;\u0026gt; a \u0026gt;\u0026gt; b;\n\tcout \u0026lt;\u0026lt; a*b - (a*b)/2 \u0026lt;\u0026lt; endl;\n\treturn 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eA idéia dessa solução era olhar a área: se a área for par, exatamente metade dos quadrados será branco e metade preto. Se for ímpar, teremos um preto à mais (Considere que a área é 15. 15-15/2 é 8. O número de quadrados pretos será 8 e o número de quadrados ímpares será 7). Soluções que quebravam o problema em casos também funcionam. \u003c/p\u003e\u003cp\u003eO problema C servia para testar o conceito de \u003ccode\u003ewhile\u003c/code\u003e e repetições. A solução era somar as diferenças entre dois valores seguidos e multiplicar o resultado por 4. O código abaixo faz isso, porém utilizando a construção \u003ccode\u003efor\u003c/code\u003e:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e#include \u0026lt;bits/stdc++.h\u0026gt;\n\nusing namespace std;\n\nint main (void) {\n    int n, h;\n    cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; h;\n    \n    int l \u003d -1;\n    int ans \u003d 0;\n    for (int i \u003d 0; i \u0026lt; n; ++i) {\n        int x; \n        cin \u0026gt;\u0026gt; x;\n        if (l !\u003d -1) ans +\u003d abs (x - l) * 4;\n        l \u003d x;\n    }\n    \n    cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; endl;\n    \n    return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eA idéia dessa solução é guardar o valor lido na etapa anterior em uma variável (\u003ccode\u003el\u003c/code\u003e). Inicializamos \u003ccode\u003el\u003c/code\u003e com -1 para evitar calcular a diferença para o primeiro valor lido. A função \u003ccode\u003eabs\u003c/code\u003e calcula o módulo da diferença. Outra forma de fazer isso é utilizando \u003ccode\u003eifs\u003c/code\u003e:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eif (x \u0026lt; l) ans +\u003d l - x;\nelse ans +\u003d x - l;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003ePor fim, o último problema pedia para advinhar um número de 1 a 10 em 4 tentativas no máximo. Para isso, seu programa deveria \u003c/p\u003e \u003cul\u003e   \u003cli\u003eImprimir um chute\u003c/li\u003e   \u003cli\u003eLer da entrada padrão a resposta do programa teste, que era {0, 1, 2}, representando se o número escolhido por ele era menor, maior ou igual ao número chutado.\u003c/li\u003e \u003c/ul\u003e\u003cp\u003eMuitas pessoas utilizaram loops para resolver esse problema. A solução esperada era simples de implementar: chutamos o meio do intervalo (5). Dessa forma, qualquer que seja a resposta nos permite descartar um dos dois lados. Por exemplo, se o programa responde 0, indicando que o número é menor que 5, sabemos que a resposta não está em (6, 7, 8, 9, 10). Então chutamos a metade desse intervalo e assim sucessivamente. Fazendo todos os casos, é possível perceber que não são necessários mais do que 4 chutes para chegar na solução em qualquer situação utilizando essa estratégia. Essa estratégia tem um nome: divisão e conquita, e esse tipo de abordagem é geralmente chamada de busca binária. Ainda teremos uma aula abordando isso, mas você já pode ir se acostumando com a idéia ;)\u003c/p\u003e\u003cp\u003eSegue a solução:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e#include \u0026lt;bits/stdc++.h\u0026gt;\n\nusing namespace std;\n\nint main (void) {\n\tint r;\n\t// 1 2 3 4 5 6 7 8 9 10\n\tcout \u0026lt;\u0026lt; 5 \u0026lt;\u0026lt; endl;\n\tcin \u0026gt;\u0026gt; r;\n\tif (r \u003d\u003d 1) {\n\t\tcout \u0026lt;\u0026lt; 8 \u0026lt;\u0026lt; endl;\n\t\tcin \u0026gt;\u0026gt; r;\n\t\tif (r \u003d\u003d 1) {\n\t\t\tcout \u0026lt;\u0026lt; 9 \u0026lt;\u0026lt; endl;\n\t\t\tcin \u0026gt;\u0026gt; r;\n\t\t\tif (r \u003d\u003d 1) cout \u0026lt;\u0026lt; 10 \u0026lt;\u0026lt; endl;\n\t\t} else {\n\t\t\tcout \u0026lt;\u0026lt; 6 \u0026lt;\u0026lt; endl;\n\t\t\tcin \u0026gt;\u0026gt; r;\n\t\t\tif (r \u003d\u003d 1) cout \u0026lt;\u0026lt; 7 \u0026lt;\u0026lt; endl;\n\t\t}\t\n\t} else if (r \u003d\u003d 0) {\n\t\tcout \u0026lt;\u0026lt; 3 \u0026lt;\u0026lt; endl;\n\t\tcin \u0026gt;\u0026gt; r;\n\t\tif (r \u003d\u003d 1) cout \u0026lt;\u0026lt; 4 \u0026lt;\u0026lt; endl;\n\t\telse {\n\t\t\tcout \u0026lt;\u0026lt; 1 \u0026lt;\u0026lt; endl;\n\t\t\tcin \u0026gt;\u0026gt; r;\n\t\t\tif (r \u003d\u003d 1) cout \u0026lt;\u0026lt; 2 \u0026lt;\u0026lt; endl;\n\t\t}\n\t} \n\n\treturn 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":[]}}