{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1490883593,"rating":30,"authorHandle":"Kinderr","modificationTimeSeconds":1490883675,"id":51327,"title":"\u003cp\u003eAccelerating hashing\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eThe classical hashing way of hashing a number is keeping it as the reminder of the division with two distinct prime numbers i.e. \u003ccode\u003ehash(X) \u003d (X mod prime1, X mod prime2)\u003c/code\u003e, same thing with strings (considering them as polynomials). But modulo is a very heavy operation, and using a power of 2 (e.g. 2^64, using unsigned long long overflow) instead of a prime number fails when you hash a \u003ca href\u003d\"https://en.wikipedia.org/wiki/Thue%E2%80%93Morse_sequence\"\u003eThue-Morse sequence\u003c/a\u003e, so... Do you know any way of replacing the modulo with a smart bitwise operation or something else? I\u0027d find it extremely useful :)\u003c/p\u003e\u003c/div\u003e","tags":["hash","number theory"]}}