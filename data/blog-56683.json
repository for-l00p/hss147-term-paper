{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1514458874,"rating":-3,"authorHandle":"Lance_HAOH","modificationTimeSeconds":1514703964,"id":56683,"title":"\u003cp\u003eHow to solve this Coin Change problem?\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHi. I am trying to solve \u003ca href\u003d\"https://dunjudge.me/analysis/problems/348/\"\u003ethis\u003c/a\u003e problem.\u003c/p\u003e\u003cp\u003eFor convenience, I have replicated the problem statement below:\u003c/p\u003e\u003cp\u003eA person is on floor \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eN\u003c/i\u003e\u003c/span\u003e of a building. He has to take the lift down to floor \u003cspan class\u003d\"tex-span\"\u003e0\u003c/span\u003e. To use the lift exactly \u003cstrong\u003eonce\u003c/strong\u003e, one token is needed. This lift is special as it can only travel downwards for \u003cstrong\u003eone\u003c/strong\u003e of the following levels each time it is used: \u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e1, 5, 10, 17, 50, 100, 500, 1000, 5000, 10000\u003c/span\u003e\u003c/p\u003e\u003cp\u003eFor example, if the person is standing on floor \u003cspan class\u003d\"tex-span\"\u003e6\u003c/span\u003e, one way to reach floor \u003cspan class\u003d\"tex-span\"\u003e0\u003c/span\u003e is to take the lift down \u003cspan class\u003d\"tex-span\"\u003e5\u003c/span\u003e floors, then take the lift again to go down \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e more floor \u003cspan class\u003d\"tex-span\"\u003e(6 - 5 - 1 \u003d 0)\u003c/span\u003e. \u003cspan class\u003d\"tex-span\"\u003e2\u003c/span\u003e tokens are used in this case.\u003c/p\u003e\u003cp\u003eThe objective is to find the \u003cstrong\u003eminimum\u003c/strong\u003e number of tokens that the person needs to use to reach floor \u003cspan class\u003d\"tex-span\"\u003e0\u003c/span\u003e from a given floor \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eN\u003c/i\u003e\u003c/span\u003e. For the above example, the answer is \u003cspan class\u003d\"tex-span\"\u003e2\u003c/span\u003e.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eMy analysis:\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eThis problem looks exactly like the classical coin change problem where we want to find the minimum number of coins to make up a given value. The latter problem can be easily solved using DP or BFS (or maybe matrix exponentiation?). Applying the same methods on this problem could earn us the points for all except the \u003cstrong\u003elast\u003c/strong\u003e subtask where \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eN\u003c/i\u003e ≤ 1\u003ci\u003ee\u003c/i\u003e9\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eCould someone please advise me on a solution that would solve this problem in its entirety?\u003c/p\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003ePostscript\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eThis problem is tagged with greedy, but I cannot see how a greedy strategy would work.\u003c/p\u003e\u003cp\u003eThe greedy strategy that I have in mind is to repeatedly take the lift downwards for \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e floors such that j is maximized and if the person is currently on floor \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e, then \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e ≤ \u003ci\u003ei\u003c/i\u003e\u003c/span\u003e. However, it is easy to construct a case where this fails.\u003c/p\u003e\u003cp\u003eConsider \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eN\u003c/i\u003e \u003d 20\u003c/span\u003e,\u003c/p\u003e\u003cp\u003eThe greedy strategy will choose \u003cspan class\u003d\"tex-span\"\u003e17\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e. This uses \u003cspan class\u003d\"tex-span\"\u003e4\u003c/span\u003e tokens.\u003c/p\u003e\u003cp\u003eThe optimal strategy will choose \u003cspan class\u003d\"tex-span\"\u003e10\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e10\u003c/span\u003e. This uses only \u003cspan class\u003d\"tex-span\"\u003e2\u003c/span\u003e tokens.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eUPD:\u003c/strong\u003e I managed to solve this problem (thank you \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/misof\" title\u003d\"Candidate Master misof\"\u003emisof\u003c/a\u003e for your clear and concise hint!).\u003c/p\u003e\u003cp\u003eMy approach can be found \u003ca href\u003d\"//codeforces.com/blog/entry/56683?#comment-403438\"\u003ehere\u003c/a\u003e.\u003c/p\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eMy accepted code\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003e#include\u0026lt;bits/stdc++.h\u0026gt;\n\nusing namespace std;\n\nint arr[] \u003d { 10000, 5000, 1000, 500, 100, 50, 10, 5, 1 };\n\nint n, k, ans \u003d (int) 1e9;\n\nint main() {\n\tcin \u0026gt;\u0026gt; n;\n\twhile(k \u0026lt;\u003d 4) {\n\t\tint cur \u003d n, i \u003d 0, t \u003d 0;\n\t\tif(k * 17 \u0026lt;\u003d cur) {\n\t\t\tcur -\u003d k * 17;\n\t\t\tt +\u003d k;\n\t\t}\n\t\twhile(cur) {\n\t\t\tt +\u003d cur/arr[i];\n\t\t\tcur %\u003d arr[i];\n\t\t\ti++;\n\t\t}\n\t\tans \u003d min(ans, t);\n\t\tk++;\n\t}\n\tcout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026quot;\\n\u0026quot;;\n\treturn 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e","tags":["#dunjudgeme","#coin-change","#dynamic-programming","#algorithms"]}}