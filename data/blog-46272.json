{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1469493416,"rating":10,"authorHandle":"pedrohlf","modificationTimeSeconds":1469498442,"id":46272,"title":"\u003cp\u003eHelp on probability problem\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHello, I am trying to solve a problem about probability, but I keep getting WA. The problem is from the brazilian contest \u003cstrong\u003eIV Maratona Mineira\u003c/strong\u003e. I can only find the problem in portuguese, so I will try to translate. I explained my idea and posted my code. My english is not that good, so any doubts, just ask me.\u003c/p\u003e\u003ch3\u003eProblem:\u003c/h3\u003e\u003cp\u003ePlayer A and B are playing a game of War(based on the board game Risk). A has \u003cstrong\u003eNA\u003c/strong\u003e armies in his territory and is in a war against a neighbor territory that B is defending with \u003cstrong\u003eNB\u003c/strong\u003e armies. The war between two territories is made up of several battles.\u003c/p\u003e\u003cp\u003eThe rules of a battle are:\u003c/p\u003e \u003cul\u003e   \u003cli\u003eThe attacker can attack a territory with the maximum of 3 armies.\u003c/li\u003e   \u003cli\u003eThe attacker must leave at least 1 army in his territory. Basically, the attacker can attack with min( \u003cstrong\u003eNA\u003c/strong\u003e -1,3) armies.\u003c/li\u003e   \u003cli\u003eThe defender can protect his territory with the maximum of 3 armies.\u003c/li\u003e   \u003cli\u003eThe defender can use all of his armies to protect his territory. The defender can defend with min( \u003cstrong\u003eNB\u003c/strong\u003e ,3) armies.\u003c/li\u003e \u003c/ul\u003e\u003cp\u003eAfter each player has chosen a valid amount of armies to use in the battle (player A with \u003cstrong\u003eXA\u003c/strong\u003e armies and player B with \u003cstrong\u003eXB\u003c/strong\u003e armies), \u003cstrong\u003eXA\u003c/strong\u003e dices representing the attacker are thrown and \u003cstrong\u003eXB\u003c/strong\u003e dices representing the defender are thrown. The dices are numbered from 1 to 6. Then, the dices thrown by player A are sorted, as well as B\u0027s dices. After that, the min( \u003cstrong\u003eXA\u003c/strong\u003e , \u003cstrong\u003eXB\u003c/strong\u003e ) highest values obtained by each player are compared pairwise. For each comparison where the number obtained by attacker is higher than the number obtained by the defender, the defender loses an army. Otherwise, the attacker will lose an army.\u003c/p\u003e\u003cp\u003eFor example: player A is battling with 3 armies against 2 armies of B. Player A gets numbers {1,4,2}, player B gets numbers {2,3}. In this case, player A loses one army and player B loses one army (because 4 \u0026gt; 3 and 2 \u0026lt;\u003d 2).\u003c/p\u003e\u003cp\u003eGiven the two numbers \u003cstrong\u003eNA\u003c/strong\u003e and \u003cstrong\u003eNB\u003c/strong\u003e, Player A wants to know the probability that he wins the war against player B, if both players play optimally.\u003c/p\u003e\u003cp\u003eRemember that a war is a sequence of battles. Player A loses the war if only one of his armies remains. Player A wins the war if there is no armies of player B left.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eInput\u003c/strong\u003e: The input has two numbers \u003cstrong\u003eNA\u003c/strong\u003e \u003cstrong\u003eNB\u003c/strong\u003e, where 1 \u0026lt;\u003d \u003cstrong\u003eNA\u003c/strong\u003e, \u003cstrong\u003eNB\u003c/strong\u003e \u0026lt;\u003d 10000.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eOutput\u003c/strong\u003e: Probability that player A wins the war.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eSample test case\u003c/strong\u003e (which my code is already failing):\u003cbr /\u003eInput: 5 4\u003cbr /\u003eOutput: 0.2554\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eTime limit\u003c/strong\u003e: 1.5s\u003cbr /\u003e\u003cstrong\u003eMemory limit\u003c/strong\u003e: 256MB\u003c/p\u003e\u003ch3\u003eMy solution:\u003c/h3\u003e\u003cp\u003ecode: \u003ca href\u003d\"http://pastebin.com/MdpHGjZT\"\u003ehttp://pastebin.com/MdpHGjZT\u003c/a\u003e\u003c/p\u003e\u003cp\u003ecode with memory optimization: \u003ca href\u003d\"http://pastebin.com/0A9NJf99\"\u003ehttp://pastebin.com/0A9NJf99\u003c/a\u003e\u003c/p\u003e\u003cp\u003eI created a vector called prob, where prob[x][y][z] is the probability that X armies attacking against Y armies will beat Z armies. (Ex: prob[3][2][1] is the probability that 3 armies are going against 2 armies and beat 1 of them). I\u0027m pretty sure those probabilities are correct, since I checked them at least 5 times each.\u003c/p\u003e\u003cp\u003eThe rest is just dynamic programming, where I test all possibilities. The base cases are:\u003c/p\u003e \u003cul\u003e   \u003cli\u003ea \u003d\u003d 1 : return 0 (because the war is lost);\u003c/li\u003e   \u003cli\u003eb \u003d\u003d 0 : return 1 (because the war is won);\u003c/li\u003e \u003c/ul\u003e\u003cp\u003eCan someone give some ideas on how to solve this problem? Thanks :D\u003c/p\u003e\u003c/div\u003e","tags":["probability","dynamic programming","risk"]}}