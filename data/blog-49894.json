{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1484909252,"rating":0,"authorHandle":"t3rminated","modificationTimeSeconds":1484909252,"id":49894,"title":"\u003cp\u003edynamic programming question \u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eI am doing \u003ca href\u003d\"https://leetcode.com/problems/ones-and-zeroes/\"\u003ethis\u003c/a\u003e question but i am only able to pass 36/60 test cases i can\u0027t find my mistake in code . here\u0027s my code -\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eint dp[104+1][104+1][605];\nclass Solution {\npublic:\nint dd\u003d0;\nint freq[602][2];\n\n    int findMaxForm(vector\u0026lt;string\u0026gt;\u0026amp; strs, int m, int n)\n    {\n        \n        for(int i \u003d 0; i \u0026lt;\u003d m; i++)\n        {\n            for(int j \u003d 0; j \u0026lt;\u003d n; j++)\n            { \n                for(int k \u003d 0; k \u0026lt;\u003d 604; k++)\n                    dp[i][j][k] \u003d -1;\n            }\n        }\n        memset(freq, 0, sizeof freq);\n        \n        for(int i \u003d 0; i \u0026lt; strs.size(); i++)\n        {\n            for(int j \u003d 0; j \u0026lt; strs[i].length(); j++)\n            {\n               freq[i][strs[i][j] - \u00270\u0027]++; \n            }\n        }\n       return letsee(m, n, strs.size(),0);\n    }\n    \n    int letsee(int m, int n, int len, int state)\n    {\n        // cout \u0026lt;\u0026lt; m \u0026lt;\u0026lt; \u0026quot; \u0026quot; \u0026lt;\u0026lt; n \u0026lt;\u0026lt; \u0026quot; \u0026quot;\u0026lt;\u0026lt;state\u0026lt;\u0026lt;\u0026quot;*\u0026quot;\n        if(m \u003d\u003d 0 \u0026amp;\u0026amp; n \u003d\u003d 0)return 0;\n        if(m \u0026lt; 0 \u0026amp;\u0026amp; n \u0026lt; 0)\n            return -1;\n        if(dp[m][n][state] !\u003d -1)\n            return dp[m][n][state];\n        for(int i \u003d 0; i \u0026lt; len; i++)\n        {\n            if(m \u0026gt;\u003d freq[i][0] \u0026amp;\u0026amp; n \u0026gt;\u003d freq[i][1])\n            {\n                int temp \u003d freq[i][0];\n                int temp2 \u003d freq[i][1];\n                freq[i][0] \u003d freq[i][1] \u003d 1000000000;\n                dp[m][n][state] \u003d max(letsee(m-temp, n-temp2, len, i+1)+1, dp[m][n][state]);\n                freq[i][0] \u003d temp; \n                freq[i][1] \u003d temp2;\n            }\n        }\n        if(dp[m][n][state] \u003d\u003d -1)dp[m][n][state] \u003d 0;\n        // if(dp[m][n][state] \u003d\u003d 5)return 4;\n        return dp[m][n][state];\n    }\n};\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":["dynamic programming"]}}