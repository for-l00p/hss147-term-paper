{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":false,"creationTimeSeconds":1412704454,"rating":0,"authorHandle":"Fcdkbear","modificationTimeSeconds":1412704454,"id":14161,"title":"\u003cp\u003eРазбор задач о КМП\u003c/p\u003e","locale":"ru","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e\u003cstrong\u003eВНИМАНИЕ\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eКод к некоторым из этих задач был написан мной около 5 лет назад, поэтому там может быть какая-то ерунда с точки зрения самого кода. Тем не менее, идейно там все хорошо, все решения получили Accepted.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eЗадача 1423. Басня о строке (Тимус)\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eНам нужно сказать, является ли одна строка циклическим сдвигом второй. Пусть наши строки — s1 и s2. Создадим такую строку: s1\u0026amp;s2s2, вместо \u0026amp; можно поставить любой символ, который гарантированно не встречается в наших строках. Посчитаем для новой строки префикс функцию. Легко видеть, что если префикс-функция хотя бы в одном месте равна длине строки s1 — ответ нашелся и мы можем легко посчитать индекс циклического сдвига. Иначе же, ответ -1.\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://pastebin.com/8YXuHCtR\"\u003eКод\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eЗадача 1590. Шифр Бэкона (Тимус)\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eИдея решения задачи полностью описана в \u003ca href\u003d\"http://e-maxx.ru/algo/prefix_function\"\u003eэтой статье\u003c/a\u003e\u003c/p\u003e\u003cp\u003eПродублируем ее текст:\u003c/p\u003e\u003cp\u003eДана строка s длины n. Требуется посчитать количество её различных подстрок.\u003c/p\u003e\u003cp\u003eБудем решать эту задачу итеративно. А именно, научимся, зная текущее количество различных подстрок, пересчитывать это количество при добавлении в конец одного символа.\u003c/p\u003e\u003cp\u003eИтак, пусть k — текущее количество различных подстрок строки s, и мы добавляем в конец символ c. Очевидно, в результате могли появиться некоторые новые подстроки, оканчивавшиеся на этом новом символе c. А именно, добавляются в качестве новых те подстроки, оканчивающиеся на символе c и не встречавшиеся ранее.\u003c/p\u003e\u003cp\u003eВозьмём строку t \u003d s + c и инвертируем её (запишем символы в обратном порядке). Наша задача — посчитать, сколько у строки t таких префиксов, которые не встречаются в ней более нигде. Но если мы посчитаем для строки t префикс-функцию и найдём её максимальное значение pMax то, очевидно, в строке t встречается (не в начале) её префикс длины pMax, но не большей длины. Понятно, префиксы меньшей длины уж точно встречаются в ней.\u003c/p\u003e\u003cp\u003eИтак, мы получили, что число новых подстрок, появляющихся при дописывании символа c, равно s.length() + 1 — pMax Таким образом, для каждого дописываемого символа мы за O(n) можем пересчитать количество различных подстрок строки. Следовательно, за O(n^2) мы можем найти количество различных подстрок для любой заданной строки.\u003c/p\u003e\u003cp\u003eСтоит заметить, что совершенно аналогично можно пересчитывать количество различных подстрок и при дописывании символа в начало, а также при удалении символа с конца или с начала.\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://pastebin.com/d2HrAm9H\"\u003eКод\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eЗадача Periodic Strings (UVA)\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eИдея решения опять-таки полностью описана в статье, указанной выше. Копировать в этот раз не буду. потому что там есть рисунки. Смотрите раздел \u0026quot;Сжатие строки\u0026quot;\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://pastebin.com/8tYB7L9C\"\u003eКод\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eЗадача с Codeforces\u003c/strong\u003e Обычное упражнение на КМП. Считаем наши строки. Сделаем строку s2+\u0027\u0026amp;\u0027+s1. Посчитаем для нее префикс-функцию. Найдем все значения префикс функции,равные s2.size(), эти позиции (с каким-то постоянным сдвигом) и выведем.\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://pastebin.com/qGHi0gFH\"\u003eКод\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e","tags":["кмп","разбор"]}}