{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1505921200,"rating":1,"authorHandle":"tanvir_","modificationTimeSeconds":1505921200,"id":54658,"title":"\u003cp\u003eProblem on spoj problem MATSUM, 2D BIT\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eProblem Link : \u003ca href\u003d\"http://www.spoj.com/problems/MATSUM/\"\u003ehttp://www.spoj.com/problems/MATSUM/\u003c/a\u003e\u003c/p\u003e\u003cp\u003eI implemented a 2D BIT and used query/getSum function to find sum of rectangle from point O(0,0)[top left] to bottom right point (other two points can be derived). For operation SET(2,2,12), my code is storing value 24 at point (2,2) instead of 12. Can\u0027t figure out whether it\u0027s an implementation fault or conceptual fault. Can anyone help to figure it out and solve ?\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e#include \u0026lt;bits/stdc++.h\u0026gt;\nusing namespace std;\n\nint BIT[1025][1025];\n\nvoid update(int x, int y, int range, int value)\n{\n    ++x; ++y; ///Index starts from 1\n    int y1;\n    while(x \u0026lt;\u003d range)\n    {\n        y1 \u003d y;\n        while(y1 \u0026lt;\u003d range)\n        {\n            BIT[x][y1] +\u003d value;\n            y1 +\u003d (y1 \u0026amp; (-y1));\n        }\n        x +\u003d (x \u0026amp; (-x));\n    }\n}\n\nint getSum(int x,int y)\n{\n    ++x; ++y; ///Index starts from 1\n    int y1,result \u003d 0;\n\n    while(x \u0026gt; 0)\n    {\n        y1 \u003d  y;\n\n        while(y1 \u0026gt; 0)\n        {\n           result +\u003d BIT[x][y];\n           y1 -\u003d (y1 \u0026amp; (-y1));\n        }\n        x -\u003d (x \u0026amp; (-x));\n    }\n    return result;\n}\nint main()\n{\n    int t,n,x,y,value,x1,y1,max_x,max_y,min_x,min_y,indexValue,addValue,OA,OB,OC,OD,ans;\n    char str[5],ch;\n    scanf(\u0026quot;%d\u0026quot;,\u0026amp;t);\n\n    while(t--)\n    {\n        scanf(\u0026quot;%d\u0026quot;,\u0026amp;n);\n        memset(BIT,0,sizeof BIT);\n\n        while(true)\n        {\n\n            getchar();\n            scanf(\u0026quot;%s\u0026quot;,str);\n            if(strcmp(str,\u0026quot;END\u0026quot;) \u003d\u003d 0)\n            {\n                break;\n            }\n            else if(strcmp(str,\u0026quot;SET\u0026quot;) \u003d\u003d 0)\n            {\n                scanf(\u0026quot;%d%d%d\u0026quot;,\u0026amp;x,\u0026amp;y,\u0026amp;value);\n                indexValue \u003d getSum(x,y) - getSum(x-1,y) - getSum(x,y-1) + getSum(x-1,y-1); ///Value at the original matrix(x,y).\n                //cout\u0026lt;\u0026lt;\u0026quot;Original matrix\u0027x Index Value[x][y] \u003d \u0026quot;\u0026lt;\u0026lt;indexValue\u0026lt;\u0026lt;endl;\n                addValue \u003d value - indexValue; ///Value need to be added\n                update(x,y,n,addValue);\n            }\n            else if(strcmp(str,\u0026quot;SUM\u0026quot;) \u003d\u003d 0)\n            {\n                scanf(\u0026quot;%d%d%d%d\u0026quot;,\u0026amp;x,\u0026amp;y,\u0026amp;x1,\u0026amp;y1);\n                max_x \u003d max(x,x1);\n                max_y \u003d max(y,y1);\n                min_x \u003d min(x,x1);\n                min_y \u003d min(y,y1);\n\n                OA \u003d getSum(min_x-1,min_y-1);\n                OB \u003d getSum(min_x-1,max_y);\n                OC \u003d getSum(max_x,max_y);\n                OD \u003d getSum(max_x,min_y-1);\n\n                ans \u003d OC-OB-OD+OA;\n                //cout\u0026lt;\u0026lt;\u0026quot;Track:  \u0026quot;\u0026lt;\u0026lt;OA\u0026lt;\u0026lt;\u0026quot; \u0026quot;\u0026lt;\u0026lt;OB\u0026lt;\u0026lt;\u0026quot; \u0026quot;\u0026lt;\u0026lt;OC\u0026lt;\u0026lt;\u0026quot; \u0026quot;\u0026lt;\u0026lt;OD\u0026lt;\u0026lt;endl;\n                printf(\u0026quot;%d\\n\u0026quot;,ans);\n\n            }\n        }\n    }\n    return 0;\n}\n\n/**\n\n|\n| O(0,0)\n|------------------------------------------------\u0026gt; y\n|\n|\n|\n|\n|     A(min_x,min_y).\n|     .--------------------------------.  B(min_x,max_y)\n|     |                                |\n|     |                                |\n|     |                                |\n|     |                                |\n|     |                                |\n|     |                                |\n|     .                                . C(max_x,max_y)\n|      --------------------------------\n|     D(max_x,min_y)\n|\nV\nx\n\n\nAssumed Point O(0,0) as top left. Derived point A,B,C,D and SUM(x,y,x1,y1) according to the formula:\nOC-OB-OD+OA .\n\n*/\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":["spoj","matsum","2d binary indexed tree"]}}