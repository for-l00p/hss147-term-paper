{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1523255500,"rating":0,"authorHandle":"strawberrry","modificationTimeSeconds":1523255500,"id":58831,"title":"\u003cp\u003eEducational Round 39 Solution\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003ch4\u003eA. \u003ca href\u003d\"//codeforces.com/contest/946/problem/A\"\u003ePartition\u003c/a\u003e\u003c/h4\u003e \u003cblockquote\u003e\u003cp\u003e\u003cstrong\u003e分类：\u003c/strong\u003e \u003ccode\u003egreedy\u003c/code\u003e \u003ccode\u003eimplementation\u003c/code\u003e\u003c/p\u003e \u003c/blockquote\u003e\u003cp\u003e排序完以后分别维护一个前缀和一个后缀和，枚举分段点，取最大值就是答案。\u003c/p\u003e\u003ch4\u003eB. \u003ca href\u003d\"//codeforces.com/contest/946/problem/B\"\u003eWeird Subtraction Process\u003c/a\u003e\u003c/h4\u003e \u003cblockquote\u003e\u003cp\u003e\u003cstrong\u003e分类：\u003c/strong\u003e \u003ccode\u003emath\u003c/code\u003e\u003c/p\u003e \u003c/blockquote\u003e\u003cp\u003e观察到，如果 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e \u0026gt; 2\u003ci\u003eb\u003c/i\u003e\u003c/span\u003e 则它一定是一直减少到第一次不满足这个条件为止，同理如果 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e \u0026gt; 2\u003ci\u003ea\u003c/i\u003e\u003c/span\u003e 也是，显然可以 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(1)\u003c/span\u003e 算出这次减少多少次，然后继续模拟这个过程就好了，DFS写起来特别短！\u003c/p\u003e\u003ch4\u003eC. \u003ca href\u003d\"//codeforces.com/contest/946/problem/C\"\u003eString Transformation\u003c/a\u003e\u003c/h4\u003e \u003cblockquote\u003e\u003cp\u003e\u003cstrong\u003e分类：\u003c/strong\u003e \u003ccode\u003egreedy\u003c/code\u003e\u003c/p\u003e \u003c/blockquote\u003e\u003cp\u003e维护到第 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e 个字符，字典序出现到了 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ec\u003c/i\u003e\u003c/span\u003e 的位置，那么要继续维护辖区，显然当前字符 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e 要小于等于 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ec\u003c/i\u003e\u003c/span\u003e ，然后贪心地赋给它 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ec\u003c/i\u003e + 1\u003c/span\u003e 就好了！\u003c/p\u003e\u003ch4\u003eD. \u003ca href\u003d\"//codeforces.com/contest/946/problem/D\"\u003eTimetable\u003c/a\u003e\u003c/h4\u003e \u003cblockquote\u003e\u003cp\u003e\u003cstrong\u003e分类：\u003c/strong\u003e \u003ccode\u003edp\u003c/code\u003e\u003c/p\u003e \u003c/blockquote\u003e\u003cp\u003e考虑一维情况：求长度为 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003elen\u003c/i\u003e\u003c/span\u003e 的 \u003cspan class\u003d\"tex-span\"\u003e01\u003c/span\u003e 串，最多删除 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e 次后最大的 \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e 间隔的最小值！将所有 \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e 的位置离散化， \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e)\u003c/span\u003e 枚举最左和最右的 \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e 位置， \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e(\u003ci\u003ei\u003c/i\u003e)\u003c/span\u003e 维护删掉 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e 个 \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e 的最小值。\u003c/p\u003e\u003cp\u003e对于二维情况，考虑在 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e\u003c/span\u003e 基础上加一维 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e(\u003ci\u003ei\u003c/i\u003e, \u003ci\u003ej\u003c/i\u003e)\u003c/span\u003e 表示前 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e 行，还有 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e 次没删后的最大值，同时对于每一行维护 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eg\u003c/i\u003e(\u003ci\u003ei\u003c/i\u003e, \u003ci\u003ej\u003c/i\u003e)\u003c/span\u003e 表示第 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e 行删掉 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e 个 \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e 的最大值。考虑枚举到第 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e 行一共删了 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e 次，其中前面 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e - 1\u003c/span\u003e 行一共删了 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/span\u003e 次 ，那么转移方程就是 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e(\u003ci\u003ei\u003c/i\u003e, \u003ci\u003ej\u003c/i\u003e) \u003d \u003ci\u003emin\u003c/i\u003e{\u003ci\u003ef\u003c/i\u003e(\u003ci\u003ei\u003c/i\u003e - 1, \u003ci\u003el\u003c/i\u003e) + \u003ci\u003eg\u003c/i\u003e(\u003ci\u003ei\u003c/i\u003e, \u003ci\u003ej\u003c/i\u003e - \u003ci\u003el\u003c/i\u003e)}\u003c/span\u003e ，答案就是 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003emin\u003c/i\u003e{\u003ci\u003ef\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e, \u003ci\u003ei\u003c/i\u003e)},  1 ≤ \u003ci\u003ei\u003c/i\u003e ≤ \u003ci\u003ek\u003c/i\u003e\u003c/span\u003e ！\u003c/p\u003e\u003ch4\u003eE. \u003ca href\u003d\"//codeforces.com/contest/946/problem/E\"\u003eLargest Beautiful Number\u003c/a\u003e\u003c/h4\u003e \u003cblockquote\u003e\u003cp\u003e\u003cstrong\u003e分类：\u003c/strong\u003e \u003ccode\u003egreedy\u003c/code\u003e\u003c/p\u003e \u003c/blockquote\u003e\u003cp\u003e题目保证长度为偶数，那么对于这个答案，每个数字也必须出现偶数次，而且一定是对于某个数位 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003c/span\u003e ，从第 \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e — \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e - 1\u003c/span\u003e 位和上限相同，讨论第 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003c/span\u003e 位以后的情况。同时预处理出在 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003c/span\u003e 之前，每个数字出现的次数是奇数还是偶数次，设 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ecnt\u003c/i\u003e\u003c/span\u003e 是表示在 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003c/span\u003e 之前出现奇数次的数，如果 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003elen\u003c/i\u003e - \u003ci\u003ei\u003c/i\u003e \u0026lt; \u003ci\u003ecnt\u003c/i\u003e\u003c/span\u003e 则后面没有那么多位置可以把前面需要补成偶数次数的数补全；否则在 \u003cspan class\u003d\"tex-span\"\u003e[\u003ci\u003ei\u003c/i\u003e + 1, \u003ci\u003elen\u003c/i\u003e - \u003ci\u003ecnt\u003c/i\u003e]\u003c/span\u003e 位置都贪心填 \u003cspan class\u003d\"tex-span\"\u003e9\u003c/span\u003e ，再在 \u003cspan class\u003d\"tex-span\"\u003e[\u003ci\u003elen\u003c/i\u003e - \u003ci\u003ecnt\u003c/i\u003e, \u003ci\u003elen\u003c/i\u003e]\u003c/span\u003e 贪心补完要填的数，这样最优。\u003c/p\u003e\u003cp\u003e再退一步说，没有上述情况，我们就只能构造成 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003elen\u003c/i\u003e - 2\u003c/span\u003e 个 \u003cspan class\u003d\"tex-span\"\u003e9\u003c/span\u003e 。\u003c/p\u003e\u003ch4\u003eF. \u003ca href\u003d\"//codeforces.com/contest/946/problem/F\"\u003eFibonacci String Subsequences\u003c/a\u003e\u003c/h4\u003e \u003cblockquote\u003e\u003cp\u003e\u003cstrong\u003e分类：\u003c/strong\u003e \u003ccode\u003edp\u003c/code\u003e\u003c/p\u003e \u003c/blockquote\u003e\u003cp\u003e由于 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eF\u003c/i\u003e(\u003ci\u003ex\u003c/i\u003e)\u003c/span\u003e 是递归地定义，显然不能直接计算答案。考虑递推， \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e(\u003ci\u003el\u003c/i\u003e, \u003ci\u003er\u003c/i\u003e, \u003ci\u003ei\u003c/i\u003e)\u003c/span\u003e 维护 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003el\u003c/i\u003e..\u003ci\u003er\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e 在 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eF\u003c/i\u003e(\u003ci\u003ei\u003c/i\u003e)\u003c/span\u003e 子串出现次数，由递推定义 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eF\u003c/i\u003e(\u003ci\u003ex\u003c/i\u003e) \u003d \u003ci\u003eF\u003c/i\u003e(\u003ci\u003ex\u003c/i\u003e - 1)||\u003ci\u003eF\u003c/i\u003e(\u003ci\u003ex\u003c/i\u003e - 2)\u003c/span\u003e 分情况讨论：\u003c/p\u003e \u003cul\u003e   \u003cli\u003e\u003cspan class\u003d\"tex-span\"\u003e[\u003ci\u003el\u003c/i\u003e, \u003ci\u003er\u003c/i\u003e]\u003c/span\u003e 全部在 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eF\u003c/i\u003e(\u003ci\u003ex\u003c/i\u003e - 1)\u003c/span\u003e 部分，再考虑 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003er\u003c/i\u003e\u003c/span\u003e 是否是 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e ：   \u003cul\u003e     \u003cli\u003e如果 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003er\u003c/i\u003e \u003d \u003ci\u003en\u003c/i\u003e\u003c/span\u003e ，那么 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eF\u003c/i\u003e(\u003ci\u003ex\u003c/i\u003e - 2)\u003c/span\u003e 可以随便取，有 \u003cspan class\u003d\"tex-span\"\u003e2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003elength\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eF\u003c/i\u003e(\u003ci\u003ex\u003c/i\u003e - 2)\u003c/sub\u003e\u003c/sup\u003e\u003c/span\u003e 种可能，因为此时 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e\u003c/span\u003e 串已经完全出现，不需要管后面怎么出现。\u003c/li\u003e     \u003cli\u003e如果 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003er\u003c/i\u003e ≠ \u003ci\u003en\u003c/i\u003e\u003c/span\u003e ，那么显然还有 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003er\u003c/i\u003e + 1..\u003ci\u003en\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e 的字串部分在 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eF\u003c/i\u003e(\u003ci\u003ex\u003c/i\u003e - 2)\u003c/span\u003e 因此后者对 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eF\u003c/i\u003e(\u003ci\u003ex\u003c/i\u003e)\u003c/span\u003e 的贡献只有一种！\u003c/li\u003e   \u003c/ul\u003e\u003c/li\u003e   \u003cli\u003e同理，如果 \u003cspan class\u003d\"tex-span\"\u003e[\u003ci\u003el\u003c/i\u003e, \u003ci\u003er\u003c/i\u003e]\u003c/span\u003e 全部在 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eF\u003c/i\u003e(\u003ci\u003ex\u003c/i\u003e - 2)\u003c/span\u003e 部分，需要考虑 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/span\u003e 是否等于 \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e ，讨论情况同上。\u003c/li\u003e   \u003cli\u003e如果 \u003cspan class\u003d\"tex-span\"\u003e[\u003ci\u003el\u003c/i\u003e, \u003ci\u003ej\u003c/i\u003e]\u003c/span\u003e 部分在 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eF\u003c/i\u003e(\u003ci\u003ex\u003c/i\u003e - 1)\u003c/span\u003e ， \u003cspan class\u003d\"tex-span\"\u003e[\u003ci\u003ej\u003c/i\u003e + 1, \u003ci\u003er\u003c/i\u003e]\u003c/span\u003e 部分在 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eF\u003c/i\u003e(\u003ci\u003ex\u003c/i\u003e - 2)\u003c/span\u003e ，那么根据乘法原理，方案数就是左边的选法与右边选法的乘积，即 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e(\u003ci\u003el\u003c/i\u003e, \u003ci\u003er\u003c/i\u003e, \u003ci\u003ei\u003c/i\u003e) \u003d \u003ci\u003ef\u003c/i\u003e(\u003ci\u003el\u003c/i\u003e, \u003ci\u003ej\u003c/i\u003e, \u003ci\u003ei\u003c/i\u003e - 1)×\u003ci\u003ef\u003c/i\u003e(\u003ci\u003ej\u003c/i\u003e + 1, \u003ci\u003er\u003c/i\u003e, \u003ci\u003ei\u003c/i\u003e - 2)\u003c/span\u003e ！\u003c/li\u003e \u003c/ul\u003e\u003ch4\u003eE. \u003ca href\u003d\"//codeforces.com/contest/946/problem/G\"\u003eAlmost Increasing Array\u003c/a\u003e\u003c/h4\u003e \u003cblockquote\u003e\u003cp\u003e\u003cstrong\u003e分类：\u003c/strong\u003e \u003ccode\u003edp\u003c/code\u003e \u003ccode\u003ebinary search\u003c/code\u003e\u003c/p\u003e \u003c/blockquote\u003e\u003cp\u003e考虑普通的 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eLIS\u003c/i\u003e\u003c/span\u003e ，除了朴素 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e)\u003c/span\u003e ，还有一种优化是，考虑 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eLIS\u003c/i\u003e\u003c/span\u003e 是递增的，维护 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e(\u003ci\u003ei\u003c/i\u003e)\u003c/span\u003e 表示长度为 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e 的 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eLIS\u003c/i\u003e\u003c/span\u003e 第 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e 个位置最小值是 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e(\u003ci\u003ei\u003c/i\u003e)\u003c/span\u003e 。\u003c/p\u003e\u003cp\u003e再考虑不带删除的版本：修改最小的次数，使得 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003c/span\u003e 单调递增，常用解法是对于每个 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e 令 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e \u003d \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e - \u003ci\u003ei\u003c/i\u003e\u003c/span\u003e 也就是减去其位权，再对 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u003c/span\u003e 求一遍 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eLIS\u003c/i\u003e\u003c/span\u003e 记答案为 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eres\u003c/i\u003e\u003c/span\u003e ，那么原题答案啊就是 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e - \u003ci\u003eres\u003c/i\u003e\u003c/span\u003e ！也很容易验证，那些 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eLIS\u003c/i\u003e\u003c/span\u003e 的位置不需要修改，剩下位置贪心插在 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eLIS\u003c/i\u003e\u003c/span\u003e 间隙就好，$b_i$ 和 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e 保证了位差至少为 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e - \u003ci\u003ei\u003c/i\u003e + 1\u003c/span\u003e ，因此不用考虑插不进去的情况！\u003c/p\u003e\u003cp\u003e再考虑带删除的版本：假设删除某个位置 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003c/span\u003e 以后，发现前后两部分分别都还有 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eLIS\u003c/i\u003e\u003c/span\u003e 性质，只是对于前 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e - 1\u003c/span\u003e 个位置位权为 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e 即 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e \u003d \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e - \u003ci\u003ei\u003c/i\u003e\u003c/span\u003e ，后 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e - \u003ci\u003ep\u003c/i\u003e\u003c/span\u003e 个位置位权为 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e - 1\u003c/span\u003e ，即 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e \u003d \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e - \u003ci\u003ei\u003c/i\u003e + 1\u003c/span\u003e ！\u003c/p\u003e \u003col\u003e   \u003cli\u003e粗暴的想法是枚举 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003c/span\u003e 每次求一遍 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eLIS\u003c/i\u003e\u003c/span\u003e 取最小值，这样复杂度是 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003ci\u003elogn\u003c/i\u003e\u003c/sup\u003e)\u003c/span\u003e ，对于 \u003cspan class\u003d\"tex-span\"\u003e1 ≤ \u003ci\u003en\u003c/i\u003e ≤ 2×10\u003csup class\u003d\"upper-index\"\u003e5\u003c/sup\u003e\u003c/span\u003e 还是不够。\u003c/li\u003e   \u003cli\u003e考虑到两部分 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eLIS\u003c/i\u003e\u003c/span\u003e 性质不变，令 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e(\u003ci\u003ei\u003c/i\u003e)\u003c/span\u003e 表示前 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e 位没有删除元素组成 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eLIS\u003c/i\u003e\u003c/span\u003e 中第 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e 位的最小值， \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eg\u003c/i\u003e(\u003ci\u003ei\u003c/i\u003e)\u003c/span\u003e 表示前 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e 位删除过元素组成 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eLIS\u003c/i\u003e\u003c/span\u003e 中第 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e 位的最小值，那么 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eg\u003c/i\u003e(\u003ci\u003ej\u003c/i\u003e)\u003c/span\u003e 可以从 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e(\u003ci\u003ej\u003c/i\u003e)\u003c/span\u003e 转移！对于枚举删除的位置 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003c/span\u003e 和上个枚举删除的位置 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eq\u003c/i\u003e\u003c/span\u003e 有 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eg\u003c/i\u003e(\u003ci\u003eq\u003c/i\u003e) \u003d \u003ci\u003emin\u003c/i\u003e{\u003ci\u003ef\u003c/i\u003e(\u003ci\u003eq\u003c/i\u003e)}\u003c/span\u003e 即不删除 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eq\u003c/i\u003e\u003c/span\u003e 位而删除 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003c/span\u003e 位！\u003c/li\u003e \u003c/ol\u003e\u003c/div\u003e","tags":[]}}