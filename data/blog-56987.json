{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":true,"creationTimeSeconds":1515405815,"rating":64,"authorHandle":"wilcot","modificationTimeSeconds":1515749814,"id":56987,"title":"\u003cp\u003eБелорусская областная олимпиада 2018\u003c/p\u003e","locale":"ru","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eПривет всем. На этой неделе (8-12 января 2018 года) проходит областная олимпиада по информатике в Беларуси. Олимпиада проходит во всех областях (а их у нас всего шесть) в одно и то же время с одним и тем же набором задач. Здесь можно обсудить олимпиаду, ознакомиться с уловиями задач (надеюсь, что все участники олимпиады ознакомятся с условиями на самой олимпиаде) и, может быть, если я смогу решить, с решениями.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eВсем участникам желаю удачи!\u003c/strong\u003e  \u003c/p\u003e\u003cp\u003e\u003cem\u003eУсловия и решения задач для каждого из туров появятся не раньше их завершения.\u003c/em\u003e\u003c/p\u003e\u003ch2\u003eПервый тур\u003c/h2\u003e\u003ch4\u003eЗадача 1. Два квадрата\u003c/h4\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eРешение\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003cem\u003eЗадачу можно решать разными способами, но я попоробую рассказать самое короткое решение, которое только смог придумать.\u003c/em\u003e\u003c/p\u003e\u003cp\u003eНайдем bounding box закрашенных клеточек. Пускай мы будем знать его левую границу \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/span\u003e, правую границу \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003er\u003c/i\u003e\u003c/span\u003e, верхнюю границу \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eu\u003c/i\u003e\u003c/span\u003e и нижнюю границу \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ed\u003c/i\u003e\u003c/span\u003e. Теперь заметим, что у нас может быть только два случая:\u003c/p\u003e \u003col\u003e   \u003cli\u003e\u003cp\u003eЛевая верхняя клетка одного квадрата находится в \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003eu\u003c/i\u003e, \u003ci\u003el\u003c/i\u003e)\u003c/span\u003e, правая нижняя клетка другого квадрата находится в \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ed\u003c/i\u003e, \u003ci\u003er\u003c/i\u003e)\u003c/span\u003e.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eЛевая нижняя клетка одного квадрата находится в \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ed\u003c/i\u003e, \u003ci\u003el\u003c/i\u003e)\u003c/span\u003e, правая верхняя клетка другого квадрата находится в \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003eu\u003c/i\u003e, \u003ci\u003er\u003c/i\u003e)\u003c/span\u003e.\u003c/p\u003e\u003c/li\u003e \u003c/ol\u003e\u003cp\u003eРассмотрим первый случай. Мы уже знаем, что первый квадрат находится в \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003eu\u003c/i\u003e, \u003ci\u003el\u003c/i\u003e)\u003c/span\u003e. Осталось найти, где находится второй квадрат. Для этого переберем размер \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e квадратов. Теперь осталось заметить, что нам достаточно проверять, закрашены ли клетки на границах bounding box\u0027a (не все, а лишь те, что находятся на расстоянии \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e от уголков), чтобы определить, не взяли ли мы слишком большое \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e. Теперь мы с легкостью можем восстановить позицию второго квадрата: \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ed\u003c/i\u003e - \u003ci\u003ek\u003c/i\u003e + 1, \u003ci\u003er\u003c/i\u003e - \u003ci\u003ek\u003c/i\u003e + 1)\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eВторой случай аналогичен первому.\u003c/p\u003e\u003cp\u003eСложность решения: \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e)\u003c/span\u003e.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003cp\u003e\u003ca href\u003d\"https://ideone.com/Sn8peQ\"\u003eРешение на C++\u003c/a\u003e.\u003c/p\u003e\u003ch4\u003eЗадача 2. Творческие выходные\u003c/h4\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eПодсказка 1\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eКакие планки нам выгодно красить в первую очередь? А какие в последнюю?\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eРешение\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eПодсчитаем, какое количество планок нам нужно для \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e-го цвета. Теперь заметим, что закрашенные в нужный цвет планки мы уже никогда не сможем перекрасить. Поэтому будем красить жадно, стараясь «правильно» закрашивать как можно меньшее количество планок. Для этого отсортируем цвета по частоте во входных данных. Ну а дальше проходим и за линейное время считаем ответ.\u003c/p\u003e\u003cp\u003eСложность решения: \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/e7/0f/e70fbdc8079c0b9ff4f31073012937bac199bc6b.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003cp\u003e\u003ca href\u003d\"https://ideone.com/RhHalI\"\u003eРешение на C++\u003c/a\u003e.\u003c/p\u003e\u003ch4\u003eЗадача 3. Непростая сумма\u003c/h4\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eПодсказка 1\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eВозможно, с упорядоченными данными проще работать...\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eПодсказка 2\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eПопробуем зафиксировать какое-то число. Пусть это будет \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e. Есть числа меньшие, чем \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e, а есть...\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eПодсказка 3\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eПопробуем разбить все числа на группы размера \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e. Возможно, в таких группах будет проще подсчитывать сумму остатков.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eРешение\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003cem\u003eМоя любимая задача на этом туре. Реализация — короткая, а идея — суперская.\u003c/em\u003e\u003c/p\u003e\u003cp\u003eВоспользуемся сортировкой подсчетом. Ответ будем считать как \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/2c/d4/2cd4d4d625439efbce6a087be4e73c9ea8a46a30.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, где \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/f0/05/f0055d9309f24895cef2d0d5d0852728e68385a4.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, a \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ecnt\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e — количество чисел равных \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e. Осталось эффективно подсчитывать \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003esum\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eЗаметим, что все числа меньшие \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e дают в качестве остатка свое собственное значение, поэтому нам достаточно подсчитать сумму всех чисел, меньших \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e. С большими числами поступим похитрее. Разобьем их на такие отрезки: \u003cspan class\u003d\"tex-span\"\u003e[\u003ci\u003ei\u003c/i\u003e, 2·\u003ci\u003ei\u003c/i\u003e)\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e[2·\u003ci\u003ei\u003c/i\u003e, 3·\u003ci\u003ei\u003c/i\u003e)\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e[3·\u003ci\u003ei\u003c/i\u003e, 4·\u003ci\u003ei\u003c/i\u003e)\u003c/span\u003e, ... Научимся быстро находить ответ для таких отрезков.\u003c/p\u003e\u003cp\u003eРаcсмотрим отрезок \u003cspan class\u003d\"tex-span\"\u003e[\u003ci\u003ek\u003c/i\u003e·\u003ci\u003ei\u003c/i\u003e, (\u003ci\u003ek\u003c/i\u003e + 1)·\u003ci\u003ei\u003c/i\u003e)\u003c/span\u003e. Заметим, что число \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e·\u003ci\u003ei\u003c/i\u003e + \u003ci\u003ej\u003c/i\u003e\u003c/span\u003e при делении на \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e дает остаток \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e. Поэтому, если мы просто прибавим к ответу число \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e·\u003ci\u003ei\u003c/i\u003e + \u003ci\u003ej\u003c/i\u003e\u003c/span\u003e, то ответ будет увеличен на \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e·\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e больше, чем нужно. Поэтому, если мы сложим все числа из отрезка \u003cspan class\u003d\"tex-span\"\u003e[\u003ci\u003ek\u003c/i\u003e·\u003ci\u003ei\u003c/i\u003e, (\u003ci\u003ek\u003c/i\u003e + 1)·\u003ci\u003ei\u003c/i\u003e)\u003c/span\u003e, то нам нужно будет убрать \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ek\u003c/i\u003e·\u003ci\u003ei\u003c/i\u003e)·\u003ci\u003ecnt\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ek\u003c/i\u003e·\u003ci\u003ei\u003c/i\u003e..(\u003ci\u003ek\u003c/i\u003e + 1)·\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e. Поэтому сумму остатков на таком промежутке можно вычислить как \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003esum\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ek\u003c/i\u003e·\u003ci\u003ei\u003c/i\u003e..(\u003ci\u003ek\u003c/i\u003e + 1)·\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e - (\u003ci\u003ek\u003c/i\u003e·\u003ci\u003ei\u003c/i\u003e)·\u003ci\u003ecnt\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ek\u003c/i\u003e·\u003ci\u003ei\u003c/i\u003e..(\u003ci\u003ek\u003c/i\u003e + 1)·\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eТакое решение требует \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e)\u003c/span\u003e времени на сортировку и \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/e2/a2/e2a208cb3227fa227fb53d01fe148911ff561bbe.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e на вычисление ответа.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003cp\u003e\u003ca href\u003d\"https://ideone.com/9c52m5\"\u003eРешение на C++\u003c/a\u003e.\u003c/p\u003e\u003ch4\u003eЗадача 4. Роборалли\u003c/h4\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eПодсказка 1\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eКоличество начальных вершин совпадает с количеством путей, да? Вместо того, чтобы сортировать строки, попробуйте отсортировать вершины. А зная \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e-ю начальную вершину можно и сам путь найти.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eПодсказка 2\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eЕсли склеить два ребра длинны 1, то получится одно ребро длины 2. А если два длинны 2,  то получится одно длины 4...\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eПодсказка 3\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eНичего страшного не произойдет, если мы случайно решим задачу для более длинных маршрутов.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eРешение\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eЧто-то я разленился. Если в кратце, то задача аналогична построению суффиксного массива. Что забавно, но можно написать решение, которое практически не зависит от \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/span\u003e. Давайте будем считать \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e \u003d 2\u003csup class\u003d\"upper-index\"\u003e20\u003c/sup\u003e\u003c/span\u003e, что даже больше, чем может быть во входных данных. Удлинять ребра в два раза будем точно так же как и в методе двоичного подъема.\u003c/p\u003e\u003cp\u003eСложность по времени: \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/e7/0f/e70fbdc8079c0b9ff4f31073012937bac199bc6b.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003cp\u003e\u003ca href\u003d\"https://ideone.com/ztso3E\"\u003eРешение на C++\u003c/a\u003e.\u003c/p\u003e\u003ch2\u003eВторой тур\u003c/h2\u003e\u003ch4\u003eЗадача 1.\u003c/h4\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eРешение\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eНужно заметить, что для того, чтобы решить задачу, нам достаточно взять какой-то один столбец и какую-то одну строку. Затем за \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e)\u003c/span\u003e можно перебрать пару элементов, которые нужно переставить в этой строке и в этом столбце.\u003c/p\u003e\u003cp\u003eСложность по времени: \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e)\u003c/span\u003e.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003ch4\u003eЗадача 2.\u003c/h4\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eРешение\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eБудем хранить счетчик вложенности. А можно еще хитрее. Если встретили открывающую скобку, то уменьшаем k, если закрывающую — увеличиваем. В таком случае, если мы встретили единичку, то к ответу прибавляем \u003cspan class\u003d\"tex-span\"\u003e4\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/sup\u003e \u003d 2\u003csup class\u003d\"upper-index\"\u003e2·\u003ci\u003ek\u003c/i\u003e\u003c/sup\u003e\u003c/span\u003e. Таким образом, задачу можно решить в один проход.\u003c/p\u003e\u003cp\u003eСложность по времени: \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e)\u003c/span\u003e.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003ch4\u003eЗадача 3.\u003c/h4\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eПодсказка 1\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eОбратите внимание на то, что числа отличаются не больше, чем на 1.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eПодсказка 2\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eЕсли для \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e таких, что \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e ≤ \u003ci\u003ej\u003c/i\u003e\u003c/span\u003e, выполняется условие \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e ≤ \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e, то можно утверждать, что ответ не менее \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e - \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e + 1\u003c/span\u003e \u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eПодсказка 3\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eПредположим, что мы посчитали ответ для двух соседних отрезков. Что нам нужно знать, чтобы быстро посчитать ответ для объединенного отрезка?\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eРешение\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eНаучимся объединять соседние отрезки. Пусть мы знаем ответ для отрезка \u003cspan class\u003d\"tex-span\"\u003e[\u003ci\u003el\u003c/i\u003e, \u003ci\u003em\u003c/i\u003e)\u003c/span\u003e и отрезка \u003cspan class\u003d\"tex-span\"\u003e[\u003ci\u003em\u003c/i\u003e, \u003ci\u003er\u003c/i\u003e)\u003c/span\u003e.  Попробуем получить ответ для отрезка \u003cspan class\u003d\"tex-span\"\u003e[\u003ci\u003el\u003c/i\u003e, \u003ci\u003er\u003c/i\u003e)\u003c/span\u003e. Тут всего три простых случая:\u003c/p\u003e \u003col\u003e   \u003cli\u003eМаксимальный ответ находится в левом отрезке;\u003c/li\u003e   \u003cli\u003eМаксимальный ответ находится в правом отрезке;\u003c/li\u003e   \u003cli\u003eМаксимальный ответ пересекает границу \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/span\u003e.\u003c/li\u003e \u003c/ol\u003e\u003cp\u003eДля первых двух случаев ответ очевиден, а для третьего ответ находится так:\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003emax\u003c/i\u003e{\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/sub\u003e, \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003em\u003c/i\u003e + 1\u003c/sub\u003e, ..., \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003er\u003c/i\u003e - 1\u003c/sub\u003e} - \u003ci\u003emin\u003c/i\u003e{\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/sub\u003e, \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003el\u003c/i\u003e + 1\u003c/sub\u003e, ..., \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003em\u003c/i\u003e - 1\u003c/sub\u003e} + 1\u003c/span\u003e\u003c/p\u003e\u003cp\u003eЧтобы быстро отвечать на запросы построим дерево отрезков, которое будет хранить минимум, максимум и ответ на отрезке.  Таким образом, мы сможет отвечать на каждый запрос за время \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/7c/4d/7c4d711d6db4afdaebd7dc33a74586d66f567bfc.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e.\u003c/p\u003e\u003cp\u003eСложность по времени: \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/45/db/45db51ec1b258e1c218adb83eff40ca3e53ceb6a.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003ch4\u003eЗадача 4.\u003c/h4\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eПодсказка 1\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eПопробуйте решить для маленьких тестов. Нет, не ручками, а с помощью динамического программирования.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e","tags":[]}}