{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":false,"creationTimeSeconds":1427101084,"rating":23,"authorHandle":"Neodym","modificationTimeSeconds":1427122633,"id":17083,"title":"\u003cp\u003eСколько единичных шаров можно впихнуть в куб?\u003c/p\u003e","locale":"ru","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eДобрый день! Недавно я столкнулся с интересной математической задачей: \u0026quot;Докажите, что если в куб можно поместить три шара радиуса \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e, то можно поместить и четыре шара радиуса \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e\u0026quot;. \u003c/p\u003e\u003cp\u003eЧтобы решить задачу, ее нужно немного переформулировать. Рассмотрим внутренний куб, все стороны которого отстоят от внешнего на \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e. В этом внутреннем кубе лежат центры шаров, притом расстояние между любыми двумя не меньше \u003cspan class\u003d\"tex-span\"\u003e2\u003c/span\u003e. Введем функцию \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e)\u003c/span\u003e — минимальный размер куба, в который можно поместить \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e точек так, что расстояние между любыми двумя не меньше \u003cspan class\u003d\"tex-span\"\u003e2\u003c/span\u003e. По сути, в задаче требуется доказать, что \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e(3) \u003d \u003ci\u003ef\u003c/i\u003e(4)\u003c/span\u003e (и на самом деле они обе равны \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/2a/b5/2ab51c90d460da0abc5c722c35772dc30203dd91.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, как показывает несложный анализ). \u003c/p\u003e\u003cp\u003eРавенство \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/4e/1e/4e1e81e8af1d5b6d7326745c94a1e932aa199657.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e достигается на очень простой конфигурации — надо поместить четыре точки в вершины куба через одну. И тут мне стало интересно — а как посчитать \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e(5)\u003c/span\u003e, и как выглядит оптимальная конфигурация в таком случае?\u003c/p\u003e\u003cp\u003eМатематические рассуждения, прокатывавшие для \u003cspan class\u003d\"tex-span\"\u003e3\u003c/span\u003e и \u003cspan class\u003d\"tex-span\"\u003e4\u003c/span\u003e, тут уже, к сожалению, не работают. Я решил воспользоваться компьютером, и реализовал алгоритм, работающий на следующих рассуждениях: Во первых, зафиксируем размер куба как \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e, и будем решать такую задачу: для каждого расположения точек в кубе мы запишем минимальное расстояние между точками, и это минимальное расстояние должно быть максимальным. Ясно, что \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/0f/95/0f95fb485fd4f0850664eaeb2d689d04f9da0e9d.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e.\u003c/p\u003e\u003cp\u003eЗаметим, что если взять любое расположение точек в кубе, и сдвинуть каждую точку не более, чем на \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e, то любое расстояние изменится не более, чем на \u003cspan class\u003d\"tex-span\"\u003e2\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e. Разобьем наш куб на \u003cspan class\u003d\"tex-span\"\u003e3 * 3 * 3\u003c/span\u003e маленьких кубиков. Будем считать, что все точки самой удачной конфигурации лежат в этих центрах этих маленьких кубов — и переберем всевозможные комбинации. После этого можно считать, что точки из самой удачной конфигурации лежат на расстоянии не более \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/7a/87/7a872a7d578eeefc9cc000547fd161ea37a9eb2d.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e (это половина диагонали куба со стороной \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/e6/59/e6591737c997ecdcb9e861a0ce497019c0c92c62.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e) от полученных точек, поэтому вокруг каждой мы можем нарисовать куб, и считать, что точки из самой удачной конфигурации лежат в этом кубе. На следующей итерации мы делим получившиеся кубики на меньшие (\u003cspan class\u003d\"tex-span\"\u003e3 * 3 * 3\u003c/span\u003e), и начинаем перебирать (считаем, что первая точка теперь находится в первом кубе, вторая во втором, и т.д.). В конце каждой итерации мы получаем оптимальную конфигурацию с определенной точностью, и вновь повторяем процесс. Минусы такого подхода очевидны: на любой итерации перебирается \u003cspan class\u003d\"tex-span\"\u003e27\u003csup class\u003d\"upper-index\"\u003e5\u003c/sup\u003e\u003c/span\u003e случаев, что приблизительно равно \u003cspan class\u003d\"tex-span\"\u003e10\u003csup class\u003d\"upper-index\"\u003e7\u003c/sup\u003e\u003c/span\u003e. Тем не менее, где-то за 20 минут компьютер с хорошей точностью посчитал \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e(5)\u003c/span\u003e как \u003cspan class\u003d\"tex-span\"\u003e1.7889\u003c/span\u003e, что практически равно \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/af/ee/afee53717d14ae91c33a6eaeaad17dfa23d5a5fc.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. Соответственно, самая выгодная расстановка \u003cspan class\u003d\"tex-span\"\u003e5\u003c/span\u003e точек в кубе: \u003cspan class\u003d\"tex-span\"\u003e(0, 0, 0), (1, 0.5, 0), (0.5, 0, 1), (0, 1, 0.5), (1, 1, 1)\u003c/span\u003e (в относительных координатах). Если \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e(6)\u003c/span\u003e еще можно будет посчитать за адекватное время, то нахождение \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e(7)\u003c/span\u003e выглядит уже достаточно сложной задачей.\u003c/p\u003e\u003cp\u003eТаким образом, хотел бы послушать еще какие-нибудь полезные идеи по поводу алгоритма:)\u003c/p\u003e\u003cp\u003eP.S Оказалось, что результат для \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e(6)\u003c/span\u003e довольно тривиален — это \u003cspan class\u003d\"tex-span\"\u003e2\u003c/span\u003e, равенство достигается, когда мы просто суем точки в вершины куба. Отсюда следует, что \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e(7) \u003d \u003ci\u003ef\u003c/i\u003e(8) \u003d 2\u003c/span\u003e. В общем, теперь жду каких-то интересных комментариев по поводу того, как посчитать \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e(9)\u003c/span\u003e :)\u003c/p\u003e\u003c/div\u003e","tags":["математика","геометрия","перебор","экспонента","оптимизации"]}}