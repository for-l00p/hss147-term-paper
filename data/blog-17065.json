{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":false,"creationTimeSeconds":1426971053,"rating":90,"authorHandle":"Zlobober","modificationTimeSeconds":1426973888,"id":17065,"title":"\u003cp\u003eVK Cup Round 1 (+ online mirror) editorial\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eProblemsets slightly differ in main round and in an online mirror, in editorial problems follow in an order of the main round.\u003c/p\u003e\u003ch1\u003e\u003ca href\u003d\"/contest/524/problem/A\" title\u003d\"VK Cup 2015 - Round 1\"\u003e524A - Возможно, вы знаете этих людей?\u003c/a\u003e\u003c/h1\u003e\u003cp\u003eThis problem didn\u0027t appear in an online mirror. Its editorial will be left as an exercise in Russian language for those who are curious what it is about \u003d)\u003c/p\u003e\u003ch1\u003e\u003ca href\u003d\"/contest/524/problem/B\" title\u003d\"VK Cup 2015 - Round 1\"\u003e524B - Фото на память - 2 (round version)\u003c/a\u003e\u003c/h1\u003e\u003cp\u003eIn an original version there was no constraint that no more than n / 2 friends should lie. This version can be solved pretty easy. Iterate over all possible values of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eH\u003c/i\u003e\u003c/span\u003e. For a fixed \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eH\u003c/i\u003e\u003c/span\u003e we have to minimize total width of all rectangles on the photo. So, for each rectangle we need to choose in which orientation it fits into photo having the minimum possible width.\u003c/p\u003e\u003ch1\u003e\u003ca href\u003d\"/contest/529/problem/B\" title\u003d\"VK Cup 2015 - Round 1 (unofficial online mirror, Div. 1 only)\"\u003e529B - Group Photo 2 (online mirror version)\u003c/a\u003e\u003c/h1\u003e\u003cp\u003eIn an online mirror version the problem was slightly harder. Let\u0027s call people with \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ew\u003c/i\u003e ≤ \u003ci\u003eh\u003c/i\u003e\u003c/span\u003e \\textit{high}, and remaining people \\textit{wide}. Let\u0027s fix photo height \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eH\u003c/i\u003e\u003c/span\u003e. Let\u0027s consider several following cases:\u003c/p\u003e \u003cul\u003e   \u003cli\u003eIf a high person fits into height \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eH\u003c/i\u003e\u003c/span\u003e, we leave him as is.\u003c/li\u003e   \u003cli\u003eIf a high person doesn\u0027t fit into height \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eH\u003c/i\u003e\u003c/span\u003e, the we have to ask him to lie down, increasing the counter of such people by \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e.\u003c/li\u003e   \u003cli\u003eIf a wide person fits into height \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eH\u003c/i\u003e\u003c/span\u003e, but doesn\u0027t fit lying on the ground, then we leave him staying.\u003c/li\u003e   \u003cli\u003eIf a wide person fits into height \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eH\u003c/i\u003e\u003c/span\u003e in both ways, then we first ask him to stay and write into a separate array value of answer decrease if we ask him to lie on the ground: \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ew\u003c/i\u003e - \u003ci\u003eh\u003c/i\u003e\u003c/span\u003e.\u003c/li\u003e   \u003cli\u003eIf somebody doesn\u0027t fit in both ways, then such value of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eH\u003c/i\u003e\u003c/span\u003e is impossible.\u003c/li\u003e \u003c/ul\u003e\u003cp\u003eNow we have several people that have to lie on the ground (from second case) and if there are too many of them (more than \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e / 2\u003c/span\u003e) then such value of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eH\u003c/i\u003e\u003c/span\u003e is impossible.\u003c/p\u003e\u003cp\u003eAfter we put down people from second case there can still be some vacant ground positions, we distribute them to the people from fourth case with highest values of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ew\u003c/i\u003e - \u003ci\u003eh\u003c/i\u003e\u003c/span\u003e. Then we calculate the total area of the photo and relax the answer.\u003c/p\u003e\u003ch1\u003e\u003ca href\u003d\"/contest/524/problem/C\" title\u003d\"VK Cup 2015 - Round 1\"\u003e524C - The Art of Dealing with ATM\u003c/a\u003e\u003c/h1\u003e\u003cp\u003eIntended solution has the complexity \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/7f/14/7f143edd7e591bcdbbaa7f42dda6dbe7dcbb3a22.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e or \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/7e/d0/7ed014770f7acbd5cb6aa6b2b3f058d1d24f6c0d.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. For each possible value \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e that we can get write a pair \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ex\u003c/i\u003e, \u003ci\u003em\u003c/i\u003e)\u003c/span\u003e where \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/span\u003e is number of bills to achieve this value. Sort this array in ascending order of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e and leave only the best possible number of bills for each value of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e. Then to answer a query we should iterate over the first summand in resulting sum and look for the remainder using binary search. The alternate way is the method of two pointers for looking in an array for a pair of numbers with a given sum that works in amortized \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(1)\u003c/span\u003e time. Check that we used no more than \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e bills totally and relax the answer if needed.\u003c/p\u003e\u003ch1\u003e\u003ca href\u003d\"/contest/524/problem/D\" title\u003d\"VK Cup 2015 - Round 1\"\u003e524D - Social Network\u003c/a\u003e\u003c/h1\u003e\u003cp\u003eLet\u0027s follow greedily in following way. Iterate over all requests in a chronological order. Let\u0027s try to associate each query to the new person. Of course we can\u0027t always do that: when there are already \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eM\u003c/i\u003e\u003c/span\u003e active users on a site, we should associate this request with some existing person. Now we need to choose, who it will be.\u003c/p\u003e\u003cp\u003eLet\u0027s show that the best way is to associate a request with the most recently active person. Indeed, such \u0026quot;critical\u0026quot; state can be represented as a vector consisting of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eM\u003c/i\u003e\u003c/span\u003e numbers that are times since the last request for each of the active people in descending order. If we are currently in the state \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e, \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e, ..., \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eM\u003c/i\u003e\u003c/sub\u003e)\u003c/span\u003e, then we can move to the one of the \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eM\u003c/i\u003e\u003c/span\u003e new states \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e, \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e, ..., \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eM\u003c/i\u003e - 1\u003c/sub\u003e, 0)\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e, \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e, ..., \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eM\u003c/i\u003e - 2\u003c/sub\u003e, \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eM\u003c/i\u003e\u003c/sub\u003e, 0)\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e...\u003c/span\u003e , \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e, \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e3\u003c/sub\u003e, ..., \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eM\u003c/i\u003e\u003c/sub\u003e, 0)\u003c/span\u003e depending on who we will associate the new request with. We can see that the first vector is component-wise larger then other ones, so it is better than other states (since the largest number in some component of vector means that this person will probably disappear earlier giving us more freedom in further operations).\u003c/p\u003e\u003cp\u003eSo, all we have to do is to simulate the process keeping all active people in some data structure with times of their last activity. As a such structure one can use anything implementing the priority queue interface (priority_queue, set, segment tree or anything else). Complexity of such solution is \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/e7/0f/e70fbdc8079c0b9ff4f31073012937bac199bc6b.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e.\u003c/p\u003e\u003ch1\u003e\u003ca href\u003d\"/contest/524/problem/E\" title\u003d\"VK Cup 2015 - Round 1\"\u003e524E - Rooks and Rectangles\u003c/a\u003e\u003c/h1\u003e\u003cp\u003eLet\u0027s understand what does it mean that some cell isn\u0027t attacked by any rook. It means that there exists row and column of the rectangle without rooks on them. It\u0027s hard to check this condition, so it is a good idea to check the opposite for it. We just shown that the rectangle is good if on of the two conditions holds: there should be a rook in each row of it or there should be a rook in each column.\u003c/p\u003e\u003cp\u003eWe can check those conditions separately. How can we check that for a set of rectangles there is a point in each row? This can be done by sweeping vertical line from left to right. Suppose we are standing in the right side of a rectangle located in rows from \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/span\u003e to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/span\u003e with the left side in a column \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ey\u003c/i\u003e\u003c/span\u003e. Then if you denote as \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003elast\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e]\u003c/span\u003e the position of the last rook appeared in a row number \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e, the criteria for a rectangle looks like \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/fd/63/fd63e6ea2b2f75ee9be3f5b820a081956c8d6c56.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. That means that we can keep the values \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003elast\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e]\u003c/span\u003e in a segment tree and answer for all rectangles in logarithmic-time. Similarly for columns. This solution answers all queries in off-line in time \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e((\u003ci\u003eq\u003c/i\u003e + \u003ci\u003ek\u003c/i\u003e)\u003ci\u003elog\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e + \u003ci\u003em\u003c/i\u003e))\u003c/span\u003e.\u003c/p\u003e\u003ch1\u003e\u003ca href\u003d\"/contest/524/problem/F\" title\u003d\"VK Cup 2015 - Round 1\"\u003e524F - And Yet Another Bracket Sequence\u003c/a\u003e\u003c/h1\u003e\u003cp\u003eThe main idea is that the bracket sequence can be seen as a sequence of prefix balances, i. e sequence \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e)\u003c/span\u003e such that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e + 1\u003c/sub\u003e \u003d \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e ± 1\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eCalculate the number of opening brackets \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003c/span\u003e and closing brackets \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u003c/span\u003e in original string. It is true that if \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e \u0026gt;  \u003d \u003ci\u003eB\u003c/i\u003e\u003c/span\u003e then the string can be fixed by adding \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e - \u003ci\u003eB\u003c/i\u003e\u003c/span\u003e closing brackets at the end and shifting the resulting string to the point of balance minimum, and if \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e ≤ \u003ci\u003eB\u003c/i\u003e\u003c/span\u003e, then the string can be similarly fixed by adding \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e - \u003ci\u003eA\u003c/i\u003e\u003c/span\u003e opening brackets to the beginning and then properly shifting the whole string. It\u0027s obvious that it is impossible to fix the string by using the less number of brackets. So we know the value of the answer, now we need to figure out how it looks like.\u003c/p\u003e\u003cp\u003eSuppose that we first circularly shift and only then add brackets. Suppose that we add \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e closing brackets. Consider the following two facts:\u003c/p\u003e \u003cul\u003e   \u003cli\u003eIf it is possible to fix a string by adding closing bracket to some \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e positions then it is possible to fix it by adding \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e closing brackets to the end of the string.\u003c/li\u003e   \u003cli\u003eFrom all strings obtained from a give one by adding closing brackets to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e positions, the minimum is one that obtained by putting \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e closing brackets to the end.\u003c/li\u003e \u003c/ul\u003e\u003cp\u003eEach of those statements is easy to prove. They give us the fact that in the optimal answer we put closing brackets at the end of the string (after rotating the initial string). So we have to consider the set of the original string circular shifts such that they transform to the correct bracket sequence by adding \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e \u003d \u003ci\u003eA\u003c/i\u003e - \u003ci\u003eB\u003c/i\u003e\u003c/span\u003e closing brackets to the end and choose the lexicographically least among them. Comparing circular shifts of the string is the problem that can be solved by a suffix array. The other way is to find lexicographical minimum among them by using hashing and binary search to compare two circular shifts.\u003c/p\u003e\u003cp\u003eThe case when \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e ≤ \u003ci\u003eB\u003c/i\u003e\u003c/span\u003e is similar except that opening brackets should be put into the beginning of the string.\u003c/p\u003e\u003cp\u003eSo, overall complexity is \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/e7/0f/e70fbdc8079c0b9ff4f31073012937bac199bc6b.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e.\u003c/p\u003e\u003c/div\u003e","tags":["vk cup","round 1","editorial"]}}