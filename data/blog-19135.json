{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1436389914,"rating":7,"authorHandle":"mahim007","modificationTimeSeconds":1436389914,"id":19135,"title":"\u003cp\u003egetting WA on a simple segment tree problem, pls help me \u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eproblem link:maximum sum from spoj [problem:http://www.spoj.com/problems/KGSS]\u003c/p\u003e\u003cp\u003emy code:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e#include\u0026lt;bits/stdc++.h\u0026gt;\nusing namespace std;\n#define mx 100009\n#define ll long long int\nll arr[mx];\n//ll tree[mx*4];\n//ll state\u003d0;\nstruct nd{\n    ll high;\n    ll sum;\n};\nnd tree[mx*4];\nll ans\u003d-1;\nll res;\nvoid init(ll node,ll l,ll r){\n    if(l\u003d\u003dr){\n        tree[node].high\u003darr[l]; //cout\u0026lt;\u0026lt;\u0026quot;lf node:\u0026quot;\u0026lt;\u0026lt;node\u0026lt;\u0026lt;\u0026quot; val:\u0026quot;\u0026lt;\u0026lt;tree[node].high\u0026lt;\u0026lt;endl;\n        tree[node].sum\u003darr[l];\n        return;\n    }\n    ll Left\u003dnode*2;\n    ll Right\u003dnode*2+1;\n    ll mid\u003d(l+r)/2;\n    init(Left,l,mid);\n    init(Right,mid+1,r);\n    tree[node].high\u003dmax(tree[Left].high,tree[Right].high);\n    ll hh\u003d-1;\n    hh\u003dmax(hh,tree[Left].high+tree[Right].high);\n    hh\u003dmax(hh,tree[Left].sum);\n    hh\u003dmax(hh,tree[Right].sum);\n    tree[node].sum\u003dhh; //cout\u0026lt;\u0026lt;\u0026quot;node:\u0026quot;\u0026lt;\u0026lt;node\u0026lt;\u0026lt;\u0026quot; val:\u0026quot;\u0026lt;\u0026lt;tree[node].sum\u0026lt;\u0026lt;\u0026quot; high:\u0026quot;\u0026lt;\u0026lt;tree[node].high\u0026lt;\u0026lt;endl;\n}\n\nll query(ll node,ll l,ll r,ll i,ll j){\n    if(l\u0026gt;j || r\u0026lt;i){\n        return 0;\n    }\n    if(l\u0026gt;\u003di \u0026amp;\u0026amp; r\u0026lt;\u003dj){//cout\u0026lt;\u0026lt;\u0026quot;node:\u0026quot;\u0026lt;\u0026lt;node\u0026lt;\u0026lt;\u0026quot; val:\u0026quot;\u0026lt;\u0026lt;tree[node].sum\u0026lt;\u0026lt;endl;  cout\u0026lt;\u0026lt;\u0026quot;l:\u0026quot;\u0026lt;\u0026lt;l\u0026lt;\u0026lt;\u0026quot; r:\u0026quot;\u0026lt;\u0026lt;r\u0026lt;\u0026lt;endl;\n        if(tree[node].sum\u0026gt;res){\n            res\u003dtree[node].sum;\n        }\n        return tree[node].high;\n    }\n    ll Left\u003dnode*2;\n    ll Right\u003dnode*2+1;\n    ll mid\u003d(l+r)/2;\n    ll p1\u003dquery(Left,l,mid,i,j);\n    ll p2\u003dquery(Right,mid+1,r,i,j);\n    if(p1+p2\u0026gt;res){ //cout\u0026lt;\u0026lt;p1\u0026lt;\u0026lt;\u0026quot;+\u0026quot;\u0026lt;\u0026lt;p2\u0026lt;\u0026lt;endl;\n        res\u003dp1+p2;\n    }\n    return max(p1,p2);\n}\n\nvoid update(ll node,ll l,ll r,ll pos,ll val){\n    if(l\u0026gt;pos || r\u0026lt;pos){\n        return;\n    }\n    if(l\u003d\u003dr){\n        tree[node].high\u003dval;\n        tree[node].sum\u003dval;\n        return;\n    }\n    ll Left\u003dnode*2;\n    ll Right\u003dnode*2+1;\n    ll mid\u003d(l+r)/2;\n    update(Left,l,mid,pos,val);\n    update(Right,mid+1,r,pos,val);\n    tree[node].high\u003dmax(tree[Left].high,tree[Right].high);\n    tree[node].sum\u003dmax(tree[node].sum,tree[Left].high+tree[Right].high);\n}\n\nint main(){\n    ll n,i,j;\n    while(scanf(\u0026quot;%lld\u0026quot;,\u0026amp;n)\u003d\u003d1){\n        for(i\u003d1;i\u0026lt;\u003dn;i++){\n            scanf(\u0026quot;%lld\u0026quot;,\u0026amp;arr[i]);\n        }\n        init(1,1,n);\n        char ch;\n        ll q;\n        scanf(\u0026quot;%lld\u0026quot;,\u0026amp;q);\n        getchar();\n        for(i\u003d1;i\u0026lt;\u003dq;i++){\n            scanf(\u0026quot;%c\u0026quot;,\u0026amp;ch);\n            if(ch\u003d\u003d\u0027Q\u0027){\n                ll x,y; //cout\u0026lt;\u0026lt;\u0026quot;Q pressed\u0026quot;\u0026lt;\u0026lt;endl;\n                scanf(\u0026quot;%lld %lld\u0026quot;,\u0026amp;x,\u0026amp;y);\n                query(1,1,n,x,y);\n                printf(\u0026quot;%lld\\n\u0026quot;,res);\n                res\u003d-1;\n                //state\u003d0;\n            }\n            else{\n                ll x,y;\n                scanf(\u0026quot;%lld %lld\u0026quot;,\u0026amp;x,\u0026amp;y);\n                update(1,1,n,x,y);\n            }\n            getchar();\n        }\n    }\n    return 0;\n}\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":[]}}