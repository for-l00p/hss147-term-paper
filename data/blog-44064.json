{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1459245673,"rating":39,"authorHandle":"halyavin","modificationTimeSeconds":1459430237,"id":44064,"title":"\u003cp\u003eEducational Codeforces Round 10 Challenge Overview.\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003ch2\u003e652A — Gabriel and Caterpillar\u003c/h2\u003e\u003cp\u003eI have lost count of number of different challenges in this problem. Only 14 author tests for such a tricky problem were clearly not enough. There were 2 types of challenges. \u003c/p\u003e\u003cp\u003eThe first type use integer overflow. When I saw that both \u003ci\u003eh\u003c/i\u003e\u003csub\u003e1\u003c/sub\u003e, \u003ci\u003eh\u003c/i\u003e\u003csub\u003e2\u003c/sub\u003e and \u003ci\u003ea\u003c/i\u003e, \u003ci\u003eb\u003c/i\u003e are bounded by 10\u003csup\u003e5\u003c/sup\u003e I suspected that overflow could be a problem. But my solution divided heights by speeds to get the number of days. Surely there are no need to multiply these quantities I thought. Boy I was wrong. A lot of solutions used a simulation of the process. As long as \u003ci\u003ea\u003c/i\u003e \u0026gt; \u003ci\u003eb\u003c/i\u003e and the caterpillar is going up, there is no problem. But if the caterpillar is going down, you need to give up eventually and return -1. The largest positive answer is about 10\u003csup\u003e5\u003c/sup\u003e/12 but the largest lose of height per day is about 12·10\u003csup\u003e5\u003c/sup\u003e. The product is about 10\u003csup\u003e10\u003c/sup\u003e \u0026gt; 2\u003csup\u003e31\u003c/sup\u003e and the caterpillar mistakenly finds an apple at the high earth orbit as a result. The challenge test looks like this:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e1 100000\n1 100000\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe second type of challenges were small tests with the answer ≤2. The most popular challenge were\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e1 9\n1 1\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003ewhere the caterpillar reaches the apple at exactly the end of the day. I think the absence of such edge-case test was an oversight. The next most popular bug was trying to calculate the number of hours to reach the apple instead of calculating the caterpillar position after given amount of hours. This could backfire when the number of hours is not a whole number and rounding in integer division is not working in the direction you need. Such bugs were challenged by tests like these:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e1 18\n2 1\n\u003c/code\u003e\u003c/pre\u003e \u003cpre\u003e\u003ccode\u003e1 18\n2 2\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eAnother popular problem is using division to calculate the number of days but getting negative number. It can happen in the test\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e1 2\n4 3\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe caterpillar reaches apple in the first day, but if you continue its trajectory backwards, it will also reach apple in the day before.\u003c/p\u003e\u003cp\u003eA few people misunderstood the problem and thought that they need to calculate the number of days since the initial observation. They were challenged with test case where the caterpillar reaches apple in the beginning of the day:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e1 90\n10 1\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe rest of the challenges are too diverse. I will only highlight submission \u003ca href\u003d\"/contest/652/submission/16927302\" title\u003d\"Посылка 16927302 от tookunn\"\u003e16927302\u003c/a\u003e where I had to use \u003ci\u003eh\u003c/i\u003e\u003csub\u003e1\u003c/sub\u003e not equal to 1. It was a case of confusion between the marker value and a normal value. \u003c/p\u003e\u003ch2\u003e652B — z-sort\u003c/h2\u003e\u003cp\u003eThere were 5 challenges for this problem. The author test set contained only single test with odd \u003ci\u003en\u003c/i\u003e greater than one. So it was not surprising that 3 out of 5 challenges used the first non-trivial odd case of \u003ci\u003en\u003c/i\u003e equal to 3. The other 2 challenges exploited reads just beyond the end of the vector. I used custom invocation tab to print the value beyond the end of the vector and construct a test where this value confuses program.\u003c/p\u003e\u003ch2\u003e653C — Foe Pairs\u003c/h2\u003e\u003cp\u003eThere were 2 self-challenges that revealed worst cases for O(\u003ci\u003en\u003c/i\u003e\u003csup\u003e2\u003c/sup\u003e) solutions. Both used the same test:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e300000 299999\n1 2 ... 300000\n1 300000\n2 300000\n...\n299999 300000\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eI wonder how many more solution failed it after the challenge phase. One more challenge was a random test for solution which had correct time complexity but was too close to time limit (998ms). My first challenge used a bug in removing same consecutive foe pairs from the input. Can you see it?\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e    if(count \u0026amp;\u0026amp; u[count-1] \u003d\u003d u[count] \u0026amp;\u0026amp; v[count] \u003d\u003d v[count]);\n    else count++;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe worst part is that deduplication was not needed. It wouldn\u0027t work anyway since same foe pairs may not be adjacent in the input. Deduplication also played a fatal role for my second challenge. This time, it was done correctly but solution didn\u0027t take into account that it got less than \u003ci\u003em\u003c/i\u003e pairs. So the program read foe pairs beyond the end of the vector and produced wrong result.\u003c/p\u003e\u003ch2\u003e654D — Nested Segments\u003c/h2\u003e\u003cp\u003eIf you used unordered_map to compress coordinates in this problem, you had a bad time... It took me quite a lot of attempts to construct an anti-hash test for this problem but all hash solutions failed on it. There were no other hacks. The author test set is very good for this problem.\u003c/p\u003e\u003ch2\u003e654E \u0026amp; 654F — Pursuit For Artifacts \u0026amp; Ants on a Circle\u003c/h2\u003e\u003cp\u003eI didn\u0027t have time to challenge solutions of these problems and no one else been able to do that too. But it wasn\u0027t all for nothing — \u003ca class\u003d\"rated-user user-green\" href\u003d\"/profile/stoyan_malinin\" title\u003d\"Ученик stoyan_malinin\"\u003estoyan_malinin\u003c/a\u003e was able to hack one of the author solutions for F. I don\u0027t know whether there were a particular idea for that test or it happened by accident though.\u003c/p\u003e\u003c/div\u003e","tags":["educational round 10","challenge"]}}