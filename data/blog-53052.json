{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1498995709,"rating":58,"authorHandle":"uditgupta","modificationTimeSeconds":1498998106,"id":53052,"title":"\u003cp\u003eIn depth tutorial for Adding Arithmetic progression to range using Segment Tree wrt Problem Mister b and PR Shifts\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003ePLEASE INCREASE BRIGHTNESS IF IMAGES ARE NOT CLEARLY VISIBLE. POOR PHONE CAMERA . APOLOGIES\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eIf your are familier with concept of Segment Trees with Lazy Update, Please go ahead and read the solution. \nIf not, please do these two classic simple problems of Segment Trees with Lazy Update on Codchef. \nThen come back to this problem. This problem is a classic implementation of Segment Trees. \nPurpose of this tutorial is to help you find your solution and not just giving the solutions.\n\u003c/code\u003e\u003c/pre\u003e \u003cpre\u003e\u003ccode\u003eYour code here...\n\u003c/code\u003e\u003c/pre\u003e \u003cul\u003e   \u003cli\u003e\u003ca href\u003d\"https://www.codechef.com/problems/FLIPCOIN\"\u003eFlipcoin Codechef\u003c/a\u003e \u003cbr /\u003e  You can read my commented code for this flipcoin (\u003ca href\u003d\"https://www.codechef.com/viewsolution/4341486\"\u003ehttps://www.codechef.com/viewsolution/4341486\u003c/a\u003e)\u003c/li\u003e   \u003cli\u003e\u003ca href\u003d\"https://www.codechef.com/problems/MULTQ3\"\u003eMultQ3 Codechef\u003c/a\u003e \u003cbr /\u003e  You can read my commented code for this MultQ3 (\u003ca href\u003d\"https://www.codechef.com/viewsolution/4342905\"\u003ehttps://www.codechef.com/viewsolution/4342905\u003c/a\u003e)\u003c/li\u003e \u003c/ul\u003e\u003cp\u003e\u003cimg alt\u003d\"Alt text\" src\u003d\"/predownloaded/c8/f4/c8f4b188f9bd1678bd7705c889210def7914173e.jpg\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e \u003cbr /\u003e  Now we will consider with above example. Hope this example is self explanatory.  Now think how you can exploit this concept of adding a value in a range. Try yourself. Think in terms of segment tree.\u003c/p\u003e\u003cp\u003e\u003cb\u003eNow step two — Thinking how actually this problem is adding in a range problem. \u003c/b\u003e \u003c/p\u003e\u003cp\u003e\u003cimg alt\u003d\"Text\" src\u003d\"/predownloaded/cd/35/cd351849b1fdad1c57aad50ae02e19edf64d9b1b.jpg\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e \u003cbr /\u003e  \u003cbr /\u003e\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e Consider example \u0026amp;mdash;  \n        \n          P1 P2 P3 P4 P5 P6 P7 P8 P9 P10\u0026lt;br/\u0026gt;\n\t  8  3  5  7  4  9  10 1  2  6   \u0026lt;br /\u0026gt;\n\n Think all the case i.e. in what range we add to what values. ? Try yourself. \u0026lt;br/\u0026gt;\t  \n Case 1. p[i] \u0026gt;\u003d i \u0026lt;br/\u0026gt;\n         Take p[4] \u003d 7\u0026lt;br/\u0026gt;\n         for shift id             Id0   Id1  Id2  Id3  Id4  Id5 Id6  Id7  Id8  Id9\u0026lt;br/\u0026gt;\n\t value which is to be \u0026lt;br/\u0026gt;\n\t added  --\u0026gt;               3     2    1    0    1    2   3    6    5    4\u0026lt;br/\u0026gt;\n\t \u0026lt;br/\u0026gt;\n\t (hope you understands this. !!!!)   bingo go ahead...\u0026lt;br/\u0026gt;\n\t deduction now \u0026lt;br/\u0026gt;\n\t  \u0026lt;br/\u0026gt;\n\t  Case 1.1   We have to add values (3, 2, 1, 0) for shift id range (0, 1, 2, 3)\u0026lt;br/\u0026gt;\n\t  Case 1.2   We have to add values (1, 2, 3, 0) for shift id range (4, 5, 6)\u0026lt;br/\u0026gt;\n\t  Case 1.3   We have to add values (6, 5, 4) for shift id range (7, 8, 9)\u0026lt;br/\u0026gt;\n Case 2. p[i] \u0026lt; i \u0026lt;br/\u0026gt;\n         Try yourself. Code will help. Code is commented. Please see if you are struck. \u0026lt;br/\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003ccode\u003e  So now we have to add a arithmetic progression in some range in a segment tree. \u003c/code\u003e  Adding some value to Segment tree is direct problem. Now think how we can add AP to ST.  Before going to this, please evaluate what must be final answer and time complexity.\u003c/p\u003e\u003cp\u003e\u003ccode\u003e  Since leaves store the value which are added to a particular shift.          Like 1st leave store value to be added for 0 shift.       2nd leave store value to be added for 1st shift.  Hence we need to take the minimum of all leaves.  Therefore query segment tree once in the end.   Updating Segment tree is O(Logn)  Total time complexity O(nLogn). \u003c/code\u003e\u003c/p\u003e\u003cp\u003e\u003cb\u003e Step 3 — Adding Arithmetic Progression to Segment Tree using Segment Tree with Lazy propogation. \u003c/b\u003e \u003c/p\u003e\u003cp\u003e\u003cimg alt\u003d\"text\" src\u003d\"/predownloaded/69/eb/69ebba33f6ec0d51437bcb9178bd96102a53fc32.jpg\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003e```  Now, consider a segment tree with 0-7 as nodes. i.e. it means we have shift id from 0 to 7. leaves represents  value to be added for shift id 0,1,2,3...,7.\u003cbr /\u003e Now if we have updation query to add values (0,1,2,3) in range (2,5) of segment tree.  Refer to above diagram.  we are splittng range (2,5) in two parts 1. range(2,3) 2. range(4,5) ie there are 4 nodes and 2 nodes in both  left \u0026amp; right tree.  So, value(0,3) also has to be splitted in same way.  So Left Tree range(2,3)  value(0,1)  Right Tree range(4,5)  value(2,3).\u003c/p\u003e\u003cp\u003eGeneral formulae :-  we have range(l,r) in which we have to update.  value as (valueLeft, valueRight) values to be updated  (a,b) current range in our segment tree\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e  N \u003d number of nodes in (l,r) \u003d r - l +1\n  this N also is number values in AP in (valueLeft, valueRight)\n  valueLeft + (N-1)*Difference \u003d valueRight\n  Difference \u003d (valueRight - valueLeft) / (N-1). //Corner case if N\u003d\u003d1.\n  so now we have to split (l,r) in two parts having \n  Leftnodes \u003d (a+b)/2 - l + 1\n  Rightnodes \u003d (r- (a+b)/2).\n\n                                            (valueLeft,valueRight)\n                                       |\n                              ----------------    |   ----------------------\n(valueLeft, valueLeft+(Leftnodes-1)*Difference )             (valueLeft+(Leftnodes)*Difference, valueRight)    \n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e```\u003c/p\u003e\u003cp\u003eMy solution with comments :- \u003ca href\u003d\"//codeforces.com/contest/819/submission/28197900\"\u003eAccepted Submission\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e","tags":["segment tree","lazy updates"]}}