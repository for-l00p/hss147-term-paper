{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1487015441,"rating":0,"authorHandle":"Loopin","modificationTimeSeconds":1487015586,"id":50414,"title":"\u003cp\u003eInteresting Matrix problem\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e\u003cstrong\u003eYou have \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003enXn\u003c/i\u003e\u003c/span\u003e matrix filled with numbers,you have to pick \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e numbers from it such that their sum is maximal and no \u003cspan class\u003d\"tex-span\"\u003e2\u003c/span\u003e are in same column or row.\u003c/strong\u003e My guesses after 20 mins: I tried greedy algorithm,sorting each row and memorizing column of each number in new sorted matrix and now I would take largest in each row and if \u003cspan class\u003d\"tex-span\"\u003e2\u003c/span\u003e are in same column I would pick larger and move pointer for row of lower one to next largest number,but no can do,found counterexample,we can pick lower one if number behind greater number is much larger then number behind lower number...\u003c/p\u003e\u003c/div\u003e","tags":[]}}