{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1459167762,"rating":64,"authorHandle":"joomas","modificationTimeSeconds":1459167762,"id":44042,"title":"\u003cp\u003eBut why MIN macros?\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eI often, not that often, but still often see things like this while hacking:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e#define MIN(a,b) (a) \u0026lt; (b) ? (a) : (b)\n#define MAX(a,b) (a) \u0026gt; (b) ? (a) : (b)\n#define ABS(a) (a) \u0026gt; 0 ? (a) : -(a)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eWhile these are not as common as other (dubious) preprocessor macros, I still see these being used fairly commonly. There are, in my opinion, several downsides to using these -- if the inputs were functions, one of them gets executed twice.\u003c/p\u003e\u003cp\u003eSo I want to ask, is there any advantage to using these over \u003ccode\u003estd::min(a, b)\u003c/code\u003e and others?\u003c/p\u003e\u003c/div\u003e","tags":["preprocessor","macros"]}}