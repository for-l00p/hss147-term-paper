{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1465154219,"rating":0,"authorHandle":"VastoLorde95","modificationTimeSeconds":1465154910,"id":45256,"title":"\u003cp\u003eHints for Week 1\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003ch2\u003eRaising Bacteria\u003c/h2\u003e\u003cp\u003eThink binary :)\u003c/p\u003e\u003ch2\u003eTavas and SaDDas\u003c/h2\u003e\u003cp\u003eOnce again think binary. You may want to use some bit manipulation tricks to simplify the implementation else the problem might get a bit too tricky to get right.\u003c/p\u003e\u003ch2\u003eCut Ribbon\u003c/h2\u003e\u003cp\u003eDP\u003c/p\u003e\u003ch2\u003eSereja and Suffixes\u003c/h2\u003e\u003cp\u003eSlightly harder than the others We saw prefix sums, why not try suffix sums? :) Be careful when using inbuilt functions here and see what the time complexity of these inbuilt functions are. Naive inbuilt functions to compute distinct numbers take \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e)\u003c/span\u003e time for an array of size \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e.\u003c/p\u003e\u003ch2\u003eChat room\u003c/h2\u003e\u003cp\u003eNo hints for this one.\u003c/p\u003e\u003c/div\u003e","tags":[]}}