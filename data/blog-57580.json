{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1517917388,"rating":-30,"authorHandle":"beka00","modificationTimeSeconds":1517917388,"id":57580,"title":"\u003cp\u003eAn awesome list for competitive programming!\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eThis is a project I started from late January 2016.\u003c/p\u003e\u003cp\u003eMy motive is that: Although there\u0027s fantastic information out there, I think they\u0027re still spread all over the place. Therefore, in my opinion it would probably be cool if there\u0027s an awesome list for competitive programming! ( It\u0027s now featured on the main list! ) I\u0027m actively updating the list here: \u003ca href\u003d\"https://github.com/lnishan/awesome-competitive-programming\"\u003ehttps://github.com/lnishan/awesome-competitive-programming\u003c/a\u003e Awesome Competitive Programming Awesome A curated list of awesome Competitive Programming, Algorithm and Data Structure resources. Created with a view to connecting people to information, this list below contains a complete collection of all the fantastic resources I\u0027ve collected over the course of my 11-year competitive programming career. I hope you\u0027ll find it useful :) What is competitive programming? — Quora Contributing Please kindly follow CONTRIBUTING.md to get started. You can also contribute by sharing! Share the list with your classmates, your friends and everyone :) By connecting more people to information, You, are doing not me, but everyone a HUGE favor!\u003c/p\u003e\u003cp\u003eI really hope that more people can benefit from this list :) Table of Contents List of Lists Syllabuses Tutorial Websites Open Courses Open Courses for Algorithms and Data Structures Books Books for Algorithms | Books for Mathematics Sites for Practice Problem Classifiers | Contest Calendars Sites for Questions Implementations Language Specifics C/C++ | Java | Miscellaneous Tools IDEs | Personal use | Contest Preparation Community Blogs | Youtube and Livestreams | Quora Other Awesome Resources Articles | FAQs | Awesome Lists | Interview Questions License List of Lists Awesome curated lists classified by topics.\u003c/p\u003e\u003cp\u003e☆ Name Description ★★★ Good Blog Post Resources about Algorithm and Data Structures — Codeforces A collection of fantastic tutorial blog posts written by Codeforces users. Some intriguing ones include Palindromic Trees, Policy Based Data Structures, and a lot more. ★★★ Data Structures and Algorithms — CodeChef Discuss A very complete list of competitive programming resources. A must-have in your browser bookmark. ★★★ How to prepare for ACM — ICPC? — GeeksforGeeks A detailed walk-through of the preparations for ACM-ICPC. Syllabuses Find out what topics you need to learn.\u003c/p\u003e\u003cp\u003e☆ Name Description ★★★ IOI Syllabus A detailed syllabus on which IOI contestants will be tested. This is still somewhat relevant to ACM-ICPC. ★★★ How to prepare for ACM — ICPC? — GeeksforGeeks A detailed walk-through of the preparations for ACM-ICPC. ★★☆ Programming Camp Syllabus A list of important topics in competitive programming with exercise problems. ★★☆ Juniors Training Sheet, by Mostafa Saad Ibrahim Simple problems for newcomers Tutorial Websites Awesome websites with great tutorials.\u003c/p\u003e\u003cp\u003e☆ Name Description ★★★ Topcoder Data Science Tutorials A list of tutorials written by respected Topcoder members. Many top programmers started learning data sciences from here. ★★★ E-Maxx (Russian), (English) A tutorial website widely used and referenced in the Russian-speaking competitive programming community. Only a small fraction of the original site is translated into English, but Google Translate would work okay. ★★☆ Algorithms — GeeksforGeeks A website with a large archive of nicely written articles on different topics. It is a great complimentary resource for algorithm courses. ★★☆ PEGWiki A website with amazing in-depth wiki-like writeups on many topics. It\u0027s far better than those on Wikipedia in my opinion. ★★☆ Notes — HackerEarth A great crowdsourcing platform for tutorials. Also visit Code Monk. ★★☆ USA Computing Olympiad (USACO) Contains several training pages on its website which are designed to develop one\u0027s skills in programming solutions to difficult and varied algorithmic problems at one\u0027s own pace. ★★☆ basecs A blog with in-depth, illustrated tutorials on basic algorithms and data structures. ★★☆ Competitive Programming — Commonlounge Short video tutorials for beginner and intermediate concepts. Advanced tutorials selected from the best ones available on various CP blogs. ★☆☆ OLYMPIADS IN INFORMATICS An international journal focused on the research and practice of professionals who are working in the field of teaching and learning informatics to talented student. ★☆☆ algolist (Russian) A Russian website devoted to algorithms of all sorts. Some topics listed on this website seems pretty interesting. ★★☆ 演算法筆記 (Algorithm Notes) (Chinese) One of the most popular tutorial websites among the Taiwanese competitive programming community. The maintainer for this website spends immense efforts on researching algorithms. ★★☆ 国家集训队论文 1999-2015 (Papers from Chinese IOI training camps) (Chinese) Papers from the Chinese IOI training camps. It\u0027s interesting for the fact that one can tell different regions emphasize different things. Open Courses Consider beginning your competitive programming journey with these awesome courses!\u003c/p\u003e\u003cp\u003e☆ Name Description ★★☆ Code Monk, by HackerEarth A fantastic step-by-step tutorial on the essential topics in competitive programming. ★★★ Stanford CS 97SI: Introduction to Competitive Programming Contests Offers comprehensive lecture slides and a short list of exercise problems. ★★☆ How to Win Coding Competitions: Secrets of Champions A course by ITMO University on competitive coding on edX. ★★☆ Codechef\u0027s Indian Programming Camp Video Lectures from Codechef\u0027s Indian Programming Camp 2016. Lectures given by top competitive programmers like Sergey Kulik, Kevin Charles Atienza and Anudeep Nekkanti. Primarily focused on exploring these concepts by applying them to actual competitive contest problems. ★★☆ Reykjavik T-414-ÁFLV: A Competitive Programming Course An awesome course taught by Bjarki Ágúst Guðmundsson (SuprDewd). These lectures feature neat slides and a nice list of problems to practice. ★★☆ NCTU DCP4631: Problem Solving and Programming Techniques A course on basic topics featuring good lecture slides. ★☆☆ Materials (English) from Arabic Competitive Programming Channel Some materials (slides \u0026amp; source codes) covering a broad range of algorithmic topics Open Courses for Algorithms and Data Structures ☆ Name Description ★★★ prakhar1989/awesome-courses#algorithms A fantastic list of open courses offered by notable institutions (MIT, Stanford, UC Berkeley ... etc.). ★★★ MIT SMA 5503: Introduction to Algorithms Lectured by Prof. Charles Leiserson (one of the coauthors of Introduction to Algorithms) and Prof. Erik Demaine (a brilliant professor who has made remarkable breakthroughs in data science), the course offers great materials, accompanied by intuitive and comprehensive analyses. ★★☆ UIUC Algorithm Course lecture notes, homeworks, exams, and discussion problems covering a broad range of algorithmic topics Books A list of recommended books for competitive programming.\u003c/p\u003e\u003cp\u003e☆ Name Description ★★☆ Competitive Programming, by Steven and Felix Halim This book contains a collection of relevant data structures, algorithms, and programming tips. It\u0027s a well-received book. ... The first edition is free for download (pdf). ★★☆ Programming Challenges: The Programming Contest Training Manual, by Steven Skiena and Miguel Revilla This book includes more than 100 programming challenges, as well as the theory and key concepts necessary for approaching them. Problems are organized by topic, and supplemented by complete tutorial material. ★★☆ Competitive Programmer\u0027s Handbook, by Antti Laaksonen (pllk) An introduction to competitive programming for aspiring IOI and ICPC contestants. Free to download (pdf). ★★★ Looking for a Challenge, written by a group of authors associated with the Polish Olympiads Most of the problems described in the book are really hard but they are explained in such a way that even beginners can understand. It appears to be out of stock (as of Aug, 2016), but you can reserve one on their official website. ★★☆ Computational Geometry: Algorithms and Applications, by Mark de Berg, Otfried Cheong, Marc van Kreveld, Mark Overmars This is a well-written book which covers a broad range of computational geometry problems. ★☆☆ The Hitchhiker’s Guide to the Programming Contests, by Nite Nimajneb This book is free for download (pdf). This book covers various topics relevant to competitive programming. ★★★ プログラミングコンテストチャレンジブック (Japanese), by 秋葉拓哉, 岩田陽一, 北川宜稔 An absolutely phenomenal book. The contents, organized in a very coherent manner, are nothing short of amazing. ... 培養與鍛鍊程式設計的邏輯腦：世界級程式設計大賽的知識、心得與解題分享 (Chinese Traditional) ★★☆ 算法竞赛入门经典 (Chinese), by 刘汝佳 The Art of Algorithms and Programming Contests (English), 打下好基礎：程式設計與演算法競賽入門經典 (Chinese Traditional) ★★☆ 算法竞赛入门经典——训练指南 (Chinese), by 刘汝佳, 陈锋 提升程式設計的解題思考力─國際演算法程式設計競賽訓練指南 (Chinese Traditional) ★★★ 算法艺术与信息学竞赛 (Chinese), by 刘汝佳, 黄亮 An old-time classic. It\u0027s old but the contents in this book are still considered to be very difficult by today\u0027s standards. Books for Algorithms ☆ Name Description ★★★ Introduction to Algorithms, by Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest and Clifford Stein Also known as CLRS (taken from name initials), this book is often referred to as the \u0026quot;bible\u0026quot; for algorithms and data structures. It\u0027s one of the most popular textbooks for university algorithm courses. This book covered various algorithms and data structures in great detail. The writing is more rigorous and can be difficult to some. ★★☆ Algorithm Design, by Jon Kleinberg and Éva Tardos This book revolves around techniques for designing algorithms. It\u0027s well-organized and written in a clear, understandable language. Each chapter is backed with practical examples and helpful exercises. The chapter on network flow is highly praised by lots. ... The lecture slides that accompany the textbook are available on its official website. ★★☆ The Algorithm Design Manual, by Steven S. Skiena The book is written in more readable text. Some find it comprehensive than other books. You can also find some good resources (including the author\u0027s own video lectures) on its official website. ★★★ Algorithms, by Robert Sedgewick and Kevin Wayne This book is neatly categorized, coupled with elaborate explanations and fantastic illustrations. It is used in some IOI training camps as a textbook. Books for Mathematics ☆ Name Description ★★☆ Discrete Mathematics and Its Applications, by Kenneth H. Rosen Discrete Mathematics is closely relevant to competitive programming. This book provides comprehensive materials on a wide range of topics including: Logics and Proofs, Sets, Functions, Sequences, Matrices, Number Theory, Recursion, Counting, Probablity, Graphs, Trees and Boolean Alegra to name but a few. ★★☆ Concrete Mathematics: A Foundation for Computer Science, by Ronald L. Graham, Donald E. Knuth, Oren Patashnik The book offers a deeper insight into Discrete Mathematics with more emphases on number-related topics. ★★☆ Linear Algebra and Its Applications, by David C. Lay, Steven R. Lay, Judi J. McDonald The book does a brilliant job at bridging the gap between a physical system (for scientists and engineers) and an abstract system (for mathematicians). ★★☆ Introduction to Probability, by Charles M. Grinstead, J. Laurie Snell This is a well-written introductory probabilities book. ... It\u0027s free for download (pdf) (released under GNU Free Documentation License). ★★☆ How to Solve It: A New Aspect of Mathematical Method, by G. Polya An old-time classic. In this book, the author provides a systematic way to solve problems creatively. Sites for Practice Good online judge systems / contest platforms to practice.\u003c/p\u003e\u003cp\u003e☆ Name Description ★★★ Codeforces Codeforces is one of, if not, the most popular contest platforms out there. Currently maintained by Saratov State University, it features regular contests and countless awesome original problems. Additionally, every contest provides immediate helpful tutorials (usually) written by the authors themselves. Codeforces also houses a strong and engaging community. All in all, one would indeed learn and improve tremendously here. ★★★ Topcoder Topcoder has been around since 2001. Rich in history, It\u0027s considered to be one of the most prestigious organizations when it comes to technology competitions. Hundreds of SRMs gave birth to an abundant problemset. Problems here are typically more challenging than others and Topcoder therefore appeals to many elite programmers. The annual Topcoder Open (TCO) is also a widely-discussed event. ★★★ Google Code Jam Google Code Jam is certainly one of the most highly-esteemed programming competitions. The competition consists of unique programming challenges which must be solved in a fixed amount of time. Competitors may use any programming language and development environment to obtain their solutions. ★★☆ CodeChef CodeChef is a non-profit educational initiative of Directi. It\u0027s a global competitive programming platform and has a large community of programmers that helps students and professionals test and improve their coding skills. Its objective is to provide a platform for practice, competition and improvement for both students and professional software developers. Apart from this, it aims to reach out to students while they are young and inculcate a culture of programming in India. ★★★ SPOJ The SPOJ platform is centered around an online judge system. It holds a staggering amount of problems prepared by its community of problem setters or taken from previous programming contests, some of which are great problems for practice (refer to the Problem classifiers section). SPOJ also allows advanced users to organize contests under their own rules. ★★☆ Timus Timus Online Judge is the largest Russian archive of programming problems with automatic judging system. Problems are mostly collected from contests held at the Ural Federal University, Ural Championships, Ural ACM ICPC Subregional Contests, and Petrozavodsk Training Camps. ★☆☆ HDU HDU is an online judge maintained by Hangzhou Dianzi University. It\u0027s home to many classic problems from the Chinese IOI scene. ★★★ AtCoder AtCoder is a new but phenomenal contest platform created by a team of highly-rated Japanese competitive programmers. ★★☆ Aizu Online Judge Aizu online judge is a contest platform and problem archive hosted by The University of Aizu. It has a lot of great problems from programming competitions in Japan. ★★☆ UVa An old-school problem archive / online judge with rich history. Thousands of problems, including many classic ones, are featured here. However, it is strongly advised that you practice with uHunt following its \u0026quot;Competitive Programming Exercise\u0026quot; section. ★★☆ HackerRank HackerRank is a company that focuses on competitive programming challenges for both consumers and businesses. HackerRank\u0027s programming challenges can be solved in a variety of programming languages and span multiple computer science domains. ★★☆ POJ POJ is an online judge with many great problems maintained by Peking University. Most Chinese competitive programmers began their journey here. ★★☆ Project Euler Project Euler features a stunning set of good math problems. It also hosts a forum where people can discuss. ★☆☆ Hackerearth HackerEarth is a startup technology company based in Bangalore, India that provides recruitment solutions. ★☆☆ Caribbean Online Judge COJ is hosted by University of Informatics Sciences (UCI, by its acronym in Spanish), located in Cuba. Feature ACM ICPC and Progresive constest styles, mostly from Caribbean and Latin American problem setters, also has problem classifier and contest calendar. ★★☆ CS Academy New in the competitive programming scene, CS Academy is a growing online judge that hosts competitions once every two weeks. It supports live chat, interactive lessons and an integrated online editor (that actually works). ★★☆ Russian Code Cup Programming competitions powered by Mail.Ru Group. Competition consists of 3 qualification, 1 elimination and 1 final rounds. For each round contestants are given 4-8 problems which must be solved in a fixed amount of time. ★★☆ CodeFights CodeFights is a website for competitive programming practice and interview preparation. It features daily challenges of varying difficulty, an archive of problems and regular (every 15 minutes) mini-tournaments. Good for beginners. Problem Classifiers Sites classifying programming problems. Choose a category (eg. DP) of interest and practice problems on that topic.\u003c/p\u003e\u003cp\u003e☆ Name Description ★★★ A2 Online Judge Mixed ★★★ Problem Classifier SPOJ ★★☆ UVa Online Judge CP Book ★☆☆ Codeforces Tags CF (DP) ★★☆ HackerRank HackerRank ★★☆ Juniors Training Sheet, by Mostafa Saad Ibrahim Simple problems for newcomers ★★☆ Lucky貓的 UVA（ACM）園地 (Chinese) UVa ★★☆ Topcoder problem archive List of problems with categories and complexity levels Contest Calendars Calendars for impending programming contests. (Never miss another contest!)\u003c/p\u003e\u003cp\u003e☆ Name Description ★★★ Programming Contest Calendar — HackerRank Google Calendar export available ★★☆ clist.by API available for use ★★☆ Coding Calendar (Android App) ★★☆ Coder\u0027s Calendar: Android App, Chrome Extension, Firefox Add-on ★★★ CodeHorizon: iOS App, Android App Sites for Questions These are great sites to ask questions. Paste your codes at ideone, pastebin or other sites to avoid formatting issues.\u003c/p\u003e\u003cp\u003e☆ Name Description ★★★ Codeforces For quick answers, Codeforces is definitely the go-to place to ask about anything competition-related. ★★★ Competitive Programming — Quora You would typically get more elaborate answers on Quora, but you might not have your questions answered straightaway. ★★★ Competitive Programming — Commonlounge Most questions get a response in \u0026lt; 30 minutes. Questions can range from beginner simple questions to in-depth questions. ★★☆ Theoretical Computer Science Stack Exchange This place is generally for the academics, so don\u0027t ask questions about contest problems here. ★★☆ Algorithmic Competitive Programming Stack Exchange (proposed) Competitive programming enthusiasts on Stack Exchange are discussing whether to create a new competitive programming Q\u0026amp;A site. Implementations Algorithm \u0026amp; Data structure implementations.\u003c/p\u003e\u003cp\u003e☆ Name Description ★★★ CodeLibrary, by Andrey Naumenko (indy256) CodeLibrary contains a large collection of implementations for algorithms and data structures in Java and C++. You may also visit his GitHub Repository. ★★★ spaghetti-source/algorithm, by Takanori MAEHARA (@tmaehara) High-quality implementations of many hard algorithms and data structures. ★★★ kth-competitive-programming/kactl, by Simon Lindholm (simonlindholm) et al. A phenomenally organized, documented and tested team notebook from KTH Royal Institute of Technology. One of the most well-crafted team notebooks (contest libraries) I\u0027ve ever seen. ★★☆ jaehyunp/stanfordacm Stanford\u0027s team notebook is well maintained and the codes within are of high-quality. ★★☆ ngthanhtrung23/ACM_Notebook_new, by team RR Watameda (I_love_Hoang_Yen, flashmt, nguyenhungtam) from National University of Singapore RR Watameda represented National University of Singapore for the 2016 ACM-ICPC World Finals. The items in this notebook are pretty standard and well-organized. ★★☆ bobogei81123/bcw_codebook, by team bcw0x1bd2 (darkhh, bobogei81123, step5) from National Taiwan University bcw0x1bd2 represented National Taiwan University for the 2016 ACM-ICPC World Finals. This notebook contains robust implementations for advanced data structures and algorithms. ★☆☆ foreverbell/acm-icpc-cheat-sheet, by foreverbell (foreverbell) A notebook with some advanced data structures and algorithms including some from the China informatics scene. ★☆☆ igor\u0027s code archive, by Igor Naverniouk (Abednego) A good notebook by Igor Naverniouk who is currently a software engineer at Google and part of the Google Code Jam team. Language Specifics Languages and other miscellaneous knowledge.\u003c/p\u003e\u003cp\u003eC/C++ ☆ Name Description ★★☆ Power up C++ with the Standard Template Library — Topcoder: Part 1, Part 2 An introductory tutorial on basic C++ STLs. ★★☆ Yet again on C++ input/output — Codeforces Learn more about C++ I/O optimizations. ★★☆ C++ Tricks — Codeforces ... What are some cool C++ tricks to use in a programming contest? — Quora Plentiful C++ tricks for competitive programming. Note that some should be used with care. ★★★ C++ STL: Policy based data structures — Codeforces: Part 1, Part 2 Detailed introduction to the extra data structures implemented in GNU C++. The official documentation can be found here. ★☆☆ C++11 FAQ (English, Chinese, Russian, Japanese, Korean) A list of FAQs regarding C++11 collected and written by Bjarne Stroustrup, the creator of C++. Java ☆ Name Description ★★☆ How to read input in Java — tutorial — Codeforces Learn how to read input faster. This is a must-read for those who intend to use Java for competitive programming ★★☆ How to sort arrays in Java and avoid TLE — Codeforces Some tips on how to avoid hitting the worst case of quick sort ★★☆ BigNum arithmetic in Java — Let\u0027s outperform BigInteger! — Codeforces A basic but faster custom BigInteger class ★★☆ EZ Collections, EZ Life (new Java library for contests) — Codeforces A Java library for contests written by Alexey Dergunov (dalex). ArrayList, ArrayDeque, Heap, Sort, HashSet, HashMap, TreeSet, TreeMap, TreeList and pair classes are implemented Miscellaneous ☆ Name Description ★★★ Bit Twiddling Hacks A huge compiled list of bit manipulation tricks. ★★★ Comparing Floating Point Numbers, 2012 Edition — Random ASCII Everything you need to know about floating point numbers. A must read especially for geometry topics. ★★☆ Object-Oriented C Style Languages: C++, Objective-C, Java, C# — a side-by-side reference sheet A detailed side-by-side reference sheet for common syntaxes. Tools Awesome tools that will make your life easier.\u003c/p\u003e\u003cp\u003eIDEs ☆ Name Platform Description ★★★ Vim CLI / Cross-Platform Vim is one of the most popular text editors among advanced programmers. It allows text-editing to be done very efficiently with solely keystrokes. Vim is also highly configurable, extensible and integrates with shells (command lines) really well. The only setback about Vim is that it has a high learning curve for beginners. ★★★ Emacs CLI / Cross-Platform Emacs is another popular text editor (or development environment to be more precise). The debate on \u0026quot;Vim vs. Emacs\u0026quot; is constantly brought up due to their popularity. Basically Emacs is more than just a text editor. It has plugins like file managers, web browsers, mail clients and news clients that allows users to performs these tasks directly inside Emacs. Emacs is \u0026quot;heavier\u0026quot; because of this, but it arguably has a relatively easier learning curve for beginners. ★★★ Far Manager Hybrid / Windows Far Manager is the most widely-used editor in the RU/CIS competitive programming community. It\u0027s actually a file manager in its bare bones, but you can install FarColorer — a syntax highlighter plugin to program on it. Properly configured, Far Manager allows you to navigate between files very efficiently while writing your codes. ★★★ Code::Blocks GUI / Cross-Platform Code::Blocks is the go-to IDE for C/C++. It\u0027s a full-fledged, versatile IDE with numerous great features. Code::Blocks is usually provided along with Vim in programming contests. ★★★ IntelliJ IDEA GUI / Cross-Platform IntelliJ IDEA is certainly one of the best IDEs for Java. It\u0027s used by most competitive programmers who use Java as their main language. Be sure to check out CHelper, a very handy plugin written for programming contests. ★★☆ Sublime Text GUI / Cross-Platform Sublime Text is an extraordinary text editor. Packed with powerful and innovative features like Multiple Carets, Minimaps and Command Palletes, it attracts a strong and engaging community. Sublime Text is highly extensible, so be sure to have Package Control installed and explore perhaps one of the largest catalogue of plugins! ★★☆ Eclipse GUI / Cross-Platform Eclipse is another good IDE for Java. It\u0027s an okay alternative to Intellij IDEA (A tad inferior to IDEA by today\u0027s standards). Sometimes contests only provide Eclipse for some reason, so this might be a good incentive to try and use Eclipse. ★★☆ CLion GUI / Cross-Platform CLion, produced by JetBrains — the same company who made Intellij IDEA, is a powerful IDE for C++. Free educational licenses are available OR you can try out their EAP (Early Access Program) which is still free as of Aug, 2016. You may want to turn off its code inspection feature as it will cause quite a bit of lag. ★☆☆ Other IDEs Mixed Visual Studio is the IDE to use in case you want to code in C#, but beware that it will be a 7GB installation. ... Both Atom and Visual Studio Code are built with Electron (written in JavaScript) and therefore somewhat resource-hogging. ... CodeLite is a newly rising IDE. Beware that the load-up and project-creation times can be extraordinary. Personal use ☆ Name Description ★★★ VisuAlgo A website featuring a large collection of visualization tools for algorithms and data structures. ★★★ General Practice Helpers: ... CHelper (IntelliJ IDEA) (manual) ... caide (Visual Studio, CodeLite) ... JHelper (AppCode, CLion) Great tools that parse contests, inline library codes and provide testing frameworks. They save you from spending your precious time on switching windows and copy-pasting back and forth. ★★☆ Codeforces Parsers: ... Codeforces Parser ... GoCF ... cfparser (emacs) These tools parse Codeforces contest problems and help run sample tests. ★★★ The On-Line Encyclopedia of Integer Sequences (OEIS) A stunning encyclopedia with a database of countless integer sequences. It also features a powerful search engine. Sometimes a seemingly difficult combinatorics problem could be equivalent to a simple or studied integer sequence. ★★☆ Syntax Highlighters: ... tohtml.com ... markup.su ... hilite.me Very handy for creating slides or team notebooks with pretty, formatted code snippets. Just copy the highlighted code snippets and paste them in your favorite WYSIWYG (What-You-See-Is-What-You-Get) editor! ★★☆ Code Sharing: ... Ideone.com ... Pastebin.com ... Ubuntu Pastebin These tools generate semi-permanent pages for code sharing. Very useful especially when you\u0027re trying to get someone else to look into your code. ★★☆ Ineffable A simple command-line grader for local grading. ★★☆ uDebug A platform that provides expected outputs for user-specified inputs to problems on the UVa Online Judge. Some problems also provide additional test cases for debugging. Contest Preparation ☆ Name Description ★★★ polygon polygon provides a platform and a rich set of tools for professional contest preparation. ... An example: Validators with testlib.h — Codeforces ★★☆ Graph Editor A fantasic tool to create and visualize graphs. ★★☆ tcframe A C++ framework for generating test cases of competitive programming problems. ★★★ Virtual Judge (vjudge) Virtual Judge (vjudge) allows users to create virtual contests with problems from notable problem archives. ★★☆ BNU Online Judge BNU Online Judge also allows users to create virtual contests. ★★☆ Kattis Kattis assists in contest preparation (E-mail them for assistance). Community Meet the god-like competitive programmers! Learn helpful tips, tutorials and insights from these people :)\u003c/p\u003e\u003cp\u003eBlogs Name (Handle) Blog Name Codeforces blogs Petr Mitrichev (Petr) Algorithms Weekly Makoto Soejima (rng_58) rng_58\u0027s blog Bruce Merry (bmerry) Entropy always increases Przemysław Dębiak (SomeGuyTookMyHandle) Psyho\u0027s blog Anudeep Nekkanti (anudeep2011) Namespace Anudeep ;) vexorian (vexorian) vexorian\u0027s blog Ashar Fuadi (fushar) Fushar\u0027s blog LiJie Chen (WJMZBMR) WJMZBMR (Chinese) Huang I-Wen (doreamon, dreamoon) 小月的耍廢日誌 (Chinese) Shiang-Yun Yang (morris1028) Morris\u0027 Blog (Chinese) Yuhao Du (TooDifficuIt, TooSimple, xudyh) xudyh (Chinese) Youtube and Livestreams Name (Handle) Link Petr Mitrichev (Petr) Youtube Egor Kulikov (Egor) Youtube Adam Bardashevich (subscriber) Youtube Bohdan Pryshchenko (I_love_Tanya_Romanova) Twitch, Youtube Vladimir Smykalov (enot.1.10) Twitch, Youtube Aleksandar Abas (Alex7) Youtube Mostafa Saad Ibrahim (mostafa.saad.fci) Competitive Programming Youtube (Arabic Speech-English Text) Tushar Roy Youtube, with many tutorial videos. Quora Visit Competitive Programming — Quora (Top 10 Most Viewed Writers).\u003c/p\u003e\u003cp\u003eImportant Community Figures Description Bill Poucher Executive Director of ACM-ICPC. CS Professor at Baylor University. Michal Forišek (misof) Organizer of IPSC and IOI. CS Teacher at Comenius University in Slovakia. Algorithm and CS Education Researcher. Former highly-rated competitive programmer. Ahmed Aly (ahmed_aly) Founder of A2OJ. HackerRank Lead Software Engineer. Former member of the Google Code Jam team. Competitive Programmers Thanh Trung Nguyen (I_love_Hoang_Yen) Brian Bi (bbi5291) Jonathan Paulson (jonathanpaulson) Miguel Oliveira (mogers) Egor Suvorov (yeputons) Michal Danilák (Mimino) Bohdan Pryshchenko (I_love_Tanya_Romanova) Vladimir Novakovski (vnovakovski) Nick Wu (xiaowuc1) Cosmin Negruseri Lalit Kundu (darkshadows) Ashish Kedia (ashish1294) Johnny Ho (random.johnnyh) Joshua Pan (lonerz) Anudeep Nekkanti (anudeep2011) Steven Hao (stevenkplus) Raziman T.V. (razimantv) Other Awesome Resources Articles Informative and helpful articles\u003c/p\u003e\u003cp\u003eSubject Overview of Programming Contests, by Przemysław Dębiak (Psyho, SomeGuyTookMyHandle) The \u0027science\u0027 of training in competitive programming — Codeforces, by Thanh Trung Nguyen (I_love_Hoang_Yen) If you ask me how to improve your algorithm competition skill, I will give you the link of this blog. — Codeforces, by Huang I-Wen (dreamoon, doreamon) How to prepare for ACM — ICPC? — GeeksforGeeks, by Vishwesh Shrimali Complete reference to competitive programming — HackerEarth, by Ravi Ojha Getting started with the sport of competitive programming — HackerEarth, by Triveni Mahatha FAQs Fine answers to frequently-asked questions\u003c/p\u003e\u003cp\u003eQuestion How do I start competitive programming? — Quora How can I become good at competitive programming? — Quora ... What is the best strategy to improve my skills in competitive programming in 2-3 months? — Quora ... What is a good 6 month plan to start and progress through competitive programming? — Quora How is competitive programming different from real-life programming? — Quora What have you gained from competitive programming? — Quora Awesome Lists Relevant awesome lists\u003c/p\u003e\u003cp\u003eName Link C++ Books The Definitive C++ Book Guide and List — Stack Overflow Java Books What are the best books to learn Java? — Quora Advanced Java Books What is the best book for advanced Java programming? — Quora Algorithms tayllan/awesome-algorithms Algorithm Visualization enjalot/algovis Math rossant/awesome-math C++ fffaraz/awesome-cpp Java akullpp/awesome-java Courses prakhar1989/awesome-courses Free Programming Books vhf/free-programming-books Interview Questions Name Description CareerCup The most popular website for software engineering interview preparation. InterviewBit Features intriguing and refreshing game-play designs which are designed to invoke one\u0027s interest in practicing. Awesome Interviews A curated list of awesome interview questions License Creative Commons Attribution 4.0 International Awesome Competitive Programming is licensed under a Creative Commons Attribution 4.0 International License.\u003c/p\u003e\u003c/div\u003e","tags":[]}}