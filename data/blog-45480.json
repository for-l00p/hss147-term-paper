{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1466149963,"rating":193,"authorHandle":"Xellos","modificationTimeSeconds":1466268159,"id":45480,"title":"\u003cp\u003eInvitation to IPSC 2016\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e\u003cimg alt\u003d\" \" src\u003d\"/predownloaded/1e/f5/1ef5c5a97efcedd512a3ff7b1762fc3af1860e17.jpg\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003eThere has been talk about this already, but in case anyone missed it:\u003c/p\u003e\u003cp\u003eThe 2016 edition of Internet Problem Solving Contest is going to take place \u003cstrong\u003etoday\u003c/strong\u003e \u003ca href\u003d\"https://www.timeanddate.com/worldclock/fixedtime.html?month\u003d6\u0026amp;day\u003d18\u0026amp;year\u003d2016\u0026amp;hour\u003d11\u0026amp;min\u003d0\u0026amp;sec\u003d0\"\u003e(starting time)\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eIt\u0027s a 5-hour contest for teams of up to 3 people, but there\u0027s also an individual division, so feel free to participate even if you can\u0027t find yourself a team at this point.\u003c/p\u003e\u003cp\u003eThere\u0027s going to be an ACM-like number of problems (12+), ranging from classic algorithmic problems to quite unusual ones. Most problems have an easy subproblem worth 1 point and a hard one worth 2 points (think CodeJam); ties are broken using ACM rules (sum of times).\u003c/p\u003e\u003cp\u003eThe practice session is over. \u003cstrong\u003eThe contest is over!\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eRead the \u003ca href\u003d\"https://ipsc.ksp.sk/rules\"\u003erules\u003c/a\u003e or my previous blogposts about this for more info.\u003c/p\u003e\u003ch4\u003eBelated, yet necessary warning!\u003c/h4\u003e\u003cp\u003eSince this is a 5-hour contest where you can execute codes locally, some inputs will be YUGE (gigabytes). Accordingly, they will have fairly high system requirements. Get a good computer. While the official solutions quite comfortably run on my mediocre laptop, if you write something too inefficient, you can encounter a nasty surprise, e.g. frozen system. It happened to me last year.\u003c/p\u003e\u003cp\u003eIf an input is big, you won\u0027t have to download it; instead, there will be a generator (typically a Python script, meaning they aren\u0027t very fast). It\u0027s usually a good idea to run all generators as early as possible â€” as long as it doesn\u0027t slow down your computer too much, you can avoid a situation where you can\u0027t submit a problem because the contest ended before your generator.\u003c/p\u003e\u003cp\u003eActually, you should just try to read as many problems as possible and determine your strategy after you can guess your chances well enough.\u003c/p\u003e\u003ch4\u003eSome quick stats\u003c/h4\u003e \u003cpre\u003e\u003ccode\u003e11145 submissions\n5370 successful submissions (48% success rate)\n797 active teams out of 1376 (58% did not give up before even trying)\n773 teams with positive score (97% of active teams)\n12/13 problems solved by someone\nmaximum number of fully solved problems: 10/13\nlowest non-zero success rate: D (D2: 20%)\nhighest success rate: C,F (C2,F2: 85%)\n\nhighest success rate (easy subproblems): G1 (85%)\nlowest success rate (easy subproblems): J1,M1 (25%)\n\nhard problems (\u0026lt;50 teams solved) sorted by difficulty:\nE: 0/13\nM: 2/10\nJ: 4/17\nH: 11/17\nB: 11/18\nL: 16/46\nK: 40/107\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":["ipsc","ipsc2016"]}}