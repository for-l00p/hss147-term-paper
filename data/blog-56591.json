{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1514081528,"rating":1,"authorHandle":"brdy","modificationTimeSeconds":1514081528,"id":56591,"title":"\u003cp\u003eWhy does this solution work?\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHere is the Atcoder ARC/ABC â€” D problem from today\u0027s contest.\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://arc088.contest.atcoder.jp/tasks/arc088_b\"\u003ehttps://arc088.contest.atcoder.jp/tasks/arc088_b\u003c/a\u003e\u003c/p\u003e\u003cp\u003eThe editorial describes an O(n) solution.\u003c/p\u003e\u003cp\u003eMy question is about a different solution. When I first saw this problem I thought binary search on the radius would work, but quickly discarded the idea because I could not think of a correct \u0026quot;check\u0026quot; function to see if a given radius works.\u003c/p\u003e\u003cp\u003eHowever, \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/minimario\" title\u003d\"Candidate Master minimario\"\u003eminimario\u003c/a\u003e proved me wrong.\u003c/p\u003e\u003cp\u003eHere is his code: \u003ca href\u003d\"https://hastebin.com/qefuquxoke.cpp\"\u003ehttps://hastebin.com/qefuquxoke.cpp\u003c/a\u003e\u003c/p\u003e\u003cp\u003eIn his check function, he assumes that \u0026quot;k to n is fixed\u0026quot; and \u0026quot;0 to n-k-1 fixed\u0026quot;, which seems to be the basis of the function\u0027s logic. (I ran his code by hand, but it still feels like magic to me)\u003c/p\u003e\u003cp\u003eCan anybody elaborate on the reasoning behind this solution?\u003c/p\u003e\u003c/div\u003e","tags":["#binary search","atcoder","minimario"]}}