{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1471204614,"rating":0,"authorHandle":"1am","modificationTimeSeconds":1471205823,"id":46569,"title":"\u003cp\u003eDay 3 (8/13)\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eToday we solved some implementation problems and learned cumulative sum.\u003c/p\u003e\u003ch2\u003eH. Cells Not Under Attack\u003c/h2\u003e\u003cp\u003eProblem H from day one, we said to solve it you need a Boolean array for column, and for row. If you put the rook in a row that is not taken before, you delete the entire row. So you do r--. Same goes for the column. After that, you set the row and column you just put the rook on to true.\u003c/p\u003e\u003ch2\u003eA. Fedor and New Game\u003c/h2\u003e\u003cp\u003eProblem A from day 2 deals with changing numbers into binary and then using them to represent a player\u0027s army. For example, if the representation of a persons army is the number 5, convert that to binary it will be 101, meaning that he has a soldier of the first type and the third type. You can convert each number to a binary string, put it into a vector/array of strings, and then compare each one with fedor\u0027s army.\u003c/p\u003e\u003ch2\u003eB. Vanya and Lanterns\u003c/h2\u003e\u003cp\u003eIf you have a line of lanterns on the street and you want the whole street lit, then the first lantern\u0027s light must at least reach the beginning of the street. And also the last lantern\u0027s light must at least reach the end of the street. \u003c/p\u003e\u003cp\u003eIn between any two lanterns, it is best to have each one of those two lanterns light half the distance between them. The maximum value between all those conclusions will give us our answer.\u003c/p\u003e\u003ch2\u003eD. Polo the Penguin and Matrix\u003c/h2\u003e\u003cp\u003eFirst of all you should know that a number \u0027a\u0027 modulus d is the same as adding d to \u0027a\u0027 and taking it modulus d:\u003c/p\u003e\u003cp\u003ea % d \u003d (a +d) %d\u003c/p\u003e\u003cp\u003efor example, 1 %3 is equal to 4 %3 which is equal to 7 %3. You can consider modulus like a cycle, %3 is a cycle of values \u003c/p\u003e\u003cp\u003e(0 ,1 ,2 ,0 ,1 ,2 ,0 ,1 ,2 ,...) \u003d( 0%3 , 1 %3, 2%3, 3%3, 4%3, 5%3, 6%3, 7%3, 8%3, ...).\u003c/p\u003e\u003cp\u003eSo if i have numbers in an array and i want them all to be equal by adding d some number of times to each number, the numbers must all have the same value when taken modulus d in the beginning. Like in the previous example, I can get 4 to become 7 by adding d — where d \u003d3 — and to become 1 by subtracting d, but there is no way i can get 4 to become 2.\u003c/p\u003e\u003cp\u003eSo if they all don\u0027t have the same value when taken modulus d, i automatically output -1. Other than that, if we want them all to be equal by adding/subtracting the least amount of d\u0027s, then it is best to take the median in the array.\u003c/p\u003e\u003cp\u003eFor example in the array 1 4 7 , it is best here to make them all equal to 4, by adding d once to 1 and subtracting d from 7 (d \u003d3). We would make them all equal in 2 moves, any other choice (1 or 7) would need 3 moves.\u003c/p\u003e\u003cp\u003eConsider the entire matrix as an array and store it in 1 dimension. Get the median after sorting, and count the number of moves needed to get them equal.\u003c/p\u003e\u003ch2\u003eE. Beautiful Matrix\u003c/h2\u003e\u003cp\u003eThe coordinates of the middle is (2, 2) ( 0 based indexing). Find the coordinates of the \u00271\u0027 --\u0026gt;(r, c). The answer is abs (2 -r) + abs (2-c). \u003c/p\u003e\u003cp\u003eokayyyyyyyyyyyyyyyyyyy\u003c/p\u003e\u003ch2\u003eCumulative Sum\u003c/h2\u003e\u003cp\u003eFirst we solved this basic problem on the topic, start by solving it. \u003ca href\u003d\"http://www.spoj.com/problems/CSUMQ/\"\u003ehttp://www.spoj.com/problems/CSUMQ/\u003c/a\u003e\u003c/p\u003e\u003cp\u003eHere is the code for it: \u003ca href\u003d\"http://ideone.com/ByTNzh\"\u003ehttp://ideone.com/ByTNzh\u003c/a\u003e\u003c/p\u003e\u003cp\u003eWe also solved problem Zero\u0027s and Ones from Uva, although we didn\u0027t write the code for it. So please try it.\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://uva.onlinejudge.org/index.php?option\u003donlinejudge\u0026amp;page\u003dshow_problem\u0026amp;problem\u003d1265\"\u003ehttps://uva.onlinejudge.org/index.php?option\u003donlinejudge\u0026amp;page\u003dshow_problem\u0026amp;problem\u003d1265\u003c/a\u003e\u003c/p\u003e\u003ch2\u003eNumber of Ways\u003c/h2\u003e\u003cp\u003eWe concluded that if the sum of all the values don\u0027t divide by 3 evenly, then there is no possible answer. \u003c/p\u003e\u003cp\u003eOther than that, we need to know for every index i, where the sum of the values from index 0 to i are equal to sum/3, how many indexes after it j, where the sum of the values from j to n are equal to sum/3. \u003c/p\u003e\u003cp\u003eI forgot to mention that the backwards cumulative sum should not be checked from i, but from i +1 to ensure that the length of the segment in the middle is at least 1.\u003c/p\u003e\u003cp\u003eHere is the solution for it, but give it a try before looking at it. \u003ca href\u003d\"http://ideone.com/xSBF9B\"\u003ehttp://ideone.com/xSBF9B\u003c/a\u003e\u003c/p\u003e\u003cp\u003eAnd here is another nice solution i saw for it from the tutorial, same idea, they just calculate beforehand how many indexes have a backwards cumulative sum of d in array cnt. \u003ca href\u003d\"//codeforces.com/contest/466/submission/7784781\"\u003ehttp://codeforces.com/contest/466/submission/7784781\u003c/a\u003e\u003c/p\u003e\u003cp\u003eGood Luck Everyone! don\u0027t be overwhelmed, just take everything question by question.\u003c/p\u003e\u003c/div\u003e","tags":[]}}