{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":true,"creationTimeSeconds":1484408963,"rating":0,"authorHandle":"Obk","modificationTimeSeconds":1484408963,"id":49767,"title":"\u003cp\u003eВеса ребер при использовании алгоритма Дейкстры\u003c/p\u003e","locale":"ru","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eВ \u003ca href\u003d\"http://www.e-maxx-ru.1gb.ru/algo/dijkstra\"\u003eэтой\u003c/a\u003e реализации алгоритма Дейкстры граф с весовыми ребрами хранится в виде \u003ccode\u003evector \u0026lt; vector \u0026lt; pair\u0026lt;int,int\u0026gt; \u0026gt; \u0026gt; g\u003c/code\u003e.\u003c/p\u003e\u003cp\u003eДопустим нужно написать программу, в которой потребуется пару раз применить эту реализацию алгоритма Дейкстры, но кроме этого в ней потребуется (несколько раз) по паре вершин \u003ccode\u003ev\u003c/code\u003e и \u003ccode\u003eto\u003c/code\u003e найти вес ребра \u003ccode\u003e(v,to)\u003c/code\u003e. Я пытаюсь понять какой тут правильный подход. Просто искать в векторе \u003ccode\u003eg[v]\u003c/code\u003e элемент \u003ccode\u003ei\u003c/code\u003e, в котором \u003ccode\u003eg[v][i].first\u003d\u003dto\u003c/code\u003e (тогда \u003ccode\u003eg[v][i].second\u003c/code\u003e будет искомым) или завести map, в котором хранить все расстояния? Как в таком случае правильно организовать поиск веса ребра по его вершинам?\u003c/p\u003e\u003c/div\u003e","tags":["алгоритм дейкстры"]}}