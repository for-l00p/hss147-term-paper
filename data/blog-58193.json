{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1520280771,"rating":8,"authorHandle":"laderlappen","modificationTimeSeconds":1520873006,"id":58193,"title":"\u003cp\u003eNumber Theory Algorithms and Techniques — Part II\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003ch1\u003eNumber Theory Algorithms and Techniques — Part II\u003c/h1\u003e\u003cp\u003eWhen mankind started to care about numbers and basic arithmetic, we come to think about the basic operations: Addition, Subtraction, Multiplication and Division.\u003c/p\u003e\u003cp\u003eWe may say that some numbers can be generated from others, in fact. With addiction, we know that the number one (1) can generate all natural numbers. The number two (2) can generate all natural even numbers, for example. The number six (6) can be generated by multiple additions of 2, and by multiple additions of 3, for example. This came into the concept of Multiples! \u003c/p\u003e\u003cp\u003eBut one thing really curious about that is that there are some numbers (there are infinite of them!) that aren\u0027t multiple of anything. They are the prime numbers, and they can be understood as the \u0026quot;atoms\u0026quot; of numbers. There are many special properties about them that makes this kind of numbers so important, and some of them will be used here in this article.\u003c/p\u003e\u003cp\u003eFirst, we have to discuss a few concepts:\u003c/p\u003e\u003ch2\u003eIntroduction\u003c/h2\u003e\u003ch4\u003eEuclid\u0027s Lemma\u003c/h4\u003e\u003cp\u003eWhat is a prime number? Since you know about multiples and divisibility, you may say that prime numbers are numbers that aren\u0027t divisible by any other number different than 1 and themselves. Okay, but if you look at this definition, it looks like you need to know about the divisibility of this number by any other number. That\u0027s not cool, it doesn\u0027t look as tied up as it should be.\u003c/p\u003e\u003cp\u003eI\u0027m going to show you some other way to define a prime number, and you shall agree that this way looks better and more tied up since you know about divisibility and logic:\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eEuclid\u0027s Lemma:\u003c/strong\u003e \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/d2/40/d240e3ca6fca53b7c12707478bbdd59c8ad35b8c.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003eNicer, isn\u0027t it? And it gives you the main idea of how \u0026quot;primal\u0026quot; the prime numbers are. They can\u0027t be compound of other numbers. We\u0027re going to use this concept later.\u003c/p\u003e\u003ch4\u003eLittle Fermat\u0027s Theorem\u003c/h4\u003e\u003cp\u003eOne thing that we usually learn in Group Theory is that an element \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003c/span\u003e in a finite group \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/06/e5/06e586906b3f02a57a057222c0026347c6f1dd22.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e under addition has an order of \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/77/7c/777c4e28358a94604fe1e9839ee158c0639867ce.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. In other terms, if we look at the sequence \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/7d/94/7d94b3073155e028ed220eec573e0186f771545c.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, we\u0027ll notice that it makes a cycle of this length! For example, with \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e \u003d 6\u003c/span\u003e and \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/1a/6d/1a6db7421d8bf2dfa5baea359e6e12245b9b5c0c.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, we have the sequence \u003cspan class\u003d\"tex-span\"\u003e6, 12, 3, 9, 0, 6, 12, 3, ...\u003c/span\u003e The length of the cycle? 5!\u003c/p\u003e\u003cp\u003eUsing this, we can conclude that if \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003egcd\u003c/i\u003e(|\u003ci\u003eG\u003c/i\u003e|, \u003ci\u003eA\u003c/i\u003e) \u003d 1\u003c/span\u003e then the sequence goes through all elements of G till it comes back to A. In fact, if the number is prime, we have this property for every A in the group.\u003c/p\u003e\u003cp\u003eIt\u0027s a cool property that primes do have. But this is just a tickling that I want to build in your mind. Number Theory and Group Theory talks a lot about cycles. Modular sequences have cycles and sometimes looking at prime property with cycles are key to discover patterns in lots of problems you may encounter.\u003c/p\u003e\u003cp\u003eThe property I want to show you is this one:\u003c/p\u003e\u003cp\u003e\u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/5a/96/5a96969819d64827b5f558b87615bd31c7ea2d78.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003eThis is called the Little Fermat\u0027s Theorem. Again, we\u0027re having cycles, but this time it\u0027s for exponentials. You may notice that it\u0027s the particular case of Euler\u0027s Theorem (That you\u0027ve seen in Part I) when \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e is a prime number. We\u0027re gonna use this later too.\u003c/p\u003e\u003ch4\u003eBirthday Paradox\u003c/h4\u003e\u003cp\u003eWhat is the probability that, in a classroom of 30 people, two of them share the same birthday? What if I told you it\u0027s more than 70%? The Birthday Paradox is the counterintuitive idea that, even for small amount of tests, the probability of having collisions is high. It can be shown that if you have around \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/3e/9a/3e9ae78ecfb34ad4c23c9542261f56240dc1b427.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e tests then you will have around 50% of chance of getting collisions.\u003c/p\u003e\u003cp\u003eThis concept is pretty useful when you talk about probabilities, there\u0027s even a type of Attack (called Birthday Attack) using this, but it\u0027s a thing that we can talk about later :)\u003c/p\u003e\u003cp\u003eWhy are we going to use this property? Let\u0027s suppose that you want to find, for some \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/0e/ff/0eff0646ac40b8420ff04029a3dfec4cdb6a3da3.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, if there are two numbers \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e,  \u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e in a range of \u003cspan class\u003d\"tex-span\"\u003e{0, 1, ..., \u003ci\u003eN\u003c/i\u003e - 1}\u003c/span\u003e such that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e - \u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e \u003d \u003ci\u003ek\u003c/i\u003e\u003c/span\u003e. Using Birthday Paradox, we can assume that, if we have a set of approximately \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/f3/81/f381a867c035d8ab67dd362b509e4d7f78b7a087.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e numbers, then with high probability we\u0027re going to find a pair that satisfies this condition in the set.\u003c/p\u003e\u003cp\u003eOkay, now we have some concepts, and we can discuss some Algorithms and Techniques, so let\u0027s begin:\u003c/p\u003e\u003ch2\u003eMiller-Rabin Primality test\u003c/h2\u003e\u003cp\u003eHow can you check if a number is prime? Using the fact that a prime number has no divisors different than 1 and themselves, you can just check for all the primes lesser than n and greater than 1.\u003c/p\u003e \u003cpre\u003e\u003ccode\u003ebool isPrime(int n) {\n  for (int i\u003d2; i\u0026lt;n; i++)\n    if (n % i \u003d\u003d 0) return false;\n  return true;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eWhich has complexity \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e)\u003c/span\u003e. Okay, but you may notice that, if a number is compound, there\u0027s a number lesser or equal than \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/4e/5c/4e5c9f371024ad4e1f5b0f2dfeb967ffe7cb5f4e.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e that divides it, so you can optimize the algorithm checking until \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/4e/5c/4e5c9f371024ad4e1f5b0f2dfeb967ffe7cb5f4e.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e.\u003c/p\u003e \u003cpre\u003e\u003ccode\u003ebool isPrime(int n) {\n  for (int i\u003d2; i*i\u0026lt;\u003dn; i++)\n    if (n % i \u003d\u003d 0) return false;\n  return true;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eNow it has complexity \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/32/91/32913ddf691f31b4d68f1a13d186d75779229920.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e and that\u0027s pretty cool. But I have some bad news: Sometimes, you have to deal with numbers \u003cstrong\u003eREALLY\u003c/strong\u003e big, and even \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/32/91/32913ddf691f31b4d68f1a13d186d75779229920.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e is not enough to make this primality check.\u003c/p\u003e\u003cp\u003eBut how can we improve that? What if I suggest you to only check is there\u0027s a \u003cstrong\u003ehigh probability\u003c/strong\u003e that the number is prime? I mean, if you just check lots of times if this number satisfies a property that prime numbers have, then maybe this number is a prime number? Isn\u0027t it? We just need to look for fast ways to make checks and improve the probability of giving the right verdict for if it\u0027s a prime number or not.\u003c/p\u003e\u003cp\u003eOne thing you can ask me (or not) is: What if we just check the validity of Little Fermat\u0027s Theorem? It sounds like a good idea. If you check times the validity of Little Fermat\u0027s Theorem with k random numbers, then you may say that the number is probably prime. In fact this technique has a name: It\u0027s the \u003cstrong\u003eFermat\u0027s Test for Primality\u003c/strong\u003e (Why am I not surprised?)\u003c/p\u003e \u003cpre\u003e\u003ccode\u003econst int K \u003d 1000;\nbool fermatTest(int n) {\n  for (int i\u003d0; i\u0026lt;K; i++) {\n    int x \u003d rand() % n;\n    if (fexp(x, n-1, n) !\u003d 1) return false;\n  }\n  return true;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe complexity here is kind of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eK\u003c/i\u003e * \u003ci\u003elog\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e))\u003c/span\u003e if you use fast exponential.\u003c/p\u003e\u003cp\u003eWell, time to give you some bad news: What if I told you that there are some compound numbers that satisfies the equation \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/09/55/0955c108725d7935e92a5369817bff74b997fb3b.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e (except in cases when a divides n)? They are called \u003cstrong\u003eCarmichael Numbers\u003c/strong\u003e. Well, the property they have is that for every prime factor \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003c/span\u003e of it we have \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ep\u003c/i\u003e - 1)|(\u003ci\u003en\u003c/i\u003e - 1)\u003c/span\u003e. This makes the test fail, and you can realize why looking at Euler\u0027s Theorem and Euler\u0027s Totient Function.\u003c/p\u003e\u003cp\u003eLet\u0027s get into the point: All this introduction was to leave you in the mood of this problem and look into different ways of doing it. Now we can talk about the reason about this topic: The \u003cstrong\u003eMiller-Rabin Primality test\u003c/strong\u003e (girly hysterical screams).\u003c/p\u003e\u003cp\u003eAt first, we know that if a number is even and it\u0027s greater than 2, then we know for sure that it is NOT a prime number. For sure. So we just need to check it before everything, and after that we just ignore this case. Now we just have to deal with odd numbers. We know that, if \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003c/span\u003e is an odd number, then \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e - 1\u003c/span\u003e is even. Because of it, we can write \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e - 1 \u003d 2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003er\u003c/i\u003e\u003c/sup\u003e\u003ci\u003ed\u003c/i\u003e\u003c/span\u003e, such that d is odd, and \u003cspan class\u003d\"tex-span\"\u003e1 ≤ \u003ci\u003er\u003c/i\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eUsing Little Fermat\u0027s Theorem, we have for every \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/09/c8/09c800d7f8c57ba886a8231ef4ae4b69365bffef.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e:\u003c/p\u003e\u003cp\u003e\u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/a9/7a/a97a1ce2cea1c33c42a9fd84a8a62daa96f12c77.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003e\u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/58/84/58843e47a7dc54455a2d8b479a643f9751d0d041.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003e\u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/59/c6/59c67840d777d85da92df864758ee54206be3cfa.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003eThe later step is valid because of Euclid\u0027s Lemma. So we know that, for every a, we can check if \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/81/49/8149d4b489c03093d79b344259e5673eefc6d718.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e or if \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/23/0d/230dd85fa3a7c96184ccbc36049dda87e7ea457d.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e for every i such that \u003cspan class\u003d\"tex-span\"\u003e1 ≤ \u003ci\u003ei\u003c/i\u003e ≤ \u003ci\u003er\u003c/i\u003e - 1\u003c/span\u003e. If a number passes this test, we call it \u0026quot;Strong Probable Prime\u0026quot;. Why is it better than Fermat\u0027s Test? Different from it, this test has no \u0026quot;weak\u0026quot; cases. It\u0027s a stronger test to check if a number is prime or not. I don\u0027t want to go deeper on that, because it would require some concepts on Group Theory that we can discuss it later. If you want to use strange words, Miller-Rabin test checks if a number has non-trivial roots of unity\u003c/p\u003e\u003cp\u003eHere\u0027s some example of code:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003ebool miller_rabin(ll n, ll k) {\n  if(!(n\u0026amp;1) and n !\u003d 2) return false;\n\n  ll mod \u003d n;\n  n--;\n  while(!(n\u0026amp;1) and n) {\n    n \u0026gt;\u0026gt;\u003d 1;\n    if(fexp(k, n, mod) \u003d\u003d 1 or fexp(k, n, mod) \u003d\u003d mod-1) return true;\n  }\n  return false;\n}\n\nbool isPrime(ll n) {\n  //srand(time(0))\n  for(int i\u003d0; i\u0026lt;50; i++) {\n    ll k \u003d 1 + rand()%(n-1);\n    if(!miller_rabin(n, k)) return false;\n  }\n  return true;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":["math","#number theory","probabilities"]}}