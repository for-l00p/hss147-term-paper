{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1428355963,"rating":5,"authorHandle":"P_Nyagolov","modificationTimeSeconds":1430819428,"id":17305,"title":"\u003cp\u003eReal Life Traffic Problem\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e\u003cstrong\u003eUPD\u003c/strong\u003e: I cannot fully understand \u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/Xellos\" title\u003d\"Гроссмейстер Xellos\"\u003eXellos\u003c/a\u003e\u0027 solution but a friend of mine(\u003ca class\u003d\"rated-user user-cyan\" href\u003d\"/profile/radoslav11\" title\u003d\"Специалист radoslav11\"\u003eradoslav11\u003c/a\u003e) wrote \u003ca href\u003d\"http://ideone.com/g0FOXc\"\u003ethis code\u003c/a\u003e and got AC with it. The bad thing is that neither me nor him can prove the correctness of the algorithm. At least for me this seems not to be right:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e if(v !\u003d parent[u])\n            low[u] \u003d min(low[u], low[v]);\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eCan anybody prove the correctness of the code or give a counter example and if such example exists can you explain in details another algorithm that is correct, please? :)\u003c/p\u003e\u003cp\u003eHello everybody,\u003c/p\u003e\u003cp\u003eRecently, I started learning about articulation points, bridges, bi-connected components and strongly connected components. I decided to solve some problems from \u003ca href\u003d\"lightoj.com\"\u003elightoj\u003c/a\u003e and I can\u0027t solve \u003ca href\u003d\"http://lightoj.com/volume_showproblem.php?problem\u003d1291\"\u003ethis one\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eIn short, you are given an undirected connected graph with N vertices and M edges (N\u0026lt;\u003d10000, M\u0026lt;\u003d20000). Find the minimum edges we need to add so that the graph should not contain a bridge.\u003c/p\u003e\u003cp\u003eCan anybody tell me what the solution is and prove its correctness since I came up with some algorithms that seemed correct to me but after a while I found some counter-examples, please? And can you give me some problems to solve involving those topics because now the seem kinda confusing to me and I think that I need to practice more, please?\u003c/p\u003e\u003cp\u003eAnother question that I want to ask is: I know that a bi-connected graph is a graph without articulation points. But is it true that if a graph doesn\u0027t contain a bridge, then it is bi-connected and is it true that if a graph is bi-connected, then it contains a bridge and why?\u003c/p\u003e\u003cp\u003eThanks in advance!\u003c/p\u003e\u003c/div\u003e","tags":["bi-connected components","articulation point","bridges"]}}