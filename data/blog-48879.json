{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1481068871,"rating":2,"authorHandle":"MedoN11","modificationTimeSeconds":1481068871,"id":48879,"title":"\u003cp\u003eInteresting Graph Permutations Problem.\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHello CF.\u003c/p\u003e\u003cp\u003eRecently, I was trying to solve this problem : \u003ca href\u003d\"https://community.topcoder.com/stat?c\u003dproblem_statement\u0026amp;pm\u003d10469\u0026amp;rd\u003d13749\u0026amp;rm\u003d\u0026amp;cr\u003d22697731\"\u003ehttps://community.topcoder.com/stat?c\u003dproblem_statement\u0026amp;pm\u003d10469\u0026amp;rd\u003d13749\u0026amp;rm\u003d\u0026amp;cr\u003d22697731\u003c/a\u003e.\u003c/p\u003e\u003cp\u003ePlease note, this problem doesn\u0027t have an editorial. ( It\u0027s magically still coming soon even though it\u0027s from 2009).\u003c/p\u003e\u003cp\u003eI was constructing a functional graph G where an edge from node i to node j, means that the ith index contains the jth value. \u003c/p\u003e\u003cp\u003eThen, The graph must all of it lie in one cycle ( one SCC ) for the conditions to hold. Otherwise answer ( number of swaps ) is #SSC\u0027s â€” 1. Each component must be linked to another and only one.\u003c/p\u003e\u003cp\u003eThe problem however lies in constructing the permutation. I was following an approach that involves greedily merging components starting from the first component that contains zero, but I keep getting WA on a large case.\u003c/p\u003e\u003cp\u003eAny help would be appreciated.\u003c/p\u003e\u003c/div\u003e","tags":[]}}