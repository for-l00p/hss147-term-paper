{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":true,"creationTimeSeconds":1525786820,"rating":0,"authorHandle":"lis","modificationTimeSeconds":1525786820,"id":59334,"title":"\u003cp\u003eС++ часть 2\u003c/p\u003e","locale":"ru","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eАрифметические и логические операции\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003e+, -, *, \u0026lt;, \u0026gt;, !\u003d - тут все понятно\n/ - деление\n% - остаток от деления\n\u003d\u003d - равно\n\u0026lt;\u003d - меньше либо равно\n\u0026gt;\u003d - больше либо равно\n\u0026amp;\u0026amp; - и\n|| - или\n! - не\n^ - побитовый xor\n\u0026amp; - побитовое и\n| - побитовое или\n\u003d - присваивание\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eif, else, while, for\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eif, else\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eif(логическое выражение){\n    если так то зайдет сюда\n}\nelse(можем и не писать){\n    если не так то зайдет сюда\n}\nКак пример\nif(a \u0026gt; b){\n    cout \u0026lt;\u0026lt; b;\n}\nelse{\n    cout \u0026lt;\u0026lt; a;\n}\nили же\nif(a % 2 \u003d\u003d 0)\n{\n    cout \u0026lt;\u0026lt; a;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eЦиклы\u003c/p\u003e \u003cpre\u003e\u003ccode\u003ewhile(логическое выражение){\n   выполняет если логическое выражение верное и заново его проверяет\n}\n\nПример\n\nwhile(a !\u003d 0)\n{\n    b \u003d b % a;\n    swap(a, b);\n}\n(в b лежит nod(a, b))\n\nfor(создание переменной; логическое выражение; изменение){\nоперации}\n\nПример\n\nfor(int i \u003d 1, i \u0026lt;\u003d 10; i \u003d i + 1(тут можно еще написать так i++ или ++i))\n{\n   cout \u0026lt;\u0026lt; i \u0026lt;\u0026lt; \u0026quot; \u0026quot;;\n}\n\nЕще можно так\n\nint i \u003d 1;\nfor(; i \u0026lt;\u003d 10; i++)\n{\n   cout \u0026lt;\u0026lt; i \u0026lt;\u0026lt; \u0026quot; \u0026quot;;\n}\n\nИли так\n\nint i \u003d 0;\nfor(i \u003d 1; i \u0026lt;\u003d 10; i++)\n{\n   cout \u0026lt;\u0026lt; i \u0026lt;\u0026lt; \u0026quot; \u0026quot;;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eТак же есть две операции break(позволяет выйти из цикла) и continue(позволяет пропустить действия после этой операции в блоке и перейти к следующему шагу цикла\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eЕще один пример с выводом чисел от 1 до 10\n\nint i \u003d 1;\nfor (;;)\n{\n    cout \u0026lt;\u0026lt; i \u0026lt;\u0026lt; \u0026quot; \u0026quot;;\n    i++;\n    if (i \u0026gt; 10)\n    {\n        break;\n    }\n}\n\nПример с выводом только четных чисел от 1 до 10\nfor(int i \u003d 1; i \u0026lt;\u003d 10; i++)\n{\n    if(i % 2 \u003d\u003d 1)\n    {\n        continue;\n    }\n    cout \u0026lt;\u0026lt; i \u0026lt;\u0026lt; \u0026quot; \u0026quot;;\n}\n\nТак же если в блоке только одна операция можно не писать {}, а только заблюдать табуляцию\n\nПример\n\nfor(int i \u003d 1; i \u0026lt;\u003d 10; i++)\n    if(i % 2 \u003d\u003d 0)\n        cout \u0026lt;\u0026lt; i \u0026lt;\u0026lt; \u0026quot; \u0026quot;;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eФункции\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eКаждая функция создается по такому правилу:\u003c/p\u003e\u003cp\u003e(тип возвращаемых данных(void если ничего не возвращается)) (название функции) ((перечисление переменных которые принимает функция)){ }\u003c/p\u003e\u003cp\u003eдля возвращения из функции нужно написать return (название переменной тип которой возвращаем или ничего если у нас функция имеет тип void)\u003c/p\u003e\u003cp\u003eПример\u003c/p\u003e \u003cpre\u003e\u003ccode\u003ebool qwerty(int a, int b){\n    if(a % b \u0026lt; b / 2){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eЗапуск функций и рекурсия\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eЧтобы запустить к примеру функцию\u003c/p\u003e \u003cpre\u003e\u003ccode\u003ebool qwerty(int a, int b){\n    if(a % b \u0026lt; b / 2){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eМожно сделать к примеру так\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eint c \u003d rand(), d \u003d rand();\nif(qwerty(c, d))\n    cout \u0026lt;\u0026lt; c \u0026lt;\u0026lt; \u0026quot; \u0026quot; \u0026lt;\u0026lt; d;\n\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eПример рекурсии\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e#include\u0026lt;algorithm\u0026gt;\n#include\u0026lt;iostream\u0026gt;\n\nusing namespace std;\n\nint nod(int a, int b)\n{\n\tif (a \u003d\u003d 0)\n\t\treturn b;\n\treturn nod(b % a, a);\n}\n\nint main() {\n\tint a, b;\n\tcin \u0026gt;\u0026gt; a \u0026gt;\u0026gt; b;\n\tcout \u0026lt;\u0026lt; nod(a, b);\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e","tags":[]}}