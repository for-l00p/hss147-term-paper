{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1491726364,"rating":0,"authorHandle":"slrohit","modificationTimeSeconds":1491726364,"id":51504,"title":"\u003cp\u003eGraph, DAG problem\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eNeed Help How to solve below problem with nlogn complexity, I tried to solve it using dfs but getting wrong answer\u003c/p\u003e\u003cp\u003eThere are n tasks (T1,...,Tn) that need to be executed exactly once. Each task requires the use of a common equipment in such a way that on a given day, Ti can be completed if and only if no task Tj (j \u0026gt; i) has been completed on that day. In other words, the set of tasks completed on each day must have increasing indices. An additional constraint is imposed because of task categories: each task Ti belongs to category Ci, and tasks Ti, Tj cannot be scheduled consecutively on a particular day if they belong to nearby categories, i.e., if |Ci â€” Cj| \u0026lt;\u003d K. What is the smallest number of days needed to complete all the tasks? Also output the indexes of the tasks that should be executed on each day.\u003c/p\u003e\u003cp\u003eConstraints 1 \u0026lt;\u003d n \u0026lt;\u003d 1000, 1 \u0026lt;\u003d Ci \u0026lt;\u003d 100000\u003c/p\u003e\u003cp\u003eSample Input\u003c/p\u003e\u003cp\u003e5 2 15 9 12 15 18\u003c/p\u003e\u003cp\u003eSample Output\u003c/p\u003e\u003cp\u003e1 1 2 3 4 5\u003c/p\u003e\u003cp\u003eSample Input\u003c/p\u003e\u003cp\u003e5 3 1 2 7 5 2\u003c/p\u003e\u003cp\u003eSample Output\u003c/p\u003e\u003cp\u003e2 1 5 2 7 2\u003c/p\u003e\u003c/div\u003e","tags":["#graph","dag","dynamic programming"]}}