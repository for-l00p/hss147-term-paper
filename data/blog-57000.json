{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1515487473,"rating":89,"authorHandle":"Golovanov399","modificationTimeSeconds":1515487473,"id":57000,"title":"\u003cp\u003eMeltdown + spectre vs testing systems\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHello everyone,\u003c/p\u003e\u003cp\u003eSome of you may know about recently discovered \u003ca href\u003d\"https://www.redhat.com/en/blog/what-are-meltdown-and-spectre-here%E2%80%99s-what-you-need-know\"\u003evulnerabilities\u003c/a\u003e (well, technically, there in one vulnerability and two attacks using it). I am not a cybersecurity expert, I know what is going on about the \u0026quot;read-all-those-breaking-news-titles\u0026quot; level, but as I understood, some things can slow down by 30%. So I have a couple of questions:\u003c/p\u003e \u003col\u003e   \u003cli\u003e\u003cp\u003eDo testing systems like codeforces, yandex.contest, topcoder, atcoder, csacademy etc apply the patch? I don\u0027t know if testing machines store something that is important and shouldn\u0027t be stolen.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eIf yes, does this mean that we now should multiply all time limits by 0.7? Maybe this coefficient is not so small because 30% is reached on some other type of operations which are not used in cp? On the other hand, branch prediction is used almost always in cp, as I know.\u003c/p\u003e\u003c/li\u003e \u003c/ol\u003e\u003cp\u003eSomebody who knows how this works, answer, please.\u003c/p\u003e\u003c/div\u003e","tags":["security","meltdown","spectre","performance"]}}