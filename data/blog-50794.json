{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1488577806,"rating":3,"authorHandle":"yyyvvvyyy","modificationTimeSeconds":1488577806,"id":50794,"title":"\u003cp\u003eAlternative solution to standard tree query problem?\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eI was solving this problem which seemed like a pretty much standard problem of persistent segment tree but i came across this solution which seems to use some dfs ordering of nodes and i\u0027m unable to figure out what is going on?\u003c/p\u003e\u003cp\u003eProblem: Given a tree (100000 nodes) and a value in each node, and for each query you are given 2 nodes and a value V , you have to find number of nodes whose value is less than V.\u003c/p\u003e\u003cp\u003esolution: \u003ca href\u003d\"https://www.hackerearth.com/challenge/college/programmers-parliament/algorithm/freaky-frequencies/submission/7492012/\"\u003ehttps://www.hackerearth.com/challenge/college/programmers-parliament/algorithm/freaky-frequencies/submission/7492012/\u003c/a\u003e\u003c/p\u003e\u003cp\u003eThis is my first time on codeforces. Thanks in advance\u003c/p\u003e\u003c/div\u003e","tags":["#trees","#dfs","persistent segment tree","hld"]}}