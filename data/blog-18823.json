{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1435085343,"rating":93,"authorHandle":"marat.snowbear","modificationTimeSeconds":1435085343,"id":18823,"title":"\u003cp\u003eAlgorithms course on Coursera\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eI\u0027d like to inform you that on 30th of June on Coursera will start second session of Tim Roughgarden\u0027s \u0026quot;\u003ca href\u003d\"https://www.coursera.org/course/algo\"\u003eAlgorithms: Design and Analysis, Part 1\u003c/a\u003e\u0026quot; course. I took first session of this course a couple of years ago, in fact this is a source of my initial knowledge about algorithms and data structures and I started taking part in competitive programming contests soon after finishing second part of the course. I would definitely recommend taking it, I\u0027d say that it should be interesting and useful for CF green \u0026amp; blue rating zone coders. The course consists of video lectures, quizzes and programming assignments (it\u0027s not a pure theory class) and will take approximately 4-8 hours per week to finish it successfully. \u003c/p\u003e\u003cp\u003eTo give you an idea on topics covered by this course, let me just copy the course syllabus here: \u003c/p\u003e\u003cp\u003e\u003cstrong\u003eWeek 1\u003c/strong\u003e: Introduction. Asymptotic analysis including big-oh notation. Divide-and-conquer algorithms for sorting, counting inversions, matrix multiplication, and closest pair.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eWeek 2\u003c/strong\u003e: Running time analysis of divide-and-conquer algorithms. The master method. Introduction to randomized algorithms, with a probability review. QuickSort. \u003c/p\u003e\u003cp\u003e\u003cstrong\u003eWeek 3\u003c/strong\u003e: More on randomized algorithms and probability. Computing the median in linear time. A randomized algorithm for the minimum graph cut problem.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eWeek 4\u003c/strong\u003e: Graph primitives. Depth- and breadth-first search. Connected components in undirected graphs. Topological sort in directed acyclic graphs. Strongly connected components in directed graphs.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eWeek 5\u003c/strong\u003e: Dijkstra\u0027s shortest-path algorithm. Introduction to data structures. Heaps and applications.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eWeek 6\u003c/strong\u003e: Further data structures. Hash tables and applications. Balanced binary search trees.\u003c/p\u003e\u003cp\u003eThere is a \u003ca href\u003d\"https://www.coursera.org/course/algo2\"\u003esecond part of this course\u003c/a\u003e as well which covers greedy algorithms, dynamic programming and NP hard problems, I would recommend taking it as well but it turns out that there was a session of it which finished recently, I don\u0027t know when they will schedule the next one but I guess you can still watch the lectures. \u003c/p\u003e\u003c/div\u003e","tags":["education","coursera","courses","mooc"]}}