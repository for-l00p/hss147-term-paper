{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1465686971,"rating":10,"authorHandle":"Tigro","modificationTimeSeconds":1465686985,"id":45374,"title":"\u003cp\u003en-place mastermind variation algorithm\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHey, would someone please help me with how would one solve this better than I do? So the task is as follows:\u003c/p\u003e \u003cpre\u003eGiven the history of guesses in a mastermind game using digits instead of colors in a form of pairs (x, y) where x is the guess and y is how many digits were placed correctly, guess the correct number. Each input is guaranteed to have a solution.\n\nExample for a 5-place game:\n\n(90342, 2)\n(70794, 0)\n(39458, 2)\n(34109, 1)\n(51545, 2)\n(12531, 1)\n\nShould yield:\n\n39542\n\nCreate an algorithm to correctly guess the result in an n-place mastermind given the history.\u003c/pre\u003e\u003cp\u003eSo the only idea I had was to keep the probability of each digit being correct based on the correct shots in a given guess and then try to generate the most possible number, then the next one and so on â€” so for example we\u0027d have 9 being 40% possible for the first place (cause the first guess has 2/5\u003d40% correct), 7 being impossible and so on. Then we do the same for other places in the number and finally generate a number with the highest probability to test it against all the guesses.\u003c/p\u003e\u003cp\u003eThe problem with this approach, though, is that generating the next possible number, and the next, and so on (as we probably won\u0027t score a home run in the first try) is really non-trivial (or at least I don\u0027t see an easy way of implementing this) and since this was used on a contest at my uni that had something like a 90 minute timeframe and this wasn\u0027t the only problem, I don\u0027t think something so elaborate was the anticipated approach.\u003c/p\u003e\u003cp\u003eHow could one do it easier? \u003c/p\u003e\u003c/div\u003e","tags":["probability","puzzle","#algorithms"]}}