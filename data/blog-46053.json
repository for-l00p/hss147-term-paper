{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1468616524,"rating":13,"authorHandle":"Juniorandrade","modificationTimeSeconds":1468623836,"id":46053,"title":"\u003cp\u003eEditorial I Brazilian Open Cup, Federal University Of Uberlandia\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eOla pessoal!!\u003c/p\u003e\u003cp\u003eAo passar dos dias irei postar por aqui soluções sobre os exercícios do contest da UFU.\u003c/p\u003e\u003cp\u003ePrimeiramente algumas dicas sobre os exercícios [SPOILER ALERT]\u003c/p\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eSpoiler\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eA -\u0026gt; Brute-Force / Simulação\u003c/p\u003e\u003cp\u003eB -\u0026gt; Otimização com operações binárias\u003c/p\u003e\u003cp\u003eC -\u0026gt; Combinatória C(n, k)\u003c/p\u003e\u003cp\u003eD -\u0026gt; Sqrt-Decomposition (Mo\u0027s Algorithm) / Fenwick-Tree\u003c/p\u003e\u003cp\u003eE -\u0026gt; Pd com otimização de exponenciação de matrizes\u003c/p\u003e\u003cp\u003eF -\u0026gt; Heavy-Light-Decomposition\u003c/p\u003e\u003cp\u003eG -\u0026gt; Knuth–Morris–Pratt algorithm\u003c/p\u003e\u003cp\u003eH -\u0026gt; Simulação (Retirar as arestas, verificar conectividade)\u003c/p\u003e\u003cp\u003eI -\u0026gt; Pd com redução de estado\u003c/p\u003e\u003cp\u003eJ -\u0026gt; Travelling Salesman Problem\u003c/p\u003e\u003cp\u003eK -\u0026gt; Implementation\u003c/p\u003e\u003cp\u003eL -\u0026gt; Math — Braquistócrona\u003c/p\u003e\u003cp\u003eM -\u0026gt; Backtracking\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003cp\u003eAbaixo, a solução completa dos exercicios.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eA -\u0026gt; Looking for Words\u003c/strong\u003e\u003c/p\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eCodigo\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003e#include \u0026lt;bits/stdc++.h\u0026gt;\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef unsigned long long ull;\ntypedef pair\u0026lt; ll, ll \u0026gt; ii;\ntypedef vector\u0026lt; ll \u0026gt; vi;\ntypedef vector\u0026lt; ii \u0026gt; vii;\n\n#define INF 0x3F3F3F3F\n#define LINF 0x3F3F3F3F3F3F3F3FLL\n#define pb push_back\n#define mp make_pair\n#define pq priority_queue\n#define LSONE(s) ((s)\u0026amp;(-s))\n#define DEG_to_RAD(X)   (X * PI / 180)\n#define F first\n#define S second\n#define PI 2*acos(0)\n\n#ifdef ONLINE_JUDGE\n#define debug(args...)\n#else\n#define debug(args...) fprintf(stderr,args)\n#endif\n\n//////////////////////\nint dx[] \u003d {-1,0,1,0};\nint dy[] \u003d {0,1,0,-1};\n//////////////////////\n\nconst int N \u003d 1010;\n\nint n, m, q, k;\n\nvector\u0026lt;string\u0026gt;vet;\nchar s[12345];\n\nll cont() {\n  ll maxi \u003d LINF;\n  for(int i \u003d 0; i \u0026lt; n; i++) {\n    ll qtd \u003d 0;\n    for(int j \u003d 0; j \u0026lt; m; ++j) {\n      if(s[j] !\u003d vet[i][j]) qtd++;\n    }\n    maxi \u003d min(maxi, qtd);\n  }\n  return maxi;\n}\n\nint main() {\n  scanf(\u0026quot;%d %d %d %d\u0026quot;, \u0026amp;n, \u0026amp;m, \u0026amp;q, \u0026amp;k);\n  for(int i \u003d 0; i \u0026lt; n; ++i) {\n    scanf(\u0026quot; %s\u0026quot;, s);\n    vet.pb((string)s);\n  }\n  for(int i \u003d 0; i \u0026lt; q; ++i) {\n    scanf(\u0026quot; %s\u0026quot;, s);\n    if(cont() \u0026lt;\u003d k) puts(\u0026quot;S\u0026quot;);\n    else puts(\u0026quot;N\u0026quot;);\n  }\n  return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eB -\u0026gt; No repetitions\u003c/strong\u003e\u003c/p\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eCodigo\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003e#include \u0026lt;bits/stdc++.h\u0026gt;\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef unsigned long long ull;\ntypedef pair\u0026lt; ll, ll \u0026gt; ii;\ntypedef vector\u0026lt; ll \u0026gt; vi;\ntypedef vector\u0026lt; ii \u0026gt; vii;\n\n#define INF 0x3F3F3F3F\n#define LINF 0x3F3F3F3F3F3F3F3FLL\n#define pb push_back\n#define mp make_pair\n#define pq priority_queue\n#define LSONE(s) ((s)\u0026amp;(-s))\n#define DEG_to_RAD(X)   (X * PI / 180)\n#define F first\n#define S second\n#define PI 2*acos(0)\n\n#ifdef ONLINE_JUDGE\n#define debug(args...)\n#else\n#define debug(args...) fprintf(stderr,args)\n#endif\n\n//////////////////////\nint dx[] \u003d {-1,0,1,0};\nint dy[] \u003d {0,1,0,-1};\n//////////////////////\n\nint main() {\n  int n;\n  scanf(\u0026quot;%d\u0026quot;, \u0026amp;n);\n  ll x \u003d 0;\n  for(int i \u003d 0; i \u0026lt; n; ++i) {\n    ll y; scanf(\u0026quot;%lld\u0026quot;, \u0026amp;y);\n    x ^\u003d y;\n  }\n  printf(\u0026quot;%lld\\n\u0026quot;, x);\n  return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eC -\u0026gt; Mixing Words\u003c/strong\u003e\u003c/p\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eCodigo\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003e#include \u0026lt;bits/stdc++.h\u0026gt;\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef unsigned long long ull;\ntypedef pair\u0026lt; ll, ll \u0026gt; ii;\ntypedef vector\u0026lt; ll \u0026gt; vi;\ntypedef vector\u0026lt; ii \u0026gt; vii;\n\n#define INF 0x3F3F3F3F\n#define LINF 0x3F3F3F3F3F3F3F3FLL\n#define pb push_back\n#define mp make_pair\n#define pq priority_queue\n#define LSONE(s) ((s)\u0026amp;(-s))\n#define DEG_to_RAD(X)   (X * PI / 180)\n#define F first\n#define S second\n#define PI 2*acos(0)\n\n#ifdef ONLINE_JUDGE\n#define debug(args...)\n#else\n#define debug(args...) fprintf(stderr,args)\n#endif\n\n//////////////////////\nint dx[] \u003d {-1,0,1,0};\nint dy[] \u003d {0,1,0,-1};\n//////////////////////\n\nconst ll md \u003d (1e9 + 7LL);\n\ninline ll mulMod(ll a, ll b) {\n  return ((a % md) * (b % md)) % md;\n}\n\ninline ll addMod(ll a, ll b) {\n  return ((a % md) + (b % md) + 3 * md) % md;\n}\n\ninline ll power(ll a, ll p){\n  ll c \u003d 1;\n  while(p){\n    if(p \u0026amp; 1) c \u003d mulMod(c, a);\n    a \u003d mulMod(a, a);\n    p \u0026gt;\u0026gt;\u003d 1;\n  }\n  return c;\n}\n\nconst int N \u003d 10000001;\n\nint fat[N], invFat[N];\n\nll C(ll n, ll a, ll b) {\n  ll num \u003d fat[n];\n  ll den \u003d mulMod(invFat[a], invFat[b]);\n  return mulMod(num, den);\n}\n\nint main() {\n  int n, m;\n  scanf(\u0026quot;%d %d\u0026quot;, \u0026amp;n, \u0026amp;m);\n  if(n \u0026gt; m) swap(n, m);\n  fat[0] \u003d invFat[0] \u003d 1;\n  for(int i \u003d 1; i \u0026lt;\u003d (n + m); ++i) {\n    fat[i] \u003d mulMod(fat[i - 1], i);\n    if(i \u003d\u003d n) invFat[i] \u003d power(fat[i], md - 2);\n    if(i \u003d\u003d m) invFat[i] \u003d power(fat[i], md - 2);\n  }\n\n  printf(\u0026quot;%lld\\n\u0026quot;, C(n + m, n, m));\n  return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eD -\u0026gt; Investigating the cartel\u003c/strong\u003e\u003c/p\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eCodigo\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003e#include \u0026lt;bits/stdc++.h\u0026gt;\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef unsigned long long ull;\ntypedef pair\u0026lt; ll, ll \u0026gt; ii;\ntypedef vector\u0026lt; ll \u0026gt; vi;\ntypedef vector\u0026lt; ii \u0026gt; vii;\n\n#define INF 0x3F3F3F3F\n#define LINF 0x3F3F3F3F3F3F3F3FLL\n#define pb push_back\n#define mp make_pair\n#define pq priority_queue\n#define LSONE(s) ((s)\u0026amp;(-s))\n#define DEG_to_RAD(X)   (X * PI / 180)\n#define F first\n#define S second\n#define PI 2*acos(0)\n\n#ifdef ONLINE_JUDGE\n#define debug(args...)\n#else\n#define debug(args...) fprintf(stderr,args)\n#endif\n\n//////////////////////\nint dx[] \u003d {-1,0,1,0};\nint dy[] \u003d {0,1,0,-1};\n//////////////////////\n\nconst int N \u003d 100010;\nconst int M \u003d 303;\n\nint n;\nint v[N];\n\nstruct est {\n  int l, r;\n  int id;\n  est(){};\n  est(int _l, int _r, int _id) {\n    l \u003d _l;\n    r \u003d _r;\n    id \u003d _id;\n  }\n  bool operator \u0026lt; (est foo) const {\n    if(r / M !\u003d foo.r / M) return r / M \u0026lt; foo.r / M;\n    else if(l !\u003d foo.l) return l \u0026lt; foo.l;\n    return id \u0026lt; foo.id;\n  }\n};\n\nvector\u0026lt;est\u0026gt;mo;\nint e[N];\nint p[N];\nint qtdAll;\n\nvoid add(int x) {\n  p[x]^\u003d1;\n  if(p[x]) {\n    if(e[v[x]] \u003d\u003d 1) qtdAll--;\n    e[v[x]]++;\n    if(e[v[x]] \u003d\u003d 1) qtdAll++;\n  }\n  else{\n    if(e[v[x]] \u003d\u003d 1) qtdAll--;\n    e[v[x]]--;\n    if(e[v[x]] \u003d\u003d 1) qtdAll++;\n  }\n}\n\nint ans[N];\n\nint main() {\n  scanf(\u0026quot;%d\u0026quot;, \u0026amp;n);\n  for(int i \u003d 1; i \u0026lt;\u003d n; ++i) {\n    scanf(\u0026quot;%d\u0026quot;, v + i);\n  }\n\n  int q; scanf(\u0026quot;%d\u0026quot;, \u0026amp;q);\n  for(int i \u003d 0; i \u0026lt; q; ++i) {\n    int l, r;\n    scanf(\u0026quot;%d %d\u0026quot;, \u0026amp;l, \u0026amp;r);\n    mo.pb(est(l, r, i));\n  }\n\n  sort(mo.begin(), mo.end());\n\n  qtdAll \u003d 0;\n  int l, r;\n  l \u003d r \u003d 1;\n  add(l);\n  for(int i \u003d 0; i \u0026lt; mo.size(); ++i) {\n    int li \u003d mo[i].l, ri \u003d mo[i].r, id \u003d mo[i].id;\n    while(l \u0026gt; li) add(--l);\n    while(r \u0026lt; ri) add(++r);\n    while(l \u0026lt; li) add(l++);\n    while(r \u0026gt; ri) add(r--);\n    ans[id] \u003d (ri - li + 1) - qtdAll;\n  }\n  for(int i \u003d 0; i \u0026lt; q; ++i) {\n    printf(\u0026quot;%d\\n\u0026quot;, ans[i]);\n  }\n\n  return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eE -\u0026gt; How many ways?\u003c/strong\u003e\u003c/p\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eCodigo\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003e#include \u0026lt;bits/stdc++.h\u0026gt;\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef unsigned long long ull;\ntypedef pair\u0026lt; ll, ll \u0026gt; ii;\ntypedef vector\u0026lt; ll \u0026gt; vi;\ntypedef vector\u0026lt; ii \u0026gt; vii;\n\n#define INF 0x3F3F3F3F\n#define LINF 0x3F3F3F3F3F3F3F3FLL\n#define pb push_back\n#define mp make_pair\n#define pq priority_queue\n#define LSONE(s) ((s)\u0026amp;(-s))\n#define DEG_to_RAD(X)   (X * PI / 180)\n#define F first\n#define S second\n#define PI 2*acos(0)\n\n#ifdef ONLINE_JUDGE\n#define debug(args...)\n#else\n#define debug(args...) fprintf(stderr,args)\n#endif\n\n//////////////////////\nint dx[] \u003d {-1,0,1,0};\nint dy[] \u003d {0,1,0,-1};\n//////////////////////\n\nconst ll md \u003d (1e9 + 7LL);\n\ninline ll mulMod(ll a, ll b) {\n  return ((a % md) * (b % md)) % md;\n}\n\ninline ll addMod(ll a, ll b) {\n  return ((a % md) + (b % md) + 3 * md) % md;\n}\n\nstruct matriz{\n  ll mat[2][2];\n  matriz operator * ( matriz b ){\n    matriz c;\n    register int i,j,k;\n    for(i\u003d0;i\u0026lt;2;++i) for(j\u003d0;j\u0026lt;2;++j) for(k\u003dc.mat[i][j]\u003d0;k\u0026lt;2;++k) {\n      c.mat[i][j] \u003d addMod(c.mat[i][j], mulMod(mat[i][k], b.mat[k][j]));\n    }\n    return c;\n  }\n};\n\nmatriz expMat( matriz base, ll p ){\n  matriz ans;\n  register int i,j,k;\n  for(i\u003d0;i\u0026lt;2;++i) for(j\u003d0;j\u0026lt;2;++j) ans.mat[i][j] \u003d (i\u003d\u003dj);\n  while(p){\n    if( p\u0026amp;1 ) ans \u003d ans*base;\n    base \u003d base*base;\n    p\u0026gt;\u0026gt;\u003d1;\n  }\n  return ans;\n}\n\nint main() {\n  int t; scanf(\u0026quot;%d\u0026quot;, \u0026amp;t);\n  while(t--) {\n    matriz pd;\n    pd.mat[0][0] \u003d 1;\n    pd.mat[0][1] \u003d 1;\n    pd.mat[1][0] \u003d 1;\n    pd.mat[1][1] \u003d 0;\n    ll n; scanf(\u0026quot;%lld\u0026quot;, \u0026amp;n);\n\n    pd \u003d expMat(pd, n - 1);\n    printf(\u0026quot;%lld\\n\u0026quot;, pd.mat[0][0]);\n  }\n  return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eF -\u0026gt; Walking on the tree\u003c/strong\u003e\u003c/p\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eCodigo\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003e#include \u0026lt;bits/stdc++.h\u0026gt;\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef unsigned long long ull;\ntypedef pair\u0026lt;ll,ll\u0026gt; ii;\ntypedef vector\u0026lt;ll\u0026gt; vi;\ntypedef vector\u0026lt; ii \u0026gt; vii;\n\n#define INF 0x3F3F3F3F\n#define LINF 0x3F3F3F3F3F3F3F3FLL\n#define pb push_back\n#define mp make_pair\n#define pq priority_queue\n#define LSONE(s) ((s)\u0026amp;(-s)) //LASTBIT\n#define DEG_to_RAD(X)   (X * PI / 180)\n#define F first\n#define S second\n#define PI 2*acos(0)\n\n#ifdef ONLINE_JUDGE\n#define debug(args...)\n#else\n#define debug(args...) fprintf(stderr,args)\n#endif\n\n//////////////////////\nint dx[] \u003d {1,-1,0,0};\nint dy[] \u003d {0,0,-1,1};\n//////////////////////\n\nvoid arquivo()\n{\n  freopen(\u0026quot;\u0026quot;,\u0026quot;r\u0026quot;,stdin);\n  freopen(\u0026quot;\u0026quot;,\u0026quot;w\u0026quot;,stdout);\n}\n\nconst int N \u003d 300010;\nconst int M \u003d 25;\n\nstruct segTree\n{\n  int tr[4*N];\n  segTree(){};\n  void update( int no, int l, int r, int i, int j )\n  {\n    if( l \u003d\u003d r )\n    {\n      tr[no] \u003d j;\n      return;\n    }\n    int nxt \u003d (no\u0026lt;\u0026lt;1), mid \u003d (l+r)\u0026gt;\u0026gt;1;\n    if( i \u0026lt;\u003d mid ) update(nxt,l,mid,i,j);\n    else update(nxt+1,mid+1,r,i,j);\n    tr[no] \u003d tr[nxt] + tr[nxt+1];\n  }\n  int query( int no, int l, int r, int i, int j )\n  {\n    if( r \u0026lt; i || l \u0026gt; j ) return 0;\n    if( l\u0026gt;\u003di \u0026amp;\u0026amp; r\u0026lt;\u003dj ) return tr[no];\n    int nxt \u003d (no\u0026lt;\u0026lt;1), mid \u003d (l+r)\u0026gt;\u0026gt;1;\n    return query(nxt,l,mid,i,j) + query(nxt+1,mid+1,r,i,j);\n  }\n};\n\nvi g[N];\nvi w[N];\nsegTree mySeg;\n\nint n, h[N], v[N], treeSize[N];\nint lca[N][M];\nint chainInd[N], chainSize[N], chainHead[N], chainPos[N], chainNo, posInBase[N];\nint ptr;\n\nvoid dfs( int x, int ult, int prof, int lp )\n{\n  treeSize[x] \u003d 1;\n  h[x] \u003d prof;\n  lca[x][0] \u003d ult;\n  for(int i\u003d0;i\u0026lt;g[x].size();++i)\n  {\n    int y \u003d g[x][i];\n    if( y \u003d\u003d ult ) continue;\n    dfs(y,x,prof+1,w[x][i]);\n    treeSize[x] +\u003d treeSize[y];\n  }\n}\n\nvoid process()\n{\n  for(int j\u003d1;j\u0026lt;M;++j) for(int i\u003d0;i\u0026lt;\u003dn;++i) lca[i][j] \u003d lca[lca[i][j-1]][j-1];\n}\n\nint get_lca( int a, int b )\n{\n  if( h[a] \u0026lt; h[b] ) swap(a,b);\n  int d \u003d h[a]-h[b];\n  for( int i\u003dM-1;i\u0026gt;\u003d0;--i ) if( d\u0026amp;(1\u0026lt;\u0026lt;i) ) a \u003d lca[a][i];\n  if( a \u003d\u003d b ) return a;\n  for(int i\u003dM-1;i\u0026gt;\u003d0;--i ) if( lca[a][i] !\u003d lca[b][i] ) a \u003d lca[a][i], b \u003d lca[b][i];\n  return lca[a][0];\n}\n\nvoid hld( int x, int cost, int ult )\n{\n  if( chainHead[chainNo] \u003d\u003d -1 ) chainHead[chainNo] \u003d x;\n  chainInd[x] \u003d chainNo;\n  chainPos[x] \u003d chainSize[chainNo]++;\n  mySeg.update(1,0,n,ptr,cost);\n  posInBase[x] \u003d ptr++;\n\n  int ind \u003d -1, mai \u003d -1;\n  for(int i\u003d0;i\u0026lt;g[x].size();++i)\n  {\n    int y \u003d g[x][i];\n    if( ult \u003d\u003d y ) continue;\n    if( treeSize[y] \u0026gt; mai )\n    {\n      mai \u003d treeSize[y];\n      ind \u003d i;\n    }\n  }\n  if( ind \u0026gt;\u003d 0 ) hld(g[x][ind],w[x][ind],x);\n  for(int i\u003d0;i\u0026lt;g[x].size();++i)\n  {\n    if( i \u003d\u003d ind ) continue;\n    int y \u003d g[x][i];\n    if( ult \u003d\u003d y ) continue;\n    chainNo++;\n    hld(y,w[x][i],x);\n  }\n}\n\nvoid dfs2( int x )\n{\n  posInBase[x] \u003d ptr++;\n  mySeg.update(1,0,n,posInBase[x],v[x]);\n  for(int i\u003d0;i\u0026lt;g[x].size();++i)\n  {\n    int y \u003d g[x][i];\n    if( lca[x][0] \u003d\u003d y ) continue;\n    dfs2(y);\n  }\n}\n\nvoid init()\n{\n  for(int i\u003d0;i\u0026lt;\u003dn;++i)\n  {\n    g[i].clear();\n    w[i].clear();\n    chainHead[i] \u003d -1;\n    chainSize[i] \u003d 0;\n  }\n  ptr \u003d 1;\n  chainNo \u003d 0;\n}\n\nint X[N], Y[N], W[N];\n\nint query_up( int u, int v )\n{\n  int uchain \u003d chainInd[u], vchain \u003d chainInd[v];\n  int ans \u003d 0;\n  while(1)\n  {\n    uchain \u003d chainInd[u];\n    if( uchain \u003d\u003d vchain )\n    {\n      ans +\u003d mySeg.query(1,0,n,posInBase[v]+1,posInBase[u]);\n      break;\n    }\n    int head \u003d chainHead[uchain];\n    ans +\u003d mySeg.query(1,0,n,posInBase[head],posInBase[u]);\n    u \u003d head;\n    u \u003d lca[u][0];\n  }\n  return ans;\n}\n\nint query( int a, int b )\n{\n  if( a \u003d\u003d b ) return 0;\n  int l \u003d get_lca(a,b);\n  return query_up(a,l) + query_up(b,l);\n}\n\nvoid update( int id, int val )\n{\n  int x \u003d X[id], y \u003d Y[id];\n  if( lca[x][0] \u003d\u003d y ) mySeg.update(1,0,n,posInBase[x],val);\n  else mySeg.update(1,0,n,posInBase[y],val);\n  return;\n}\n\n\n\nint main()\n{\n  //ios::sync_with_stdio(0);\n  scanf(\u0026quot;%d\u0026quot;,\u0026amp;n);\n  init();\n\n  for(int i \u003d 1; i \u0026lt; n; ++i) {\n    scanf(\u0026quot;%d %d %d\u0026quot;,X+i,Y+i,W+i);\n    g[X[i]].pb(Y[i]);\n    g[Y[i]].pb(X[i]);\n    w[X[i]].pb(W[i]);\n    w[Y[i]].pb(W[i]);\n  }\n  dfs(1,0,0,0);\n  process();\n  hld(1,0,0);\n\n  int q; scanf(\u0026quot;%d\u0026quot;, \u0026amp;q);\n  while(q--) {\n    int op;\n    scanf(\u0026quot;%d\u0026quot;, \u0026amp;op);\n    int a,b; scanf(\u0026quot;%d %d\u0026quot;,\u0026amp;a,\u0026amp;b);\n    if(op \u003d\u003d 1)  printf(\u0026quot;%d\\n\u0026quot;,query(a, b));\n    else update(a, b);\n  }\n  return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eG -\u0026gt; Bad Song\u003c/strong\u003e\u003c/p\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eCodigo\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003e#include \u0026lt;bits/stdc++.h\u0026gt;\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef unsigned long long ull;\ntypedef pair\u0026lt; ll, ll \u0026gt; ii;\ntypedef vector\u0026lt; ll \u0026gt; vi;\ntypedef vector\u0026lt; ii \u0026gt; vii;\n\n#define INF 0x3F3F3F3F\n#define LINF 0x3F3F3F3F3F3F3F3FLL\n#define pb push_back\n#define mp make_pair\n#define pq priority_queue\n#define LSONE(s) ((s)\u0026amp;(-s))\n#define DEG_to_RAD(X)   (X * PI / 180)\n#define F first\n#define S second\n#define PI 2*acos(0)\n\n#ifdef ONLINE_JUDGE\n#define debug(args...)\n#else\n#define debug(args...) fprintf(stderr,args)\n#endif\n\n//////////////////////\nint dx[] \u003d {-1,0,1,0};\nint dy[] \u003d {0,1,0,-1};\n//////////////////////\n\nchar s[10010];\nchar p[10010];\n\nint kmp(string needle, string haystack) {\n  int qtd \u003d 0;\n  int m \u003d needle.size();\n  vector\u0026lt;int\u0026gt; border(m + 1);\n  border[0] \u003d -1;\n  for (int i \u003d 0; i \u0026lt; m; ++i) {\n    border[i+1] \u003d border[i];\n    while (border[i+1] \u0026gt; -1 and needle[border[i+1]] !\u003d needle[i]) {\n      border[i+1] \u003d border[border[i+1]];\n    }\n    border[i+1]++;\n  }\n\n  int n \u003d haystack.size();\n  int seen \u003d 0;\n  for (int i \u003d 0; i \u0026lt; n; ++i){\n    while (seen \u0026gt; -1 and needle[seen] !\u003d haystack[i]) {\n      seen \u003d border[seen];\n    }\n    if (++seen \u003d\u003d m) {\n      qtd++;\n      seen \u003d border[m]; // There are no more characters in needle, so with the next input character let\u0027s try with the border of the whole needle.\n    }\n  }\n  return qtd;\n}\n\n\nint go() {\n  string foo \u003d \u0026quot;\u0026quot;;\n  while(1) {\n    gets(p);\n    if(strcmp(p, \u0026quot;\u0026quot;) \u003d\u003d 0) break;\n    foo.pb(\u0027 \u0027);\n    int len \u003d strlen(p);\n    for(int i \u003d 0; i \u0026lt; len; ++i) foo.pb(p[i]);\n  }\n  string ss \u003d (string)s;\n  return kmp(ss, foo);\n\n}\n\n\nint main() {\n  while(scanf(\u0026quot; %[^\\n]\u0026quot;, s) !\u003d EOF) {\n    if(strcmp(s, \u0026quot;EOF\u0026quot;) \u003d\u003d 0) break;\n    gets(p);\n    int qtd \u003d go();\n    int n; scanf(\u0026quot;%d\u0026quot;, \u0026amp;n);\n    int mx \u003d -1, id \u003d -1;\n    gets(s);\n    for(int i \u003d 1; i \u0026lt;\u003d n; ++i) {\n      gets(s);\n      int q2 \u003d go();\n      //debug(\u0026quot;foo \u003d %d\\n\u0026quot;, q2);\n      if(q2 \u0026gt; qtd \u0026amp;\u0026amp; q2 \u0026gt; mx) {\n        mx \u003d q2;\n        id \u003d i;\n      }\n    }\n    printf(\u0026quot;%d\\n\u0026quot;, id);\n\n  }\n  return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eH -\u0026gt; Terrorizing the city\u003c/strong\u003e\u003c/p\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eCodigo\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003e#include \u0026lt;bits/stdc++.h\u0026gt;\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef unsigned long long ull;\ntypedef pair\u0026lt; ll, ll \u0026gt; ii;\ntypedef vector\u0026lt; ll \u0026gt; vi;\ntypedef vector\u0026lt; ii \u0026gt; vii;\n\n#define INF 0x3F3F3F3F\n#define LINF 0x3F3F3F3F3F3F3F3FLL\n#define pb push_back\n#define mp make_pair\n#define pq priority_queue\n#define LSONE(s) ((s)\u0026amp;(-s))\n#define DEG_to_RAD(X)   (X * PI / 180)\n#define F first\n#define S second\n#define PI 2*acos(0)\n\n#ifdef ONLINE_JUDGE\n#define debug(args...)\n#else\n#define debug(args...) fprintf(stderr,args)\n#endif\n\n//////////////////////\nint dx[] \u003d {-1,0,1,0};\nint dy[] \u003d {0,1,0,-1};\n//////////////////////\n\nconst int N \u003d 202;\n\nint n, m;\nint g[N][N];\nvii edge;\nint vis[N];\n\nint dfs(int x, int t) {\n  if(x \u003d\u003d t) return 1;\n  vis[x] \u003d 1;\n  for(int i \u003d 1; i \u0026lt;\u003d n; ++i) {\n    if(g[x][i] \u003d\u003d 0) continue;\n    if(vis[i]) continue;\n    if(dfs(i, t)) return 1;\n  }\n  return 0;\n}\n\nint main() {\n  scanf(\u0026quot;%d %d\u0026quot;, \u0026amp;n, \u0026amp;m);\n  for(int i \u003d 0; i \u0026lt; m; ++i) {\n    int x, y; scanf(\u0026quot;%d %d\u0026quot;, \u0026amp;x, \u0026amp;y);\n    g[x][y] \u003d 1;\n    edge.pb(mp(x, y));\n  }\n  int st, fs;\n  scanf(\u0026quot;%d %d\u0026quot;, \u0026amp;st, \u0026amp;fs);\n  for(int i \u003d 0; i \u0026lt; edge.size(); ++i) {\n    g[edge[i].F][edge[i].S] \u003d 0;\n    memset(vis, 0, sizeof vis);\n    if(!dfs(st, fs)) {\n      puts(\u0026quot;1\u0026quot;);\n      return 0;\n    }\n    g[edge[i].F][edge[i].S] \u003d 1;\n  }\n  puts(\u0026quot;0\u0026quot;);\n\n  return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eI -\u0026gt; Passionate entrepreneur\u003c/strong\u003e Autor: \u003ca class\u003d\"rated-user user-gray\" href\u003d\"/profile/gardusi\" title\u003d\"Newbie gardusi\"\u003egardusi\u003c/a\u003e\u003c/p\u003e\u003cp\u003ePodemos observar que o problema pode ser quebrado em vários sub-problemas menores, e, dessa maneira, reaproveitar estados anteriores.\u003c/p\u003e\u003cp\u003eVamos denotar uma pd[i][j] que é: o menor custo de se ter pego j bebidas, usando as bebidas de [0, i].\u003c/p\u003e\u003cp\u003eAssim:\u003c/p\u003e\u003cp\u003e\u003cem\u003epd[i][j] \u003d max(pd[i — 1][j], pd[k][j — 1] + p[i] + c[i] — p[k]) para todo k \u0026lt;\u003d i\u003c/em\u003e\u003c/p\u003e\u003cp\u003eDessa maneira, obtemos uma complexidade de O(N * K^2)\u003c/p\u003e\u003cp\u003eEssa complexidade não é a indicada e não passa no tempo limite do exercício.\u003c/p\u003e\u003cp\u003eVamos reescrever a nossa pd de uma outra forma..\u003c/p\u003e\u003cp\u003e\u003cem\u003epd[i][j] \u003d max(pd[i — 1][j], (pd[k][j — 1] — p[k]) + p[i] + c[i])\u003c/em\u003e\u003c/p\u003e\u003cp\u003eVamos denotar { pd[k][j — 1] — p[k] } como \u003cem\u003eA\u003c/em\u003e\u003c/p\u003e\u003cp\u003eOu seja, \u003cem\u003eA\u003c/em\u003e só depende do máximo da linha \u003cem\u003eJ — 1\u003c/em\u003e da pd e somente dessa linha até a coluna \u003cem\u003ei — 1\u003c/em\u003e\u003c/p\u003e\u003cp\u003eDessa modo, conseguimos calcular \u003cem\u003eA\u003c/em\u003e rapidamente, e assim, reduzir a complexidade para O(N * K)\u003c/p\u003e\u003cp\u003eMesmo com essas modificações, alguns códigos não conseguiram AC pela quantidade de memória utilizada.\u003c/p\u003e\u003cp\u003eUma observação importante a se fazer é que o calculo de um estado [i, j] só depende da linha anterior (j só precisa do calculo de j — 1)\u003c/p\u003e\u003cp\u003eEntão, pode-se reduzir a memória nesse caso para O(n * 2), descartando as linhas anteriores.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eComplexidade final: O(n * k) de tempo, O(n) de memória\u003c/strong\u003e\u003c/p\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eCodigo\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003e#include \u0026lt;bits/stdc++.h\u0026gt;\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef unsigned long long ull;\ntypedef pair\u0026lt; ll, ll \u0026gt; ii;\ntypedef vector\u0026lt; ll \u0026gt; vi;\ntypedef vector\u0026lt; ii \u0026gt; vii;\n\n#define INF 0x3F3F3F3F\n#define LINF 0x3F3F3F3F3F3F3F3FLL\n#define pb push_back\n#define mp make_pair\n#define pq priority_queue\n#define LSONE(s) ((s)\u0026amp;(-s))\n#define DEG_to_RAD(X)   (X * PI / 180)\n#define F first\n#define S second\n#define PI 2*acos(0)\n\n#ifdef ONLINE_JUDGE\n#define debug(args...)\n#else\n#define debug(args...) fprintf(stderr,args)\n#endif\n\n//////////////////////\nint dx[] \u003d {-1,0,1,0};\nint dy[] \u003d {0,1,0,-1};\n//////////////////////\n\nconst int N \u003d 100010;\nconst int K \u003d 505;\n\nint n, k;\nll pd[2][N];\nll p[N], c[N];\n\nint main() {\n  scanf(\u0026quot;%d %d\u0026quot;, \u0026amp;n, \u0026amp;k);\n  for(int i \u003d 0; i \u0026lt; n; ++i)\n    scanf(\u0026quot;%lld\u0026quot;, p + i);\n  for(int i \u003d 1; i \u0026lt; n; ++i)\n    scanf(\u0026quot;%lld\u0026quot;, c + i);\n\n  ll ans \u003d 0;\n  for(int i \u003d 1; i \u0026lt;\u003d k; ++i) {\n    int lst \u003d (i - 1) \u0026amp; 1;\n    int at \u003d (i \u0026amp; 1);\n    ll maxi \u003d pd[lst][0] - p[0];\n    for(int j \u003d 1; j \u0026lt; n; ++j) {\n      ll foo \u003d p[j] + c[j];\n      pd[at][j] \u003d max(pd[at][j], maxi + foo);\n      pd[at][j] \u003d max(pd[at][j], pd[at][j - 1]);\n      ans \u003d max(ans, pd[at][j]);\n      maxi \u003d max(maxi, pd[lst][j] - p[j]);\n    }\n  }\n  printf(\u0026quot;%lld\\n\u0026quot;, ans);\n  return 0;\n}.\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eJ -\u0026gt; Muddled John\u003c/strong\u003e\u003c/p\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eCodigo\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003e#include \u0026lt;bits/stdc++.h\u0026gt;\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef unsigned long long ull;\ntypedef pair\u0026lt; ll, ll \u0026gt; ii;\ntypedef vector\u0026lt; ll \u0026gt; vi;\ntypedef vector\u0026lt; ii \u0026gt; vii;\n\n#define INF 0x3F3F3F3F\n#define LINF 0x3F3F3F3F3F3F3F3FLL\n#define pb push_back\n#define mp make_pair\n#define pq priority_queue\n#define LSONE(s) ((s)\u0026amp;(-s))\n#define DEG_to_RAD(X)   (X * PI / 180)\n#define F first\n#define S second\n#define PI 2*acos(0)\n\n#ifdef ONLINE_JUDGE\n#define debug(args...)\n#else\n#define debug(args...) fprintf(stderr,args)\n#endif\n\n//////////////////////\nint dx[] \u003d {-1,0,1,0};\nint dy[] \u003d {0,1,0,-1};\n//////////////////////\n\nconst int N \u003d 55;\n\nchar s[N][N];\nint n;\nvector\u0026lt;pair\u0026lt;int, int\u0026gt; \u0026gt;  coi;\nint sz;\nint pd[(1 \u0026lt;\u0026lt; 17)][17];\nint c[N][N];\nint xs, ys;\n\nint getCost(ii a, ii b) {\n  int dx \u003d abs(a.F - b.F);\n  int dy \u003d abs(a.S - b.S);\n  int maxi \u003d max(dx, dy);\n  int mini \u003d min(dx, dy);\n  return mini * 3 + 2 * (maxi - mini);\n}\n\nint func(int mask, int pos) {\n  if(mask \u003d\u003d (1 \u0026lt;\u0026lt; sz) - 1) {\n    return getCost(coi[pos], ii(xs, ys));\n  }\n  if(pd[mask][pos] !\u003d -1) return pd[mask][pos];\n  int ret \u003d INF;\n  for(int i \u003d 0; i \u0026lt; sz; ++i) {\n    if((mask \u0026gt;\u0026gt; i) \u0026amp; 1) continue;\n    ret \u003d min(ret, c[pos][i] + func(mask | (1 \u0026lt;\u0026lt; i), i));\n  }\n  return pd[mask][pos] \u003d ret;\n}\n\nint main() {\n  while(1) {\n    scanf(\u0026quot;%d\u0026quot;, \u0026amp;n);\n    if(!n) break;\n    coi.clear();\n\n    for(int i \u003d 0; i \u0026lt; n; ++i) scanf(\u0026quot; %s\u0026quot;, s[i]);\n    for(int i \u003d 0; i \u0026lt; n; ++i) {\n      for(int j \u003d 0; j \u0026lt; n; ++j) {\n        if(s[i][j] \u003d\u003d \u0027D\u0027) {\n          xs \u003d i;\n          ys \u003d j;\n        }\n        else if(s[i][j] \u003d\u003d \u0027M\u0027) {\n          coi.pb(mp(i, j));\n        }\n      }\n    }\n    sz \u003d coi.size();\n    for(int i \u003d 0; i \u0026lt; sz; ++i) {\n      for(int j \u003d 0; j \u0026lt; sz; ++j) {\n        c[i][j] \u003d getCost(coi[i], coi[j]);\n      }\n    }\n    memset(pd, -1, sizeof pd);\n    int ans \u003d INF;\n    for(int i \u003d 0; i \u0026lt; sz; ++i) {\n      ans \u003d min(ans, getCost(ii(xs, ys), coi[i]) + func(1 \u0026lt;\u0026lt; i, i));\n    }\n    printf(\u0026quot;%d\\n\u0026quot;, ans);\n  }\n\n  return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eK -\u0026gt; Balloon++\u003c/strong\u003e\u003c/p\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eCodigo\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003e#include \u0026lt;bits/stdc++.h\u0026gt;\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef unsigned long long ull;\ntypedef pair\u0026lt; ll, ll \u0026gt; ii;\ntypedef vector\u0026lt; ll \u0026gt; vi;\ntypedef vector\u0026lt; ii \u0026gt; vii;\n\n#define INF 0x3F3F3F3F\n#define LINF 0x3F3F3F3F3F3F3F3FLL\n#define pb push_back\n#define mp make_pair\n#define pq priority_queue\n#define LSONE(s) ((s)\u0026amp;(-s))\n#define DEG_to_RAD(X)   (X * PI / 180)\n#define F first\n#define S second\n#define PI 2*acos(0)\n\n#ifdef ONLINE_JUDGE\n#define debug(args...)\n#else\n#define debug(args...) fprintf(stderr,args)\n#endif\n\n//////////////////////\nint dx[] \u003d {-1,0,1,0};\nint dy[] \u003d {0,1,0,-1};\n//////////////////////\n\nchar s[123];\nint main() {\n  int q \u003d 0;\n  while(scanf(\u0026quot; %s\u0026quot;, s)!\u003dEOF) {\n    int len \u003d strlen(s);\n    if(s[len - 1] \u003d\u003d \u0027+\u0027) q++;\n    else q--;\n  }\n  printf(\u0026quot;%d\\n\u0026quot;, q);\n  return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eL -\u0026gt; Toboggan\u003c/strong\u003e\u003c/p\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eCodigo\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003e#include \u0026lt;bits/stdc++.h\u0026gt;\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef unsigned long long ull;\ntypedef pair\u0026lt; ll, ll \u0026gt; ii;\ntypedef vector\u0026lt; ll \u0026gt; vi;\ntypedef vector\u0026lt; ii \u0026gt; vii;\n\n#define INF 0x3F3F3F3F\n#define LINF 0x3F3F3F3F3F3F3F3FLL\n#define pb push_back\n#define mp make_pair\n#define pq priority_queue\n#define LSONE(s) ((s)\u0026amp;(-s))\n#define DEG_to_RAD(X)   (X * PI / 180)\n#define F first\n#define S second\n#define PI 2*acos(0)\n\n#ifdef ONLINE_JUDGE\n#define debug(args...)\n#else\n#define debug(args...) fprintf(stderr,args)\n#endif\n\n//////////////////////\nint dx[] \u003d {-1,0,1,0};\nint dy[] \u003d {0,1,0,-1};\n//////////////////////\n\nld g \u003d 9.80665;\nld pi \u003d 3.14169;\n\ndouble l, w;\n\nint main() {\n  scanf(\u0026quot;%lf %lf\u0026quot;, \u0026amp;l ,\u0026amp;w);\n  ld d \u003d sqrt((l * l) + (w * w));\n  ld r \u003d d / pi;\n  printf(\u0026quot;%.20lf\\n\u0026quot;, (double)(pi * sqrt(r / g)));\n  return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eM -\u0026gt; Last but not the least\u003c/strong\u003e\u003c/p\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eCodigo\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003e#include \u0026lt;bits/stdc++.h\u0026gt;\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef unsigned long long ull;\ntypedef pair\u0026lt; ll, ll \u0026gt; ii;\ntypedef vector\u0026lt; ll \u0026gt; vi;\ntypedef vector\u0026lt; ii \u0026gt; vii;\n\n#define INF 0x3F3F3F3F\n#define LINF 0x3F3F3F3F3F3F3F3FLL\n#define pb push_back\n#define mp make_pair\n#define pq priority_queue\n#define LSONE(s) ((s)\u0026amp;(-s))\n#define DEG_to_RAD(X)   (X * PI / 180)\n#define F first\n#define S second\n#define PI 2*acos(0)\n\n#ifdef ONLINE_JUDGE\n#define debug(args...)\n#else\n#define debug(args...) fprintf(stderr,args)\n#endif\n\n//////////////////////\nint dx[] \u003d {-1,0,1,0};\nint dy[] \u003d {0,1,0,-1};\n//////////////////////\n\nint main() {\n  int n;\n  vi g;\n  scanf(\u0026quot;%d\u0026quot;, \u0026amp;n);\n  while(n--) {\n    int x; scanf(\u0026quot;%d\u0026quot;, \u0026amp;x);\n    g.pb(x);\n  }\n  sort(g.begin(), g.end());\n  do {\n    for(int i \u003d 0; i \u0026lt; g.size(); ++i) printf(\u0026quot;%lld\u0026quot;, g[i]);\n    printf(\u0026quot;\\n\u0026quot;);\n  }\n  while(next_permutation(g.begin(), g.end()));\n  return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003e\u003cem\u003eEditorial dos outros exercicios em breve\u003c/em\u003e\u003c/strong\u003e\u003c/p\u003e\u003c/div\u003e","tags":[]}}