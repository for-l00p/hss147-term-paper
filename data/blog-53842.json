{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1502684777,"rating":6,"authorHandle":"nickluo","modificationTimeSeconds":1502687628,"id":53842,"title":"\u003cp\u003eMystery Solved!\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHi, for those who are pursuing knowledge!\u003c/p\u003e\u003cp\u003eRecently, I\u0027ve been dealing with \u003ca href\u003d\"/contest/839/problem/B\" title\u003d\"Codeforces Round 428 (Div. 2)\"\u003e839B - Игра рядов\u003c/a\u003e. It\u0027s a very challenging Div. 2 B that only a few people\u0027s solutions were accepted during the official competition. After a long time of thinking, I submitted \u003ca href\u003d\"/contest/839/submission/29438182\" title\u003d\"Посылка 29438182 от nickluo\"\u003e29438182\u003c/a\u003e which passed all samples on my computer, but got an WA on test 2 on Codeforces. Then I started running on Custom Test. Yeah, there must be something wrong. But what was it? How could it be wrong? Why it didn\u0027t occur on my computer?\u003c/p\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003ecode\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003e#include \u0026lt;bits/stdc++.h\u0026gt;\nusing namespace std;\nint row[3], cnt[3];\nint main() {\n    int n, k, cnt1 \u003d 0;\n    ios::sync_with_stdio(false);\n    cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; k;\n    for (int i \u003d 0, a; i \u0026lt; k; i++) {\n        cin \u0026gt;\u0026gt; a;\n        if (a \u0026gt;\u003d 4)\n            for (; a \u0026gt;\u003d 4; a -\u003d 4) {\n                if (row[1] \u0026lt; n) ++row[1];\n                else if (row[0] \u0026lt; n) ++row[0];\n                else ++row[2];\n            }\n        cnt[a]++;\n    }\n    for (int i \u003d 0; i \u0026lt; cnt[3]; i++)\n        if (row[1] \u0026lt; n) ++row[1];\n        else if (row[0] \u0026lt; n - 2) row[0] +\u003d 2;\n        else if (row[2] \u0026lt; n - 2) row[2] +\u003d 2;\n        else ++row[0], ++row[2];\n    for (int i \u003d 0; i \u0026lt; cnt[2]; i++)\n        if (row[0] \u0026lt; n) row[0]++;\n        else if (row[2] \u0026lt; n) row[2]++;\n        else if (row[1] \u0026lt; n) row[1]++, cnt1++;\n        else cnt[1] +\u003d 2;\n    if (row[0] \u0026lt;\u003d n \u0026amp;\u0026amp; row[1] \u0026lt;\u003d n \u0026amp;\u0026amp; row[2] \u0026lt;\u003d n \u0026amp;\u0026amp;\n            cnt[1] \u0026gt; cnt1 + n - row[0] + n - row[2] + (n - row[1]) * 2)\n        cout \u0026lt;\u0026lt; \u0026quot;no\u0026quot;;\n    else\n        cout \u0026lt;\u0026lt; \u0026quot;yes\u0026quot;;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\u003cp\u003eAfter a long time of research, I found that there was something wrong with \u003ccode\u003ecnt[a]++\u003c/code\u003e in the first for-loop. If you add \u003ccode\u003ecout \u0026lt;\u0026lt; row[0]\u003c/code\u003e right before and after it and run with sample input 2, you will find that \u003cstrong\u003e\u003ccode\u003erow[0]\u003c/code\u003e is changed\u003c/strong\u003e after 7 is read. Before \u003ccode\u003ecnt[a]++\u003c/code\u003e, \u003ccode\u003erow[0] \u003d 0\u003c/code\u003e. But then, \u003ccode\u003erow[0] \u003d 1\u003c/code\u003e. But how could this be? Something must have been going on! I tried my best to solve the problem, but, well, no progress. \u003c/p\u003e\u003cp\u003eBut then, I looked closer in my code, and found something, in the third line, \u003ccode\u003eint row[3], cnt[3]\u003c/code\u003e. In test 2, 7 is read, and after the for-loop \u003ccode\u003efor (; a \u0026gt;\u003d 4; a -\u003d 4)\u003c/code\u003e, \u003ccode\u003ea\u003c/code\u003e will become 3. But if you want to access \u003ccode\u003ecnt[3]\u003c/code\u003e, sorry, \u003ccode\u003eOut of Range\u003c/code\u003e. I think, \u003ccode\u003erow[]\u003c/code\u003e is allocated right after \u003ccode\u003ecnt[]\u003c/code\u003e, so \u003cstrong\u003e\u003ccode\u003ecnt[0], cnt[1], cnt[2], row[0], row[1], row[2]\u003c/code\u003e are adjacent\u003c/strong\u003e. Accessing \u003ccode\u003ecnt[3]\u003c/code\u003e is the same as accessing \u003ccode\u003erow[0]\u003c/code\u003e. \u003c/p\u003e\u003cp\u003eWhat a poor mistake! But well, after I solved that in \u003ca href\u003d\"/contest/839/submission/29447631\" title\u003d\"Посылка 29447631 от nickluo\"\u003e29447631\u003c/a\u003e, I still made a big mistake. Bet you all have discovered it. The accepted soltuion is \u003ca href\u003d\"/contest/839/submission/29447651\" title\u003d\"Посылка 29447651 от nickluo\"\u003e29447651\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eThe whole process was very painful and irritating, but I would still say that was an interesting experience, that was an interesting problem. And thankful for the contest writers and the amazing platform!\u003c/p\u003e\u003cp\u003eAnd by the way, \u003cstrong\u003ealways think and leave some extra space for your array!\u003c/strong\u003e\u003c/p\u003e\u003c/div\u003e","tags":[]}}