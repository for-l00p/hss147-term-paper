{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1472040500,"rating":10,"authorHandle":"tuna","modificationTimeSeconds":1472040500,"id":46756,"title":"\u003cp\u003eJava: Arrays.sort(Integer) vs Arrays.sort(int) with Examples\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003ch1\u003eJava: Arrays.sort(Integer) is more faster than Arrays.sort(int) in the worst case:\u003c/h1\u003e\u003cp\u003eThe main reason is that Java uses two different sorting algorithms in the cases you mentioned. In the Arrays.sort(int) (or other primitive types) case, Java uses Quicksort, which has a O(n^2) worst case. Instead, in the Arrays.sort(Object) case, it uses Mergesort, which has a O(n log n) worst case.\u003c/p\u003e\u003cp\u003eSo some problems may give you Time Limit Exceeded when you use Arrays.sort(int) if there is an anti-quicksort test.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eReferences:\u003c/strong\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"//codeforces.com/blog/entry/17565\"\u003ehttp://codeforces.com/blog/entry/17565\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://stackoverflow.com/questions/3707190/why-java-arrays-use-two-different-sort-algorithms-for-different-types\"\u003ehttp://stackoverflow.com/questions/3707190/why-java-arrays-use-two-different-sort-algorithms-for-different-types\u003c/a\u003e\u003c/p\u003e\u003ch3\u003eExample 1:\u003c/h3\u003e\u003cp\u003eTime limit exceeded because of Arrays.sort(int)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"//codeforces.com/contest/285/submission/20103799\"\u003ehttp://codeforces.com/contest/285/submission/20103799\u003c/a\u003e\u003c/p\u003e\u003cp\u003eSame code but Accepted because of Arrays.sort(Integer)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"//codeforces.com/contest/285/submission/20103803\"\u003ehttp://codeforces.com/contest/285/submission/20103803\u003c/a\u003e\u003c/p\u003e\u003ch3\u003eExample 2:\u003c/h3\u003e\u003cp\u003eTime limit exceeded on test 46 ( because of Arrays.sort(int) )\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"//codeforces.com/contest/433/submission/20104326\"\u003ehttp://codeforces.com/contest/433/submission/20104326\u003c/a\u003e\u003c/p\u003e\u003cp\u003eAccepted after changing it to Arrays.sort(Integer)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"//codeforces.com/contest/433/submission/20104369\"\u003ehttp://codeforces.com/contest/433/submission/20104369\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eWhen does the worst case of Quicksort occur?\u003c/strong\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.geeksforgeeks.org/when-does-the-worst-case-of-quicksort-occur/\"\u003ehttp://www.geeksforgeeks.org/when-does-the-worst-case-of-quicksort-occur/\u003c/a\u003e\u003c/p\u003e\u003ch4\u003eBut why is Quicksort more popular than Mergesort ?\u003c/h4\u003e\u003cp\u003e1)Is in-place (MergeSort requires extra memory linear to number of elements to be sorted).\u003c/p\u003e\u003cp\u003e2)Has a small hidden constant.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eReference:\u003c/strong\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://stackoverflow.com/questions/70402/why-is-quicksort-better-than-mergesort\"\u003ehttp://stackoverflow.com/questions/70402/why-is-quicksort-better-than-mergesort\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e","tags":["java","anti-quicksort","sorting"]}}