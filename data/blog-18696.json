{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":true,"creationTimeSeconds":1434651934,"rating":67,"authorHandle":"Wild_Hamster","modificationTimeSeconds":1435134448,"id":18696,"title":"\u003cp\u003eCodeforces #308 (Div. 2) Editorial \u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e\u003ca href\u003d\"/contest/552/problem/A\" title\u003d\"Codeforces Round 308 (Div. 2)\"\u003e552A - Vanya and Table\u003c/a\u003e\u003c/p\u003e\u003cp\u003eIn this problem we can get AC with many solutions:\u003c/p\u003e\u003cp\u003e1) With every new rectangle we will add his area to the result, so for each line \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e, \u003ci\u003ey\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e, \u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e, \u003ci\u003ey\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003c/span\u003e we will add to answer \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e - \u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e + 1) * (\u003ci\u003ey\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e - \u003ci\u003ey\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e + 1)\u003c/span\u003e\u003c/p\u003e\u003cp\u003eTime complexity \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e)\u003c/span\u003e.\u003c/p\u003e\u003cp\u003e2) We can just do all, that is written in the statement: create an array and with each new rectangle we can just increment every element inside rectangle. In the end we can just add all elements inside this array.\u003c/p\u003e\u003cp\u003eTime complexity \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e * \u003ci\u003ex\u003c/i\u003e * \u003ci\u003ey\u003c/i\u003e)\u003c/span\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://ideone.com/uFAzzC\"\u003eC++ code\u003c/a\u003e \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/Wild_Hamster\" title\u003d\"Candidate Master Wild_Hamster\"\u003eWild_Hamster\u003c/a\u003e \u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://ideone.com/9FPeh9\"\u003eJava code\u003c/a\u003e \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/Wild_Hamster\" title\u003d\"Candidate Master Wild_Hamster\"\u003eWild_Hamster\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://ideone.com/kIXn7c\"\u003ePython code\u003c/a\u003e \u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/Zlobober\" title\u003d\"Grandmaster Zlobober\"\u003eZlobober\u003c/a\u003e \u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"/contest/552/problem/B\" title\u003d\"Codeforces Round 308 (Div. 2)\"\u003e552B - Vanya and Books\u003c/a\u003e\u003c/p\u003e\u003cp\u003eWe can find out a formula for this problem:\u003c/p\u003e\u003cp\u003efor \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e \u0026lt; 10\u003c/span\u003e answer will be \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e \u003d \u003ci\u003en\u003c/i\u003e - 1 + 1 \u003d 1 * (\u003ci\u003en\u003c/i\u003e + 1) - 1\u003c/span\u003e;\u003c/p\u003e\u003cp\u003efor \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e \u0026lt; 100\u003c/span\u003e answer will be \u003cspan class\u003d\"tex-span\"\u003e2 * (\u003ci\u003en\u003c/i\u003e - 9) + 9 \u003d 2 * \u003ci\u003en\u003c/i\u003e - 9 \u003d 2 * \u003ci\u003en\u003c/i\u003e - 10 - 1 + 2 \u003d 2 * (\u003ci\u003en\u003c/i\u003e + 1) - 11\u003c/span\u003e;\u003c/p\u003e\u003cp\u003efor \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e \u0026lt; 1000\u003c/span\u003e answer will be \u003cspan class\u003d\"tex-span\"\u003e3 * (\u003ci\u003en\u003c/i\u003e - 99) + 2 * (99 - 9) + 9 \u003d 3 * \u003ci\u003en\u003c/i\u003e - 99 - 9 \u003d 3 * \u003ci\u003en\u003c/i\u003e - 100 - 10 - 1 + 3 \u003d 3 * (\u003ci\u003en\u003c/i\u003e + 1) - 111\u003c/span\u003e;\u003c/p\u003e\u003cp\u003eso for \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e \u0026lt; 10\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003esz\u003c/i\u003e\u003c/sup\u003e\u003c/span\u003e answer will be \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/ea/fd/eafd2e185148e0e49b5539e29def989548cbf4f9.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e;\u003c/p\u003e\u003cp\u003eTime complexity \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003esz\u003c/i\u003e)\u003c/span\u003e, where \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003esz\u003c/i\u003e\u003c/span\u003e is the length of n.\u003c/p\u003e\u003cp\u003eWe also could just try \u003cspan class\u003d\"tex-span\"\u003e10\u003c/span\u003e options \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e \u0026lt; 10, \u003ci\u003en\u003c/i\u003e \u0026lt; 100, ..., \u003ci\u003en\u003c/i\u003e \u0026lt; 10\u003csup class\u003d\"upper-index\"\u003e9\u003c/sup\u003e, \u003ci\u003en\u003c/i\u003e \u003d 10\u003csup class\u003d\"upper-index\"\u003e9\u003c/sup\u003e\u003c/span\u003e and solve problem for each option.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eUPD:\u003c/strong\u003e Don\u0027t use function pow() to find powers of 10, because it doesn\u0027t work right sometimes.\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://ideone.com/VkvlOj\"\u003eC++ code\u003c/a\u003e \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/Wild_Hamster\" title\u003d\"Candidate Master Wild_Hamster\"\u003eWild_Hamster\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://ideone.com/CQejY7\"\u003eJava code\u003c/a\u003e \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/Wild_Hamster\" title\u003d\"Candidate Master Wild_Hamster\"\u003eWild_Hamster\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://ideone.com/QIF2sn\"\u003ePython code\u003c/a\u003e \u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/Zlobober\" title\u003d\"Grandmaster Zlobober\"\u003eZlobober\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"/contest/552/problem/C\" title\u003d\"Codeforces Round 308 (Div. 2)\"\u003e552C - Vanya and Scales\u003c/a\u003e\u003c/p\u003e\u003cp\u003eConvert \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/span\u003e to number system of base \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ew\u003c/i\u003e\u003c/span\u003e. If all digits of number – \u003cspan class\u003d\"tex-span\"\u003e0\u003c/span\u003e or \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e, then we can measure the weight of the item with putting weights, that have digits equal to \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e, on one pan, and our item on another one.\u003c/p\u003e\u003cp\u003eIf this condition isn\u0027t satisfied, then we should iterate from lower digit to high and if digit is not equal to \u003cspan class\u003d\"tex-span\"\u003e0\u003c/span\u003e or \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e, we try to substract \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ew\u003c/i\u003e\u003c/span\u003e from it and increment higher digit. If it becomes equal to \u003cspan class\u003d\"tex-span\"\u003e - 1\u003c/span\u003e, then we can put weight with number of this digit on the same pan with our item, if it becomes equal to \u003cspan class\u003d\"tex-span\"\u003e0\u003c/span\u003e, then we don\u0027t put weight, in another case we can\u0027t measure the weight of our item and answer is \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/4f/60/4f601e3b956e92135fca79895323facb0ccbcbfd.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e.\u003c/p\u003e\u003cp\u003eTime complexity \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003elogm\u003c/i\u003e)\u003c/span\u003e.\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://ideone.com/lqEb4p\"\u003eC++ code\u003c/a\u003e \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/Wild_Hamster\" title\u003d\"Candidate Master Wild_Hamster\"\u003eWild_Hamster\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://ideone.com/2CXeCU\"\u003eJava code\u003c/a\u003e \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/Wild_Hamster\" title\u003d\"Candidate Master Wild_Hamster\"\u003eWild_Hamster\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://ideone.com/qa184v\"\u003eJava code\u003c/a\u003e \u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/Zlobober\" title\u003d\"Grandmaster Zlobober\"\u003eZlobober\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"/contest/552/problem/D\" title\u003d\"Codeforces Round 308 (Div. 2)\"\u003e552D - Vanya and Triangles\u003c/a\u003e\u003c/p\u003e\u003cp\u003eWe can look through all pair of points, draw line through each pair and write, that this line includes these 2 points. We can do it with map. If some line includes \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e points, then in fact we counted, that it has \u003cspan class\u003d\"tex-span\"\u003e2 * \u003ci\u003ex\u003c/i\u003e * (\u003ci\u003ex\u003c/i\u003e - 1)\u003c/span\u003e points, because we included each point 2*(x-1) times in this line.\u003c/p\u003e\u003cp\u003eWe can create an array and add to him values \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e[2 * \u003ci\u003ex\u003c/i\u003e * (\u003ci\u003ex\u003c/i\u003e - 1)] \u003d \u003ci\u003ex\u003c/i\u003e\u003c/span\u003e, so we can define, how many points is on the line. Then we can iterate through all lanes and for each line with \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e points we will loose \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e * (\u003ci\u003ex\u003c/i\u003e - 1) * (\u003ci\u003ex\u003c/i\u003e - 2) / 6\u003c/span\u003e possible triangles from all possible \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e * (\u003ci\u003en\u003c/i\u003e - 1) * (\u003ci\u003en\u003c/i\u003e - 2) / 6\u003c/span\u003e triangles. Decide, that at first \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eans\u003c/i\u003e \u003d \u003ci\u003en\u003c/i\u003e * (\u003ci\u003en\u003c/i\u003e - 1) * (\u003ci\u003en\u003c/i\u003e - 2) / 6\u003c/span\u003e. So for every line, that includes \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e points, we will substract \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e * (\u003ci\u003ex\u003c/i\u003e - 1) * (\u003ci\u003ex\u003c/i\u003e - 2) / 6\u003c/span\u003e from \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eans\u003c/i\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eTime complexity \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e * \u003ci\u003elogn\u003c/i\u003e)\u003c/span\u003e.\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://ideone.com/MTrDB8\"\u003eC++11 code\u003c/a\u003e \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/Wild_Hamster\" title\u003d\"Candidate Master Wild_Hamster\"\u003eWild_Hamster\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://ideone.com/guIiI3\"\u003eJava code\u003c/a\u003e \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/Wild_Hamster\" title\u003d\"Candidate Master Wild_Hamster\"\u003eWild_Hamster\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://ideone.com/tdalVu\"\u003eJava code\u003c/a\u003e \u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/Zlobober\" title\u003d\"Grandmaster Zlobober\"\u003eZlobober\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eUPD:\u003c/strong\u003e I am sorry, that O(n3 / 6) solutions passed, my solution with O(n3 / 6) didn\u0027t pass before the contest, so I decided, that TL 4 sec is good(it was for Java TL).\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"/contest/552/problem/E\" title\u003d\"Codeforces Round 308 (Div. 2)\"\u003e552E - Vanya and Brackets\u003c/a\u003e\u003c/p\u003e\u003cp\u003eWe can see, that we can reach maximal answer, when brackets will be between two signs \u003cspan class\u003d\"tex-span\"\u003e * \u003c/span\u003e, or between one sign \u003cspan class\u003d\"tex-span\"\u003e * \u003c/span\u003e and the end of expression. For convenience we will add in the begin of expression \u003cspan class\u003d\"tex-span\"\u003e1 * \u003c/span\u003e, and in the end of expression \u003cspan class\u003d\"tex-span\"\u003e * 1\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eAfter that we can iterate all possible pairs of signs \u003cspan class\u003d\"tex-span\"\u003e * \u003c/span\u003e and count the expression with putting brackets between two signs \u003cspan class\u003d\"tex-span\"\u003e * \u003c/span\u003e for each pair.\u003c/p\u003e\u003cp\u003eWe can use two variables \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ey\u003c/i\u003e\u003c/span\u003e to count the value of expression, in the begin \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e \u003d 0, \u003ci\u003ey\u003c/i\u003e \u003d \u003ci\u003efirstnumber\u003c/i\u003e\u003c/span\u003e, where \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003efirstnumber\u003c/i\u003e\u003c/span\u003e is first digit of expression, then if next sign is \u003cspan class\u003d\"tex-span\"\u003e + \u003c/span\u003e, then \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e \u003d \u003ci\u003ey\u003c/i\u003e, \u003ci\u003ey\u003c/i\u003e \u003d \u003ci\u003enextnumber\u003c/i\u003e\u003c/span\u003e, and if next sign is \u003cspan class\u003d\"tex-span\"\u003e * \u003c/span\u003e, then \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e \u003d \u003ci\u003ex\u003c/i\u003e, \u003ci\u003ey\u003c/i\u003e \u003d \u003ci\u003ey\u003c/i\u003e * \u003ci\u003enextnumber\u003c/i\u003e\u003c/span\u003e. The value of expression will be \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e + \u003ci\u003ey\u003c/i\u003e\u003c/span\u003e, we can create function, like that, to count expressions inside and outside the brackets.\u003c/p\u003e\u003cp\u003eTime complexity \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(|\u003ci\u003es\u003c/i\u003e| * 17\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e)\u003c/span\u003e.\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://ideone.com/Tz1P7B\"\u003eC++ code\u003c/a\u003e \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/Wild_Hamster\" title\u003d\"Candidate Master Wild_Hamster\"\u003eWild_Hamster\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://ideone.com/DdxSE9\"\u003eJava code\u003c/a\u003e \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/Wild_Hamster\" title\u003d\"Candidate Master Wild_Hamster\"\u003eWild_Hamster\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://ideone.com/GCDuO4\"\u003eJava code\u003c/a\u003e \u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/Zlobober\" title\u003d\"Grandmaster Zlobober\"\u003eZlobober\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eP.S.\u003c/strong\u003e Sorry for my bad english, I will try to correct mistakes in the near time.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eUPD:\u003c/strong\u003e \u003ca href\u003d\"//codeforces.com/blog/entry/18826\"\u003eEditorial\u003c/a\u003e from \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/hsk\" title\u003d\"Expert hsk\"\u003ehsk\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e","tags":["308","round","div2","editorial"]}}