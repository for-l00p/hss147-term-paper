{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":true,"creationTimeSeconds":1499953523,"rating":-15,"authorHandle":"Mahilewets","modificationTimeSeconds":1499953523,"id":53277,"title":"\u003cp\u003eКомментарии к реализации алгоритма Касаи\u003c/p\u003e","locale":"ru","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eПост может быть полезен только для \u003cstrong\u003ediv2\u003c/strong\u003e .\u003c/p\u003e\u003cp\u003eВчера я пытался отвечать на вопросы в комментариях к посту о построении массива \u003cstrong\u003eLCP\u003c/strong\u003e по суффиксному массиву (алгоритм Касаи). \u003ca href\u003d\"//codeforces.com/blog/entry/12796\"\u003ehttp://codeforces.com/blog/entry/12796\u003c/a\u003e\u003c/p\u003e\u003cp\u003eУ алгоритма есть определённые тонкости реализации , которые можно понять неправильно, когда вы впервые встречаетесь с ним.\u003c/p\u003e\u003cp\u003eЯ попробую развеять все неясности здесь. \u003c/p\u003e\u003cp\u003eАлгоритм в основном цикле рассматривает суффиксы в том порядке, в котором они идут в исходной строке.\u003c/p\u003e\u003cp\u003eСначала \u003ccode\u003estr[0:n]\u003c/code\u003e, затем \u003ccode\u003estr[1:n]\u003c/code\u003e, затем \u003ccode\u003es[2:n]\u003c/code\u003e и так далее.\u003c/p\u003e\u003cp\u003eЕсли посмотреть на реализацию, то может показаться, что это не так и алгоритм рассматривает суффиксы в порядке сортировки , после прочтения строки \u003ccode\u003ej\u003dsa[rank[i] + 1]\u003c/code\u003e.\u003c/p\u003e\u003cp\u003eНа самом деле происходит следующее.\u003c/p\u003e\u003cp\u003eЭлемент суффиксного массива под номером \u003cstrong\u003eX\u003c/strong\u003e, \u003ccode\u003esa[X]\u003c/code\u003e, даёт номер \u003cstrong\u003eY\u003c/strong\u003e суффикса в строке \u003ccode\u003estr\u003c/code\u003e, который идёт в отсортированном списке под номером \u003cstrong\u003eX\u003c/strong\u003e .\u003c/p\u003e\u003cp\u003eТак как \u003ccode\u003erank[i]\u003c/code\u003e -- это обратная функция к суффиксному массиву, то \u003ccode\u003erank[i]\u003c/code\u003e дает такое число \u003cstrong\u003eZ\u003c/strong\u003e , что \u003ccode\u003esa[Z] \u003di\u003c/code\u003e, то есть даёт номер \u003cstrong\u003ei\u003c/strong\u003e -го суффикса в суффиксном массиве.\u003c/p\u003e\u003cp\u003eТогда \u003ccode\u003ej\u003dsa[rank[i] + 1]\u003c/code\u003e -- это позиция в исходной строке, на которой начинается следующий за \u003cstrong\u003ei\u003c/strong\u003e -м в порядке сортировки суффикс.\u003c/p\u003e\u003cp\u003eЗатем суффиксы тривиальным образом сравниваются за пределами неизвестной части (как в более простых \u003cstrong\u003eO(n)\u003c/strong\u003e строковых алгоритмах, таких как префикс — функция или алг-м Манакера).\u003c/p\u003e\u003cp\u003eИ полученное значение присваивается не \u003cstrong\u003ei\u003c/strong\u003e -му элементу массива \u003cstrong\u003elcp\u003c/strong\u003e , а элементу под номером равным номеру \u003ccode\u003erank[i]\u003c/code\u003e \u003cstrong\u003ei\u003c/strong\u003e -го суффикса в порядке сортировки, как и \u0026quot;должно быть\u0026quot;, потому что \u003cstrong\u003eLCP\u003c/strong\u003e показывает длину совпадающей части между двумя соседними суффиксами именно в порядке лексикографической сортировки, а не в порядке их следования в исходной строке. \u003c/p\u003e\u003c/div\u003e","tags":["касаи","lcp","суффиксный","строки"]}}