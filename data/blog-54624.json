{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1505820300,"rating":0,"authorHandle":"Qudrat_Ibadullayev","modificationTimeSeconds":1505820491,"id":54624,"title":"\u003cp\u003eDFS ga doir masalalar\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eBiror bir uchdan unga bog\u0027langan barcha ko\u0027rish\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\n\u003ccode\u003e\n#include\u0026lt;iostream\u0026gt;\n#include\u0026lt;vector\u0026gt;\nusing namespace std;\nvector\u0026lt;int\u0026gt;p[100001];\nbool used[100001];\nvoid dfs(int v)\n{\n    cout\u0026lt;\u0026lt;\u0026quot;vertex in \u0026quot;\u0026lt;\u0026lt;v\u0026lt;\u0026lt;endl;\n    used[v]\u003d1;\n    for(int i\u003d0;i\u0026lt;p[v].size();i++)\n    {\n        int to\u003dp[v][i];\n        if(used[to]\u003d\u003d0)\n        {\n            dfs(to);\n        }\n    }\n    cout\u0026lt;\u0026lt;\u0026quot;vertex out \u0026quot;\u0026lt;\u0026lt;v\u0026lt;\u0026lt;endl;\n}\nmain()\n{\n    int n,m,v1,v2;\n    cin\u0026gt;\u0026gt;n\u0026gt;\u0026gt;m;\n\n    for(int i\u003d1;i\u0026lt;\u003dm;i++)\n    {\n        cin\u0026gt;\u0026gt;v1\u0026gt;\u0026gt;v2;\n        p[v1].push_back(v2);\n        p[v2].push_back(v1);\n    }\n    int v;\n    cin\u0026gt;\u0026gt;v;\n    dfs(v);\n}\n/*\n11 11\n1 2\n1 3\n1 4\n2 7\n7 8\n8 9\n9 11\n8 10\n3 6\n3 4\n4 5\n\n\n8 3\n*/\n\u003c/code\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003ekirish va chiqish vaqtlari\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\n\u003ccode\u003e\n#include\u0026lt;iostream\u0026gt;\n#include\u0026lt;vector\u0026gt;\nusing namespace std;\nconst int MX\u003d1e5;\nvector\u0026lt;int\u0026gt;p[MX];\nbool used[MX];\nint time_in[MX];\nint time_out[MX];\nint timer;\nbool is_fath(int v1 , int fath)\n{\n    return time_in[fath]\u0026lt;time_in[v1] \u0026amp;\u0026amp; time_out[fath]\u0026gt;time_out[v1];\n}\nvoid dfs(int v)\n{\n    time_in[v]\u003d++timer;\n    used[v]\u003d1;\n    for(int i\u003d0;i\u0026lt;p[v].size();i++)\n    {\n        int to\u003dp[v][i];\n        if(used[to]\u003d\u003d0)\n        {\n            dfs(to);\n        }\n    }\n    time_out[v]\u003d++timer;\n}\nmain()\n{\n    int n,m,v1,v2;\n    cin\u0026gt;\u0026gt;n\u0026gt;\u0026gt;m;\n\n    for(int i\u003d1;i\u0026lt;\u003dm;i++)\n    {\n        cin\u0026gt;\u0026gt;v1\u0026gt;\u0026gt;v2;\n        p[v1].push_back(v2);\n        p[v2].push_back(v1);\n    }\n    int components\u003d0;\n    for(int i\u003d1;i\u0026lt;\u003dn;i++)\n    {\n        if(used[i]\u003d\u003d0)\n        {\n            dfs(i);\n            components++;\n        }\n    }\n    cout\u0026lt;\u0026lt;components\u0026lt;\u0026lt;endl;\n    while(1)\n    {\n        cin\u0026gt;\u0026gt;v1\u0026gt;\u0026gt;v2;\n        if(is_fath(v1,v2))\n        {\n            cout\u0026lt;\u0026lt;\u0026quot;FATHER\u0026quot;;\n        }\n        else cout\u0026lt;\u0026lt;\u0026quot;NOT FATH\u0026quot;;\n        cout\u0026lt;\u0026lt;endl;\n    }\n}\n/*\n20 13\n1 2\n1 3\n1 4\n2 7\n7 8\n8 9\n9 11\n8 10\n3 6\n3 4\n4 5\n12 13\n12 14\n\n8 3\n*/\n\n\u003c/code\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003egrafni siklga tekshirish\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\n\u003ccode\u003e\n#include\u0026lt;iostream\u0026gt;\n#include\u0026lt;vector\u0026gt;\n#include\u0026lt;stdio.h\u0026gt;\n#include\u0026lt;stdlib.h\u0026gt;\nusing namespace std;\nconst int MX\u003d1e5;\nvector\u0026lt;int\u0026gt;p[MX];\nbool used[MX];\nint time_in[MX];\nint time_out[MX];\nint timer;\nint col[MX];\nbool is_fath(int v1 , int fath)\n{\n    return time_in[fath]\u0026lt;time_in[v1] \u0026amp;\u0026amp; time_out[fath]\u0026gt;time_out[v1];\n}\nvoid dfs(int v , int par)\n{\n    time_in[v]\u003d++timer;\n    col[v]\u003d1;\n    for(int i\u003d0;i\u0026lt;p[v].size();i++)\n    {\n        int to\u003dp[v][i];\n        if(col[to]\u003d\u003d0)\n        {\n            dfs(to,v);\n        }\n        else if(col[to]\u003d\u003d1 \u0026amp;\u0026amp; par!\u003dto \u0026amp;\u0026amp; par!\u003d-1)\n        {\n            cout\u0026lt;\u0026lt;\u0026quot;Cycle!\u0026quot;;\n            exit(0);\n        }\n    }\n    col[v]\u003d2;\n    time_out[v]\u003d++timer;\n}\nmain()\n{\n    int n,m,v1,v2;\n    cin\u0026gt;\u0026gt;n\u0026gt;\u0026gt;m;\n\n    for(int i\u003d1;i\u0026lt;\u003dm;i++)\n    {\n        cin\u0026gt;\u0026gt;v1\u0026gt;\u0026gt;v2;\n        p[v1].push_back(v2);\n        p[v2].push_back(v1);\n    }\n    int components\u003d0;\n    for(int i\u003d1;i\u0026lt;\u003dn;i++)\n    {\n        if(used[i]\u003d\u003d0)\n        {\n            dfs(i,-1);\n            components++;\n        }\n    }\n    cout\u0026lt;\u0026lt;\u0026quot;NO Cycle!\u0026quot;;\n    return 0;\n    cout\u0026lt;\u0026lt;components\u0026lt;\u0026lt;endl;\n    while(1)\n    {\n        cin\u0026gt;\u0026gt;v1\u0026gt;\u0026gt;v2;\n        if(is_fath(v1,v2))\n        {\n            cout\u0026lt;\u0026lt;\u0026quot;FATHER\u0026quot;;\n        }\n        else cout\u0026lt;\u0026lt;\u0026quot;NOT FATH\u0026quot;;\n        cout\u0026lt;\u0026lt;endl;\n    }\n}\n/*\n20 13\n1 2\n1 3\n2 7\n7 8\n8 9\n9 11\n8 10\n3 6\n3 4\n4 5\n12 13\n12 14\n17 18\n\n\n8 3\n*/\n\n\u003c/code\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003etopologic sort\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\n\u003ccode\u003e\n#include\u0026lt;iostream\u0026gt;\n#include\u0026lt;algorithm\u0026gt;\n#include\u0026lt;vector\u0026gt;\n#include\u0026lt;stdio.h\u0026gt;\n#include\u0026lt;stdlib.h\u0026gt;\nusing namespace std;\nconst int MX\u003d1e5;\nvector\u0026lt;int\u0026gt;p[MX];\nbool used[MX];\nvector\u0026lt;int\u0026gt;top_sort;\nvoid dfs(int v)\n{\n    used[v]\u003d1;\n    for(int i\u003d0;i\u0026lt;p[v].size();i++)\n    {\n        int to\u003dp[v][i];\n        if(used[to]\u003d\u003d0)\n        {\n            dfs(to);\n        }\n    }\n    top_sort.push_back(v);\n}\nmain()\n{\n    int n,m,v1,v2;\n    cin\u0026gt;\u0026gt;n\u0026gt;\u0026gt;m;\n\n    for(int i\u003d1;i\u0026lt;\u003dm;i++)\n    {\n        cin\u0026gt;\u0026gt;v1\u0026gt;\u0026gt;v2;\n        p[v1].push_back(v2);\n        p[v2].push_back(v1);\n    }\n    for(int i\u003d1;i\u0026lt;\u003dn;i++)\n    {\n        if(used[i]\u003d\u003d0)\n        {\n            dfs(i);\n        }\n    }\n    reverse(top_sort.begin() , top_sort.end());\n    for(int i\u003d0;i\u0026lt;top_sort.size();i++)\n    {\n        cout\u0026lt;\u0026lt;top_sort[i]\u0026lt;\u0026lt;\u0026quot; \u0026quot;;\n    }\n}\n/*\n\n\n14 13\n\n1 2\n1 3\n2 7\n7 8\n8 9\n9 11\n8 10\n3 6\n3 4\n4 5\n12 13\n12 14\n12 11\n\n\n8 3\n*/\n\n\u003c/code\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\u003cp\u003eMasalar \u003c/p\u003e\u003cul\u003e \u003ca href\u003d\"http://algo.ubtuit.uz/\"\u003ealgo.ubtuit.uz\u003c/a\u003e \u003cli\u003e\u003ca href\u003d\"http://algo.ubtuit.uz/problems.php?about\u003d691\"\u003e691. Palindrom-2\u003c/a\u003e\u003c/li\u003e \u003cli\u003e\u003ca href\u003d\"http://algo.ubtuit.uz/problems.php?about\u003d663\"\u003e663. Havfli zona\u003c/a\u003e\u003c/li\u003e \u003cli\u003e\u003ca href\u003d\"http://algo.ubtuit.uz/problems.php?about\u003d193\"\u003e193. Pandaning qahramonligi\u003c/a\u003e\u003c/li\u003e 748\u003cbr /\u003e 746\u003cbr /\u003e 755\u003cbr /\u003e 780\u003cbr /\u003e 193\u003cbr /\u003e 663\u003cbr /\u003e 691\u003cbr /\u003e \u003c/ul\u003e \u003cul\u003e \u003ca href\u003d\"http://acmp.ru/\"\u003eacmp.ru\u003c/a\u003e\u003cbr /\u003e need solve\u003cbr /\u003e 0127\u003cbr /\u003e 0128\u003cbr /\u003e 0130\u003cbr /\u003e 0381\u003cbr /\u003e 0067\u003cbr /\u003e \u003ca href\u003d\"http://acm.timus.ru/\"\u003eacm.timus.ru\u003c/a\u003e \u003cli\u003e\u003ca href\u003d\"http://acm.timus.ru/problem.aspx?space\u003d1\u0026amp;num\u003d1106\"\u003e1106. Two Teams\u003c/a\u003e\u003c/li\u003e \u003cli\u003e\u003ca href\u003d\"http://acm.timus.ru/problem.aspx?space\u003d1\u0026amp;num\u003d1033\"\u003e1033. Labyrinth\u003c/a\u003e\u003c/li\u003e \u003cli\u003e\u003ca href\u003d\"http://acm.timus.ru/problem.aspx?space\u003d1\u0026amp;num\u003d1329\"\u003e1329. Galactic History\u003c/a\u003e\u003c/li\u003e\u003cbr /\u003e need solve\u003cbr /\u003e 1242\u003cbr /\u003e 1072\u003cbr /\u003e 1096\u003cbr /\u003e 1400\u003cbr /\u003e may solve\u003cbr /\u003e 1122\u003cbr /\u003e 1643\u003cbr /\u003e 1301\u003cbr /\u003e \u003c/ul\u003e \u003cul\u003e \u003ca href\u003d\"//codeforces.com/\"\u003ecodeforces.com\u003c/a\u003e \u003cli\u003e\u003ca href\u003d\"//codeforces.com/problemset/problem/723/D\"\u003eD. Lakes in Berland\u003c/a\u003e\u003c/li\u003e \u003cli\u003e\u003ca href\u003d\"//codeforces.com/gym/101116\"\u003e2016-2017 CT S03E05: Codeforces Trainings Season 3 Episode 5 (2016 Stanford Local Programming Contest, Extended) K-masala\u003c/a\u003e\u003c/li\u003e \u003cli\u003e\u003ca href\u003d\"//codeforces.com/gym/101116\"\u003e2016-2017 CT S03E05: Codeforces Trainings Season 3 Episode 5 (2016 Stanford Local Programming Contest, Extended) E-masala\u003c/a\u003e\u003c/li\u003e \u003cli\u003e\u003ca href\u003d\"//codeforces.com/contest/659/problem/E\"\u003eE. New Reform\u003c/a\u003e\u003c/li\u003e \u003c/ul\u003e\u003c/div\u003e","tags":[]}}