{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1439829232,"rating":3,"authorHandle":"shyam81295","modificationTimeSeconds":1439829232,"id":19837,"title":"\u003cp\u003eNeed of Efficient algorithm to generate prime numbers in O(N) time complexity \u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHello, guys,\u003c/p\u003e\u003cp\u003eI am still learning algorithms and implementing them. But, Sometimes I get stuck when asked about generating prime numbers in O(N) time complexity. Although, I have implemented Sieve of Eratosthenes, but I have read somewhere that, it requires O(N*log(logN)) or something like that. I find this algorithm as good one, but in some practice problems, we need to implement in O(N) time.\u003c/p\u003e\u003cp\u003eIt would be nice if someone of you will guide me to generate prime numbers in O(N) time.\u003c/p\u003e\u003c/div\u003e","tags":["prime numbers","o(n)","algorithm"]}}