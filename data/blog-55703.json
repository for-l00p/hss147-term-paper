{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1510380158,"rating":-9,"authorHandle":"Akikaze","modificationTimeSeconds":1510401604,"id":55703,"title":"\u003cp\u003eCounting almost-identity permutations\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eFYI, for an array of distinct numbers from 1 to N, a permutation of this array is called \u0026quot;identity permutation\u0026quot; if there are no indices i such that p[i] ≠ i.\u003c/p\u003e\u003cp\u003eThe term \u0026quot;almost-identity permutations\u0026quot; is based on the definition in \u003ca href\u003d\"/contest/888/problem/D\" title\u003d\"Educational Codeforces Round 32\"\u003e888D - Almost Identity Permutations\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eI, along with \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/comsv5k\" title\u003d\"Expert comsv5k\"\u003ecomsv5k\u003c/a\u003e, used to solve a similar problem: \u003ca href\u003d\"/gym/101503/problem/K\" title\u003d\"2007-2008 ACM-ICPC, NEERC, Southern Subregional Contest\"\u003e101503K - Extrasensory Perception\u003c/a\u003e. In short, you are given two integers K and N (both lower than 100, and K is lower than N), and you must calculate the frequency of almost-identity permutations of size N with exactly K indices i such that p[i] \u003d i.\u003c/p\u003e\u003cp\u003eHere is our solution for the problem:\u003c/p\u003e\u003cp\u003e(Implemented in Python 2, and got accepted, original submission link: \u003ca href\u003d\"/gym/101503/submission/31106584\" title\u003d\"Submission 31106584 by PTIT.3D\"\u003e31106584\u003c/a\u003e)\u003c/p\u003e\u003cp\u003eHowever, I\u0027m uncertain as if the formula should return the correct number of permutations (showed in variable \u0026quot;mo\u0026quot; before being divided by the GCD of it and \u0026quot;de\u0026quot;, provided there are unlimited time to execute the code), as we found out the algorithm through brute-force with the size from 1 to 10 and conclude with an incomplete mathematical induction.\u003c/p\u003e\u003cp\u003eSo perhaps I\u0027ll leave this as a discussion here.\u003c/p\u003e\u003cp\u003eWas our approach correct (as it could return the right answer in every case)? Is there an alternative, shorter formula that provide the same output?\u003c/p\u003e\u003cp\u003eThanks for all your replies. And sorry if my English is bad and difficult to read ;)\u003c/p\u003e\u003cp\u003eAlso, sorry about the variable names in the source code. I wasn\u0027t in good conditions while implementing it, and had nearly screwed everything up. :\u0026lt;\u003c/p\u003e\u003c/div\u003e","tags":["combinatorics","math","permutation"]}}