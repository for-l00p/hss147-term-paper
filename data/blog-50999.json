{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1489602134,"rating":-7,"authorHandle":"wfe2017","modificationTimeSeconds":1489602134,"id":50999,"title":"\u003cp\u003eTricks on finding binomials faster\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eWhat are some tricks that we can use to find binomials faster? Usually, I just \u0026quot;exploit\u0026quot; some condition, which is like the binomials are not far from each other.\u003c/p\u003e\u003cp\u003eYou could see the code here: \u003ca href\u003d\"//codeforces.com/contest/785/submission/25528358\"\u003ehttp://codeforces.com/contest/785/submission/25528358\u003c/a\u003e\u003c/p\u003e\u003cp\u003e(This is for round 404, problem D)\u003c/p\u003e\u003cp\u003eWhat other tricks are there? I saw that other users\u0027 code aren\u0027t that long, but I don\u0027t really understand the codes. Note that for this problem, a naive implementation for the binomial coefficient would fail. \u003c/p\u003e\u003cp\u003eThe only trick I know is getting a binomial from a nearby binomial by incrementing/decrementing the numerator and the denominator. Like for example, to transform 69C7 to 75C4, we do 69C7 -\u0026gt; 70C7 -\u0026gt; 71C7 -\u0026gt; ... -\u0026gt; 75C7 -\u0026gt; 75C6 -\u0026gt; 75C5 -\u0026gt; 75C4; it is easy to get the conversion factors from aCb to (a+1)Cb, or (a-1)Cb. \u003c/p\u003e\u003cp\u003eBut the problem is that the code here is long. Are there more elegant ways to get binomials faster?\u003c/p\u003e\u003c/div\u003e","tags":[]}}