{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1498837040,"rating":28,"authorHandle":"ujzwt4it","modificationTimeSeconds":1498838399,"id":53005,"title":"\u003cp\u003eDot Product Optimization\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eI have been trying to solve this problem on SPOJ-- (\u003ca href\u003d\"http://www.spoj.com/problems/DPMAX/\"\u003ehttp://www.spoj.com/problems/DPMAX/\u003c/a\u003e) \u003cbr /\u003e After 6hrs of trying and 16 wrong submissions, I have finally decided to seek some help. \u003cbr /\u003e \u003cstrong\u003eBrief Overview\u003c/strong\u003e\u003cbr /\u003e We are given n vectors. The problem asks us to calculate the maximum dot product of every vector with any other vector including itself. The absolute value of x and y coordinates is less than equal to 10^5. And there are 2*10^5 vectors to process.\u003cbr /\u003e\u003cbr /\u003e\u003cstrong\u003eMy approach\u003c/strong\u003e\u003cbr /\u003e 1.Take these vectors as points. Find their convex hull.\u003cbr /\u003e 2. The answer for all vectors will be the dot product with another vector with its end as a point of convex hull found \u003cbr /\u003e 3.Hypothesis--The maximum dot product for a vector lying in first quadrant should be with a vector which forms the upper right hull of the convex hull, similarly for a second quadrant vector it should be with a vector which forms the upper left hull and so on.\u003cbr /\u003e 4.So vectors in the four different quadrants are separated into 4 different groups and the vectors are sorted to be in anti-clockwise order for each group.\u003cbr /\u003e 5.Indices of Right-most, top-most, bottom-most, left-most points of hull are found.\u003cbr /\u003e 6. Two-pointer approach is applied with one pointer being the starting of the sorted group and the other being points on the hull.(left-most,bottom-most...) Pairing will be of the form--First quadrant vectors with right-most point, Second quadrant vectors with the top most point and so on.\u003cbr /\u003e 7.For the vector in consideration we move to the next point in counter-clockwise direction only if the dot-product of the next point with the vector is greater than the dot-product with current point, otherwise we move to the next vector.\u003cbr /\u003e\u003c/p\u003e\u003cp\u003eThis approach worked for this problem-\u003ca href\u003d\"//codeforces.com/problemset/gymProblem/100886/H\"\u003eBiathlon 2.0\u003c/a\u003e\u003c/p\u003e\u003cp\u003eMy solution-- (\u003ca href\u003d\"//codeforces.com/gym/100886/submission/28148901\"\u003ehttp://codeforces.com/gym/100886/submission/28148901\u003c/a\u003e) However the vectors were only lying in first-quadrant for this question.\u003c/p\u003e\u003cp\u003eI have generated lot of random test cases and checked with brute-force solution and it had no diff at all.\u003cbr /\u003e Here is my solution--(\u003ca href\u003d\"http://ideone.com/RU9cZ8\"\u003ehttp://ideone.com/RU9cZ8\u003c/a\u003e) \u003cbr /\u003e\u003c/p\u003e\u003cp\u003eIt would be great if you could tell me if my approach is wrong or some test case where my solution fails. \u003cbr /\u003e\u003cbr /\u003eThanks a lot for helping\u003c/p\u003e\u003c/div\u003e","tags":[]}}