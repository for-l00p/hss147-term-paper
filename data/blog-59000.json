{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1524114598,"rating":0,"authorHandle":"GabrielCamargo","modificationTimeSeconds":1524116147,"id":59000,"title":"\u003cp\u003eSobre alguns problemas do Contest de Aquecimento\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003ch4\u003e[problem:212957A]\u003c/h4\u003e\u003cp\u003eUma leitura cuidadosa do problema mostra que o enunciado pode ser mudado para: Dado duas strings, qual o menor número de posições que eu preciso trocar para que elas fiquem iguais? Basta notar que todas as posições em que as duas strings diferem precisam ser trocadas (Caso contrario aquelas posições continuaram sendo diferentes pra sempre), e as posições em que elas são iguais não precisam ser trocadas (Elas não interferem na resposta). \u003c/p\u003e\u003cp\u003eEntão basta percorrer a string vendo em quais posições elas são diferentes.\u003c/p\u003e\u003cp\u003eDicas:\u003c/p\u003e \u003cul\u003e   \u003cli\u003eColocar pelo menos um espaço a mais no vetor de char para comportar o \u003ccode\u003e\\0\u003c/code\u003e\u003c/li\u003e \u003c/ul\u003e \u003cul\u003e   \u003cli\u003eComo não é dado o número de letras de cada string, lembre de ler com \u003ccode\u003e%s\u003c/code\u003e, utilize o comando strlen para descobrir o tamanho delas depois de lida.\u003c/li\u003e \u003c/ul\u003e\u003ch4\u003e[problem:212957B]\u003c/h4\u003e\u003cp\u003ePara esse problema, precisamos manter duas variaveis separadas que indicam em que posição da matriz o robô se encontra. Sejam \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ey\u003c/i\u003e\u003c/span\u003e essas variaveis (que indicam a linha e a coluna atual do robô). Inicialmente elas são as posições dadas na entrada, e conforme o robô se meche na matriz, precisamos atualizar elas de acordo com o movimento que ele faz. Se o robo vai para direita fazemos \u003ccode\u003ey \u003d y + 1\u003c/code\u003e, esquerda \u003ccode\u003ey \u003d y - 1\u003c/code\u003e, baixo \u003ccode\u003ex \u003d x + 1\u003c/code\u003e, cima \u003ccode\u003ex \u003d x - 1\u003c/code\u003e.\u003c/p\u003e\u003cp\u003ePara saber se o robô está em loop ou não, basta checar se ele ja visitou aquela posição antes, pois se isso aconteceu então o robô ira realizar as mesmas operações de novo. Portanto agora precisamos descobrir dado uma posição \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e, \u003ci\u003ej\u003c/i\u003e\u003c/span\u003e, se essa posição ja foi visitada ou não. Existem dois jeitos de fazer isso:\u003c/p\u003e \u003col\u003e   \u003cli\u003e\u003cp\u003eMarcar na própria matriz com um caractere invalido (como \u003ccode\u003e#\u003c/code\u003e por exemplo) por onde o robô passa, indicando que aquela posição ja foi vista. Se o robô estiver em uma posição que contém o caractere invalido, então aquela é uma posição repetida\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eUtilizar uma matriz auxiliar que marca se aquela posição foi visitada ou não (0 ou 1), toda vez que o robô passa por aquela posição marcamos com 1 na matriz auxiliar. Para checar se a posição é repetida basta checar se existe um 1 ali na matriz auxiliar.\u003c/p\u003e\u003c/li\u003e \u003c/ol\u003e\u003cp\u003eDicas:\u003c/p\u003e \u003cul\u003e   \u003cli\u003e\u003cp\u003eLembrar de checar se o robo ja saiu da matriz, ou seja, se \u003ccode\u003ex \u0026lt; 0\u003c/code\u003e ou se \u003ccode\u003ey \u0026lt; 0\u003c/code\u003e ou se \u003ccode\u003ex \u0026gt;\u003d n\u003c/code\u003e ou se `y \u0026gt;\u003d m, se isso acontecer então a resposta ja é \u0026quot;AE MLK\u0026quot;, se não fizer essa checagem durante o processo, pode ser que você tente acessar posições invalidas da matriz!\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eFazer um \u003ccode\u003ewhile\u003c/code\u003e que fica rodando até que você ache um visitado, ou até que uma das condições acima aconteça\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e\u003ch4\u003e[problem:212957C]\u003c/h4\u003e\u003cp\u003eA solução é a mediana do vetor. Vamos tentar dar uma intuição da prova:\u003c/p\u003e\u003cp\u003eVamos formalizar o que o problema pede, dado \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eN\u003c/i\u003e\u003c/span\u003e valores distintos \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e ordenados, queremos encontrar uma posição \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e tal que minimizemos a soma das distancias para todos os \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eN\u003c/i\u003e\u003c/span\u003e valores, ou seja, queremos encontrar um x que minimize a soma:\u003c/p\u003e \u003ccenter\u003e\u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/85/24/85248844664f0e3df75c2384475b5685569fd010.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/center\u003e\u003cp\u003eSuponhamos agora que existam \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ee\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e elementos menores que \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e (ou seja, a esquerda de \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e) e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e elementos maiores que \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e (Ou seja, a direita de \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e). A função acima pode então ser reescrita sem o módulo da seguinte maneira:\u003c/p\u003e\u003cp\u003e\u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/93/39/9339e0738222d6dd6791399a46f97e15e5c2343c.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003eNote que o módulo pode ser retirado sem perda pois estamos realizando as subtrações de modo que nunca de negativo.\u003c/p\u003e\u003cp\u003eVamos supor que desejamos testar uma posição a direita muito próxima de \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e, digamos \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e + Δ\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e, tão próxima que não chegue a passar por um dos \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e. O que acontece com \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e(\u003ci\u003ex\u003c/i\u003e + Δ\u003ci\u003ex\u003c/i\u003e)\u003c/span\u003e em comparação a \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e(\u003ci\u003ex\u003c/i\u003e)\u003c/span\u003e?\u003c/p\u003e\u003cp\u003eO somatório dos menores que \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e, irão incrementar em \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ee\u003c/i\u003e\u003c/sub\u003e * Δ\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e e o dos maiores que \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e irão decrementar em \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/sub\u003e * Δ\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e, ou seja, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e(\u003ci\u003ex\u003c/i\u003e + Δ\u003ci\u003ex\u003c/i\u003e) \u003d \u003ci\u003ef\u003c/i\u003e(\u003ci\u003ex\u003c/i\u003e) + (\u003ci\u003em\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ee\u003c/i\u003e\u003c/sub\u003e * Δ\u003ci\u003ex\u003c/i\u003e - \u003ci\u003em\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/sub\u003e * Δ\u003ci\u003ex\u003c/i\u003e)\u003c/span\u003e, simplificando temos: \u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e(\u003ci\u003ex\u003c/i\u003e + Δ\u003ci\u003ex\u003c/i\u003e) \u003d \u003ci\u003ef\u003c/i\u003e(\u003ci\u003ex\u003c/i\u003e) + (\u003ci\u003em\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ee\u003c/i\u003e\u003c/sub\u003e - \u003ci\u003em\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/sub\u003e) * Δ\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e\u003c/p\u003e\u003cp\u003eÉ possível notar que se movêssemos para a esquerda ao invés da direita, teríamos que apenas mudar para \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003em\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/sub\u003e - \u003ci\u003em\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ee\u003c/i\u003e\u003c/sub\u003e)\u003c/span\u003e\u003c/p\u003e\u003cp\u003eTexto por \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/bssanches\" title\u003d\"Candidate Master bssanches\"\u003ebssanches\u003c/a\u003e ex-coach do GEMA.\u003c/p\u003e\u003c/div\u003e","tags":[]}}