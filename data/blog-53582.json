{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1501480616,"rating":-9,"authorHandle":"clashroyale","modificationTimeSeconds":1501481935,"id":53582,"title":"\u003cp\u003eProblem Difficulty\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eI am having difficulty solving a problem on a different coding website. The problem goes like this:\u003c/p\u003e\u003cp\u003eThe m × n rectangular grid is a graph whose vertices correspond to the points in the plane with x-coordinates being integers in the range 0, … , n-1 and y-coordinates being integers in the range 0, … , m-1, and two vertices are joined by an edge whenever the corresponding points are at unit distance apart. For example, a 4 × 6 rectangular grid is shown in Figure 1. The grid has n vertices appearing in each of m rows and m vertices in each of n columns. The vertex in row i and column j is denoted by (i, j), where 0 ≤ i ≤ m — 1 and 0 ≤ j ≤ n — 1.\u003c/p\u003e\u003cp\u003eIf we add an edge joining two vertices (i, 0) and (i, n-1) of the m × n rectangular grid for every row i ∈ {0, … , m-1} and moreover, add an edge between two vertices (0, j) and (m-1, j) for every column j ∈ {0, … , n-1}, then each row forms a cycle of length n and each column forms a cycle of length m, as illustrated in Figure 2. The resulting graph is often called an m × n toroidal grid, because it can be drawn on a torus without edge crossings.\u003c/p\u003e\u003cp\u003eGiven an m × n toroidal grid, you are to write a program to find a cycle that visits every vertex exactly once. Here, the required cycle may be represented as a sequence, (v1, v2, … , vmn), of mn distinct vertices of the graph such that vk and vk+1 are adjacent for all k ∈ {1, … , mn-1} and moreover, vmn and v1 are adjacent.\u003c/p\u003e\u003cp\u003eI got a compile error my code:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e\u003cbr /\u003e#include\u0026lt;stdio.h\u0026gt;\n\nint main() {\n\n\tint t;\n\tscanf(\u0026quot;%d\u0026quot;, \u0026amp;t);\n\n\twhile(t--){\n\n\t\tint r, c;\n\n\t\tscanf(\u0026quot;%d %d\u0026quot;, \u0026amp;r, \u0026amp;c);\n\n\t\tprintf(\u0026quot;1\\n\u0026quot;);\n\n\t\tfor(int i\u003d0; i\u003d1; j--){\n\t\t\t\t\tprintf(\u0026quot;(%d,%d)\\n\u0026quot;, i, j);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tfor(int j\u003d1; j\u003d1; i--){\n\t\t\tprintf(\u0026quot;(%d,0)\\n\u0026quot;, i, 0);\n\t\t}\n\n\t}\n\n}\n\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eWhat was wrong?\u003c/p\u003e\u003c/div\u003e","tags":[]}}