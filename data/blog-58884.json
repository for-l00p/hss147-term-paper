{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1523512134,"rating":-3,"authorHandle":"Akikaze","modificationTimeSeconds":1523621380,"id":58884,"title":"\u003cp\u003eEditorial — ACM ProPTIT — Warm-up Round 3\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eĐề được thực hiện bởi \u003ca class\u003d\"rated-user user-green\" href\u003d\"/profile/duonglee\" title\u003d\"Pupil duonglee\"\u003eduonglee\u003c/a\u003e, \u003ca class\u003d\"rated-user user-cyan\" href\u003d\"/profile/lananh98.ptit\" title\u003d\"Specialist lananh98.ptit\"\u003elananh98.ptit\u003c/a\u003e, \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/Akikaze\" title\u003d\"Expert Akikaze\"\u003eAkikaze\u003c/a\u003e, \u003ca class\u003d\"rated-user user-green\" href\u003d\"/profile/thanthoai999999999\" title\u003d\"Pupil thanthoai999999999\"\u003ethanthoai999999999\u003c/a\u003e, \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/neko_nyaa\" title\u003d\"Expert neko_nyaa\"\u003eneko_nyaa\u003c/a\u003e và \u003ca class\u003d\"rated-user user-green\" href\u003d\"/profile/nghiatd_16\" title\u003d\"Pupil nghiatd_16\"\u003enghiatd_16\u003c/a\u003e, và được test bởi \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/neko_nyaa\" title\u003d\"Expert neko_nyaa\"\u003eneko_nyaa\u003c/a\u003e và \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/Akikaze\" title\u003d\"Expert Akikaze\"\u003eAkikaze\u003c/a\u003e.\u003c/p\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eBài A - Tuyệt đối nhỏ nhất\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eTác giả: \u003ca class\u003d\"rated-user user-green\" href\u003d\"/profile/duonglee\" title\u003d\"Pupil duonglee\"\u003eduonglee\u003c/a\u003e\u003c/p\u003e\u003cp\u003eEditorial: \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/Akikaze\" title\u003d\"Expert Akikaze\"\u003eAkikaze\u003c/a\u003e\u003c/p\u003e\u003cp\u003eTags: sortings\u003c/p\u003e\u003cp\u003eTa thấy rằng: chênh lệch của hai số càng nhỏ nếu vị trí của chúng trên trục số càng gần. Vậy nên ta hoàn toàn có thể sắp xếp lại số rồi kiểm tra chênh lệch của từng cặp số kề nhau.\u003c/p\u003e\u003cp\u003eĐộ phức tạp: \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e * \u003ci\u003elog\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e))\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eLời giải: \u003ca href\u003d\"https://ideone.com/GMCa5a\"\u003eIdeone.com\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eBài B - Map\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eTác giả: \u003ca class\u003d\"rated-user user-cyan\" href\u003d\"/profile/lananh98.ptit\" title\u003d\"Specialist lananh98.ptit\"\u003elananh98.ptit\u003c/a\u003e\u003c/p\u003e\u003cp\u003eEditorial: \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/Akikaze\" title\u003d\"Expert Akikaze\"\u003eAkikaze\u003c/a\u003e\u003c/p\u003e\u003cp\u003eTags: data structures\u003c/p\u003e\u003cp\u003eTên của bài đã là một gợi ý.\u003c/p\u003e\u003cp\u003eThông thường, với những bài tập dạng này, nhưng dữ liệu đưa vào là số, ta sẽ sử dụng mảng đánh dấu. Nhưng tới một lúc mảng đánh dấu tỏ ra không hiệu quả (số quá lớn hoặc dữ liệu thuộc kiểu lạ), một trong những cách đánh dấu phổ biến là sử dụng cấu trúc dữ liệu map (có trong thư viện map của C++).\u003c/p\u003e\u003cp\u003eCác đối tượng được lưu trong một map sẽ được tổ chức dưới dạng một cây nhị phân tìm kiếm (Binary Search Tree — BST), do đó độ phức tạp của mỗi thao tác truy cập phần tử sẽ là O(log*N).\u003c/p\u003e\u003cp\u003eỞ đây, ta sẽ cài đặt 2 map.\u003c/p\u003e\u003cp\u003eMap đầu tiên để đếm số lần xuất hiện của các xâu, được dùng cho lần duyệt xâu đầu tiên.\u003c/p\u003e\u003cp\u003eMap thứ hai để kiểm tra việc một xâu đã được in ra hay chưa, được dùng cho lần duyệt xâu thứ hai nhằm in ra output.\u003c/p\u003e\u003cp\u003eĐộ phức tạp: \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e * \u003ci\u003elog\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e))\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eLời giải: \u003ca href\u003d\"https://ideone.com/ohYYNt\"\u003eIdeone.com\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eBài C - Giai thừa\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eTác giả: \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/Akikaze\" title\u003d\"Expert Akikaze\"\u003eAkikaze\u003c/a\u003e\u003c/p\u003e\u003cp\u003eEditorial: \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/Akikaze\" title\u003d\"Expert Akikaze\"\u003eAkikaze\u003c/a\u003e\u003c/p\u003e\u003cp\u003eTags: maths\u003c/p\u003e\u003cp\u003eTa nhận thấy, ở bất kỳ hệ cơ số k nào (\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e ≥ 2\u003c/span\u003e), một số khi được viết thêm chữ số \u003cspan class\u003d\"tex-span\"\u003e0\u003c/span\u003e vào tận cùng bên phải sẽ tương ứng với việc số đó được nhân với số \u003cspan class\u003d\"tex-span\"\u003e10\u003c/span\u003e của hệ cơ số đó.\u003c/p\u003e\u003cp\u003eTrong trường hợp này cũng tương tự: mỗi lần nhân \u003cspan class\u003d\"tex-span\"\u003e10\u003csub class\u003d\"lower-index\"\u003e(9)\u003c/sub\u003e\u003c/span\u003e với một số ở hệ cơ số \u003cspan class\u003d\"tex-span\"\u003e9\u003c/span\u003e tức là ta đã thêm vào sau số được nhân một chữ số \u003cspan class\u003d\"tex-span\"\u003e0\u003c/span\u003e. Và rõ ràng, \u003cspan class\u003d\"tex-span\"\u003e10\u003csub class\u003d\"lower-index\"\u003e(9)\u003c/sub\u003e\u003c/span\u003e \u003d \u003cspan class\u003d\"tex-span\"\u003e9\u003csub class\u003d\"lower-index\"\u003e(10)\u003c/sub\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eTa có thể phát biểu lại bài toán thành: với số nguyên không âm \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eN\u003c/i\u003e\u003c/span\u003e cho trước, tìm số nguyên không âm \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e, sao cho \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eN\u003c/i\u003e! \u003d 9\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/sup\u003e * \u003ci\u003ey\u003c/i\u003e\u003c/span\u003e, với \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ey\u003c/i\u003e\u003c/span\u003e là một số nguyên dương.\u003c/p\u003e\u003cp\u003eTa sẽ giải quyết bằng cách tìm tổng bậc của lũy thừa của 3 trong khai triển nguyên tố của các số từ \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e tới \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eN\u003c/i\u003e\u003c/span\u003e. Việc này có thể dễ dàng được thực hiện với độ phức tạp \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003elog\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e))\u003c/span\u003e thông qua ý tưởng:\u003c/p\u003e \u003cul\u003e   \u003cli\u003e\u003cp\u003eTìm số ước của \u003cspan class\u003d\"tex-span\"\u003e3\u003c/span\u003e trong đoạn \u003cspan class\u003d\"tex-span\"\u003e[1, \u003ci\u003eN\u003c/i\u003e]\u003c/span\u003e.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eTìm số ước của \u003cspan class\u003d\"tex-span\"\u003e9\u003c/span\u003e trong đoạn \u003cspan class\u003d\"tex-span\"\u003e[1, \u003ci\u003eN\u003c/i\u003e]\u003c/span\u003e.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eTìm số ước của \u003cspan class\u003d\"tex-span\"\u003e27\u003c/span\u003e trong đoạn \u003cspan class\u003d\"tex-span\"\u003e[1, \u003ci\u003eN\u003c/i\u003e]\u003c/span\u003e.\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e\u003cp\u003e...\u003c/p\u003e\u003cp\u003eLiên tục cho tới khi \u003cspan class\u003d\"tex-span\"\u003e3\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/sup\u003e\u003c/span\u003e vượt quá \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eN\u003c/i\u003e\u003c/span\u003e. Kết quả bài toán sẽ là tổng các giá trị tìm thấy ở tất cả các lần tìm, chia lấy nguyên cho 2.\u003c/p\u003e\u003cp\u003eLời giải: \u003ca href\u003d\"https://ideone.com/iHkvhJ\"\u003eIdeone.com\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eBài D - Tiền tệ\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eTác giả: \u003ca class\u003d\"rated-user user-green\" href\u003d\"/profile/thanthoai999999999\" title\u003d\"Pupil thanthoai999999999\"\u003ethanthoai999999999\u003c/a\u003e\u003c/p\u003e\u003cp\u003eEditorial: \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/Akikaze\" title\u003d\"Expert Akikaze\"\u003eAkikaze\u003c/a\u003e\u003c/p\u003e\u003cp\u003eTags: brute force\u003c/p\u003e\u003cp\u003eVới \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e ≤ 20\u003c/span\u003e, bài toán hoàn toàn có thể giải được bằng duyệt toàn bộ. Việc sắp xếp tăng dần theo thứ tự từ điển các đáp án có thể dễ dàng được giải quyết bằng phương pháp sinh hoặc quay lui đúng tiêu chuẩn.\u003c/p\u003e\u003cp\u003eĐộ phức tạp: \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003eN\u003c/i\u003e\u003c/sup\u003e)\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eLời giải: \u003ca href\u003d\"https://ideone.com/gazWuR\"\u003eIdeone.com\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eBài E - Piyo-tan và phép chia dư\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eTác giả: \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/neko_nyaa\" title\u003d\"Expert neko_nyaa\"\u003eneko_nyaa\u003c/a\u003e\u003c/p\u003e\u003cp\u003eEditorial: \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/neko_nyaa\" title\u003d\"Expert neko_nyaa\"\u003eneko_nyaa\u003c/a\u003e\u003c/p\u003e\u003cp\u003eTags: maths\u003c/p\u003e\u003cp\u003eChúng ta sẽ rút gọn bài toán như sau: cho một số nguyên dương \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/span\u003e, có bao nhiêu số \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/span\u003e thỏa mãn \u003cspan class\u003d\"tex-span\"\u003e1 ≤ \u003ci\u003ea\u003c/i\u003e ≤ \u003ci\u003eN\u003c/i\u003e\u003c/span\u003e và \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/e3/c3/e3c322c7333a6791a8b79dc6c5d08cdacc5dc548.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e.\u003c/p\u003e\u003cp\u003eGiả sử cho \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/span\u003e chạy từ \u003cspan class\u003d\"tex-span\"\u003e0\u003c/span\u003e đến \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eN\u003c/i\u003e\u003c/span\u003e, ta sẽ có chuỗi \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/6f/84/6f844dcdbb509d2fd575616922ea9efa75c6019f.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. Nếu ta viết \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eN\u003c/i\u003e\u003c/span\u003e dưới dạng \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eN\u003c/i\u003e \u003d \u003ci\u003epb\u003c/i\u003e + \u003ci\u003er\u003c/i\u003e\u003c/span\u003e (\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003er\u003c/i\u003e\u003c/span\u003e nguyên; \u003cspan class\u003d\"tex-span\"\u003e0 ≤ \u003ci\u003er\u003c/i\u003e \u0026lt; \u003ci\u003eb\u003c/i\u003e\u003c/span\u003e), chuỗi trên sẽ có dạng \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003c/span\u003e lần lặp \u003cspan class\u003d\"tex-span\"\u003e0, 1, 2, ..., \u003ci\u003eb\u003c/i\u003e - 1\u003c/span\u003e và một lần lặp \u003cspan class\u003d\"tex-span\"\u003e0, 1, 2, ..., \u003ci\u003er\u003c/i\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eỞ phần đầu của chuỗi trên, có tổng cộng \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e * \u003ci\u003emax\u003c/i\u003e(0, \u003ci\u003eb\u003c/i\u003e - \u003ci\u003eK\u003c/i\u003e)\u003c/span\u003e số thỏa mãn. Ở phần sau của chuỗi, có \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003emax\u003c/i\u003e(0, \u003ci\u003er\u003c/i\u003e - \u003ci\u003eK\u003c/i\u003e + 1)\u003c/span\u003e số thỏa mãn. Như vậy, với mỗi số nguyên dương \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/span\u003e, ta có thể tính số lượng số \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/span\u003e thỏa trong \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(1)\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eTa cần tính số lượng số \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/span\u003e thỏa mãn cho tất cả các \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/span\u003e từ \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e đến \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eN\u003c/i\u003e\u003c/span\u003e. Như vậy độ phức tạp của thuật toán là \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e)\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eLưu ý rằng nếu \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eK\u003c/i\u003e \u003d 0\u003c/span\u003e thì tất cả các cặp \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ea\u003c/i\u003e, \u003ci\u003eb\u003c/i\u003e)\u003c/span\u003e nguyên dương đều thỏa, khi đó đáp án là \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eN\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eLời giải: \u003ca href\u003d\"https://ideone.com/14GfHy\"\u003eIdeone.com\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eBài F - Cắt băng khánh thành\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eTác giả: \u003ca class\u003d\"rated-user user-green\" href\u003d\"/profile/nghiatd_16\" title\u003d\"Pupil nghiatd_16\"\u003enghiatd_16\u003c/a\u003e\u003c/p\u003e\u003cp\u003eEditorial: \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/Akikaze\" title\u003d\"Expert Akikaze\"\u003eAkikaze\u003c/a\u003e\u003c/p\u003e\u003cp\u003eTags: greedy, data structures\u003c/p\u003e\u003cp\u003eĐây là một bài toán tham lam mà tư tưởng của nó cũng dễ nhận dạng: để chi phí là tối thiểu thì với mỗi lần nối, ta thực hiện nối hai dây ngắn nhất.\u003c/p\u003e\u003cp\u003eViệc lưu trữ và kiểm soát (thêm, bớt, tìm dây ngắn nhất) có thể thực hiện thông qua một số cấu trúc dữ liệu xây dựng sẵn như set, map hoặc priority_queue.\u003c/p\u003e\u003cp\u003eĐộ phức tạp: \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e * \u003ci\u003emax\u003c/i\u003e(\u003ci\u003eQ\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e) * \u003ci\u003elog\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e * \u003ci\u003emax\u003c/i\u003e(\u003ci\u003eQ\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e)))\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eLời giải: \u003ca href\u003d\"https://ideone.com/dPPM4n\"\u003eIdeone.com\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eBài G - Tàu điện ngầm\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eTác giả: \u003ca class\u003d\"rated-user user-green\" href\u003d\"/profile/nghiatd_16\" title\u003d\"Pupil nghiatd_16\"\u003enghiatd_16\u003c/a\u003e\u003c/p\u003e\u003cp\u003eEditorial: \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/Akikaze\" title\u003d\"Expert Akikaze\"\u003eAkikaze\u003c/a\u003e\u003c/p\u003e\u003cp\u003eTags: graphs, dfs and similar, dsu, greedy, data structures\u003c/p\u003e\u003cp\u003eCác bài toán có dạng \u0026quot;xây dựng một tập đường đi sao cho liên kết được mọi địa điểm với nhau và chi phí / độ dài nhỏ nhất\u0026quot; chính là một trong những dạng bài kinh điển của lý thuyết đồ thị: xây dựng cây khung nhỏ nhất (Minimum Spanning Tree — MST).\u003c/p\u003e\u003cp\u003eMột cây khung nhỏ nhất là một cây (mọi đỉnh đều liên kết với nhau, không có chu trình) chứa tất cả các đỉnh của đồ thị mà tổng trọng số của các cạnh trên cây khung là tối thiểu.\u003c/p\u003e\u003cp\u003eVề việc tìm cây khung nhỏ nhất, có hai thuật toán chính để giải quyết, đó là \u003ca href\u003d\"https://thuytrangcoding.wordpress.com/2017/12/15/graph-mst-prim/\"\u003ethuật toán Prim\u003c/a\u003e và \u003ca href\u003d\"https://thuytrangcoding.wordpress.com/2017/12/15/graph-mst-kruskal/\"\u003ethuật toán Kruskal\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eLời giải (thuật toán Prim): \u003ca href\u003d\"https://ideone.com/O1nI1m\"\u003eIdeone.com\u003c/a\u003e\u003c/p\u003e\u003cp\u003eLời giải (thuật toán Kruskal): \u003ca href\u003d\"https://ideone.com/uySaIj\"\u003eIdeone.com\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eBài H - Mật mã\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eTác giả: \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/Akikaze\" title\u003d\"Expert Akikaze\"\u003eAkikaze\u003c/a\u003e\u003c/p\u003e\u003cp\u003eEditorial: \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/Akikaze\" title\u003d\"Expert Akikaze\"\u003eAkikaze\u003c/a\u003e\u003c/p\u003e\u003cp\u003eTags: strings, data structures\u003c/p\u003e\u003cp\u003eMột lần nữa, bài khó nhất của contest yêu cầu khả năng nhận biết và sử dụng cấu trúc dữ liệu ở mức rất cao.\u003c/p\u003e\u003cp\u003eViệc kiểm tra trùng tiền tố của các xâu khiến ta nghĩ đến cấu trúc dữ liệu cây tiền tố (hay còn gọi là Trie, Radix Tree, etc.). Bạn đọc có thể đọc thêm về cấu trúc này tại \u003ca href\u003d\"http://vnoi.info/wiki/algo/data-structures/trie\"\u003etrang wiki của VNOI\u003c/a\u003e hoặc \u003ca href\u003d\"https://thuytrangcoding.wordpress.com/2018/02/11/string-trie/\"\u003etrên blog cá nhân của mình\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eĐây là một bài tổng hợp của hai bài toán kinh điển của Trie: kiểm tra tập xâu để đảm bảo không có một xâu là tiền tố của xâu khác, và tìm kiếm trên một xâu sự tồn tại của một xâu (hoặc tiền tố) bất kỳ đã lưu trên Trie.\u003c/p\u003e\u003cp\u003eVới bài toán đầu tiên, ta thực hiện xử lý như sau:\u003c/p\u003e\u003cp\u003e1) Duyệt qua từng xâu trong tập hợp để đưa chúng vào Trie. Với mỗi lần duyệt, đặt hai biến boolean, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003enewRoad\u003c/i\u003e\u003c/span\u003e và \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eendString\u003c/i\u003e\u003c/span\u003e, đều khởi tạo là \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003efalse\u003c/i\u003e\u003c/span\u003e.\u003c/p\u003e \u003cul\u003e   \u003cli\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003enewRoad\u003c/i\u003e\u003c/span\u003e sẽ trở thành \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003etrue\u003c/i\u003e\u003c/span\u003e khi ở một điểm nào đó của xâu, ta không có đường đi cũ để dùng lại mà phải vẽ ra đường đi mới và tạo nút mới cho cây.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eendString\u003c/i\u003e\u003c/span\u003e sẽ trở thành \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003etrue\u003c/i\u003e\u003c/span\u003e khi ta đi qua bất kỳ nút nào đại diện cho điểm kết thúc của một xâu (trong trường hợp này là khi đi qua nút lá, vì nếu có một nút nào đó không phải lá lại là điểm kết thúc xâu thì hiển nhiên chương trình đã phải kết thúc và in ra \u0026quot;Non-Huffman\u0026quot; từ trước đó).\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e\u003cp\u003e2) Sau mỗi quá trình, nếu (\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003enewRoad\u003c/i\u003e \u003d \u003ci\u003etrue\u003c/i\u003e\u003c/span\u003e) và (\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eendString\u003c/i\u003e \u003d \u003ci\u003efalse\u003c/i\u003e\u003c/span\u003e) tức là xâu đang xét không phải là tiền tố của bất kỳ xâu nào, hoặc không có xâu nào đã điền trước đó là tiền tố của xâu đang xét, nên ta có thể tiếp tục bài toán. Ngược lại, đó sẽ là một tình huống \u0026quot;Non-Huffman\u0026quot;.\u003c/p\u003e\u003cp\u003eVới các tập hợp thỏa mãn nguyên tắc Huffman, ta tiếp tục đi đến bài toán thứ hai.\u003c/p\u003e\u003cp\u003eỞ bài toán này, mục tiêu của ta là chỉ cần tìm bất kỳ xâu hoàn chỉnh nào có trong trie.\u003c/p\u003e\u003cp\u003eTa sẽ thiết lập 1 con trỏ, bắt đầu từ nút gốc của trie.\u003c/p\u003e\u003cp\u003eDuyệt tuần tự xâu mã hóa từ trái sang phải, và khi duyệt đến đâu thì sẽ đưa con trỏ của trie đi theo đến đó.\u003c/p\u003e\u003cp\u003eMột số vấn đề sau sẽ phát sinh:\u003c/p\u003e \u003cul\u003e   \u003cli\u003e\u003cp\u003eKhi đã phát hiện được một xâu hoàn chỉnh (tới nút mà \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eendString\u003c/i\u003e \u003d \u003ci\u003etrue\u003c/i\u003e\u003c/span\u003e, trong trường hợp này thì chắc chắn là nút lá), sau khi thêm ký tự trước mã hóa vào, ta phải đưa con trỏ trở lại gốc của trie.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eNếu đường đi cần thực hiện (dựa trên các ký tự của xâu mã hóa) không tồn tại trên trie, tức là ta đã tìm thấy xâu hậu tố lớn nhất mà không tiền tố nào của nó xuất hiện trong tập từ mã ban đầu. Đây sẽ là lúc ta thêm ký tự \u003cspan class\u003d\"tex-span\"\u003e10\u003csup class\u003d\"upper-index\"\u003e9\u003c/sup\u003e + 7\u003c/span\u003e vào kết quả và dừng quá trình duyệt xâu mã hóa.\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e\u003cp\u003eĐộ phức tạp: \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eM\u003c/i\u003e * \u003ci\u003emax\u003c/i\u003e(\u003ci\u003eE\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e) + \u003ci\u003eN\u003c/i\u003e)\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eLời giải: \u003ca href\u003d\"https://ideone.com/mDTYgd\"\u003eIdeone.com\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e","tags":[]}}