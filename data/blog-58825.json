{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":true,"creationTimeSeconds":1523210079,"rating":184,"authorHandle":"Burunduk1","modificationTimeSeconds":1523342004,"id":58825,"title":"\u003cp\u003eФорд-Беллман и random shuffle\u003c/p\u003e","locale":"ru","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e\u003cstrong\u003eПредыстория\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eЖил был алгоритм \u003ca href\u003d\"http://e-maxx.ru/algo/ford_bellman\"\u003eФорд-Беллмана\u003c/a\u003e. Разные люди его по-всякому оптимизировали. \u003cbr /\u003e Например, популярен «Форд-Белман с очередью», также известный, как \u003ca href\u003d\"https://en.wikipedia.org/wiki/Shortest_Path_Faster_Algorithm\"\u003eSPFA\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eЗдесь мы рассмотрим менее популярную версию «Форд-Белман с random shuffle».\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e(1) random_shuffle(edges.begin(), edges.end());\nfor (int run \u003d 1; run; ) {\n\trun \u003d 0;\n        (2) random_shuffle(edges.begin(), edges.end());\n\tfor (Edge e : edges)\n\t\tif (relax(e))\n\t\t\trun \u003d 1;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eФазой назовём цикл по всем рёбрам. Обычный Форд-Беллман сделает не более \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eV\u003c/i\u003e\u003c/span\u003e фаз. \u003c/p\u003e\u003cp\u003e\u003cstrong\u003eИстория\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eОказывается, от того, где написать \u003ccode\u003erandom_shuffle\u003c/code\u003e, \u003cbr /\u003e сделать один раз заранее, или делать в начале каждой фазы, многое зависит.\u003c/p\u003e\u003cp\u003eНа худшем тесте матожидание числа фаз у одного из новых Форд-Беллманов равно \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eV\u003c/i\u003e / 2\u003c/span\u003e, у другого \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eV\u003c/i\u003e / 1.72\u003c/span\u003e. \u003cbr /\u003e Как думаете, у кого меньше? Скоро допишу сюда ответ и доказательства.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eЕсли вы любите математику, но не Форд-Беллмана, вот теорвер-составляющая\u003c/strong\u003e\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eint i \u003d 0, phase \u003d 0;\np \u003d [0, 1, ... n-1]\n(1) random_shuffle(p.begin(), p.end()); \nfor (int i \u003d 0; i \u0026lt; n; phase++) {\n\t(2) random_shuffle(p.begin(), p.end()); \n\tfor (int x : p)\n\t\tif (x \u003d\u003d i)\n\t\t\ti++;\n}\n// Найти матожидание phase в зависимости от того, где random_shuffle, в (1) или (2).\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cstrong\u003eUPD:\u003c/strong\u003e правильный ответ и доказательства записал \u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/MakeRussiaGreatAgain\" title\u003d\"Международный гроссмейстер MakeRussiaGreatAgain\"\u003eMakeRussiaGreatAgain\u003c/a\u003e, спасибо ему.\u003c/p\u003e\u003c/div\u003e","tags":["ford bellman","random","random_shuffle","magic"]}}