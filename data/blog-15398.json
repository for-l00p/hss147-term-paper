{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1419627222,"rating":13,"authorHandle":"memset123","modificationTimeSeconds":1419627222,"id":15398,"title":"\u003cp\u003eXOR Sum on ACM-ICPC Live Archive\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHi,\u003c/p\u003e\u003cp\u003eI was trying to solve XOR Sum, which can be found \u003ca href\u003d\"https://icpcarchive.ecs.baylor.edu/index.php?option\u003dcom_onlinejudge\u0026amp;Itemid\u003d8\u0026amp;page\u003dshow_problem\u0026amp;problem\u003d2683\"\u003ehere\u003c/a\u003e. Unfortunately, I am repeatedly getting time limit exceeded, even though I use fast input/output (printf \u0026amp; scanf) as well as an O(nlog(n)) solution, using a trie. \u003c/p\u003e\u003cp\u003eMy solution can be found here: \u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://pastebin.com/W4xU2aLX\"\u003ehttp://pastebin.com/W4xU2aLX\u003c/a\u003e\u003c/p\u003e\u003cp\u003eThe \u0026quot;insert\u0026quot; command inserts the bits into a trie, and the query command finds the maximum xor. Both are log(n), and since I do this for all n numbers, the solution should be O(nlog(n)) times the number of test cases.\u003c/p\u003e\u003cp\u003eCan anyone suggest any optimizations.. or if my algorithm is just completely wrong.\u003c/p\u003e\u003cp\u003eThanks in advance, memset123\u003c/p\u003e\u003c/div\u003e","tags":["data-structures","trie"]}}