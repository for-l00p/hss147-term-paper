{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":true,"creationTimeSeconds":1493027436,"rating":0,"authorHandle":"elena","modificationTimeSeconds":1493027436,"id":51693,"title":"\u003cp\u003eПотоки (threads)\u003c/p\u003e","locale":"ru","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eКод примеров, которые приводились на лекциях по потокам (threads). \u003cbr /\u003e\u003c/p\u003e\u003cp\u003eПример первый\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e\u003cbr /\u003epublic class PingPongDemo {\n\n\tpublic static void main(String[] args) {\n\t\tThreadTest t1 \u003d new ThreadTest(\u0026quot;ping\u0026quot;, 33);\n\t\tThreadTest t2 \u003d new ThreadTest(\u0026quot;PONG\u0026quot;, 100);\n\t\tt1.start();\n\t\tt2.start();\n\t}\n\n}\n\n\nclass ThreadTest extends Thread {\n\t\n\tThreadTest(String name, int d) {\n\t\tsuper(name);\n\t\tdelay \u003d d;\n\t\trepeat \u003d (int)(Math.random() * 10);\n\t}\n\t\n\t@Override\n\tpublic void run(){\n\t\tfor (int i \u003d 0; i \u0026lt; repeat; i++) {\n\t\t\ttry {\n\t\t\t\tSystem.out.println(getName() + \u0026quot; засыпает\u0026quot;);\n\t\t\t\tThread.sleep(delay);\n\t\t\t}\n\t\t\tcatch (InterruptedException e){\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\n\t\t\tSystem.out.println(getName() + \u0026quot; просыпается\u0026quot;);\n\t\t}\t\n\t}\n\t \n\tprivate int delay;\n\tprivate int repeat;\n}\n\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eПример второй:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e\u003cbr /\u003e\u003cbr /\u003epublic class DeadlockDemo {\n\n\tpublic static void main(String[] args) {\n\t\tfinal Friend alice \u003d new Friend(\u0026quot;Alice\u0026quot;);\n\t\tfinal Friend bob \u003d new Friend(\u0026quot;Bob\u0026quot;);\n\t\t\n\t\tnew Thread(new Runnable(){\n\t\t\tpublic void run(){\n\t\t\t\tbob.sayHello(alice);\n\t\t\t}\n\t\t}).start();;\n\t\t\n//\t\tnew Thread(new Runnable(){\n//\t\t\tpublic void run(){\n//\t\t\t\talice.sayHello(bob);\n//\t\t\t}\n//\t\t}).start(); \n\n\t}\n\n}\n\nclass Friend {\n\t\n\tFriend (String name) {\n\t\tthis.name \u003d name;\n\t}\n\t\n\tpublic synchronized void sayHello(Friend friend) {\n\t\tSystem.out.printf(\u0026quot;Hello, %s%n\u0026quot;, friend.name);\n\t\tfriend.sayAnswer(this);\n\t}\n\t\n\tpublic synchronized void sayAnswer(Friend friend){\n\t\tSystem.out.printf(\u0026quot;Hello, %s. How are yoy?%n\u0026quot;, friend.name);\t\t\n\t}\n\t\n\tString name;\n\t\n}\n\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eПример третий:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e\u003cbr /\u003eimport java.util.Random;\nimport java.util.concurrent.locks.Lock;\nimport java.util.concurrent.locks.ReentrantLock;\n\npublic class SafeLockDemo {\n\n\tpublic static void main(String[] args) {\n\t\tBowerFriend alice \u003d new BowerFriend(\u0026quot;Alice\u0026quot;);\n\t\tBowerFriend bob \u003d new BowerFriend(\u0026quot;Bob\u0026quot;);\n\n\t\tnew Thread(new BowLoop(bob, alice)).start();;\n\t\tnew Thread(new BowLoop(alice, bob)).start();;\n\t}\n\n}\n\nclass BowLoop implements Runnable {\n\t\n\tBowLoop(BowerFriend bf1, BowerFriend bf2){\n\t\tbower1 \u003d bf1;\n\t\tbower2 \u003d bf2;\n\t}\n\t\n\tpublic void run() {\n\t\tRandom rnd \u003d new Random();\n\t\tfor (;;) {\n\t\t\ttry {\n\t\t\t\tThread.sleep(rnd.nextInt(MC));\n\t\t\t}\n\t\t\tcatch (InterruptedException ie){\n\t\t\t\t// nothing \n\t\t\t}\n\t\t\tbower1.bow(bower2);\n\t\t}\n\t}\n\t\n\tBowerFriend bower1;\n\tBowerFriend bower2;\n\tstatic final int MC \u003d 10;\n}\n\nclass BowerFriend {\n\t\n\tBowerFriend (String name) {\n\t\tthis.name \u003d name;\n\t}\n\t\n\tString getName(){\n\t\treturn this.name;\n\t}\n\t\n\tLock getLock(){\n\t\treturn this.lock;\n\t}\n\t\n\tboolean prepareBow(BowerFriend friend){\n\t\tboolean tlock \u003d false;\n\t\tboolean flock \u003d false;\n\t\ttry {\n\t\t\ttlock \u003d lock.tryLock();\n\t\t\tflock \u003d friend.getLock().tryLock();\n\t\t}\n\t\tfinally {\n\t\t\tif (!(tlock \u0026amp;\u0026amp; flock)){\n\t\t\t\tif (tlock){\n\t\t\t\t\tlock.unlock();\n\t\t\t\t}\n\t\t\t\tif (flock){\n\t\t\t\t\tfriend.getLock().unlock();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn (tlock \u0026amp;\u0026amp; flock);\n\t}\n\t\n\tpublic void bow(BowerFriend friend) {\n\t\tif (prepareBow(friend)){\n\t\t\ttry {\n\t\t\t\tSystem.out.printf(\u0026quot;Hello, %s! How are you?%n\u0026quot;, friend.getName());\n\t\t\t\tfriend.backBow(this);\t\t\t\t\n\t\t\t}\n\t\t\tfinally {\n\t\t\t\tlock.unlock();\n\t\t\t\tfriend.getLock().unlock();\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tSystem.out.printf(\u0026quot;%s already says \\\u0026quot;Hello!\\\u0026quot; to %s\u0026quot;, this.getName(), friend.getName());\n\t\t}\n\t\t\n\t}\n\t\n\tpublic void backBow(BowerFriend friend){\n\t\tSystem.out.printf(\u0026quot;Hello, %s! I am just fine! How are yoy?%n\u0026quot;, friend.getName());\t\t\n\t}\n\t\n\tString name;\n\tprivate final Lock lock \u003d new ReentrantLock();\n}\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":["java","threads"]}}