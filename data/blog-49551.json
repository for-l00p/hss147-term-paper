{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":false,"creationTimeSeconds":1483477955,"rating":31,"authorHandle":"gKseni","modificationTimeSeconds":1483538134,"id":49551,"title":"\u003cp\u003eПетр Калинин: Про областную олимпиаду\u003c/p\u003e","locale":"ru","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e\u003cstrong\u003e(C) Петр Калинин, 2015-16. Этот текст можно свободно распространять на условиях лицензии Creative Commons Attribution-ShareAlike 2.0 (CC-BY-SA).\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eОбластная олимпиада по информатике (формально — региональный этап Всероссийской олимпиады) пройдет в два тура 4 и 6 февраля в ННГУ им. Лобачевского.\u003c/p\u003e\u003cp\u003eНемалая часть статьи конкретно про Нижний Новгород, но информация интересная :)\u003c/p\u003e\u003ch2\u003eОтбор на область\u003c/h2\u003e\u003cp\u003eОтбор на нее осуществляется следующим образом. Решения районной (она же городская в ряде городов области — Дзержинске, Арзамасе и т.д.) олимпиады от всех школьников, набравших на районе 200 и более баллов, отправляются в жюри областной олимпиады (точнее, я точно не знаю, в жюри ли, или людям, ответственным за район на уровне области, но это не так существенно). Там все эти решения перепроверяются и сводятся по каждому классу в единую таблицу. И в этой таблице проводится граница: для каждого класса выбирается проходной балл, и все, кто набрал столько баллов или больше, проходит на область.\u003c/p\u003e\u003cp\u003eВ этом году проходные баллы такие: 9 классы — 270, 10 классы — 200, 11 классы — 230. \u003ca href\u003d\"https://docs.google.com/spreadsheets/d/1yf8Jbz6P-qOFBi0G85j0GgyqJbhAcJmUCHcofMwdUZU/edit#gid\u003d872197950\"\u003eВот здесь есть итоговые результаты районной олимпиады с указанием прошедших школьников.\u003c/a\u003e\u003c/p\u003e\u003ch2\u003eФормат областной олимпиады\u003c/h2\u003e\u003cp\u003eНу, во-первых, областная олимпиада — это фактически первая серьезная олимпиада для многих из вас. Школьная и районная олимпиады — это скорее игрушки, как по тому, какие задачи предлагаются, так и по проверке и организации вообще. Сильные школьники должны проходить на область \u0026quot;на классе\u0026quot;, т.е. абсолютно уверенно, не прилагая особенных усилий, чисто за счет уже давно имеющихся навыков. Областная же олимпиада — это совсем другое, там и задачи ощутимо более сложные, и проверка более адекватная и нетривиальная, и организация лучше. Областная олимпиада проходит в одно и то же время по одним и тем же задачам по всей России, так что это фактически крупнейшая олимпиада по информатике в России.\u003c/p\u003e\u003cp\u003eОбластная олимпиада проходит в два тура по пять часов каждый. На каждом туре вам, скорее всего, будут предложены 4 задачи. Примеры прошлогодних задач вы можете посмотреть и попробовать посдавать на этом сайте, ссылка есть в конце шапки курса, в разделе \u0026quot;Архивы старых олимпиад\u0026quot;. Но сначала прочитайте до конца этот текст.\u003c/p\u003e\u003cp\u003eВообще, если раньше вы в областных олимпиадах не участвовали, то я рекомендую вам в зимние каникулы найти свободные пять часов и сесть и порешать какой-нибудь тур с одной из прошлогодних олимпиад (лучше 2016 или 2015\u003csup\u003e1\u003c/sup\u003e года — см. ниже про систему оценивания, которая с 2015 года изменилась), представляя, что вы реально сидите на олимпиаде. Еще лучше сделать это пару раз. Во-первых, если вы ни разу раньше не писали пятичасовые туры, это вам будет полезно как минимум с точки зрения понимания того, насколько вам сложно просто думать над задачами 5 часов подряд. Во-вторых, вы поймете примерно, чего вы можете ожидать на области.\u003c/p\u003e\u003cp\u003e\u003csup\u003e1\u003c/sup\u003e Областная олимпиада всегда проводится после Нового года, поэтому здесь и ниже, говоря \u0026quot;олимпиада 2015 года\u0026quot;, я имею в виду олимпиаду 2014-15 уч. года, и аналогично про другие годы.\u003c/p\u003e\u003ch2\u003eЯзыки программирования\u003c/h2\u003e\u003cp\u003eНабор языков программирования будет определяться жюри. Почти наверняка будут Free Pascal и C++ (Visual Studio, насчет C++11/14 не знаю). Скорее всего будут C# и Python. Будет ли Pascal ABC, я не знаю. Я постараюсь уговорить жюри включить как можно больше языков, но не знаю, насколько это получится. Вы со своей стороны можете попросить школу официально заявить вам нужный язык и проверить, что он будет.\u003c/p\u003e\u003ch2\u003eСистема оценивания\u003c/h2\u003e\u003cp\u003eДо 2014 года включительно областная олимпиада оценивалась очень похоже на районную и школьную: вы пять часов писали задачи, после чего жюри брало ваши решения и проверяло на заранее подготовленных тестах; при этом каждый тест оценивался отдельно. В процессе этой проверки вы уже ничего не могли исправить в своих решениях.\u003c/p\u003e\u003cp\u003eС 2015 года введена новая система — так называемая система с подзадачами и фидбеком (обратной связью). Она работает примерно следующим образом.\u003c/p\u003e\u003ch4\u003eПодзадачи\u003c/h4\u003e\u003cp\u003eВо-первых, в каждой задаче выделяются подзадачи — вариации той же задачи, как правило, с меньшими ограничениями или с дополнительными условиями. Например, если в основной задаче сказано 1 \u0026lt;\u003d N1 \u0026lt;\u003d 0000, 1 \u0026lt;\u003d K \u0026lt;\u003d 10, и еще задан массив a, а в задаче идет речь про то, что надо как-то ходить направо и налево, то подзадачи могут быть, например, такими:\u003c/p\u003e \u003cul\u003e   \u003cli\u003eПодзадача 1: N \u0026lt;\u003d 100 и K \u003d 1;\u003c/li\u003e   \u003cli\u003eПодзадача 2: N \u0026lt;\u003d 100, но K \u0026gt; 1;\u003c/li\u003e   \u003cli\u003eПодзадача 3: K \u003d 1, но N \u0026gt; 100;\u003c/li\u003e   \u003cli\u003eПодзадача 4: все элементы массива a одинаковы;\u003c/li\u003e   \u003cli\u003eПодзадача 5: в оптимальном решении никогда не надо ходить налево;\u003c/li\u003e   \u003cli\u003eПодзадача 6: никаких дополнительных ограничений нет.\u003c/li\u003e \u003c/ul\u003e\u003cp\u003eВ каждой подзадаче все не указанные явно ограничения подразумеваются взятыми из основной задачи, например, в четвертой подзадаче подразумевается, что N \u0026lt;\u003d 10000, K \u0026lt;\u003d 10 и нет никаких дополнительных условий по тому, как выглядит ответ. Таким образом, подзадачи — это упрощенные варианты основной задачи. Как правило, для каждой подзадачи существует свой алгоритм решения, который проще, чем алгоритм, решающий полную задачу. Поэтому, если вы можете написать решение полной задачи, то пишите его (почти всегда у задачи есть естественное \u0026quot;полное\u0026quot; решение, которое автоматически решает и подзадачи, поэтому если вы можете без проблем его написать, то напишите, и не думайте про подзадачи), а если нет, то пишите решения подзадач.\u003c/p\u003e\u003cp\u003eПри этом подзадачи оцениваются хитро. В некоторых подзадачах, как и раньше, каждый тест оценивается независимо: за каждый тест начисляется несколько баллов, и чем больше вы тестов прошли, тем больше у вас баллов. Но в некоторых подзадачах (обычно в более простых) баллы начисляются по принципу \u0026quot;всё или ничего\u0026quot;, т.е. вы получаете не ноль баллов за эту подзадачу только если у вас прошли все тесты этой подзадачи. Т.е. если вы прошли все тесты этой подзадачи, вы получаете полный балл за нее, иначе вы получаете ноль баллов за эту подзадачу. Собственно сами подзадачи обычно оцениваются независимо, но бывает даже так, что очередная подзадача оценивается только если в предыдущих подзадачах все тесты пройдены. Правила оценивания каждой подзадачи указаны в условиях; посмотрите примеры задач прошлых лет, чтобы понять, как это.\u003c/p\u003e\u003cp\u003eЭто обозначает, что вам как правило нет смысла писать \u0026quot;какие-то\u0026quot; решения. Вы должны написать решение, которое как минимум абсолютно корректно решает как минимум простые подзадачи. Навыки тестирования задач становятся очень важны; если вы все еще не читали мой текст про это, то прочитайте (ссылка на страничке курса).\u003c/p\u003e\u003ch4\u003eФидбек\u003c/h4\u003e\u003cp\u003eНо, чтобы компенсировать увеличение сложности от введения подзадач, также вводится так называемый фидбек. А именно, в течение тура вы можете отправлять ваши решения на проверку. Решения будут проверяться на всех финальных тестах, и после проверки вы можете попросить, чтобы вам сообщили результат этой проверки. Скорее всего, у вас на компьютере будет стоять клиент тестирующей системы нашего жюри, вы через этот клиент будете отправлять решения, и в нем же будет какая-нибудь кнопочка типа \u0026quot;узнать результат этого решения\u0026quot;. Соответственно, узнав результат, вы можете дальше планировать свою работу.\u003c/p\u003e\u003cp\u003eОбычно бывают два варианта того, что вам сообщают в качестве результата, и это зависит не только от задачи, но и от подзадачи. В каких-то подзадачах вам могут сообщать информацию по каждому тесту, прошел он или нет (или даже если не прошел, то почему — неправильный ответ, превышение предела времени и т.п. — всё очень похоже на то, что вы видите на этом сайте на закладке \u0026quot;протокол\u0026quot;). В других подзадачах вам могут только сообщать полный балл за эту подзадачу. Что именно вам сообщают, обычно указывается в условии.\u003c/p\u003e\u003cp\u003eСуществует ограничение на использование фидбека: вы можете узнавать баллы не более 10 раз по каждой задаче за тур. После того, как у вас кончились эти 10 попыток, вы можете отправлять задачу дальше, но уже \u0026quot;вслепую\u0026quot;, т.е. результат вы узнать уже не сможете. Иногда еще бывает ограничение на частоту запросов, типа результат можно запрашивать не чаще чем раз в пять минут, но на областных олимпиадах такого раньше не бывало и вроде в этом году не будет.\u003c/p\u003e\u003ch4\u003eИтоговая оценка\u003c/h4\u003e\u003cp\u003eИтоговая оценка за задачу формируется следующим образом. Берутся все решения, по которым вы узнавали результаты, к ним добавляется самое последнее отправленное вами решение (если по нему вы не узнавали результата — например, потому, что у вас кончились 10 попыток, или потому, что вы отправляли в последний момент и не успели посмотреть). Из всех этих решений выбирается набирающее наибольшее количество баллов — и это и будет ваш результат по этой задаче. Итоговый суммарный результат, конечно, есть сумма баллов по всем задачам.\u003c/p\u003e\u003cp\u003eТут важны три момента. Во-первых, даже если у вас кончились 10 попыток узнавания результатов, у вас еще есть возможность решать задачу дальше, вы просто не будете знать баллы. Но учитываться будет только последнее решение (ну или лучшее из тех, по которым вы узнавали баллы). Во-вторых, это последнее решение должно быть отправлено в систему, а не просто остаться в вашем рабочем каталоге. В-третьих, если одно из ваших решений набирает баллы только по одной подзадаче, а второе — только по второй, но вы не сдали решения, которое набирало бы баллы по обеим подзадачам, то вы получите баллы только за одну подзадачу (от того решения, которое набирает больше баллов). Аналогично если одно решение проходит только два теста из некоторой подзадачи, в которой все тесты оцениваются независимо, а другое решение проходит только два других теста, то вы не получите суммарного балла.\u003c/p\u003e\u003ch4\u003eТесты из условия\u003c/h4\u003e\u003cp\u003eКроме того, очень часто присутствует требование, что ваше решение обязано проходить все тесты из условия, даже если эти тесты не попадают под ограничения той подзадачи, на которую вы нацелились. Например, в примере подзадач, приведенном выше, если в условии есть тест с K\u003d2, то, даже если вы придумали только решение для K\u003d1 и рассчитываете только на баллы за соответствующую подзадачу, то все равно от вас могут потребовать, чтобы вы прошли тест из условия с K\u003d2. Если хотя бы один тест из условия не пройден, то вы получаете ноль баллов за это решение.\u003c/p\u003e\u003cp\u003eЭто имеет два следствия. Во-первых, обязательно убедитесь, что вы умеете проходить все тесты из условия. Если надо, то добавьте соответствующий if, и просто напишите writeln с тем ответом, который указан в условии. Типа того:\u003c/p\u003e\u003cp\u003e// пусть в условии есть следующие тесты:\u003cbr /\u003e// n\u003d3, k\u003d1, решается основным алгоритмом\u003cbr /\u003e// n\u003d3, k\u003d2, ответ 42\u003cbr /\u003e// n\u003d5, k\u003d2, ответ 137\u003cbr /\u003eread(n,k);\u003cbr /\u003eif k\u003d2 then begin\u003cbr /\u003e if n\u003d3 then writeln(42)\u003cbr /\u003e else writeln(137);\u003cbr /\u003e halt;\u003cbr /\u003eend;\u003cbr /\u003e// дальше решение для k\u003d1\u003cbr /\u003eВ условии обычно не так много тестов, и не так уж и сложно написать ряд if\u0027ов, которые будут все эти тесты различать.\u003c/p\u003e\u003cp\u003eВо-вторых, решения, не проходящие тесты из условия, могут в принципе учитываться по-другому с точки зрения фидбека и окончательной оценки. Например, если решение не проходит тест из условия, то тестирующая система может вам сообщить это сразу и не учитывать это решении в ограничении на 10 запросов результатов. Или, например, в финальной оценке будет учитываться не последнее вообще решение, а последнее, проходящее тесты из условия. Но лучше не берите эти детали в голову, а просто сдавайте только решения, которые проходят все тесты из условия.\u003c/p\u003e\u003ch4\u003eЯвный if\u003c/h4\u003e\u003cp\u003eВот выше я уже написал, что тесты из условия можно отличать, написав явный if и writeln. Ничего в этом зазорного нет. Аналогично вы можете писать явный if для различения подзадач. Если вы придумали одно решение для K\u003d1 и еще одно решение для случая, когда все элементы массива a равны, то не стесняйтесь написать в программе if, отличающий эти два случая, и запускать разные алгоритмы в зависимости от теста — именно так, если у вас есть решения двух подзадач, вы их можете объединить в одно решение.\u003c/p\u003e\u003cp\u003eКстати, еще важный момент — если ваша программа видит, что ей попался тест, который не попадает ни под одну подзадачу из тех, для которых у вас есть решение, то не надо сразу вылетать. Хуже не будет, если вы для этого теста запустите решение какой-нибудь подзадачи, вдруг тест-другой так и пройдут.\u003c/p\u003e\u003ch4\u003eМестное жюри и вариации\u003c/h4\u003e\u003cp\u003eВсе написанное выше написано по мотивам официальных правил областной олимпиады. К сожалению, наше местное жюри не всегда понимает эти правила до конца. (Правила, равно как и условия задач и тесты, составляются централизованно на всю Россию.) Например, в 2015 году они не хотели обеспечивать фидбек. Поэтому будьте готовы к каким-нибудь вариациям (например, они могут сказать, что финально будет оцениваться только то решение, которое вы оставите у себя в рабочем каталоге, а не то, которое вы сдавали). Мое мнение — пока эти вариации не сильно вам портят жизнь, не стоит ругаться с жюри; если же это что-то серьезное, то будем ругаться.\u003c/p\u003e\u003cp\u003eНапример, если они хотят, чтобы вы оставляли свое решение в рабочем каталоге — ну так сохраните свое лучшее решение и оставьте, не так уж это и сложно, так и вам и мне и жюри спокойнее. Конечно, если в итоге вы сохраните по ошибке не то решение и потеряете баллы из-за того, то будем ругаться, но лучше до этого не доводить. Если же жюри что-то глобальное сделает не так (например, отменит фидбек), то я буду ругаться сразу.\u003c/p\u003e\u003ch2\u003eОсобенности задач\u003c/h2\u003e\u003cp\u003eЗадачи на областной олимпиаде могут быть сильно варьирующимися по сложности. Как правило, самая простая задача будет действительно простой, не требующей ничего знать, примерно уровня 1В. Самая же сложная будет очень сложной, может требовать хитрых знаний; вообще, год из года только несколько человек по всей России на областных набирают полный балл (800).\u003c/p\u003e\u003cp\u003eОбычно задачи в туре устроены так: первая задача самая простая. Она обычно не требует ничего знать; вы ее должны решать на полный балл. Вторая задача чуть посложнее, примерно как задачи районной олимпиады этого года. Ее тоже хорошо бы решить на полный балл, но это получается не всегда. Третья обычно довольно сложная, но для самых крутых из вас она вполне должна быть по силам. Четвертая же задача обычно очень сложная, почти наверняка никто в области не решит обе четвертых задачи.\u003c/p\u003e\u003cp\u003eНо бывает по-разному. То, что написано в предыдущем абзаце — это наиболее распространенная схема, см, например, первый тур 2014 года как один из самых ярких примеров таких сильно распределенных по сложности задач. Но бывает и так (и последние годы все чаще и чаще), что распределение задач по сложности намного менее выражено. Вполне может первая задача оказаться не самой простой, а последняя вполне посильной; вполне может вторая задача оказаться сравнимой по сложности или даже проще первой. Тем не менее обычно задачи все-таки идут более-менее в порядке возрастания сложности.\u003c/p\u003e\u003cp\u003eНо всегда помните, что в каждой задаче есть подзадачи! Как правило, даже в самых сложных задачах первые подзадачи очень простые; часто в них достаточно перебрать все возможные решения парой вложенных for\u0027ов или т.п.; в крайнем случае написать рекурсивный перебор или какой-нибудь простой алгоритм. Поэтому обязательно решайте не только первые задачи туров, но и последние (пишите в них простые подзадачи)! Обязательно постарайтесь, \u003cstrong\u003eчтобы по каждой задаче у вас было ненулевое количество баллов\u003c/strong\u003e!\u003c/p\u003e\u003cp\u003eВообще, на самом деле, как показывает опыт, вполне реально в каждом туре набрать хотя бы 200 баллов, поэтому и постарайтесь это сделать. В идеале надо решать полностью первые две задачи каждого тура, но, даже если не получилось, то недостающие до 200 баллы можно набрать в более сложных задачах. 400 баллов в сумме за два тура — это вполне достойный результат. (Конечно, это общая рекомендация; ясно, что сильные школьники должны набирать больше, а для не очень сильных и 200-300 в сумме будет хорошо. Но тем не менее баллов 150 в каждом туре обычно можно набрать вообще не думая, поэтому 200 за тур — это хорошая цель для большинства из вас.)\u003c/p\u003e\u003cp\u003eДля сравнения, баллы прохождения на собственно Всероссийскую олимпиаду обычно примерно такие: по 9 классам — 450-530, по 10 классам — 500-550, по 11 классам 550-600. Проход на Россию — это очень и очень хороший результат. (Ну, для всех, кроме тех, кто на Россию уже ездил :) )\u003c/p\u003e\u003cp\u003eИмейте в виду, что с крайне высокой вероятностью (90%) будет ввод из файла.\u003c/p\u003e\u003ch2\u003eТактика поведения на туре\u003c/h2\u003e\u003cp\u003eВо-первых, все мои рекомендации из \u003ca href\u003d\"http://informatics.mccme.ru/mod/resource/view.php?id\u003d16265\"\u003eтекста про школьную олимпиаду\u003c/a\u003e справедливы. Прочитайте все условия сразу, еще до того, как что-то программировать. Контролируйте время, не зависайте над одной задачей надолго. Как я уже писал выше и как писал в тексте про школьную олимпиаду, старайтесь, чтобы по всем задачам у вас был не ноль. Сохраняйте решения, чтобы, если у вас зависнет компьютер или выключится электричество, решения не пропали; вообще, полезно привыкнуть нажимать \u0026quot;сохранить\u0026quot; (F2 или Ctrl-S в разных средах программирования) каждые минуту-другую.\u003c/p\u003e\u003cp\u003eНо наличие фидбека и четко выделенных подзадач вносит свои ньюансы в тактику. Во-первых, если вы видите, что задача простая, то напишите ее, сдайте, убедитесь, что у вас 100 баллов, и забудьте про нее вообще. Более конкретно: если вы считаете, что какая-то задача простая, если вы думаете, что там особенно негде ошибиться, то напишите ее, слегка потестируйте, не тестируйте подробно (!) и сдайте. Если у вас 100, то забудьте про нее. Если же нет, то начинайте тестировать. Не тратьте время на простые задачи, если вы можете сразу проверить, работают они или нет. (Это все если у вас еще было немного попыток по задаче. Помните про ограничение в 10 узнаваний результатов; чем меньше у вас остается этих \u0026quot;узнаваний\u0026quot;, тем тщательнее тестируйте и аккуратнее расходуйте \u0026quot;узнавания\u0026quot;.)\u003c/p\u003e\u003cp\u003eВ более сложных задачах часто бывает полезно написать первую подзадачу, если она простая и пишется недолго. А именно, подумайте над сложной задачей. Если сразу ничего, что могло бы решить задачу полностью, в голову не приходит, то попробуйте придумать решение к первой подзадаче. Если получилось придумать простое решение, то напишите его и сдайте — у вас уже станет не ноль баллов, и заодно вы будете уверены, что вы понимаете задачу верно. Наконец, простое решение потом можно использовать для стресс-тестов. Но это только для не самых простых задач; в простых задачах не тратьте время на подзадачи, если вы можете написать полностью задачу!\u003c/p\u003e\u003cp\u003eНаоборот, если вы написали \u0026quot;полное\u0026quot; решение, оно на ваших тестах работает, но у жюри упорно набирает мало баллов, то можно написать простое решение первой подзадачи, отправить его, убедиться, что уж оно-то верное, и дальше написать стресс-тестирование. Очень полезно заранее научиться стресс-тестированию (см. \u003ca href\u003d\"http://informatics.mccme.ru/mod/resource/view.php?id\u003d15981\"\u003eтекст про тестирование задач\u003c/a\u003e)!\u003c/p\u003e\u003cp\u003eКонтролируйте время до конца тура. Если вы придумали сложное решение, которое может решить сложную задачу полностью, но видите, что вы рискуете не успеть его дописать (и помните, что вам наверняка придется его отлаживать и тестировать! — вряд ли оно сразу 100 наберет), то может быть проще прерваться и написать простое решение по той же задаче, чтобы уж гарантированно иметь не ноль.\u003c/p\u003e\u003cp\u003eКонтролируйте количество оставшихся запросов результатов по каждой задаче. 10 запросов — это довольно много и в подавляющем большинстве случаев достаточно, но если вы будете их активно расходовать, то они могут внезапно кончиться. Конечно, когда у вас кончатся запросы, вы по идее можете продолжать решать вслепую, но лучше до этого не доводить. Вообще, по всем задачам, кроме самых сложных, думаю, реально использовать не больше 5 запросов за тур.\u003c/p\u003e\u003cp\u003eКонечно, даже если самую простую подзадачу вы уже решили, это не значит, что надо сразу бросаться на полное решение — все вышеописанные соображения применимы, но к следующим подзадачам. Если не получается придумать или написать полное решение, то напишите решение к еще одной подзадаче, объедините с написанным ранее и сдайте. Помните, что подзадачи сделаны не просто так, каждая подзадача имеет какое-то более простое решение.\u003c/p\u003e\u003cp\u003eНе теряйте решения! Вообще, постарайтесь сохранять все свои решения, которые вы отправляете в систему и которые там набирают какие-то баллы. Будет очень неприятно, если вы решили простую подзадачу, потом стали писать общий алгоритм, он в результате не заработал даже для простой подзадачи, а решения простой подзадачи у вас уже нет. Конечно, правило оценки лучшего решения вас частично от этого спасает, но лучше подстрахуйтесь. Еще хуже если вы решили первую подзадачу, начали писать вторую подзадачу, она у вас даже заработала, но при этом сломалось решение первой. Вам бы объединить два решения, но для этого надо иметь решение первой подзадачи.\u003c/p\u003e\u003cp\u003eВообще, я бы считал, что у успешного участника должны быть примерно следующие \u0026quot;вехи\u0026quot; во времени (конечно, это \u0026quot;средняя температура по больнице\u0026quot;, т.е. варьироваться может очень и очень сильно, но тем не менее) (время везде от начала тура):\u003c/p\u003e \u003cul\u003e   \u003cli\u003e\u003cp\u003e0:10: прочитаны все задачи;\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003e0:45-1:00: есть 100 по одной из задач;\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003e2:00-2:30: есть 100 по двум задачам или в крайнем случае 100+60;\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003e3:30: написаны простые подзадачи в двух сложных задачах, соответственно есть 100+100+30+20 или в крайнем случае 100+60+30+20;\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eоставшееся время добиваем недорешанные задачи.\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e\u003cp\u003eЕще раз: это очень среднее, и это \u0026quot;идеал\u0026quot; для такого \u0026quot;среднего\u0026quot;, и это из предположения, что задачи сильно распределены по сложности. Но это очень грубый ориентир.\u003c/p\u003e\u003cp\u003eДа, все написанное про подзадачи выше подразумевает, что у каждой задачи есть естественное правильное решение, автоматически решающее и все подзадачи тоже; в таком случае вы теоретически можете решить задачу полностью, не думая про подзадачи вообще; так обычно и бывает. Но я не исключаю, что могут быть и задачи, где подзадачи различны настолько, что даже в самом простом и правильном решении удобнее их рассматривать отдельно.\u003c/p\u003e\u003ch2\u003eДополнительные замечания\u003c/h2\u003e\u003ch4\u003eНеполадки на туре\u003c/h4\u003e\u003cp\u003eЕсли у вас на туре что-то из оборудования работает не так, как вы хотите, сразу же спрашивайте жюри! Если, например, не работает клавиатура, или если программа не запускается с очень непонятными сообщениями об ошибках, то сразу зовите жюри! У нас в ННГУ часто бывает так, что антивирус мешает нормальной работе (например, удаляя exe-шник сразу после его создания, или очень задерживая запуск программы — вы в ННГУ наверняка это наблюдали, на занятиях это еще нормально, но на олимпиаде — не очень) — сразу зовите жюри и просите отключить антивирус. Если жюри решает вашу проблему долго, требуйте компенсации времени.\u003c/p\u003e\u003ch4\u003eНе уходите без баллов\u003c/h4\u003e\u003cp\u003eПо идее, после каждого тура у вас будет обед в столовой университета, потом разбор задач и объявление итогов тура. Я очень вам рекомендую дождаться объявления итогов. Последнее время обычно жюри раздает каждому участнику бумажки с его баллами — вот получите эту бумажку, чтобы проверить, что все подсчитано верно. У нашего жюри регулярно случаются проблемы с подсчетом баллов, поэтому лучше дождитесь и проверьте, что все соответствует вашим ожиданиям.\u003c/p\u003e\u003cp\u003eЯ буду на олимпиаде в субботу 4 февраля как на открытии, так и после тура; и постараюсь также подъехать вечером 6 февраля. Если окажется, что вам неправильно посчитали баллы, то мы с вами можем пойти и поругаться. Но если вы уйдете раньше и не получите бумажку с результатами, то я сам за вас ругаться не пойду; как минимум, вы намного лучше меня знаете, чего вы ожидали.\u003c/p\u003e\u003ch4\u003eУкажите меня своим преподавателем\u003c/h4\u003e\u003cp\u003eКак я где-то уже писал, пожалуйста, укажите меня своим преподавателем, если наши занятия были для вас достаточно полезными. А именно, попросите школу указать меня преподавателем в заявке. На регистрации на олимпиаду перед первым туром обычно можно проверить, кто у вас указан и, если хотите, наверное можно будет исправить.\u003c/p\u003e\u003ch4\u003eПрочитайте \u003ca href\u003d\"http://informatics.mccme.ru/mod/resource/view.php?id\u003d18044\"\u003eэтот текст еще раз перед олимпиадой\u003c/a\u003e\u003c/h4\u003e\u003cp\u003eЯ могу вспомнить что-то и добавить в этот текст новую информацию. Поэтому прочитайте его перед олимпиадой еще раз.\u003c/p\u003e\u003ch2\u003eРазбор районной олимпиады\u003c/h2\u003e\u003cp\u003e\u003ca href\u003d\"http://informatics.mccme.ru/mod/resource/view.php?id\u003d18044\"\u003eЗдесь\u003c/a\u003e со временем будет разбор районной олимпиады\u003c/p\u003e\u003c/div\u003e","tags":["codeforces::news"]}}