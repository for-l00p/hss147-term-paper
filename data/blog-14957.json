{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":false,"creationTimeSeconds":1417461229,"rating":50,"authorHandle":"Wild_Hamster","modificationTimeSeconds":1417470800,"id":14957,"title":"\u003cp\u003eCodeforces Round #280 (Div. 2) Editorial\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e\u003ca href\u003d\"/contest/492/problem/A\" title\u003d\"Codeforces Round 280 (Div. 2)\"\u003e492A - Vanya and Cubes\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eIn fact need to do what is asked in the statement. We need to find in a cycle the maximum height \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eh\u003c/i\u003e\u003c/span\u003e, counting, how many blocks must be in \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e-th row and adding these values to the result. Iterate until the result is not greater than \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eJury\u0027s solution: \u003ca href\u003d\"/contest/492/submission/8924831\" title\u003d\"Submission 8924831 by Wild_Hamster\"\u003e8924831\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"/contest/492/problem/B\" title\u003d\"Codeforces Round 280 (Div. 2)\"\u003e492B - Vanya and Lanterns\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eSort lanterns in non-decreasing order. Then we need to find maximal distance between two neighbour lanterns, let it be \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003emaxdist\u003c/i\u003e\u003c/span\u003e. Also we need to consider street bounds and count distances from outside lanterns to street bounds, it will be \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ea\u003c/i\u003e[0] - 0)\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003el\u003c/i\u003e - \u003ci\u003ea\u003c/i\u003e[\u003ci\u003en\u003c/i\u003e - 1])\u003c/span\u003e. The answer will be \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003emax\u003c/i\u003e(\u003ci\u003emaxdist\u003c/i\u003e / 2, \u003ci\u003emax\u003c/i\u003e(\u003ci\u003ea\u003c/i\u003e[0] - 0, \u003ci\u003el\u003c/i\u003e - \u003ci\u003ea\u003c/i\u003e[\u003ci\u003en\u003c/i\u003e - 1]))\u003c/span\u003e\u003c/p\u003e\u003cp\u003eTime complexity \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003enlogn\u003c/i\u003e)\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eJury\u0027s solution: \u003ca href\u003d\"/contest/492/submission/8924823\" title\u003d\"Submission 8924823 by Wild_Hamster\"\u003e8924823\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"/contest/492/problem/C\" title\u003d\"Codeforces Round 280 (Div. 2)\"\u003e492C - Vanya and Exams\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eSort \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e, \u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e)\u003c/span\u003e in non-decreasing order for number of essays \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e, after that go from the beginning of this sorted pairs and add greedily the maximal number of points we can, i.e. add value \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003emin\u003c/i\u003e(\u003ci\u003eavg\u003c/i\u003e * \u003ci\u003en\u003c/i\u003e - \u003ci\u003esum\u003c/i\u003e, \u003ci\u003er\u003c/i\u003e - \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e)\u003c/span\u003e, while total amount of points will not be greater, than \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eavg\u003c/i\u003e * \u003ci\u003en\u003c/i\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eTime complexity \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003enlogn\u003c/i\u003e)\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eJury\u0027s solution: \u003ca href\u003d\"/contest/492/submission/8924807\" title\u003d\"Submission 8924807 by Wild_Hamster\"\u003e8924807\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"/contest/492/problem/D\" title\u003d\"Codeforces Round 280 (Div. 2)\"\u003e492D - Vanya and Computer Game\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eLet\u0027s create vector \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003erez\u003c/i\u003e\u003c/span\u003e with size \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e + \u003ci\u003ey\u003c/i\u003e\u003c/span\u003e, in which there will be a sequence of Vanya\u0027s and Vova\u0027s strikes for the first second. To do this, we can take 2 variables \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ecntx\u003c/i\u003e \u003d \u003ci\u003ecnty\u003c/i\u003e \u003d 0\u003c/span\u003e. Then while \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ecntx\u003c/i\u003e \u0026lt; \u003ci\u003ex\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ecnty\u003c/i\u003e \u0026lt; \u003ci\u003ey\u003c/i\u003e\u003c/span\u003e, we will check 3 conditions:\u003c/p\u003e\u003cp\u003e1) If \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ecntx\u003c/i\u003e + 1) / \u003ci\u003ex\u003c/i\u003e \u0026gt; (\u003ci\u003ecnty\u003c/i\u003e + 1) / \u003ci\u003ey\u003c/i\u003e\u003c/span\u003e, then add into the vector word “Vova”, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ecnty\u003c/i\u003e\u003c/span\u003e++.\u003c/p\u003e\u003cp\u003e2) If \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ecntx\u003c/i\u003e + 1) / \u003ci\u003ex\u003c/i\u003e \u0026lt; (\u003ci\u003ecnty\u003c/i\u003e + 1) / \u003ci\u003ey\u003c/i\u003e\u003c/span\u003e, then add into the vector word “Vanya”, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ecntx\u003c/i\u003e\u003c/span\u003e++.\u003c/p\u003e\u003cp\u003e3) If \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ecntx\u003c/i\u003e + 1) / \u003ci\u003ex\u003c/i\u003e \u003d (\u003ci\u003ecnty\u003c/i\u003e + 1) / \u003ci\u003ey\u003c/i\u003e\u003c/span\u003e, then add into the vector word “Both” 2 times, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ecntx\u003c/i\u003e\u003c/span\u003e++, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ecnty\u003c/i\u003e\u003c/span\u003e++.\u003c/p\u003e\u003cp\u003eThen we are able to respond on each query for \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eО\u003c/i\u003e(1)\u003c/span\u003e, the answer will be \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003erez\u003c/i\u003e[(\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e - 1)\u003ci\u003emod\u003c/i\u003e(\u003ci\u003ex\u003c/i\u003e + \u003ci\u003ey\u003c/i\u003e)]\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eTime complexity \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003ex\u003c/i\u003e + \u003ci\u003ey\u003c/i\u003e)\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eJury\u0027s solution: \u003ca href\u003d\"/contest/492/submission/8924773\" title\u003d\"Submission 8924773 by Wild_Hamster\"\u003e8924773\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"/contest/492/problem/E\" title\u003d\"Codeforces Round 280 (Div. 2)\"\u003e492E - Vanya and Field\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eAs long as \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003egcd\u003c/i\u003e(\u003ci\u003edx\u003c/i\u003e, \u003ci\u003en\u003c/i\u003e) \u003d \u003ci\u003egcd\u003c/i\u003e(\u003ci\u003edy\u003c/i\u003e, \u003ci\u003en\u003c/i\u003e) \u003d 1\u003c/span\u003e, Vanya will do full cycle for \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e moves. Let\u0027s group all possible pathes into \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e groups, where \u003cspan class\u003d\"tex-span\"\u003e1 - \u003ci\u003eth\u003c/i\u003e, 2 - \u003ci\u003end\u003c/i\u003e, ... , \u003ci\u003en\u003c/i\u003e - \u003ci\u003eth\u003c/i\u003e\u003c/span\u003e path will be started from points \u003cspan class\u003d\"tex-span\"\u003e(0, 0), (0, 1), …, (0, \u003ci\u003en\u003c/i\u003e - 1)\u003c/span\u003e. Let\u0027s look on first path: \u003cspan class\u003d\"tex-span\"\u003e(0, 0) - (\u003ci\u003edx\u003c/i\u003e, \u003ci\u003edy\u003c/i\u003e) - ((2 * \u003ci\u003edx\u003c/i\u003e)\u003c/span\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003emod\u003c/i\u003e\u003c/span\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e, (2 * \u003ci\u003edy\u003c/i\u003e)\u003c/span\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003emod\u003c/i\u003e\u003c/span\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e) - ... - (((\u003ci\u003en\u003c/i\u003e - 1) * \u003ci\u003edx\u003c/i\u003e)\u003c/span\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003emod\u003c/i\u003e\u003c/span\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e, ((\u003ci\u003en\u003c/i\u003e - 1) * \u003ci\u003edy\u003c/i\u003e)\u003c/span\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003emod\u003c/i\u003e\u003c/span\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e)\u003c/span\u003e. As long as \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003egcd\u003c/i\u003e(\u003ci\u003edx\u003c/i\u003e, \u003ci\u003en\u003c/i\u003e) \u003d 1\u003c/span\u003e, among the first coordinates of points of the path there will be all the numbers from \u003cspan class\u003d\"tex-span\"\u003e0\u003c/span\u003e to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e - 1\u003c/span\u003e. So we can write in the array all relations between the first and second coordinate in points for the path, that starts in the point \u003cspan class\u003d\"tex-span\"\u003e(0, 0)\u003c/span\u003e, i.e. \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ey\u003c/i\u003e[0] \u003d 0, \u003ci\u003ey\u003c/i\u003e[\u003ci\u003edx\u003c/i\u003e] \u003d \u003ci\u003edy\u003c/i\u003e, ... , \u003ci\u003ey\u003c/i\u003e[((\u003ci\u003en\u003c/i\u003e - 1) * \u003ci\u003edx\u003c/i\u003e)\u003c/span\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003emod\u003c/i\u003e\u003c/span\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e] \u003d ((\u003ci\u003en\u003c/i\u003e - 1) * \u003ci\u003edy\u003c/i\u003e)\u003c/span\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003emod\u003c/i\u003e\u003c/span\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e. Now we know, that all points with type \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ei\u003c/i\u003e, \u003ci\u003ey\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e])\u003c/span\u003e, where \u003cspan class\u003d\"tex-span\"\u003e0 ≤ \u003ci\u003ei\u003c/i\u003e ≤ \u003ci\u003en\u003c/i\u003e - 1\u003c/span\u003e, belong to the group with start point \u003cspan class\u003d\"tex-span\"\u003e(0, 0)\u003c/span\u003e. In that case, points with type \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ei\u003c/i\u003e, (\u003ci\u003ey\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e] + \u003ci\u003ek\u003c/i\u003e)\u003ci\u003emodn\u003c/i\u003e)\u003c/span\u003e belong to the group with start point \u003cspan class\u003d\"tex-span\"\u003e(0, \u003ci\u003ek\u003c/i\u003e)\u003c/span\u003e. Then we can add every point \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e, \u003ci\u003ey\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e)\u003c/span\u003e to required group \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e for \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eО\u003c/i\u003e(1)\u003c/span\u003e: \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ey\u003c/i\u003e[\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e] + \u003ci\u003ek\u003c/i\u003e)\u003c/span\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003emod\u003c/i\u003e\u003c/span\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e \u003d \u003ci\u003ey\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e, \u003ci\u003ek\u003c/i\u003e \u003d (\u003ci\u003ey\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e - \u003ci\u003ey\u003c/i\u003e[\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e] + \u003ci\u003en\u003c/i\u003e)\u003c/span\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003emod\u003c/i\u003e\u003c/span\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e. Then we need just to find group with the maximal amount of elements, it will be the answer.\u003c/p\u003e\u003cp\u003eTime complexity \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e)\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eJury\u0027s solution: \u003ca href\u003d\"/contest/492/submission/8924746\" title\u003d\"Submission 8924746 by Wild_Hamster\"\u003e8924746\u003c/a\u003e\u003c/p\u003e\u003cp\u003eP.S. Sorry for my bad English, I hope, I will correct this editorial as much, as possible.\u003c/p\u003e\u003c/div\u003e","tags":["codeforces","280","tutorial"]}}