{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1417519092,"rating":15,"authorHandle":"Betlista","modificationTimeSeconds":1417641405,"id":14968,"title":"\u003cp\u003eNo more int overflows in Java (Eclipse)\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eI failed in contest \u003ca href\u003d\"//codeforces.com/contest/492\"\u003e#280\u003c/a\u003e because of int overflow.\u003c/p\u003e\u003cp\u003eI knew I have to handle that, but I missed it :-( So I was looking for some automatic check. My Java IDE is Eclipse, so this tutorial is for Eclipse...\u003c/p\u003e\u003cp\u003eCurrent Eclipse version I\u0027m using is Luna (4.4.1), may be different, but similar in other newer/older versions...\u003c/p\u003e \u003col\u003e   \u003cli\u003eFrom Eclipse Marketplace (Help \u0026gt; Eclipse Marketplace...) install FindBugs (search for \u0026quot;findbugs\u0026quot;, current version of FindBugs plugin is 3.0.0)\u003c/li\u003e   \u003cli\u003ewhen installed and Eclipse is restarted, from Window \u0026gt; Preferences in FindBugs preferences set minimum rank to max — 20 and confidence to min — low\u003c/li\u003e \u003c/ol\u003e\u003cp\u003e\u003cimg alt\u003d\"Eclipse FingBugs preferences\" src\u003d\"/predownloaded/66/8d/668d9b4e1f9046600635dc373157318b349ac33e.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e \u003col\u003e   \u003cli\u003eAs a last thing you have to set up from project properties (again FindBugs properties), that scanning is running automatically\u003c/li\u003e \u003c/ol\u003e\u003cp\u003e\u003cimg alt\u003d\"Eclipse FindBugs project properties\" src\u003d\"/predownloaded/1d/25/1d2581aff39c2d8260419f03f900f62be13fa085.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003eThe result is then similar to:\u003c/p\u003e\u003cp\u003e\u003cimg src\u003d\"/predownloaded/1b/6c/1b6cadd65be31b88712668b21c72dad83ef39d66.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003eThe problem was, that I had count and cost as \u003ccode\u003eint\u003c/code\u003es\u003c/p\u003e\u003cp\u003eOpened questions:\u003c/p\u003e\u003cp\u003eIt works for me for a code above, but for this code it is not working, I have no idea why it is different...\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e\tfinal int mil1 \u003d 1000000;\n\tfinal int mil2 \u003d 1000000;\n\tlong res2 \u003d mil1 * mil2;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eRelated SO questions, that lead me to a solution:\u003c/p\u003e \u003cul\u003e   \u003cli\u003e\u003ca href\u003d\"http://stackoverflow.com/questions/15923142/eclipse-is-this-possible-to-run-findbug-on-file-save-action\"\u003ehttp://stackoverflow.com/questions/15923142/eclipse-is-this-possible-to-run-findbug-on-file-save-action\u003c/a\u003e\u003c/li\u003e   \u003cli\u003e\u003ca href\u003d\"http://stackoverflow.com/questions/1435542/how-to-find-potential-numeric-overflows-in-java-code-using-eclipse\"\u003ehttp://stackoverflow.com/questions/1435542/how-to-find-potential-numeric-overflows-in-java-code-using-eclipse\u003c/a\u003e\u003c/li\u003e \u003c/ul\u003e\u003c/div\u003e","tags":["int overflow","java","eclipse"]}}