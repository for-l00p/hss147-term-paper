{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1510495157,"rating":-7,"authorHandle":"Unlimited_Time","modificationTimeSeconds":1510495157,"id":55728,"title":"\u003cp\u003eNotes on Codeforces Beta Round #91, A, B, C, D, E (Cantor Expansion)\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e\u003ca href\u003d\"/contest/122/problem/A\" title\u003d\"Codeforces Beta Round 91 (Div. 2 Only)\"\u003e122A - Lucky Division\u003c/a\u003e\u003c/p\u003e\u003cp\u003eGenerate all the divisors and check whether at least one of them is a lucky number or not.\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"/contest/122/problem/B\" title\u003d\"Codeforces Beta Round 91 (Div. 2 Only)\"\u003e122B - Lucky Substring\u003c/a\u003e\u003c/p\u003e\u003cp\u003eThis is an implementation problem. As the length of the string is quite small, every step can be trivially implemented, without any worrying of TLE.\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"/contest/122/problem/C\" title\u003d\"Codeforces Beta Round 91 (Div. 2 Only)\"\u003e122C - Lucky Sum\u003c/a\u003e\u003c/p\u003e\u003cp\u003eInstead of directly computing each \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003enext\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e]\u003c/span\u003e, we previously find out all the lucky numbers, and equivalently enumerate the lucky numbers. The total number of lucky integers that are less than \u003cspan class\u003d\"tex-span\"\u003e10\u003csup class\u003d\"upper-index\"\u003e9\u003c/sup\u003e\u003c/span\u003e is about \u003cspan class\u003d\"tex-span\"\u003e1024\u003c/span\u003e, and we can use bitmask to generate all of them. Nevertheless, we still need one more lucky integer, i.e., \u003cspan class\u003d\"tex-span\"\u003e4444444444\u003c/span\u003e, which is the value of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003enext\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e]\u003c/span\u003e for all \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e \u0026gt; 777777776\u003c/span\u003e. It is obvious that for any integer \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e between two lucky integers, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003enext\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e]\u003c/span\u003e is always equal to the second lucky imteger. Therefore, we can calculate how many integers belong to the interval of two neighboring lucky integers, and update the answer.\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"/contest/122/problem/D\" title\u003d\"Codeforces Beta Round 91 (Div. 2 Only)\"\u003e122D - Lucky Transformation\u003c/a\u003e\u003c/p\u003e\u003cp\u003eLet us see what happens when we meet the first “47”. If it is changed into “44”, then we can move on to find the next “47”. If it is changed into “77”, then we should check the digit before this “77”. If it is not “4”, then we can move on again; otherwise we have “477” now. It can be seen that we will get stuck into a loop, i.e., we should change “477” into “447” while later change it back into “477” again. For this case, the final result depends on whether the number of operations is odd or even.\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"/contest/122/problem/E\" title\u003d\"Codeforces Beta Round 91 (Div. 2 Only)\"\u003e122E - Lucky Permutation\u003c/a\u003e\u003c/p\u003e\u003cp\u003eTo find the \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e-th lexicographic small permutation, it is sufficient to consider the last \u003cspan class\u003d\"tex-span\"\u003e13\u003c/span\u003e digits, since \u003cspan class\u003d\"tex-span\"\u003e13! \u0026gt; 10\u003csup class\u003d\"upper-index\"\u003e9\u003c/sup\u003e\u003c/span\u003e. Then, the main issue is to find out the \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e-th lexicographic small permutation. There is a standard algorithm to solve this problem, referred to as Cantor Expansion, and one can search a lot of information and materials on the Internet.\u003c/p\u003e\u003c/div\u003e","tags":[]}}