{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1413263391,"rating":2,"authorHandle":"Xsquare","modificationTimeSeconds":1413263391,"id":14271,"title":"\u003cp\u003eCodeforces Gym problem.\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e\u003ca href\u003d\"//codeforces.com/gym/100494/attachments\"\u003ehttp://codeforces.com/gym/100494/attachments\u003c/a\u003e\u003c/p\u003e\u003cp\u003eHere is the link of the contest problems, I want to discuss problem F here. People have made very few submissions for this problem, may be just because its difficult to catch the greedy part here.\u003c/p\u003e\u003cp\u003eAnyways, never mind. I gave it a try like everyone else did and thought of a backtrack solution. \u003ca href\u003d\"http://ideone.com/8h8X4v\"\u003ehttp://ideone.com/8h8X4v\u003c/a\u003e (This is the link for my code).\u003c/p\u003e\u003cp\u003eI dont know how to mantain a state here.\u003c/p\u003e\u003cp\u003eThe only state I can think of is \u003cstrong\u003eF(t,mask,vector  spent)\u003c/strong\u003e where t denotes time elapsed till now, mask denotes which all bugs have been fixed (set bits for the fixed bugs) and vector  spent would denote an array which would keep the count as in how much time, we have wasted on ith problem.\u003c/p\u003e\u003cp\u003eBut, seems the problem can be solved by keeping a different state. Instead of vector  spent, they say, you can just keep an overall time elapsed on fixing all the unfixed bugs, why is it so! \u003c/p\u003e\u003c/div\u003e","tags":["dynamic programming","probability","expectation value"]}}