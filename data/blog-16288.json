{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":false,"creationTimeSeconds":1423468392,"rating":0,"authorHandle":"levonstepan","modificationTimeSeconds":1423468546,"id":16288,"title":"\u003cp\u003eFinding a \u0026quot;negative pair\u0026quot; in Array in n*log(n) [in-place algorithm]\u003c/p\u003e","locale":"ru","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eYou are given an array S[1 . . . n] of real numbers, some positive and some negative.\u003c/p\u003e\u003cp\u003eDesign an O(n log n)-time algorithm that determines whether S contains two elements S[i] and S[j] such that S[i] \u003d −S[j]. The algorithm returns a “yes” if there is such a pair, and “no” otherwise. If the array S contains the element 0, then the algorithm always returns a “yes”.\u003c/p\u003e\u003cp\u003eYour algorithm has to be in-place (i.e. you can use only constant additional memory).\u003c/p\u003e\u003cp\u003eI solved it using Heap Sort, but is there any other solution? Because it is assumed that the student doesn\u0027t know Heap Sort yet.\u003c/p\u003e\u003c/div\u003e","tags":["algorithm design","n*log(n)"]}}