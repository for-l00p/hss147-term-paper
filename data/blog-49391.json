{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1483020642,"rating":0,"authorHandle":"hot3eed","modificationTimeSeconds":1483020642,"id":49391,"title":"\u003cp\u003eWhere does this formula in problem 486A come from?\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eThe formula I\u0027m asking about in \u003ca href\u003d\"//codeforces.com/problemset/problem/486/A\"\u003eproblem 486A\u003c/a\u003e is the one in most C++ answers which is: \u003ccode\u003en/2-n*(n%2)\u003c/code\u003e, now where does this formula come from? Also, I found this \u003ca href\u003d\"https://github.com/Felic92/Competitive-Programming-Practice/blob/master/Problems/CodeForces/2014/A_Calculating_Function_486.c\"\u003esolution\u003c/a\u003e in which the author says that he looked for a pattern \u003cem\u003e(tldr; if the number is even then \u003ccode\u003en/2\u003c/code\u003e or else if it\u0027s odd then \u003ccode\u003e-1 * ((n+1)/2)\u003c/code\u003e)\u003c/em\u003e until he found one which actually works, is there any explanation for this pattern? Also, is this kind of patterns a matter of trial and error or is there a way to identify them? \u003c/p\u003e\u003c/div\u003e","tags":["math","implementation","algorithm"]}}