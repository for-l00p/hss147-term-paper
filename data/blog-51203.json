{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1490432663,"rating":8,"authorHandle":"sLKz","modificationTimeSeconds":1490432740,"id":51203,"title":"\u003cp\u003eCan\u0027t get my solution for problem Code for 1 â€” 768B accepted\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHello! I have some issues regarding my solution for \u003ca href\u003d\"//codeforces.com/problemset/problem/768/B\"\u003ethis\u003c/a\u003e problem. On my computer it works fine, but I can\u0027t get it accepted on submissions either because of a weird TLE error, or because of a runtime error, which I can\u0027t seem to understand where it comes from.\u003c/p\u003e\u003cp\u003eHere is the solution explained: For each position in the specified range, I find the greatest power of two which divides the position and then I just get the final element at that position.\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e#include \u0026lt;stdio.h\u0026gt;\n#include \u0026lt;math.h\u0026gt;\n\nint getElementAtPosition(long long n, long long pos, int powLength) {\n    int powerOfTwo \u003d llround(pow(2, powLength)) / 2;\n    while (pos % llround(pow(2, powerOfTwo)) !\u003d 0) {\n        powerOfTwo--;\n    }\n\n    return (n / llround(pow(2, powLength - 1 - powerOfTwo))) % 2;\n}\n\nint main(void) {\n    long long n, l, r;\n    scanf(\u0026quot;%64d %64d %64d\u0026quot;, \u0026amp;n, \u0026amp;l, \u0026amp;r);\n\n    int powLength \u003d 0;\n    long long nCopy \u003d n;\n    while (nCopy !\u003d 0) {\n        powLength++;\n        nCopy /\u003d 2;\n    }\n\n    int count \u003d 0;\n    for (long long i \u003d l; i \u0026lt;\u003d r; i++) {\n        count +\u003d getElementAtPosition(n, i, powLength);\n    }\n\n    printf(\u0026quot;%d\u0026quot;, count);\n\n    return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":["mysterious runtime error","compile time error"]}}