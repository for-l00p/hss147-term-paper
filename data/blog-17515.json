{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1429663098,"rating":0,"authorHandle":"Aries512","modificationTimeSeconds":1429663098,"id":17515,"title":"\u003cp\u003eNearest neighbour search with constraints\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eImagine we have a \u003cem\u003en x m\u003c/em\u003e rectangular grid of some reasonable size (say, only \u003cem\u003e1000x1000\u003c/em\u003e), and for some of the positions on grid we have elements, each with an associated range \u003cem\u003ea..b\u003c/em\u003e.\u003c/p\u003e\u003cp\u003eThe query is: for the position \u003cem\u003ex,y\u003c/em\u003e on the grid with the value \u003cem\u003ez\u003c/em\u003e, find the closest neighbour on the grid such that \u003cem\u003ea\u0026lt;\u003dz\u0026lt;\u003db\u003c/em\u003e.\u003c/p\u003e\u003cp\u003eWithout the range constraint, the task is fairly easy with the use of kd-trees or other structures. How can we efficiently solve the problem with the additional range constraint? I\u0027m interested in approximation or probabilistic algorithms too if there are any.\u003c/p\u003e\u003c/div\u003e","tags":["k-nearest neighbors","range query","kd tree","grid"]}}