{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1408799865,"rating":0,"authorHandle":"tom","modificationTimeSeconds":1408802263,"id":13510,"title":"\u003cp\u003eUVA — 11167 — Monkeys in the Emei Mountain\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e\u003ca href\u003d\"http://uva.onlinejudge.org/index.php?option\u003donlinejudge\u0026amp;page\u003dshow_problem\u0026amp;problem\u003d2108\"\u003ehttp://uva.onlinejudge.org/index.php?option\u003donlinejudge\u0026amp;page\u003dshow_problem\u0026amp;problem\u003d2108\u003c/a\u003e\u003c/p\u003e\u003cp\u003eI\u0027ve stuck with this problem. It\u0027s obviously network flow problem. My graph:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003ebipartite graph(monkeys, time intervals)\nsource ---(thirtyness of monkey)--\u0026gt; monkey\ninterval ----(interval length)----\u0026gt; sink\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003ewhen intervals are 1 hour length, my output (I assume) is correct but it got TLE (100 + 50k vertices with Dinic O(V^2*E) is little bit too much). I tried to compress these intervals, but I\u0027m getting WA and code is really dirty. How to implement it clean and nicely?\u003c/p\u003e\u003c/div\u003e","tags":[]}}