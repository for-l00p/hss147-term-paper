{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1415240623,"rating":3,"authorHandle":"Los_Angelos_Laycurse","modificationTimeSeconds":1415240623,"id":14607,"title":"\u003cp\u003eanother interesting problem in andrew stankevich contest:\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003elink: \u003ca href\u003d\"//codeforces.com/gym/100517\"\u003ehttp://codeforces.com/gym/100517\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eproblem C Comb Avoiding Trees my solution for this problem is shorter than 40 lines(I often write long code and make problem more complex than itself when solving problems)\u003c/p\u003e\u003cp\u003ethe key observasion of this problem is we must find every rooted binary tree correspond a bracket sequence(thinking in prufer coding)(i.e. something like (((()()()))). and avoid k means the depth of the bracket sequence is less than k. then very short dynamic programming can solve it,complexity O(n^2)\u003c/p\u003e\u003c/div\u003e","tags":[]}}