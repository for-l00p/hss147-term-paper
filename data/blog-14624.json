{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1415335284,"rating":3,"authorHandle":"ddt","modificationTimeSeconds":1415335772,"id":14624,"title":"\u003cp\u003eMerging overlapping line-segments\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHelp needed in the following problem : \u003c/p\u003e\u003cp\u003eThere are \u003cstrong\u003eN\u003c/strong\u003e (1\u0026lt;\u003dN\u0026lt;\u003d200000) line segments (end-point coordinates are positive integers less than \u003cstrong\u003e1e9\u003c/strong\u003e). The task is to merge the line segments that are \u003cem\u003e\u003cstrong\u003eoverlapping\u003c/strong\u003e\u003c/em\u003e and finally print the coordinates of all the merged line-segments. \u003c/p\u003e\u003cp\u003eSample Test Case\u003c/p\u003e\u003cp\u003eN \u003d 4\u003cbr /\u003e Line segments: \u003cbr /\u003e[(1,1) (5,1)] \u003cbr /\u003e[(4,1) (7,1)] \u003cbr /\u003e[(3,3) (9,3)] \u003cbr /\u003e[(5,3) (8,3)]\u003c/p\u003e\u003cp\u003eThe answer for this test case would be : \u003cbr /\u003e[(1,1) (7,1)] \u003cbr /\u003e[(3,3) (9,3)]\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eMy Approach\u003c/strong\u003e : Consider each line segment as a vertex and make edges between segments U and V if U and V overlaps. Then, find the connected components. For each connected components, answer can be calculated by taking the min of left coordinates and maximum of right coordinates. But this approach is O(N^2) and will not work for N\u003d200000. \u003c/p\u003e\u003c/div\u003e","tags":["geometry","computational geometry"]}}