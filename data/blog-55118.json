{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1507648967,"rating":12,"authorHandle":"Noam527","modificationTimeSeconds":1507648967,"id":55118,"title":"\u003cp\u003eHelp: Minimize merge operations\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eI came up (I think, I just didn\u0027t see it anywhere) with this problem earlier today and I think it\u0027s better if I ask for help here as I still don\u0027t know its solution:\u003c/p\u003e\u003cp\u003eYou have an array of N integers and in each step you can merge any 2 of them into a single integer (and then this integer is added to the array while the previous 2 are erased from it). The cost of merging two elements X and Y is max(X, Y).\u003c/p\u003e\u003cp\u003eYou need to find the minimal cost you can get after merging all the integers into 1 (essentially, doing N â€” 1 merges).\u003c/p\u003e\u003cp\u003eCurrently there\u0027s no constraint (not on N, nor on the limit of the integers) so just try to come up with the best complexity you can.\u003c/p\u003e\u003cp\u003eExamples:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003einput:\n3\n4 6 8\noutput:\n16\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e(merging 4 and 6 to 10 with the cost of 6, and then merging 8 and 10 with the cost of 10, giving a total of 16).\u003c/p\u003e \u003cpre\u003e\u003ccode\u003einput:\n4\n10 11 13 16\noutput:\n55\n(10-\u0026gt;16) + (11-\u0026gt;13) + (24-\u0026gt;26) \u003d 16 + 13 + 26 \u003d 55.\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":[]}}