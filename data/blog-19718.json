{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1439279165,"rating":4,"authorHandle":"P_Nyagolov","modificationTimeSeconds":1439279165,"id":19718,"title":"\u003cp\u003eSystems of Distinct Representatives\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHello everybody,\u003c/p\u003e\u003cp\u003eI have seen the name \u0026quot;Systems of Distinct Representatives\u0026quot; a few times in a short period of time so I decided to learn it. I have read about Hall\u0027s theorem and some of its applications but the thing is that I don\u0027t know some efficient way to find that system of distinct representatives. So the problem goes like this: We are given N sets S1,...,Sn of integers. We are to choose an integer from each set which we call a representative of that set. We want all sets to have different representatives. The best algorithm I know is to build a bipartite graph with sides the sets and the numbers and then the maximum matching will give us an answer. So that\u0027s why I learned the \u003ca href\u003d\"https://en.wikipedia.org/wiki/Hopcroft%E2%80%93Karp_algorithm\"\u003eHopcroft-Karp matching algorithm\u003c/a\u003e and assuming that the graph is built in O(E) time now I can solve the problem in O(E*sqrt(V)) which is worst case O(N^2*sqrt(N)).\u003c/p\u003e\u003cp\u003eHowever, I was told that it is possible to solve the problem in O(N^2). I will be really thankful if some of you can explain some more algorithms that can solve the problem faster and give me some problems if possible :)\u003c/p\u003e\u003cp\u003eThanks in advance! :)\u003c/p\u003e\u003c/div\u003e","tags":["sdp","matching","algorithms"]}}