{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":true,"creationTimeSeconds":1463588239,"rating":37,"authorHandle":"komendart","modificationTimeSeconds":1463590442,"id":44942,"title":"\u003cp\u003eAbout gcc and std::hash\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHi everyone!\u003c/p\u003e\u003cp\u003eI don\u0027t know, maybe this topis was discussed on Codeforces but google didn\u0027t help me.\u003c/p\u003e\u003cp\u003eIt seems that standart hash function in gcc works badly (for Visual C++ all is good).\u003c/p\u003e\u003cp\u003eFor \u003cspan class\u003d\"tex-span\"\u003e0 ≤ \u003ci\u003ex\u003c/i\u003e ≤ 2\u003csup class\u003d\"upper-index\"\u003e32\u003c/sup\u003e - 1\u003c/span\u003e\u003c/p\u003e \u003cpre\u003e\u003ccode\u003estd::hash\u0026lt;int\u0026gt;()(x) \u003d\u003d x \nstd::hash\u0026lt;long long\u0026gt;()(x) \u003d\u003d x\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eFor any other number\u003c/p\u003e \u003cpre\u003e\u003ccode\u003estd::hash\u0026lt;long long\u0026gt;()(x + (1LL \u0026lt;\u0026lt; 32)) \u003d\u003d std::hash\u0026lt;long long\u0026gt;()(x)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eFor example code in spoiler works more than 10 seconds on Codeforces because hashes of all numbers are equal to zero.\u003c/p\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eCode\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003e#include \u0026lt;iostream\u0026gt;\n#include \u0026lt;unordered_set\u0026gt;\n\nusing namespace std;\n\nint main() {\n    unordered_set\u0026lt;long long\u0026gt; d;\n    int n \u003d 1e5;\n    long long t \u003d 1LL \u0026lt;\u0026lt; 32;\n    for (int i \u003d 0; i \u0026lt; n; i++) {\n        d.insert(i * t);\n    }\n    cout \u0026lt;\u0026lt; d.size() \u0026lt;\u0026lt; endl;\n}\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\u003cp\u003eWhat can we do without writing our own hash function?\u003c/p\u003e\u003c/div\u003e","tags":[]}}