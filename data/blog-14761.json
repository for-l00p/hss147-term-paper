{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":false,"creationTimeSeconds":1416392461,"rating":0,"authorHandle":"geakstr","modificationTimeSeconds":1416392461,"id":14761,"title":"\u003cp\u003eРазбор контеста 15 ноября \u003c/p\u003e","locale":"ru","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eВыкладываю авторские решения задач.\u003c/p\u003e\u003cp\u003eЗадача \u0026quot;B. Случай с игрой\u0026quot;\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e#include \u0026lt;iostream\u0026gt;\n#include \u0026lt;vector\u0026gt;\n#include \u0026lt;fstream\u0026gt;\n#include \u0026lt;algorithm\u0026gt;\n#include \u0026lt;cstdio\u0026gt;\n#include \u0026lt;assert.h\u0026gt;\n\nusing namespace std;\n\nint main()\n{\n\tifstream cin(\u0026quot;shoot.in\u0026quot;);\n\tofstream cout(\u0026quot;shoot.out\u0026quot;);\n\tint n, k;\n\tcin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; k;\n\tint cur \u003d 0, insave \u003d 0;\n\tfor (int i \u003d 0; i \u0026lt; n; i++)\n\t{\n\t\tstring s;\n\t\tcin \u0026gt;\u0026gt; s;\n\t\tif (s \u003d\u003d \u0026quot;shoot\u0026quot;) cur--;       // Shoot\n\t\tif (s \u003d\u003d \u0026quot;save\u0026quot;) insave \u003d cur; // Save\n\t\tif (s \u003d\u003d \u0026quot;load\u0026quot;) cur \u003d insave; // Load\n\t\tif (s \u003d\u003d \u0026quot;ammo\u0026quot;) cur +\u003d k;     // Ammo\n\t\tcout \u0026lt;\u0026lt; cur \u0026lt;\u0026lt; \u0027\\n\u0027;\n\t}\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eЗадача \u0026quot;C. Хвост графа\u0026quot; главный метод на Java (полный код тут \u003ca href\u003d\"http://pastebin.com/xu5x1Ndz\"\u003ehttp://pastebin.com/xu5x1Ndz\u003c/a\u003e)\u003c/p\u003e \u003cpre\u003e\u003ccode\u003evoid solve() throws Exception {\n  int n \u003d nextInt();\n  int m \u003d nextInt();\n  List\u0026lt;Integer\u0026gt;[] edges \u003d new List[n];\n  for (int i \u003d 0; i \u0026lt; n; i++) {\n    edges[i] \u003d new ArrayList\u0026lt;Integer\u0026gt;();\n  }\n  for (int i \u003d 0; i \u0026lt; m; i++) {\n    int from \u003d nextInt() - 1;\n    int to \u003d nextInt() - 1;\n    edges[from].add(to);\n    edges[to].add(from);\n  }\n  int ans \u003d 0;\n  for (int i \u003d 0; i \u0026lt; n; i++) {\n    if (edges[i].size() \u0026gt; 1) {\n      continue;\n    }\n    int last \u003d i;\n    int x \u003d edges[i].get(0);\n    int len \u003d 1;\n    while (edges[x].size() \u003d\u003d 2) {\n      len++;\n      for (int j : edges[x]) {\n        if (j !\u003d last) {\n          last \u003d x;\n          x \u003d j;\n          break;\n        }\n      }\n    }\n    if (edges[x].size() \u003d\u003d 1) {\n      len++;\n    }\n    ans \u003d max(ans, len);\n  }\n  out.println(ans);\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":[]}}