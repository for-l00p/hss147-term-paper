{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":true,"creationTimeSeconds":1511933366,"rating":0,"authorHandle":"elena","modificationTimeSeconds":1513640816,"id":56057,"title":"\u003cp\u003eКак решать задачи: несколько рекомендаций — часть 1\u003c/p\u003e","locale":"ru","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eЯзык программирования высокого уровня (практически любой императивный и Java в том числе) достаточно близок к естественному языку (собственно, так и задумывалось). Поэтому очень важно сначала формализовать задачу на естественном (родном) языке, а уже формализованную не так сложно записать на языке программирования. \u003c/p\u003e\u003cp\u003eДавайте рассмотрим две вариации одной задачи и обсудим, как её решать. \u003cbr /\u003e\u003c/p\u003e\u003cp\u003eМы не будем здесь обсуждать, как и где объявлены переменные, как вводить и выводить данные, какие должны быть методы в программе — всё же к концу семестра с этим проблем возникать не должно. Сосредоточимся лишь на той части кода, который получает собственно решение.\u003c/p\u003e\u003cp\u003eСуществует притча о том, как один восточный правитель, узнав об игре в шахматы, пришёл в такой восторг, что пообещал щедро вознаградить того, кто придумал эту игру. Изобретатель (а скорее, тот, кто показал игру правителю) скромно попросил положить на первую клетку шахматной доски одно пшеничное зёрнышко, на вторую — два, на третью — четыре и так далее, каждый раз удваивая количество зёрнышек. В разных интерпретациях притча заканчивается по-разному. Вы же можете прикинуть, сколько тонн пшеницы правитель должен был отсыпать изобретателю. А мы немного изменим условие (шахматная доска квадратная, всегда \u003cspan class\u003d\"tex-span\"\u003e8 × 8\u003c/span\u003e, не очень понятно, как нумеровать клетки одним числом...) и — приступим.\u003c/p\u003e\u003cp\u003eВ одной из дальних стран правитель увидел у другого правителя жемчужную нить. Она состояла из \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e очень крупных и красивых жемчужин. Он стал упрашивать другого правителя продать ему эту нить. В итоге другой правитель сказал, что готов продать эту нить, и сообщил, какую плату за неё он хочет. Как вы уже, вероятно, догадались, он попросил одну монету за первую жемчужину нити, две — за вторую, четыре — за третью и так далее. Каждая очередная жемчужина, таким образом, стоила вдвое дороже, чем предыдущая. \u003c/p\u003e\u003cp\u003e\u003cb\u003eВариация первая\u003c/b\u003e\u003c/p\u003e\u003cp\u003eУ правителя, желающего купить жемчужину, имеется \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/span\u003e монет. Ваша задача — определить, за сколько жемчужин он сможет заплатить и сколько потратит при этом денег. Заметим, что нить состоит из \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e жемчужин, и большее количество даже при наличии монет правителю приобрести не удастся. \u003c/p\u003e\u003cp\u003e\u003ci\u003e\u003cb\u003eОбсуждение\u003c/b\u003e\u003c/i\u003e\u003c/p\u003e\u003cp\u003eПредставим ситуацию следующим образом: правитель покупает жемчужины по одной, расплачивается за очередную, если может (хватает денег), после чего переходит к следующей (и анализирует, есть ли у него на это средства).\u003c/p\u003e\u003cp\u003eТакие повторяющиеся действия можно (и нужно) записывать с помощью цикла (while или for — это уж какой нравится). \u003c/p\u003e\u003cp\u003eОбозначим через \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003c/span\u003e сумму, которую правитель платит за очередную жемчужину. Тогда за следующую он должен будет уплатить \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e·2\u003c/span\u003e монет. Это действие и есть переход от очередной жемчужине к следующей. Т.е. оператор \u003ccode\u003ep \u003d p * 2;\u003c/code\u003e точно должен быть в теле цикла. Достаточно очевидно, что начальным значением величины \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003c/span\u003e должна быть 1 (именно столько монет будет уплачено за первую жемчужину). \u003c/p\u003e\u003cp\u003eОднако просто вычислять количество монет, которые правитель уплатит за очередную жемчужину, недостаточно. Нам нужна общая сумма. Обозначим через \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e\u003c/span\u003e общую сумму, которую правитель уплатит за приобретённые жемчужины. Когда правитель платит за очередную жемчужину, он тем самым изменяет величину \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e\u003c/span\u003e: \u003ccode\u003es \u003d s + p;\u003c/code\u003e, и этот оператор тоже должен быть в теле цикла. Также несложно понять, что начальным значением величины \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e\u003c/span\u003e должен быть 0 (до момента уплаты монет за первую жемчужину правитель ещё ничего не заплатил суммарно). \u003c/p\u003e\u003cp\u003eТеперь поймём, в какой последовательности должны быть эти операторы в теле цикла, должны ли в теле цикла быть другие операторы, а также каким должно быть условие цикла. \u003c/p\u003e\u003cp\u003eСформулируем на естественном языке, что происходит в задаче. \u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e. Правитель проверяет, достаточно ли у него денег на покупку очередной жемчужины (понятно, что часть жемчужины ему не продадут)\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e2\u003ci\u003ea\u003c/i\u003e\u003c/span\u003e. Если денег не хватает, то делать уже ничего не нужно — сколько купил, столько купил.\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e2\u003ci\u003eb\u003c/i\u003e\u003c/span\u003e. Если же денег хватает, он покупает эту жемчужину (добавляет её цену к уже потраченной сумме), после чего возвращается к п.1., разумеется, не забывая о том, что цена новой жемчужины будет в два раза выше. \u003c/p\u003e\u003cp\u003eКак понятно, п.1 и есть формулировка условия цикла (конечно, она ещё недостаточно полна, но мы её доработаем по ходу решения). \u003c/p\u003e\u003cp\u003eЧто означает \u0026quot;проверить, хватит ли денег\u0026quot;? — это означает, что нам надо сравнить цену жемчужины и имеющуюсю в распоряжении правителя сумму. Цена жемчужины — это \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003c/span\u003e. А вот сумма, которая есть у правителя, будет равна \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e - \u003ci\u003es\u003c/i\u003e\u003c/span\u003e (исходное количество монет за вычетом уже потраченных). Итак, запишем первую версию цикла.\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e\u003cbr /\u003ep \u003d 1;\ns \u003d 0;\n\nwhile (p \u0026lt;\u003d (m - s)){\n    s \u003d s + p;\n    p \u003d p * 2;\n}\n\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eОбратите внимание: переменная \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003c/span\u003e до выполнения цикла имеет ненулевое значение, а именно цену первой жемчужины. Так что мы проверяем, можем ли её купить, затем покупаем (\u003ccode\u003es \u003d s + p\u003c/code\u003e), затем вычисляем цену следующей жемчужины...\u003c/p\u003e\u003cp\u003e\u003ci\u003eТипичные ошибки\u003c/i\u003e\u003c/p\u003e \u003cul\u003e   \u003cli\u003e\u003cp\u003e\u0026quot;Забыть\u0026quot; про переменную \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e\u003c/span\u003e (или \u0026quot;совместить\u0026quot; её с \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003c/span\u003e). У этих переменных очевидно разное назначение (цена одной жемчужины \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003c/span\u003e и общая уплаченная сумма \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e\u003c/span\u003e).\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003e\u0026quot;Забыть\u0026quot; вычесть из \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/span\u003e сумму \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e\u003c/span\u003e. Это уже логическая ошибка: ведь денег у правителя становится меньше после каждой покупки.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eЗаписать условие цикла как \u003ccode\u003es \u0026lt; m\u003c/code\u003e или \u003ccode\u003es \u0026lt;\u003d m\u003c/code\u003e. Да, разумеется, это условие должно выполняться, но оно является необходимым, а не достаточным: то, что на текущий момент правитель потратил сумму, меньшую, чем была изначально в его распоряжении, совершенно не гарантирует, что остатка ему хватит на покупку следующей жемчужины. \u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eСначала вычислить цену очередной жемчужины, а затем прибавить её цену к сумме покупки (поменять местами операторы в теле цикла). Тоже логическая ошибка: проверили одну цену, а купили за вдвое большую — так может и денег не хватить. \u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e\u003cp\u003e\u003ci\u003eПродолжение обсуждения\u003c/i\u003e\u003c/p\u003e\u003cp\u003eЕсли у правителя есть 100 монет, а в нити 10 жемчужин, предыдущий цикл вполне неплохо отработает. Действительно, посмотрим, что будет происходить в пошаговом режиме:\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e0\u003c/span\u003e. (до цикла) \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e \u003d 10\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e \u003d 100\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e \u003d 1\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e \u003d 0\u003c/span\u003e\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e. Условие: \u003cspan class\u003d\"tex-span\"\u003e(1 ≤ 100 - 0)\u003c/span\u003e — истинное, в теле цикла выполняем \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e \u003d 0 + 1 \u003d 1\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e \u003d 1 * 2 \u003d 2\u003c/span\u003e (куплена 1-ая жемчужина).\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e2\u003c/span\u003e. Условие: \u003cspan class\u003d\"tex-span\"\u003e(2 ≤ 100 - 1 \u003d 99)\u003c/span\u003e — истинное, в теле цикла выполняем \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e \u003d 1 + 2 \u003d 3\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e \u003d 2 * 2 \u003d 4\u003c/span\u003e (куплена 2-ая жемчужина).\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e3\u003c/span\u003e. Условие: \u003cspan class\u003d\"tex-span\"\u003e(4 ≤ 100 - 3)\u003c/span\u003e — истинное, в теле цикла выполняем \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e \u003d 3 + 4 \u003d 7\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e \u003d 4 * 2 \u003d 8\u003c/span\u003e (куплена 3-я жемчужина).\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e4\u003c/span\u003e. Условие: \u003cspan class\u003d\"tex-span\"\u003e(8 ≤ 100 - 7)\u003c/span\u003e — истинное, в теле цикла выполняем \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e \u003d 7 + 8 \u003d 15\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e \u003d 8 * 2 \u003d 16\u003c/span\u003e (куплена 4-ая жемчужина).\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e5\u003c/span\u003e. Условие: \u003cspan class\u003d\"tex-span\"\u003e(16 ≤ 100 - 15)\u003c/span\u003e — истинное, в теле цикла выполняем \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e \u003d 15 + 16 \u003d 31\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e \u003d 16 * 2 \u003d 32\u003c/span\u003e (куплена 5-ая жемчужина).\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e6\u003c/span\u003e. Условие: \u003cspan class\u003d\"tex-span\"\u003e(32 ≤ 100 - 31)\u003c/span\u003e — истинное, в теле цикла выполняем \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e \u003d 31 + 32 \u003d 63\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e \u003d 32 * 2 \u003d 64\u003c/span\u003e (куплена 6-ая жемчужина).\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e7\u003c/span\u003e. Условие: \u003cspan class\u003d\"tex-span\"\u003e(64 ≤ 100 - 63)\u003c/span\u003e — ложное, в тело цикла больше не входим.\u003c/p\u003e\u003cp\u003eОднако если в нити будет не 10, а, к примеру, 4 жемчужины, ничего не изменится: по мнению нашего цикла, правитель купит несуществующие пятую и шестую жемчужины. \u003c/p\u003e\u003cp\u003eКак с этим бороться? Нам нужно контролировать количество жемчужин (к тому же, в условии спрашивают, за сколько жемчужин правитель сможет заплатить). Поэтому заведём ещё одну переменную \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eg\u003c/i\u003e\u003c/span\u003e, значением этой переменной будет количество приобретённых на данный момент жемчужин. Понятно, что эта переменная должна изменяться \u0026quot;синхронно\u0026quot; с переменной \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e\u003c/span\u003e (когда правитель покупает очередную жемчужину, меняем сумму, прибавляя цену этой жемчужины, и меняем количество купленных, увеличивая его на единицу). Вероятно, очевидно, что начальным значением этой переменной должен быть 0. \u003c/p\u003e\u003cp\u003eЧто у нас получилось на текущий момент (условие цикла мы ещё не меняли):\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e\u003cbr /\u003ep \u003d 1;\ns \u003d 0;\ng \u003d 0;\n\nwhile (p \u0026lt;\u003d (m - s)){\n    s \u003d s + p;\n    g++;\n    p \u003d p * 2;\n}\n\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eВообще говоря, оператор \u003ccode\u003eg++\u003c/code\u003e можно было написать в любом месте тела цикла. Но представляется логичным написать его именно так (хотя, возможно, вам может больше понравиться вариант \u0026quot;сначала увеличиваем количество, затем сумму\u0026quot;). \u003c/p\u003e\u003cp\u003eКак теперь нужно изменить условие цикла? Если сформулировать его на естественном языке, то оно будет звучать так: \u003cem\u003e\u0026quot;проверить, что ещё есть жемчужины, которые можно купить, \u003cb\u003eи\u003c/b\u003e что у правителя хватает денег на покупку очередной жемчужины\u0026quot;\u003c/em\u003e. \u003c/p\u003e\u003cp\u003eВторая часть условия у нас уже сформулирована, а первую можно записать так: \u003ccode\u003eg \u0026lt; n\u003c/code\u003e (количество уже купленных жемчужин меньше их общего количества; допустим, например, вариант \u003ccode\u003en - g \u0026gt; 0\u003c/code\u003e и т.п.).\u003c/p\u003e\u003cp\u003eПервая и вторая часть условия объединены союзом \u003cstrong\u003eи\u003c/strong\u003e, указывающим, что оба условия должны выполняться одновременно: должны быть и жемчужины, и деньги у правителя. Союз \u003cstrong\u003eи\u003c/strong\u003e в Java записывается как \u003ccode\u003e\u0026amp;\u0026amp;\u003c/code\u003e. Получаем теперь следующий фрагмент кода:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e\u003cbr /\u003ep \u003d 1;\ns \u003d 0;\ng \u003d 0;\n\nwhile ((g \u0026lt; n) \u0026amp;\u0026amp; (p \u0026lt;\u003d (m - s))){\n    s \u003d s + p;\n    g++;\n    p \u003d p * 2;\n}\n\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eЕсли теперь провести пошаговую проверку при рассмотренных ранее начальных данных, легко увидеть, что для \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e \u003d 10\u003c/span\u003e ничего не поменяется, а вот при \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e \u003d 4\u003c/span\u003e цикл перестанет выполняться после приобретения правителем четвёртой жемчужины. \u003c/p\u003e\u003cp\u003e\u003ci\u003eТипичные ошибки\u003c/i\u003e\u003c/p\u003e \u003cul\u003e   \u003cli\u003e\u003cp\u003eЗапись условия через запятую, точку с запятой, любые другие разделители (в том числе пробел) вместо \u003ccode\u003e\u0026amp;\u0026amp;\u003c/code\u003e. Нет смысла перечислять условия, нужно либо указать, что они должны выполняться одновременно (\u003ccode\u003e\u0026amp;\u0026amp;\u003c/code\u003e), либо, что достаточно выполнения одного из указанных условий (\u003ccode\u003e||\u003c/code\u003e).\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eсравнение с \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e переменной \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003c/span\u003e (реже \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e\u003c/span\u003e), переменная \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eg\u003c/i\u003e\u003c/span\u003e при этом не вводится. Достаточно произнести фразу на естественном языке: \u0026quot;восемь монет меньше, чем пять жемчужин\u0026quot;, чтобы осознать, что это условие неверно. \u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e\u003cp\u003e\u003ci\u003eОкончание обсуждения\u003c/i\u003e\u003c/p\u003e\u003cp\u003eКак несложно видеть, ответом будут значения \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eg\u003c/i\u003e\u003c/span\u003e (сколько жемчужин приобретёт правитель) и \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e\u003c/span\u003e — сколько монет он при этом заплатит. \u003c/p\u003e\u003cp\u003eВажные замечания:\u003c/p\u003e \u003cul\u003e   \u003cli\u003e\u003cp\u003eМы строили решение \u0026quot;синтетически\u0026quot; — сначала описывали сам процесс, а затем выясняли, как из этого можно получить то, что нам нужно. Когда не очень понятно, что вообще делать в задаче, такой подход может оказаться полезен. При построении цикла такой подход также может использоваться.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eКогда написан некоторый фрагмент кода, нужно подумать, как он поведёт себя для тех или иных исходных данных. Для этих целей очень хорошо использовать пошаговое рассмотрение. Более того, когда вы убедились, что на некоторых исходных данных всё хорошо, следует попробовать подобрать те, на которых может не получиться хорошо (как раз из пошагового рассмотрения можно сделать подобные выводы). Очень полезно иметь несколько вариантов входных данных, на которых и следует проверять работу программы. Для этой задачи было бы очень не лишним добавить случаи \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e \u003d 1\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e \u003d 1\u003c/span\u003e; \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e \u003d 1\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e \u003d 10\u003c/span\u003e (любое число, большее 1); \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e \u003d 4\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e \u003d 15\u003c/span\u003e (ситуация, когда у правителя есть денег ровно на столько жемчужин, сколько имеется в наличии). \u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eКогда вносятся какие-то изменения, надо проверять работу на всех наборах входных данных, которые вы придумали. \u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eОчень полезно познакомиться с отладчиком в используемой вами среде программирования Eclipse.\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e\u003cp\u003e\u003cb\u003eВариация вторая\u003c/b\u003e\u003c/p\u003e\u003cp\u003eПо-прежнему у нас есть жемчужная нить из \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e жемчужин и правитель, имеющий некоторое количество монет (никакого числа \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/span\u003e здесь не вводится, будьте внимательны!) и желающий купить эту нить на условиях другого правителя. \u003c/p\u003e\u003cp\u003eМонеты у правителя хранятся не просто так. У него есть \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e мешков с монетами: в мешке \u003cspan class\u003d\"tex-span\"\u003e#\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e содержится \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e монет. Все эти мешки лежат в подземелье, притом ближе всех к входу в подземелье лежит мешок \u003cspan class\u003d\"tex-span\"\u003e#1\u003c/span\u003e, затем — мешок \u003cspan class\u003d\"tex-span\"\u003e#2\u003c/span\u003e и т.д. Когда правитель расплачивается, он отправляет своего казначея за деньгами. Казначей открывает очередной мешок и достаёт оттуда нужное количество монет. Если монет недостаточно, он откроет следующий мешок и так далее. Казначей всегда открывает тот мешок, который ближе всего ко входу (и ещё не пуст). \u003c/p\u003e\u003cp\u003eТеперь ваша задача — не только посчитать, сколько будет куплено жемчужин и в какую сумму это обойдётся правителю, но и сколько мешков с монетами останутся неиспользованными полностью. \u003c/p\u003e\u003cp\u003eПоясним: если из мешка будет изъята хотя бы одна монета, он считается частично использованным. Нас интересуют только те мешки, из которых монеты изыматься не будут вовсе. \u003c/p\u003e\u003cp\u003e\u003ci\u003e\u003cb\u003eОбсуждение\u003c/b\u003e\u003c/i\u003e\u003c/p\u003e\u003cp\u003eРазумеется, мы воспользуемся некоторыми результатами из предыдущего обсуждения. Понятно, что подсчет цены очередной жемчужины, подсчет суммарной оплаченной стоимости и подсчет количества жемчужин измениться не должны. Но теперь у нас исчезло число \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/span\u003e, а вместо него есть последовательность из \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e мешков с монетами. Хранить такую последовательность мы (на данный момент) не умеем, поэтому вариант \u0026quot;сразу посчитать, сколько денег есть в мешках\u0026quot; не работает: прочитать последовательность можно только один раз, а просуммировав её сразу, мы утратим информацию о мешках. \u003c/p\u003e\u003cp\u003eСнова пойдём от процесса. \u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e. Проверяем, имеются ли ещё жемчужины и достаточно ли у правителя денег на покупку очередной жемчужины. Формулировка второй части условия теперь уже не так очевидна, как в предыдущей вариации задачи. Однако в качестве рабочей гипотезы мы можем предположить, что, пока у нас остаются неопустошённые мешки с монетами, есть шанс попытаться заплатить за жемчужину. Впрочем, их может и не хватить, но будем решать проблемы по мере поступления.\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e2\u003ci\u003ea\u003c/i\u003e\u003c/span\u003e. Если мешков не осталось, то делать уже ничего не нужно — сколько купил, столько купил.\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e2\u003ci\u003eb\u003c/i\u003e\u003c/span\u003e. Если же денег хватает, правитель покупает эту жемчужину (добавляет её цену к уже потраченной сумме), после чего возвращается к п.1., разумеется, не забывая о том, что цена новой жемчужины будет в два раза выше. \u003c/p\u003e\u003cp\u003eПонятно, что это может происходить так: правитель озвучивает казначею сумму, и он отправляется в подземелье, берёт там нужное количество монет (открывая мешки при необходимости) или же возвращается с сообщением, что оставшихся денег не хватает. Но тут мы на казначея возлагаем слишком большую ответственность — а вдруг правитель (он же восточный деспот) решит, что казначей просто не хочет, чтобы деньги тратились таким образом, и обманывает его. \u003c/p\u003e\u003cp\u003eКуда безопаснее для казначея действовать следующим образом: когда правитель пожелал уплатить какое-то количество денег, казначей приносит ему весь мешок, а правитель смотрит, сколько же денег сейчас \u0026quot;в непосредственном доступе\u0026quot; и либо расплачивается за очередную жемчужину, либо посылает казначея за следующим мешком. \u003c/p\u003e\u003cp\u003eИтак, в наших рассуждениях появилось \u0026quot;либо — либо\u0026quot; — а это уже верный признак, что у нас будет условный оператор. Кроме того, мы заговорили о монетах в \u0026quot;непосредственном доступе\u0026quot; — т.е. о тех монетах, которые уже доставлены правителю. Обозначим их количество через \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ew\u003c/i\u003e\u003c/span\u003e. Поскольку исходно все мешки лежат в подземелье, то начальное значение \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ew\u003c/i\u003e\u003c/span\u003e будет равно 0.\u003c/p\u003e\u003cp\u003eКроме того, заведём переменную \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e, которая будет \u0026quot;помечать\u0026quot; мешки, когда казначей будет их приносить. Её начальное значение также равно 0, поскольку на момент начала цикла принесённых мешков нет.\u003c/p\u003e\u003cp\u003eЗапишем первую версию цикла:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e\u003cbr /\u003ep \u003d 1;\ns \u003d 0;\ng \u003d 0;\nw \u003d 0;\ni \u003d 0;\n\nwhile ((g \u0026lt; n) \u0026amp;\u0026amp; (i \u0026lt; k)){\n    if (p \u0026lt;\u003d w) {\n        s \u003d s + p;\n        g++;\n        w \u003d w - p;\n        p \u003d p * 2;\n    }\n    else {\n        a \u003d in.nextInt();\n        w \u003d w + a;\n        i++;\n    }\n}\n\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eПроанализируем внесённые изменения. \u003c/p\u003e\u003cp\u003eВ условии цикла проверяется, что жемчужины ещё есть в наличии, а в подземелье ещё имеются мешки с монетами. Затем проверяется, может ли правитель оплатить жемчужину теми монетами, что уже принесены из подземелья (но ещё не истрачены). Если это возможно, то мы проделываем все те же действия, что и в предыдущей задаче, а также уменьшаем количество \u0026quot;наличных денег\u0026quot; на цену только что приобретённой жемчужины (обратите внимание, это нужно сделать \u003cem\u003eдо\u003c/em\u003e вычисления цены следующей жемчужины). Если же это невозможно, мы \u0026quot;отправляем казначея в подземелье\u0026quot; — т.е. прочитываем очередной элемент последовательности (\u003ccode\u003ein\u003c/code\u003e — это, конечно, объект класса Scanner), увеличиваем \u0026quot;наличность\u0026quot; на сумму из принесённого мешка, увеличиваем счётчик мешков. \u003c/p\u003e\u003cp\u003eПоскольку новое условие цикла мы формулировали как \u0026quot;рабочую гипотезу\u0026quot;, самое время поискать для нее \u0026quot;опровержения\u0026quot;. И они легко находятся. Действительно, предположим, что у правителя все деньги хранятся в одном большом мешке (\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e \u003d 1\u003c/span\u003e). И когда он захочет приобрести самую первую жемчужину, казначей принесёт ему весь этот мешок целиком. Однако перед приобретением второй жемчужины сначала будет выполнена проверка, есть ли ещё мешки в подземелье. Там их не окажется, и даже если в первом и единственном мешке было очень много монет, цикл завершит свою работу. Конечно, это неправильно. \u003c/p\u003e\u003cp\u003eКак можно исправить ситуацию? Попробуем сформулировать условие цикла на естественном языке. Исходно у нас было: \u003cem\u003e\u0026quot;ещё есть жемчужины, которые можно купить, \u003cem\u003eи\u003c/em\u003e у правителя есть достаточно денег\u0026quot;\u003c/em\u003e . Теперь вторая часть \u003cem\u003e\u0026quot;у правителя достаточно денег\u0026quot;\u003c/em\u003e должна быть заменена на следующее: \u003cem\u003e\u0026quot;у правителя достаточно наличных денег \u003cem\u003eили\u003c/em\u003e в подземелье ещё имеются мешки с деньгами\u0026quot;\u003c/em\u003e. \u003c/p\u003e\u003cp\u003eОбратим внимание, во-первых, на союз \u003cem\u003eили\u003c/em\u003e (напомним, он записывается как \u003ccode\u003e||\u003c/code\u003e), во-вторых, на то, что новая вторая часть условия \u0026quot;раскрывает\u0026quot; прежнюю вторую часть, и потому должна быть заключена в скобки (при вычислении логических выражений \u003ccode\u003e\u0026amp;\u0026amp;\u003c/code\u003e имеет более высокий приоритет, нежели \u003ccode\u003e||\u003c/code\u003e, если мы не поставим скобки, получится, что при наличии мешков в подземелье нам не важно, есть ли ещё жемчужины, которые можно купить). \u003c/p\u003e\u003cp\u003eИтак, что получается теперь:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e\u003cbr /\u003ep \u003d 1;\ns \u003d 0;\ng \u003d 0;\nw \u003d 0;\ni \u003d 0;\n\nwhile ((g \u0026lt; n) \u0026amp;\u0026amp; ((p \u0026lt;\u003d w) || (i \u0026lt; k))){\n    if (p \u0026lt;\u003d w) {\n        s \u003d s + p;\n        g++;\n        w \u003d w - p;\n        p \u003d p * 2;\n    }\n    else {\n        a \u003d in.nextInt();\n        w \u003d w + a;\n        i++;\n    }\n}\n\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eКонечно, то, что условие \u003ccode\u003ep \u0026lt;\u003d w\u003c/code\u003e встречается и в условии цикла, и в его теле, может поначалу казаться необычным (и даже неправильным). Но если немного подумать, всё выглядит достаточно логично: в условии цикла мы проверили, есть ли у правителя шанс приобрести очередную жемчужину, а в теле цикла выясняем, в чём именно состоит шанс и как правитель должен действовать. \u003c/p\u003e\u003cp\u003eОднако пока мы ещё не умеем отвечать на вопрос о том, сколько же мешков с монетами останутся полностью неиспользованными. Подумаем, какие усовершенствования нужно внести в в этот фрагмент программы. \u003c/p\u003e\u003cp\u003eПока, если смотреть на то, что происходит, дело обстоит следующим образом. Пусть \u0026quot;наличные\u0026quot; деньги просто лежат возле правителя в куче. Когда казначей приносит ему очередной мешок (\u003ccode\u003ea \u003d in.nextInt();\u003c/code\u003e), правитель тут же его открывает и высыпает в кучу. Вполне может оказаться, что казначей принесёт все мешки из подземелья, правитель их все откроет, высыпет в кучу, а потом окажется, что всех этих денег не хватает на приобретение очередной жемчужины.\u003c/p\u003e\u003cp\u003eПусть правитель поступает немного по-другому. Он же знает, сколько монет содержится в том или ином мешке. Складывать числа он умеет. Поэтому, когда казначей приносит очередной мешок, правитель не будет открывать его сразу, а сначала выяснит, хватит ли \u0026quot;наличности\u0026quot; и принесённых (но ещё не открытых) мешков для того, чтобы заплатить цену очередной жемчужины. Как только сумма будет достаточной, правитель откроет все принесённые мешки, высыпет их в кучу и рассчитается за покупку. \u003c/p\u003e\u003cp\u003eПри таком подходе придётся вести \u0026quot;двойной счёт\u0026quot; для мешков: \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e по-прежнему будет обозначать номер очередного мешка, принесённого казначеем, а ещё одна переменная (назовём ее \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e) будет обозначать номер последнего открытого мешка. Вполне понятно, что начальное значение этой переменной будет равно 0 (ещё ни один мешок не открыт). \u003c/p\u003e\u003cp\u003eЧто будет происходить с переменной \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e в цикле? Когда казначей будет приносить очередной мешок из подземелья, с \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e ничего происходить не будет: считаем, что правитель ставит возле кучи наличности закрытые мешки и подсчитывает сумму — хватит или не хватит на покупку очередной жемчужины. А вот перед покупкой жемчужины правителю придётся мешки открыть, и в этом случае номер последнего открытого мешка совпадёт с номером последнего, принесённого казначеем из подземелья. \u003c/p\u003e\u003cp\u003eДоработанная версия:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e\u003cbr /\u003ep \u003d 1;\ns \u003d 0;\ng \u003d 0;\nw \u003d 0;\ni \u003d 0;\nj \u003d 0;\n\nwhile ((g \u0026lt; n) \u0026amp;\u0026amp; ((p \u0026lt;\u003d w) || (i \u0026lt; k))){\n    if (p \u0026lt;\u003d w) {\n        j \u003d i;\n        s \u003d s + p;\n        g++;\n        w \u003d w - p;\n        p \u003d p * 2;\n    }\n    else {\n        a \u003d in.nextInt();\n        w \u003d w + a;\n        i++;\n    }\n}\n\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eРассмотрим работу нашего фрагмента программы на следующем примере: \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e \u003d 5\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e \u003d 7\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e \u003d {5, 6, 3, 52, 32, 18, 4}\u003c/span\u003e.\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e0\u003c/span\u003e. \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e \u003d 1\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eg\u003c/i\u003e \u003d 0\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ew\u003c/i\u003e \u003d 0\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e \u003d 0\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e \u003d 0\u003c/span\u003e\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e. \u003cspan class\u003d\"tex-span\"\u003e(0 \u0026lt; 5)\u003c/span\u003e — верно, \u003cspan class\u003d\"tex-span\"\u003e1 ≤ 0\u003c/span\u003e — неверно, но \u003cspan class\u003d\"tex-span\"\u003e0 \u0026lt; 7\u003c/span\u003e — верно, поэтому идём в тело цикла. В \u003ccode\u003eif\u003c/code\u003e сработает ветвь \u003ccode\u003eelse\u003c/code\u003e, получим: \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e \u003d 5\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ew\u003c/i\u003e \u003d 0 + 5 \u003d 5\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e \u003d 1\u003c/span\u003e. \u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e2\u003c/span\u003e. \u003cspan class\u003d\"tex-span\"\u003e(0 \u0026lt; 5)\u003c/span\u003e — верно, \u003cspan class\u003d\"tex-span\"\u003e1 ≤ 5\u003c/span\u003e — верно, так что следующее условие даже не проверяется. Теперь в \u003ccode\u003eif\u003c/code\u003e сработает основная ветвь, поэтому \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e \u003d 1\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e \u003d 0 + 1 \u003d 1\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eg\u003c/i\u003e \u003d 1\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ew\u003c/i\u003e \u003d 5 - 1 \u003d 4\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e \u003d 2\u003c/span\u003e.\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e3\u003c/span\u003e. \u003cspan class\u003d\"tex-span\"\u003e(1 \u0026lt; 5)\u003c/span\u003e — верно, \u003cspan class\u003d\"tex-span\"\u003e2 ≤ 4\u003c/span\u003e — верно, следующее условие даже не проверяется. В \u003ccode\u003eif\u003c/code\u003e сработает основная ветвь, поэтому \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e \u003d 1\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e \u003d 1 + 2 \u003d 3\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eg\u003c/i\u003e \u003d 2\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ew\u003c/i\u003e \u003d 4 - 2 \u003d 2\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e \u003d 4\u003c/span\u003e.\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e4\u003c/span\u003e. \u003cspan class\u003d\"tex-span\"\u003e(2 \u0026lt; 5)\u003c/span\u003e — верно, \u003cspan class\u003d\"tex-span\"\u003e4 ≤ 2\u003c/span\u003e — неверно, но есть ещё мешки: \u003cspan class\u003d\"tex-span\"\u003e1 \u0026lt; 7\u003c/span\u003e. В \u003ccode\u003eif\u003c/code\u003e сработает ветвь \u003ccode\u003eelse\u003c/code\u003e, так что \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e \u003d 6\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ew\u003c/i\u003e \u003d 2 + 6 \u003d 8\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e \u003d 2\u003c/span\u003e. \u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e5\u003c/span\u003e. \u003cspan class\u003d\"tex-span\"\u003e(2 \u0026lt; 5)\u003c/span\u003e — верно, \u003cspan class\u003d\"tex-span\"\u003e4 ≤ 8\u003c/span\u003e — верно, следующее условие даже не проверяется. В \u003ccode\u003eif\u003c/code\u003e сработает основная ветвь, поэтому \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e \u003d 2\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e \u003d 3 + 4 \u003d 7\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eg\u003c/i\u003e \u003d 3\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ew\u003c/i\u003e \u003d 8 - 4 \u003d 4\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e \u003d 8\u003c/span\u003e.\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e6\u003c/span\u003e. \u003cspan class\u003d\"tex-span\"\u003e(3 \u0026lt; 5)\u003c/span\u003e — верно, \u003cspan class\u003d\"tex-span\"\u003e8 ≤ 4\u003c/span\u003e — неверно, но есть ещё мешки: \u003cspan class\u003d\"tex-span\"\u003e2 \u0026lt; 7\u003c/span\u003e. В \u003ccode\u003eif\u003c/code\u003e сработает ветвь \u003ccode\u003eelse\u003c/code\u003e, так что \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e \u003d 3\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ew\u003c/i\u003e \u003d 4 + 3 \u003d 7\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e \u003d 3\u003c/span\u003e. \u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e6\u003c/span\u003e. \u003cspan class\u003d\"tex-span\"\u003e(3 \u0026lt; 5)\u003c/span\u003e — верно, \u003cspan class\u003d\"tex-span\"\u003e8 ≤ 7\u003c/span\u003e — неверно, но есть ещё мешки: \u003cspan class\u003d\"tex-span\"\u003e3 \u0026lt; 7\u003c/span\u003e. В \u003ccode\u003eif\u003c/code\u003e сработает ветвь \u003ccode\u003eelse\u003c/code\u003e, так что \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e \u003d 52\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ew\u003c/i\u003e \u003d 7 + 52 \u003d 59\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e \u003d 4\u003c/span\u003e. \u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e7\u003c/span\u003e. \u003cspan class\u003d\"tex-span\"\u003e(3 \u0026lt; 5)\u003c/span\u003e — верно, \u003cspan class\u003d\"tex-span\"\u003e8 ≤ 59\u003c/span\u003e — верно, следующее условие даже не проверяется. В \u003ccode\u003eif\u003c/code\u003e сработает основная ветвь, поэтому \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e \u003d 4\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e \u003d 7 + 8 \u003d 15\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eg\u003c/i\u003e \u003d 4\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ew\u003c/i\u003e \u003d 59 - 8 \u003d 51\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e \u003d 16\u003c/span\u003e.\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e8\u003c/span\u003e. \u003cspan class\u003d\"tex-span\"\u003e(4 \u0026lt; 5)\u003c/span\u003e — верно, \u003cspan class\u003d\"tex-span\"\u003e16 ≤ 51\u003c/span\u003e — верно, следующее условие даже не проверяется. В \u003ccode\u003eif\u003c/code\u003e сработает основная ветвь, поэтому \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e \u003d 4\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e \u003d 15 + 16 \u003d 31\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eg\u003c/i\u003e \u003d 5\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ew\u003c/i\u003e \u003d 51 - 16 \u003d 35\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e \u003d 32\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eПоскольку \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e \u003d 5\u003c/span\u003e, следующая попытка обратиться к циклу приведёт к нарушению условия \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eg\u003c/i\u003e \u0026lt; \u003ci\u003en\u003c/i\u003e\u003c/span\u003e (\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eg\u003c/i\u003e \u003d 5\u003c/span\u003e на текущий момент), и выполнение цикла будет завершено. Несложно посчитать, что если открытых мешков было 4 (\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e), а всего мешков было 7 (\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e), то полностью неиспользованных мешков будет 3 (\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e - \u003ci\u003ej\u003c/i\u003e\u003c/span\u003e). \u003c/p\u003e\u003cp\u003e\u003cem\u003eСамостоятельно\u003c/em\u003e\u003c/p\u003e\u003cp\u003eРассмотрите случай \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e \u003d 8\u003c/span\u003e. Каким будет ответ?\u003c/p\u003e\u003cp\u003eВопросы / пожелания — в личные сообщения и в комментарии к посту.\u003c/p\u003e\u003c/div\u003e","tags":["java","условия","циклы"]}}