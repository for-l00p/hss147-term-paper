{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1404400219,"rating":16,"authorHandle":"Beta_green","modificationTimeSeconds":1404464202,"id":12926,"title":"\u003cp\u003eA hard problem with string\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eCan anyone solve this problem not using brute force? I\u0027m so happy if somebody can help me.\u003c/p\u003e\u003cp\u003eA beautiful bit string is a string which can be described as a right bracket string, and lexicography order not larger than all of its bracket-circle-permutation. For example: 111000 -\u0026gt; ((())) is a beautiful string (110001 -\u0026gt; (()))( is not a right permutation), but 101 -\u0026gt; ()( is not, and 110010 is also not, because 110010 \u0026gt; 101100 and 101100 -\u0026gt; ()(()) is a bracket-circle-permutation of 110010.\u003c/p\u003e\u003cp\u003e(I have changed the problem set, this is my original problem, I realize that the last one I wrote is not enough to solve my original one.)\u003c/p\u003e\u003cp\u003eCount the number of beautiful strings with n bit. And let a n-bit beautiful string, count the number of beautiful strings which have lexicography order smaller than this. Of course, n is even.\u003c/p\u003e\u003c/div\u003e","tags":[]}}