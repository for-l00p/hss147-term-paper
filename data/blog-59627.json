{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1527018515,"rating":-49,"authorHandle":"b24hoover","modificationTimeSeconds":1527018515,"id":59627,"title":"\u003cp\u003eWRONG JUDGEMENT BY CODEFORCES SOFTWARE OR WHOEVER SITS THERE :( question number 985F, ##I m 100% correct !## \u003cstrong\u003e\u003cem\u003ePLZ HELP!!\u003c/em\u003e\u003c/strong\u003e\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e\u0026quot;\u0026quot;\u0026quot;PROBLEM NUMBER 985F\u0026quot;\u0026quot;\u0026quot;\u003c/p\u003e\u003cp\u003eF. Isomorphic Strings time limit per test3 seconds memory limit per test256 megabytes inputstandard input outputstandard output You are given a string s of length n consisting of lowercase English letters.\u003c/p\u003e\u003cp\u003eFor two given strings s and t, say S is the set of distinct characters of s and T is the set of distinct characters of t. The strings s and t are isomorphic if their lengths are equal and there is a one-to-one mapping (bijection) f between S and T for which f(si) \u003d ti. Formally:\u003c/p\u003e\u003cp\u003ef(si) \u003d ti for any index i, for any character there is exactly one character that f(x) \u003d y, for any character there is exactly one character that f(x) \u003d y. For example, the strings \u0026quot;aababc\u0026quot; and \u0026quot;bbcbcz\u0026quot; are isomorphic. Also the strings \u0026quot;aaaww\u0026quot; and \u0026quot;wwwaa\u0026quot; are isomorphic. The following pairs of strings are not isomorphic: \u0026quot;aab\u0026quot; and \u0026quot;bbb\u0026quot;, \u0026quot;test\u0026quot; and \u0026quot;best\u0026quot;.\u003c/p\u003e\u003cp\u003eYou have to handle m queries characterized by three integers x, y, len (1 ≤ x, y ≤ n - len + 1). For each query check if two substrings s[x... x + len - 1] and s[y... y + len - 1] are isomorphic.\u003c/p\u003e\u003cp\u003eInput The first line contains two space-separated integers n and m (1 ≤ n ≤ 2·105, 1 ≤ m ≤ 2·105) — the length of the string s and the number of queries.\u003c/p\u003e\u003cp\u003eThe second line contains string s consisting of n lowercase English letters.\u003c/p\u003e\u003cp\u003eThe following m lines contain a single query on each line: xi, yi and leni (1 ≤ xi, yi ≤ n, 1 ≤ leni ≤ n - max(xi, yi) + 1) — the description of the pair of the substrings to check.\u003c/p\u003e\u003cp\u003eOutput For each query in a separate line print \u0026quot;YES\u0026quot; if substrings s[xi... xi + leni - 1] and s[yi... yi + leni - 1] are isomorphic and \u0026quot;NO\u0026quot; otherwise.\u003c/p\u003e\u003cp\u003eExample inputCopy 7 4 abacaba 1 1 1 1 4 2 2 1 3 2 4 3 outputCopy YES YES NO YES Note The queries in the example are following:\u003c/p\u003e\u003cp\u003esubstrings \u0026quot;a\u0026quot; and \u0026quot;a\u0026quot; are isomorphic: f(a)\u003da; substrings \u0026quot;ab\u0026quot; and \u0026quot;ca\u0026quot; are isomorphic: f(a)\u003dc, f(b)\u003da; substrings \u0026quot;bac\u0026quot; and \u0026quot;aba\u0026quot; are not isomorphic since f(b) and f(c) must be equal to a at same time; substrings \u0026quot;bac\u0026quot; and \u0026quot;cab\u0026quot; are isomorphic: f(b)\u003dc, f(a)\u003da, f(c)\u003db.\u003c/p\u003e\u003cp\u003e\u0026quot;\u0026quot;\u0026quot;CODE:\u0026quot;\u0026quot;\u0026quot;\u003c/p\u003e\u003ch1\u003einclude \u003c/h1\u003e\u003ch1\u003einclude \u003c/h1\u003e\u003ch1\u003einclude \u003c/h1\u003e\u003cp\u003eusing namespace std;\u003c/p\u003e\u003cp\u003eint main() {  long n,m ;  cin \u0026gt;\u0026gt;n \u0026gt;\u0026gt;m ;  char str[n],test1,test2 ;  cin \u0026gt;\u0026gt; str ;\u003c/p\u003e \u003cpre\u003e\u003ccode\u003efor(long p\u003d0;p\u0026lt;m;p++){\n\n    long x,y,len ;\n    cin \u0026gt;\u0026gt; x \u0026gt;\u0026gt; y\u0026gt;\u0026gt; len ;\n    vector\u0026lt;char\u0026gt; v1,v2 ;\n    vector\u0026lt;long\u0026gt; s1,s2;\n    long count1\u003d0,count2\u003d0;\n\n    v1.insert(v1.begin(),str+x-1,str+x-1+len) ;\n    v2.insert(v2.begin(),str+y-1,str+y-1+len) ;\n\n    sort(v1.begin(),v1.end());test1\u003dv1[0];\n    sort(v2.begin(),v2.end());test2\u003dv2[0];\n\n    for(long i\u003d0;i\u0026lt;len;i++){\n        if(v1[i]\u003d\u003dtest1) count1++ ;\n        else{\n            test1\u003dv1[i];\n            s1.push_back(count1) ;\n            count1\u003d1 ;\n        }\n        if(v2[i]\u003d\u003dtest2) count2++ ;\n        else{\n            test2\u003dv2[i];\n            s2.push_back(count2) ;\n            count2\u003d1 ;\n        }\n   }\n   s1.push_back(count1);\n   s2.push_back(count2);\n   sort(s1.begin(),s1.end()) ;\n   sort(s2.begin(),s2.end()) ;\n\n   if(s1\u003d\u003ds2) cout\u0026lt;\u0026lt; \u0026quot;YES\u0026quot; \u0026lt;\u0026lt;endl ;\n   else cout\u0026lt;\u0026lt; \u0026quot;NO\u0026quot; \u0026lt;\u0026lt;endl ;\n\n}\nreturn 0;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e}\u003c/p\u003e\u003cp\u003e\u0026quot;\u0026quot;\u0026quot;Submission number \u003d38545287\u0026quot;\u0026quot;\u0026quot;\u003c/p\u003e\u003cp\u003e\u0026quot;\u0026quot;\u0026quot;INPUT:\u0026quot;\u0026quot;\u0026quot; 10 30 accbaaccac 6 8 3 2 9 1 6 8 3 10 5 1 6 2 2 1 4 7 3 10 1 6 9 1 7 7 3 7 3 2 8 4 1 4 9 1 7 6 4 6 8 2 10 2 1 1 3 5 5 10 1 7 10 1 4 1 2 8 5 3 9 8 1 8 6 2 6 9 2 10 3 1 3 9 1 5 5 5 1 5 6 4 2 6 10 7 1 9 8 2\u003c/p\u003e\u003cp\u003e\u0026quot;\u0026quot;\u0026quot;MY SOLUTION :\u0026quot;\u0026quot;\u0026quot; YES YES YES YES NO YES YES YES YES NO YES YES NO YES YES YES YES YES YES YES YES YES YES YES YES YES NO YES YES YES\u003c/p\u003e\u003cp\u003e\u0026quot;\u0026quot;\u0026quot;JURY\u0027s VERDICT\u0026quot;\u0026quot;\u0026quot; NO YES NO YES NO NO YES YES YES NO YES YES NO YES YES NO YES YES YES NO YES YES YES YES YES YES NO NO YES YES\u003c/p\u003e\u003c/div\u003e","tags":["#wrongverdict","#where wrong","#angry","#help"]}}