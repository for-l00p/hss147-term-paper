{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":true,"creationTimeSeconds":1416817928,"rating":15,"authorHandle":"Conqueror","modificationTimeSeconds":1435596765,"id":14848,"title":"\u003cp\u003eРазбор задач Четвертой командной олимпиады\u003c/p\u003e","locale":"ru","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e\u003cstrong\u003e\u003cem\u003eДоброго времени суток!\u003c/em\u003e\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eПредлагаю обсудить задачи прошедшей олимпиады. По ходу буду добавлять разборы.\u003c/p\u003e\u003cp\u003e\u003cem\u003e\u003cstrong\u003eРазбор задач.\u003c/strong\u003e\u003c/em\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eЗадача A.\u003c/strong\u003e\u003c/p\u003e\u003cp\u003e\u003cem\u003eРазбор от \u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/Alex_2oo8\" title\u003d\"International Grandmaster Alex_2oo8\"\u003eAlex_2oo8\u003c/a\u003e.\u003c/em\u003e\u003c/p\u003e\u003cp\u003eВсегда существует оптимальное решение следующего вида — разобьем всю последовательность на отрезочки и сначала заберем все числа из первого отрезочка (внутри отрезочка берем числа в обратном порядке), потом из второго отрезочка и так далее. К примеру, если мы разбили последовательность на отрезки вот так: \u003cspan class\u003d\"tex-span\"\u003e[\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e3\u003c/sub\u003e][\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e4\u003c/sub\u003e \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e5\u003c/sub\u003e][\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e6\u003c/sub\u003e \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e7\u003c/sub\u003e \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e8\u003c/sub\u003e \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e9\u003c/sub\u003e]\u003c/span\u003e, то забирать числа будем в порядке \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e3\u003c/sub\u003e, \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e, \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e, \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e5\u003c/sub\u003e, \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e4\u003c/sub\u003e, \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e9\u003c/sub\u003e, \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e8\u003c/sub\u003e, \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e7\u003c/sub\u003e, \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e6\u003c/sub\u003e\u003c/span\u003e. Доказывать это сейчас не буду.\u003c/p\u003e\u003cp\u003eДальше получается довольно простое ДП: \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e(\u003ci\u003ek\u003c/i\u003e) - \u003c/span\u003e -  максимальная сумма, которую можно получить убрав префикс длины \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e. Переход будет такой:\u003c/p\u003e \u003cul\u003e   \u003cli\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e(\u003ci\u003ek\u003c/i\u003e) \u003d \u003ci\u003ef\u003c/i\u003e(\u003ci\u003ek\u003c/i\u003e - 1) + \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ek\u003c/i\u003e + 1\u003c/sub\u003e\u003c/span\u003e, если последний отрезочек будет длины \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e;\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003e\u003cimg alt\u003d\" \" src\u003d\"/predownloaded/ab/67/ab67d16f7406e5fc35932beee0796719e7282e49.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, если последний отрезочек — \u003cspan class\u003d\"tex-span\"\u003e[\u003ci\u003ej\u003c/i\u003e, \u003ci\u003ek\u003c/i\u003e]\u003c/span\u003e.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eЗамечаем, что второй переход можно записать вот так:\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e\u003cp\u003e\u003cimg alt\u003d\" \" src\u003d\"/predownloaded/51/73/517367beaa75c8725d9291eb35fa3ad389ac9e19.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, где \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eS\u003c/i\u003e\u003c/span\u003e — префиксные суммы и получаем константный переход.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eЗадача C.\u003c/strong\u003e\u003c/p\u003e\u003cp\u003e\u003cem\u003eРешение от \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/EXM_KG\" title\u003d\"Expert EXM_KG\"\u003eEXM_KG\u003c/a\u003e.\u003c/em\u003e\u003c/p\u003e\u003cp\u003eПосле долгих размышлений я увидел закономерность. Итог:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eint s[][5] \u003d {\n    {1, 2, 3, 4, 5},\n    {4, 5, 1, 2, 3},\n    {2, 3, 4, 5, 1},\n    {5, 1, 2, 3, 4},\n    {3, 4, 5, 1, 2},\n};\nint main() {\n    freopen(NAME\u0026quot;.in\u0026quot;, \u0026quot;r\u0026quot;, stdin);\n    freopen(NAME\u0026quot;.out\u0026quot;, \u0026quot;w\u0026quot;, stdout);\n\n    int n, i, j, m, a[111][111];\n\n    scanf(\u0026quot;%d%d\u0026quot;, \u0026amp;n, \u0026amp;m);\n    for(i \u003d 0; i \u0026lt; n; i ++)\n        for(j \u003d 0; j \u0026lt; m; j ++)\n            a[i][j] \u003d s[i % 5][j % 5];\n\n    for(i \u003d 0; i \u0026lt; n; i ++){\n        for(j \u003d 0; j \u0026lt; m; j ++)\n            printf(\u0026quot;%d \u0026quot;, a[i][j]);\n        printf(\u0026quot;\\n\u0026quot;);\n    }\n\n    return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cstrong\u003eЗадача D.\u003c/strong\u003e\u003c/p\u003e\u003cp\u003e\u003cem\u003eРазбор от \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/heavenly_phoenix\" title\u003d\"Expert heavenly_phoenix\"\u003eheavenly_phoenix\u003c/a\u003e.\u003c/em\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://ideone.com/GaCAIx\"\u003eКод\u003c/a\u003e.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eЗадача E.\u003c/strong\u003e\u003c/p\u003e\u003cp\u003e\u003cem\u003eРазбор от \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/SEFI\" title\u003d\"Expert SEFI\"\u003eSEFI\u003c/a\u003e.\u003c/em\u003e\u003c/p\u003e\u003cp\u003eПростая динамика, не требует объяснения.\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eint main(){\n    cnt [0] \u003d 1;\n    for (i \u003d  1; n \u0026gt;\u003d i ; i++){\n        cnt[i] +\u003d cnt[i - 1];cnt[i]%\u003dmd;\n        for (j \u003d  i - 1; j\u0026gt;\u003d1 ; j--){if(a[j] \u0026gt; a[j + 1])break;cnt[i] +\u003d cnt[j - 1];cnt[i]%\u003dmd;}\n        for (j \u003d  i - 1; j\u0026gt;\u003d1 ; j--){if(a[j] \u0026lt; a[j + 1])break;cnt[i] +\u003d cnt[j - 1];cnt[i]%\u003dmd;}\n        long long inter \u003d 0;\n        for (j \u003d  i - 1; j\u0026gt;\u003d1 ; j--){\n            if(a[j] !\u003d a[j + 1])break;\n            inter +\u003d cnt[j - 1];\n        }\n        cnt [i] -\u003d inter;\n        cnt [i] \u003d (cnt[i] + md) % md;\n    }\n    cout \u0026lt;\u0026lt; cnt[ n ] \u0026lt;\u0026lt; endl;\n \n    return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cstrong\u003eЗадача G.\u003c/strong\u003e\u003c/p\u003e\u003cp\u003e\u003cem\u003eРазбор от \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/EXM_KG\" title\u003d\"Expert EXM_KG\"\u003eEXM_KG\u003c/a\u003e.\u003c/em\u003e\u003c/p\u003e\u003cp\u003eПростой жадный алгоритм. На каждом этапе будем уравнивать предыдущий уровень с текущим пока это возможно. Если в конце остались лишние кубики (обозначим их как \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eOST\u003c/i\u003e\u003c/span\u003e), то ответом будет \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eтекущая высота стены + OST / N\u003c/i\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eДля лучшего понимания выкладываю \u003ca href\u003d\"http://ideone.com/nq7WOm\"\u003eкод\u003c/a\u003e.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eЗадача I.\u003c/strong\u003e\u003c/p\u003e\u003cp\u003e\u003cem\u003eРазбор от \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/heavenly_phoenix\" title\u003d\"Expert heavenly_phoenix\"\u003eheavenly_phoenix\u003c/a\u003e.\u003c/em\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://ideone.com/9lsMJ5\"\u003eКод\u003c/a\u003e.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eЗадача L.\u003c/strong\u003e\u003c/p\u003e\u003cp\u003e\u003cem\u003eРазбор от \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/pva701\" title\u003d\"Candidate Master pva701\"\u003epva701\u003c/a\u003e.\u003c/em\u003e\u003c/p\u003e \u003cul\u003e   \u003cli\u003e\u003cp\u003eПервый факт — рассмотрим два возможных отрезка (произвольных длин), кандидатов на ответ, для которых выполнено условие, они либо не пересекаются, либо один вкладывается в другой, потому что если они как-то пересекаются, то у этих отрезков концевые элементы равны — поэтому можем просто взять один отрезок большей длины, таким образом увеличив длину.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eТ.е можем разбить весь массив на непересекающиеся подряд идущие отрезки. если запрос был просто на массиве — нам нужно было выбрать максимальный из этих отрезков.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eПосчитаем для каждого \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e, такой максимальный индекс \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef[i] (f[i] \u0026gt;\u003d i)\u003c/i\u003e\u003c/span\u003e, что отрезок \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003e[i..f[i]]\u003c/i\u003e\u003c/span\u003e удовлетворяет условию.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eТеперь, когда приходит запрос, начнем в \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/span\u003e, перейдем в \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef[l] + 1\u003c/i\u003e\u003c/span\u003e, затем в \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef[f[l] + 1] + 1\u003c/i\u003e\u003c/span\u003e, и т.д, т.е будем прыгать на элемент после правой границы отрезка \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003e[i..f[i]]\u003c/i\u003e\u003c/span\u003e, сохраняя максимум среди длин всех отрезков, по которым прошли. рано или поздно наступит следующее: либо мы просто придем в \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003er\u003c/i\u003e\u003c/span\u003e (вернее, на следующий после \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003er\u003c/i\u003e\u003c/span\u003e) — тогда все, максимум найден, либо следующий прыжок из \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e будет за правую границу, т.е \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef[i] \u0026gt; r\u003c/i\u003e\u003c/span\u003e, отметим, что в этом случае \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea[i]\u003c/i\u003e\u003c/span\u003e будет больше либо равен всех элементов на суффиксе \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003e[i..r]\u003c/i\u003e\u003c/span\u003e. тогда начнем ту же самую процедуру с \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003er\u003c/i\u003e\u003c/span\u003e (мы так же заранее для всех \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e посчитали массив \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eg[j]\u003c/i\u003e\u003c/span\u003e — минимальный индекс, такой что \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003e[g[j]..j]\u003c/i\u003e\u003c/span\u003e удовлетворяет условию). рано или поздно, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eg[j]\u003c/i\u003e\u003c/span\u003e станет меньше, чем \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/span\u003e. тогда \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea[j] \u003d a[i]\u003c/i\u003e\u003c/span\u003e, т.к. если бы они были неравны, то мы могли перейти из \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e не за \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/span\u003e (\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eg[j]\u003c/i\u003e\u003c/span\u003e был бы больше \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/span\u003e), т.к. \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea[i]\u003c/i\u003e\u003c/span\u003e был бы больше \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea[j]\u003c/i\u003e\u003c/span\u003e (как мы ранее отметили). Т.е. остается один отрезок, который нельзя никак уже разбить \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003e[i..j]\u003c/i\u003e\u003c/span\u003e, учитываем его в нашем ответе.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eПоследний шаг — все вот эти переходы (\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef[i]\u003c/i\u003e\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eg[j]\u003c/i\u003e\u003c/span\u003e) предподсчитаем в массив двоичных подъемов, и будем делать наши прыжки за \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003elog N\u003c/i\u003e\u003c/span\u003e.\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e\u003cp\u003eАсимптотика — \u003cimg alt\u003d\" \" src\u003d\"/predownloaded/49/13/4913d6c4a6c7d093c3b85f3b4b9ade71fb9caa4d.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eЗадача J.\u003c/strong\u003e\u003c/p\u003e\u003cp\u003e\u003cem\u003eРазбор от \u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/netman\" title\u003d\"Grandmaster netman\"\u003enetman\u003c/a\u003e.\u003c/em\u003e\u003c/p\u003e\u003cp\u003eСначала очень просто можно узнать, какое максимальное число вхождений у нас может быть. Просто возьмем и посчитаем, какое максимальное кол-во вхождений какой-нибудь буквы мы имеем. Назовем это кол-во вхождений \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eneed\u003c/i\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eДавайте научимся проверять какую-нибудь длину \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003elen\u003c/i\u003e\u003c/span\u003e. Проверять длину \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003elen\u003c/i\u003e\u003c/span\u003e — значит узнать, есть ли у нас такая подстрока длины \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003elen\u003c/i\u003e\u003c/span\u003e, что она имеет \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eneed\u003c/i\u003e\u003c/span\u003e непересекающихся вхождений.\u003c/p\u003e\u003cp\u003eЭто можно делать за используя полиноминальные хэши. Посчитаем хэш всех подстрок длины \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003elen\u003c/i\u003e\u003c/span\u003e. Выпишем такие пары \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ehash\u003c/i\u003e, \u003ci\u003eposition\u003c/i\u003e)\u003c/span\u003e — хэш подстроки и позиция подстроки. Теперь давайте для каждого уникального \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ehash\u003c/i\u003e\u003c/span\u003e выпишем все его \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eposition\u003c/i\u003e\u003c/span\u003e в возрастающем порядке. Теперь, зная все \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eposition\u003c/i\u003e\u003c/span\u003e для фиксированного \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ehash\u003c/i\u003e\u003c/span\u003e не составляет труда посчитать максимальную подпоследовательность из этих позиций, что разница между соседними элементами подпоследовательности больше либо равна \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003elen\u003c/i\u003e\u003c/span\u003e (это условие нужно, потому что мы ищем непересекающиеся вхождения). Это можно легко подсчитать используя ДП:\u003c/p\u003e\u003cp\u003eПусть \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/span\u003e — это подпоследовательность, в которой нужно найти максимальную подпоследовательность, чтобы соседние элементы различались не меньше чем на \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003elen\u003c/i\u003e\u003c/span\u003e. Напоминаю, что все числа в этой последовательности в возрастающем порядке.\u003c/p\u003e\u003cp\u003eТеперь можно просто считать следующее ДП:\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e — максимальная длина подпоследовательности из префикса \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/span\u003e длины \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e. Понятно, что \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e0\u003c/sub\u003e \u003d 0\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eПодсчет данного ДП ведется так:\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e \u003d \u003ci\u003emax\u003c/i\u003e(\u003ci\u003ef\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e, \u003ci\u003ef\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e0\u003c/sub\u003e) + 1\u003c/span\u003e, где \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e — такая максимальная позиция, что \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e - \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e ≥ \u003ci\u003elen\u003c/i\u003e\u003c/span\u003e. Если такой позиции нет, то \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej \u003d 0\u003c/i\u003e\u003c/span\u003e. Найти такое \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e можно бинарным поиском.\u003c/p\u003e\u003cp\u003eКак говорилось выше: давайте для каждого уникального \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ehash\u003c/i\u003e\u003c/span\u003e выпишем все его позиции и запустим на них вышеописанное ДП. И возьмем максимум среди всех результатов запуска ДП. Это и будет максимальное кол-во непересекающихся вхождений строки, имеющей длину \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003elen\u003c/i\u003e\u003c/span\u003e. Теперь легко проверить подходит длина \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003elen\u003c/i\u003e\u003c/span\u003e или нет.\u003c/p\u003e\u003cp\u003eТакже надо заметить, что если подходит длина \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003elen\u003c/i\u003e\u003c/span\u003e, то и длина \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003elen — 1\u003c/i\u003e\u003c/span\u003e тоже подходит, значит можно использовать бинарный поиск, чтобы найти максимальное \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003elen\u003c/i\u003e\u003c/span\u003e, которое подходит.\u003c/p\u003e\u003cp\u003eИтоговая асимптотика решения: \u003cimg alt\u003d\" \" src\u003d\"/predownloaded/d3/03/d30381002c3e53c1cbcd138d4e79f135eff1ee51.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003eДля лучшего понимания выкладываю \u003ca href\u003d\"http://pastie.org/private/94dad4cpjxcthwaulrqpg\"\u003eкод\u003c/a\u003e.\u003c/p\u003e\u003cp\u003e\u003cem\u003eРешение от \u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/izban\" title\u003d\"International Grandmaster izban\"\u003eizban\u003c/a\u003e.\u003c/em\u003e\u003c/p\u003e\u003cp\u003eЕсть решение проще.\u003c/p\u003e\u003cp\u003eСначала найдем \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eneed\u003c/i\u003e\u003c/span\u003e. Теперь фиксируем первую букву ответа (26 вариантов), и перебираем длину ответа, добавляя новый символ — суммарно будет сделано не больше \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e операций для каждой буквы. Итого, решение за \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003e26n\u003c/i\u003e\u003c/span\u003e. \u003ca href\u003d\"http://pastebin.com/2QU1hgLa\"\u003eКод\u003c/a\u003e.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eP.S.\u003c/strong\u003e Осталось немного, отписывайтесь.\u003c/p\u003e\u003c/div\u003e","tags":["разбор","neerc","school","обсуждение","задачи","интернет олимпиады"]}}