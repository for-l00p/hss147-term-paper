{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1501948164,"rating":0,"authorHandle":"md.ashif313","modificationTimeSeconds":1501948164,"id":53699,"title":"\u003cp\u003eNeed help for UVa-10938\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eRecently I\u0027m trying to solve \u003ca href\u003d\"https://uva.onlinejudge.org/index.php?option\u003donlinejudge\u0026amp;page\u003dshow_problem\u0026amp;problem\u003d1879\"\u003eUVa-10938\u003c/a\u003e. My solution has given correct answer for all available cases and also for the cases given in \u003ca href\u003d\"https://www.udebug.com/UVa/10938\"\u003euDebug\u003c/a\u003e cases. But I still getting wrong answer :( , I don\u0027t understand why.\u003c/p\u003e\u003cp\u003eMy approach is finding the LCA(Lowest Common Ancestor) for the given pair in the query and find the path between two node. If the path has odd number of edges than I find a(middle node in the path) and b(next of the middle node in the path), And there is an infinite lope between this two nodes.\u003c/p\u003e\u003cp\u003eOn the other hand, if the path has even number of edges, than I find a(middle node in the path), And both flea meet in a.\u003c/p\u003e\u003cp\u003ePlease help me to debug by providing some test cases where my solution will give wrong answer. Here\u0027s the code.\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eusing namespace std;\n\n#include\u0026lt;iostream\u0026gt;\n#include\u0026lt;cstring\u0026gt;\n#include\u0026lt;cstdio\u0026gt;\n#include\u0026lt;vector\u0026gt;\n#include\u0026lt;cmath\u0026gt;\n\n\n#define ll long long\n#define MAXN 5001\n#define LOGN 14\n\n\nbool visit[MAXN];\nll par[MAXN][LOGN], level[MAXN];\nvector\u0026lt;ll\u0026gt; v[MAXN];\n\n\nvoid DFS(ll src, ll lev)\n{\n    visit[src] \u003d true;\n    level[src] \u003d lev;\n\n    for(ll i\u003d0; i\u0026lt;v[src].size(); i++){\n        ll temp \u003d v[src][i];\n\n        if(!visit[temp]){\n            par[temp][0] \u003d src;\n            DFS(temp, lev+1);\n        }\n    }\n}\n\n\nvoid PreProcess(ll n)\n{\n    for(ll i\u003d1; i\u0026lt;LOGN; i++){\n        for(ll j\u003d1; j\u0026lt;\u003dn; j++){\n            if(par[j][i-1]!\u003d-1) par[j][i] \u003d par[par[j][i-1]][i-1];\n        }\n    }\n}\n\nll LCA(ll a,ll b)\n{\n    ll log \u003d 0, temp;\n\n    if(level[a]\u0026lt;level[b]){\n        temp \u003d a;\n        a \u003d b;\n        b \u003d temp;\n    }\n\n    while(1){\n        temp \u003d log+1;\n        if((1\u0026lt;\u0026lt;temp)\u0026gt;level[a]) break;\n        log++;\n    }\n\n    for(ll i\u003dlog; i\u0026gt;\u003d0; i--){\n        if(par[a][i]!\u003d-1 \u0026amp;\u0026amp; level[par[a][i]]\u0026gt;\u003dlevel[b]) a \u003d par[a][i];\n    }\n\n    if(a\u003d\u003db) return a;\n\n    for(ll i\u003dlog; i\u0026gt;\u003d0; i--){\n        if(par[a][i]!\u003d-1 \u0026amp;\u0026amp; par[a][i]!\u003dpar[b][i]) a \u003d par[a][i], b \u003d par[b][i];\n    }\n\n    return par[a][0];\n}\n\nvoid Func(ll a, ll b)\n{\n    ll mid \u003d LCA(a,b), k, up, log \u003d 0;\n    up \u003d level[a] + level[b] - 2*level[mid];\n    k \u003d level[a] - up/2;\n    ///cout\u0026lt;\u0026lt;mid\u0026lt;\u0026lt;\u0026quot; \u0026quot;\u0026lt;\u0026lt;k\u0026lt;\u0026lt;\u0026quot;\\n\u0026quot;;\n    if(level[mid]\u0026gt;\u003dk){\n        a \u003d b;\n        k \u003d level[a] - up/2;\n    }\n\n    while(1){\n        ll temp \u003d log + 1;\n        if((1\u0026lt;\u0026lt;temp)\u0026gt;level[a]) break;\n        log++;\n    }\n\n    for(ll i\u003dlog; i\u0026gt;\u003d0; i--){\n        if(par[a][i]!\u003d-1 \u0026amp;\u0026amp; level[par[a][i]]\u0026gt;\u003dk) a \u003d par[a][i];\n    }\n\n    if(up%2){\n        b \u003d par[a][0];\n        cout\u0026lt;\u0026lt;\u0026quot;The fleas jump forever between \u0026quot;\u0026lt;\u0026lt;min(a,b)\u0026lt;\u0026lt;\u0026quot; and \u0026quot;\u0026lt;\u0026lt;max(a,b)\u0026lt;\u0026lt;\u0026quot;.\\n\u0026quot;;\n    }\n    else cout\u0026lt;\u0026lt;\u0026quot;The fleas meet at \u0026quot;\u0026lt;\u0026lt;a\u0026lt;\u0026lt;\u0026quot;.\\n\u0026quot;;\n}\n\nint main(void)\n{\n    ios::sync_with_stdio(false);\n    cin.tie(NULL);\n    ///freopen(\u0026quot;test.txt\u0026quot;,\u0026quot;w\u0026quot;,stdout);\n    ll n;\n\n    while(cin\u0026gt;\u0026gt;n \u0026amp;\u0026amp; n){\n        ll a, b, q;\n\n        for(ll i\u003d1; i\u0026lt;n; i++){\n            cin\u0026gt;\u0026gt;a\u0026gt;\u0026gt;b;\n\n            v[a].push_back(b);\n            v[b].push_back(a);\n        }\n\n        memset(visit, false, sizeof(visit));\n        par[1][0] \u003d -1;\n        DFS(1,0);\n        PreProcess(n);\n\n        cin\u0026gt;\u0026gt;q;\n\n        for(ll i\u003d0; i\u0026lt;q; i++){\n            cin\u0026gt;\u0026gt;a\u0026gt;\u0026gt;b;\n            Func(a,b);\n        }\n\n        for(ll i\u003d1; i\u0026lt;\u003dn; i++) v[i].clear();\n    }\n\nreturn 0;\n}\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":[]}}