{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1456568296,"rating":1,"authorHandle":"zscoder","modificationTimeSeconds":1456592419,"id":43398,"title":"\u003cp\u003eCodeforces Training 3 Editorial\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003ch3\u003eA. Simple Sets\u003c/h3\u003e\u003cp\u003eThe key to solving this problem is the following fact : If \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e, \u003ci\u003eb\u003c/i\u003e, \u003ci\u003ec\u003c/i\u003e\u003c/span\u003e are positive integers greater than \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e, then \u003cspan class\u003d\"tex-span\"\u003e{\u003ci\u003ea\u003c/i\u003e, \u003ci\u003eb\u003c/i\u003e, \u003ci\u003ec\u003c/i\u003e}\u003c/span\u003e is not a simple set. Why? By Pigeonhole Principle, two of the numbers \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e, \u003ci\u003eb\u003c/i\u003e, \u003ci\u003ec\u003c/i\u003e\u003c/span\u003e have the same parity, so their sum must be even. Since \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e, \u003ci\u003eb\u003c/i\u003e, \u003ci\u003ec\u003c/i\u003e ≥ 2\u003c/span\u003e, the sum is composite.\u003c/p\u003e\u003cp\u003eHowever, in this problem \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e could be \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e. First, we sort the numbers, so the set will have some number of \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003es in the front. Note that if we choose a subset that does not contain \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e, its size is at most \u003cspan class\u003d\"tex-span\"\u003e2\u003c/span\u003e, thus we can check for each pair of numbers that are not \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e whether there exists a pair of them with a sum that is prime, and if it exists, then we can choose a subset of size \u003cspan class\u003d\"tex-span\"\u003e2\u003c/span\u003e, and otherwise we can only choose a subset of size \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eFinally, we have to consider subsets which contain \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e. The set will be in the form \u003cspan class\u003d\"tex-span\"\u003e{1, 1, ..., 1, \u003ci\u003ea\u003c/i\u003e, \u003ci\u003eb\u003c/i\u003e, ...}\u003c/span\u003e. How many numbers that aren\u0027t \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e can be in the set? If there are two non-\u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e numbers in the set, then one of the numbers \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e + 1, \u003ci\u003eb\u003c/i\u003e + 1, \u003ci\u003ea\u003c/i\u003e + \u003ci\u003eb\u003c/i\u003e\u003c/span\u003e must be prime, since either \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e, \u003ci\u003eb\u003c/i\u003e\u003c/span\u003e are both even, or at least one of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/span\u003e or \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/span\u003e is odd. So, we conclude that there\u0027re at most one non-\u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e integers in the set. Thus, we iterate through all non-\u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e elements \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e and check whether \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e + 1\u003c/span\u003e is a prime. If we found such \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e, then there exists a simple subset containing all \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003es and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e, and otherwise the maximal set containing 1s is the set containing all 1s.\u003c/p\u003e\u003ch3\u003eB. Cauchy-Schwarz Inequality\u003c/h3\u003e\u003cp\u003eOf course, this problem has \u003cstrong\u003enothing\u003c/strong\u003e to do with Cauchy-Schwarz Inequality, though being familiar with it might help a bit. Note that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eL\u003c/i\u003e - \u003ci\u003eR\u003c/i\u003e \u003d (\u003ci\u003ea\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e + \u003ci\u003eb\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e)(\u003ci\u003ec\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e + \u003ci\u003ed\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e) - (\u003ci\u003eac\u003c/i\u003e + \u003ci\u003ebd\u003c/i\u003e)\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e \u003d \u003ci\u003ea\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e\u003ci\u003ed\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e + \u003ci\u003eb\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e\u003ci\u003ec\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e - 2\u003ci\u003eabcd\u003c/i\u003e \u003d (\u003ci\u003ead\u003c/i\u003e - \u003ci\u003ebc\u003c/i\u003e)\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e\u003c/span\u003e. So, it is now clear that if \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e is not a perfect square, then there\u0027re clearly no solutions. So, from now on we assume that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e is a perfect square and let \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/f5/ec/f5ecfbb1c5a39cc02b65220e3e7190d78c71f20e.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e.\u003c/p\u003e\u003cp\u003eSo, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eL\u003c/i\u003e - \u003ci\u003eR\u003c/i\u003e \u003d \u003ci\u003ek\u003c/i\u003e\u003c/span\u003e becomes \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ead\u003c/i\u003e - \u003ci\u003ebc\u003c/i\u003e \u003d \u003ci\u003ex\u003c/i\u003e\u003c/span\u003e or \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ead\u003c/i\u003e - \u003ci\u003ebc\u003c/i\u003e \u003d  - \u003ci\u003ex\u003c/i\u003e\u003c/span\u003e. Note that since \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e ≥ 1\u003c/span\u003e, we can just find the number of solutions to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ead\u003c/i\u003e - \u003ci\u003ebc\u003c/i\u003e \u003d \u003ci\u003ex\u003c/i\u003e\u003c/span\u003e and multiply the answer by \u003cspan class\u003d\"tex-span\"\u003e2\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eFinding the number of solutions of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ead\u003c/i\u003e - \u003ci\u003ebc\u003c/i\u003e \u003d \u003ci\u003ex\u003c/i\u003e\u003c/span\u003e can be easily done with brute force. Indeed, we just need to consider solutions to \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ead\u003c/i\u003e, \u003ci\u003ebc\u003c/i\u003e) \u003d (\u003ci\u003ex\u003c/i\u003e + 1, 1), (\u003ci\u003ex\u003c/i\u003e + 2, 2), ...\u003c/span\u003e. When should we end? The condition \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eabcd\u003c/i\u003e ≤ \u003ci\u003ek\u003c/i\u003e\u003c/span\u003e comes to the rescue. We will stop when \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e(\u003ci\u003ex\u003c/i\u003e + \u003ci\u003ei\u003c/i\u003e) \u0026gt; \u003ci\u003ek\u003c/i\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eNow, we just need to find the number of solutions to \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ead\u003c/i\u003e, \u003ci\u003ebc\u003c/i\u003e) \u003d (\u003ci\u003ex\u003c/i\u003e + \u003ci\u003ei\u003c/i\u003e, \u003ci\u003ei\u003c/i\u003e)\u003c/span\u003e. Let \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ed\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e)\u003c/span\u003e be the number of divisors of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e. \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ed\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e)\u003c/span\u003e can be calculated quickly by considering the prime factorization of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e. The number of solutions to \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ead\u003c/i\u003e, \u003ci\u003ebc\u003c/i\u003e) \u003d (\u003ci\u003ex\u003c/i\u003e + \u003ci\u003ei\u003c/i\u003e, \u003ci\u003ei\u003c/i\u003e)\u003c/span\u003e is just \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ed\u003c/i\u003e(\u003ci\u003ex\u003c/i\u003e + \u003ci\u003ei\u003c/i\u003e)\u003ci\u003ed\u003c/i\u003e(\u003ci\u003ei\u003c/i\u003e)\u003c/span\u003e, so we just need to sum this value up for each possible \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e. In the end, we multiply the answer by \u003cspan class\u003d\"tex-span\"\u003e2\u003c/span\u003e.\u003c/p\u003e\u003ch3\u003eC. Linear Function\u003c/h3\u003e\u003cp\u003eThis problem looks simple, but the constraints are large. In fact, we can find that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/sup\u003e(\u003ci\u003ex\u003c/i\u003e) \u003d \u003ci\u003eA\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/sup\u003e\u003ci\u003ex\u003c/i\u003e + \u003ci\u003eB\u003c/i\u003e(\u003ci\u003eA\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003en\u003c/i\u003e - 1\u003c/sup\u003e + \u003ci\u003eA\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003en\u003c/i\u003e - 2\u003c/sup\u003e + ... + 1)\u003c/span\u003e. This can be easily proved formally with induction, but one can find this formula by experimenting small values of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eSo, it remains to calculate the value. The key is to note that \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/ca/a4/caa494cb838f22df37de76f21470fb3393798d99.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. However, this only holds when \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e \u0026gt; 1\u003c/span\u003e. The case \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e \u003d 1\u003c/span\u003e has to be dealt with separately. So, for now, we consider \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e \u0026gt; 1\u003c/span\u003e. Then, \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/40/4a/404a04ac3cee709250d3b7827817c6ebdb12147f.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. Since \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e ≤ 10\u003csup class\u003d\"upper-index\"\u003e9\u003c/sup\u003e\u003c/span\u003e, and the modulus is \u003cspan class\u003d\"tex-span\"\u003e10\u003csup class\u003d\"upper-index\"\u003e9\u003c/sup\u003e + 7\u003c/span\u003e, we have \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/4c/b3/4cb3083be8c62dada4391142260025d013c29caf.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e congruent to \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003eA\u003c/i\u003e - 1)\u003csup class\u003d\"upper-index\"\u003e10\u003csup class\u003d\"upper-index\"\u003e9\u003c/sup\u003e + 5\u003c/sup\u003e\u003c/span\u003e modulo \u003cspan class\u003d\"tex-span\"\u003e10\u003csup class\u003d\"upper-index\"\u003e9\u003c/sup\u003e + 7\u003c/span\u003e. The remaining terms can be calculated easily by exponentiation by squaring. Note that care has to be taken to prevent possible overflows.\u003c/p\u003e\u003cp\u003eFinally, suppose \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e \u003d 1\u003c/span\u003e, then the formula becomes \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/sup\u003e(\u003ci\u003ex\u003c/i\u003e) \u003d \u003ci\u003ex\u003c/i\u003e + \u003ci\u003eBn\u003c/i\u003e\u003c/span\u003e. Again, this can be calculated directly (be careful about overflows!).\u003c/p\u003e\u003ch3\u003eD. Multiplying Numbers\u003c/h3\u003e\u003cp\u003eFirstly, note that we only need to solve the problem for independent prime powers, and there\u0027re only \u003cspan class\u003d\"tex-span\"\u003e25\u003c/span\u003e primes \u003cspan class\u003d\"tex-span\"\u003e ≤ 100\u003c/span\u003e. From now, we consider the problem for a single prime power.\u003c/p\u003e\u003cp\u003eInitially, the prime powers of all numbers is \u003cspan class\u003d\"tex-span\"\u003e0\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eOperation \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e is equivalent to increasing the powers of the prime by \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e in the range \u003cspan class\u003d\"tex-span\"\u003e[\u003ci\u003el\u003c/i\u003e, \u003ci\u003er\u003c/i\u003e]\u003c/span\u003e. \u003c/p\u003e\u003cp\u003eOperation \u003cspan class\u003d\"tex-span\"\u003e2\u003c/span\u003e is equivalent to finding the gcd of the powers of the prime in range \u003cspan class\u003d\"tex-span\"\u003e[\u003ci\u003el\u003c/i\u003e, \u003ci\u003er\u003c/i\u003e]\u003c/span\u003e. (If all the powers are \u003cspan class\u003d\"tex-span\"\u003e0\u003c/span\u003e, then consider their gcd as \u003cspan class\u003d\"tex-span\"\u003e0\u003c/span\u003e), then raising the prime \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003c/span\u003e to the resulting power, and taking the answer modulo \u003cspan class\u003d\"tex-span\"\u003e10\u003csup class\u003d\"upper-index\"\u003e9\u003c/sup\u003e + 7\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eSo, basically we reduced the problem to the following classic problem :\u003c/p\u003e\u003cp\u003eGiven array \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e, \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e, ..., \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e. You have two types of queries :\u003c/p\u003e \u003col\u003e   \u003cli\u003e\u003cp\u003eIncrease all numbers in the range \u003cspan class\u003d\"tex-span\"\u003e[\u003ci\u003el\u003c/i\u003e, \u003ci\u003er\u003c/i\u003e]\u003c/span\u003e by \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eFind the gcd of all numbers in the range \u003cspan class\u003d\"tex-span\"\u003e[\u003ci\u003el\u003c/i\u003e, \u003ci\u003er\u003c/i\u003e]\u003c/span\u003e.\u003c/p\u003e\u003c/li\u003e \u003c/ol\u003e\u003cp\u003eNote that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003egcd\u003c/i\u003e(\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/sub\u003e, \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003el\u003c/i\u003e + 1\u003c/sub\u003e, ..., \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003er\u003c/i\u003e\u003c/sub\u003e) \u003d \u003ci\u003egcd\u003c/i\u003e(\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/sub\u003e, \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003el\u003c/i\u003e + 1\u003c/sub\u003e - \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/sub\u003e, ..., \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003er\u003c/i\u003e\u003c/sub\u003e - \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003er\u003c/i\u003e - 1\u003c/sub\u003e)\u003c/span\u003e. So, the problem can be solved as follows :\u003c/p\u003e\u003cp\u003eConstruct two segment trees. The first stores the values \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e, \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e, ..., \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e, and answers queries of finding a single value \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e. The second stores the values \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e - \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e, \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e3\u003c/sub\u003e - \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e, ..., \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/sub\u003e - \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003en\u003c/i\u003e - 1\u003c/sub\u003e\u003c/span\u003e. For each update query, we only need to update two values, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/sub\u003e - \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003el\u003c/i\u003e - 1\u003c/sub\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003er\u003c/i\u003e + 1\u003c/sub\u003e - \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003er\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e (if they exist). For each gcd query, we just need to take the gcd of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003el\u003c/i\u003e + 1\u003c/sub\u003e - \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/sub\u003e, ..., \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003er\u003c/i\u003e\u003c/sub\u003e - \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003er\u003c/i\u003e - 1\u003c/sub\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eFinally, we construct such segment trees for each possible prime and we can effectively answer queries.\u003c/p\u003e\u003ch3\u003eE. Xor Sequence\u003c/h3\u003e\u003cp\u003eThis is actually a classic graph theory problem. Construct a graph with vertices \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e, \u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e, ..., \u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e and connect \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e iff \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e xor \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e has a multiple of \u003cspan class\u003d\"tex-span\"\u003e3\u003c/span\u003e number of \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003es in it\u0027s binary representation (using __builtin_popcountll(), for instance). Store this data in an adjancency matrix. Call this matrix \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eM\u003c/i\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eSuppose the first number in the sequence is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e and the last number in the sequence is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e (Note that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e \u003d \u003ci\u003eb\u003c/i\u003e\u003c/span\u003e might be possible), then the number of xor sequences is the number of paths from \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e with length \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e - 1\u003c/span\u003e. Then, we sum this value for all pairs of numbers in the sequence. Finding the number of paths between each pair of vertex in the graph with length exactly \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e - 1\u003c/span\u003e can be found by raising the adjancency matrix to the power of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e - 1\u003c/span\u003e. (This is a well-known fact about adjancency matrices) Finding \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eM\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ek\u003c/i\u003e - 1\u003c/sup\u003e\u003c/span\u003e can be easily done with matrix exponentiation and finally we just sum up all the entries of the matrices. \u003c/p\u003e\u003ch3\u003eF. Tridecimal System\u003c/h3\u003e\u003cp\u003eWe use dp + bitset to solve this problem. Let \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edp\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e][\u003ci\u003emask\u003c/i\u003e]\u003c/span\u003e be the number of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e-tuples of nonnegative integers that satisfies the condition and the remaining digits that can be used for the remaining numbers are stored in \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003emask\u003c/i\u003e\u003c/span\u003e. The answer we seek is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edp\u003c/i\u003e[\u003ci\u003ek\u003c/i\u003e][0]\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eSuppose we want to find \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edp\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e][\u003ci\u003emask\u003c/i\u003e]\u003c/span\u003e. Then, we iterate through all subsets of \u003cspan class\u003d\"tex-span\"\u003e8191\u003c/span\u003e xor \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003emask\u003c/i\u003e\u003c/span\u003e, i.e. the complement of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003emask\u003c/i\u003e\u003c/span\u003e, which is the set of used digits. Then, for each nonempty subset, if the number formed by the set of used digits (note that this is uniquely defined by the second condition that the digits have to be in decreasing order) satisfies condition \u003cspan class\u003d\"tex-span\"\u003e3\u003c/span\u003e, then we increase \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edp\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e][\u003ci\u003emask\u003c/i\u003e]\u003c/span\u003e by \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edp\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e - 1][\u003ci\u003emask\u003c/i\u003e|\u003ci\u003esubset\u003c/i\u003e]\u003c/span\u003e, where \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003esubset\u003c/i\u003e\u003c/span\u003e is the mask of the subset considered. Finally, output the value of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edp\u003c/i\u003e[\u003ci\u003ek\u003c/i\u003e][0]\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eTrivia : This is actually the name of the base-13 system, I didn\u0027t made it up.\u003c/p\u003e\u003c/div\u003e","tags":[]}}