{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1436494619,"rating":108,"authorHandle":"cgy4ever","modificationTimeSeconds":1436603811,"id":19151,"title":"\u003cp\u003eShort Editorial of SRM 662 Div1\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eDiv2-Easy: \u003ca href\u003d\"http://ideone.com/uzGzxa\"\u003ehttp://ideone.com/uzGzxa\u003c/a\u003e\u003c/p\u003e\u003cp\u003eDiv2-Medium: \u003ca href\u003d\"http://ideone.com/EXVZ7f\"\u003ehttp://ideone.com/EXVZ7f\u003c/a\u003e\u003c/p\u003e\u003cp\u003eDiv2-Hard: \u003ca href\u003d\"http://ideone.com/04H4H8\"\u003ehttp://ideone.com/04H4H8\u003c/a\u003e (This solution can solve n \u0026lt;\u003d 50 instead of 3)\u003c/p\u003e\u003cp\u003eDiv1-Easy: \u003ca href\u003d\"http://ideone.com/HMjObD\"\u003ehttp://ideone.com/HMjObD\u003c/a\u003e\u003c/p\u003e\u003cp\u003eSuppose the heights are sorted: h[0] \u0026lt;\u003d h[1] \u0026lt;\u003d h[2] ...\u003c/p\u003e\u003cp\u003eIn one hand, we know the answer can\u0027t be smaller than max{x[i+2] — x[i]}. We can proof this in the following way: If abs(x[i]-x[j]) \u0026gt;\u003d ans, we add an edge between i and j. We assume there is an i and ans \u0026lt; x[i+2]-x[i]. Then if the graph is connected, edges (i, i+1) and (i+1, i+2) will be bridege (since if x \u0026lt; i and y \u0026gt; i+2 then there is no edge between x and y.) It means this graph don\u0027t have a hamiltonian cycle, so we can\u0027t arrange these foxes around a round table.\u003c/p\u003e\u003cp\u003eIn another hand, we know that we have a solution that ans \u003d max{x[i+2]-x[i]}: x[0]-x[2]-x[4]-x[6]-...-n-...x[5]-x[3]-x[1]-x[0].\u003c/p\u003e\u003cp\u003eSo we know this solution is optimal.\u003c/p\u003e\u003cp\u003eDiv1-Medium: \u003ca href\u003d\"http://ideone.com/pQhKaG\"\u003ehttp://ideone.com/pQhKaG\u003c/a\u003e\u003c/p\u003e\u003cp\u003eWe can compute S in the following way: For each edge, let s1 be the number of nodes in one side, we know there are s1*(n-s1) paths use this edge. So S \u003d sum{s1 * (n-s1)}.\u003c/p\u003e\u003cp\u003eSo we can solve it by dp: let dp[i][j] \u003d minimal number of S such that we have a tree with i nodes and sum{s1 * (n-s1) among all edges it have} % m \u003d j. Each time we pick 2 rooted trees, merge them: root1 becomes a son of root2. We can compute the new sum{s1 * (n-s1)} in O(1). So our algorithm can run in O(n^2 m^2).\u003c/p\u003e\u003cp\u003eDiv1-Hard: \u003ca href\u003d\"http://ideone.com/b4v3nY\"\u003ehttp://ideone.com/b4v3nY\u003c/a\u003e (\u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/rng_58\" title\u003d\"International Grandmaster rng_58\"\u003erng_58\u003c/a\u003e\u0027s code)\u003c/p\u003e\u003cp\u003eThe given input is a mapping from {0,..,n-1} to itself, it is x\u003d\u0026gt;(0*x), we call it f. Suppose 0*0 \u003d 3, then what can we get? We know that 3*x \u003d (0*0)*x \u003d 0*(0*x) \u003d f(f(x)) \u003d f^2 x. So it means x\u003d\u0026gt;(3*x) is f^2. And if we know 0*3 \u003d 5, then we should get x\u003d\u0026gt;(5*x) is f^3..\u003c/p\u003e\u003cp\u003eWe construct this graph: for each i, we add directed edge from i to firstRow[i]. Then there must be some connected component, each one is a cycle with some tree towards the cycle. Suppose we have path: 0-\u0026gt;1-\u0026gt;2-\u0026gt;3-\u0026gt;4-\u0026gt;2. (it means the component of 0 have a cycle length \u003d 3, and the distance from 0 to cycle is 2). Then we have: f^6 \u003d f^3. Then we know in the following cases there is no solution.\u003c/p\u003e \u003col\u003e   \u003cli\u003eThere is a cycle, its length is not a divisor of 3: For example, if there is a cycle 5-\u0026gt;6-\u0026gt;5. Then f^6 (5) \u003d 5, but f^3 (5) \u003d 6, they are not equal.\u003c/li\u003e   \u003cli\u003eThere is a node, the distance to cycle is larger than 2 + 1 \u003d 3:\u003c/li\u003e \u003c/ol\u003e\u003cp\u003eFor example, if there is a path: 7-\u0026gt;8-\u0026gt;9-\u0026gt;10-\u0026gt;11-\u0026gt;11, then we have: f^6 (7) \u003d 11 (something on the cycle), but f^3 (7) \u003d 10 (something not on the cycle). Beside these 2 cases, the solution always exist:\u003c/p\u003e \u003col\u003e   \u003cli\u003eLet e[0] \u003d 1, if there is an edge(i-\u0026gt;j), then we set e[i] \u003d e[j] — 1. By this we can get e[i] for all nodes in 0\u0027s component.  We set i*j \u003d f^(e[i]) (j).\u003c/li\u003e   \u003cli\u003eFor all element in other component, we set: i*j \u003d i.\u003c/li\u003e \u003c/ol\u003e\u003cp\u003eWe could verify it is a valid solution.\u003c/p\u003e\u003c/div\u003e","tags":[]}}