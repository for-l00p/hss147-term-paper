{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1509044971,"rating":0,"authorHandle":"acmASCIS","modificationTimeSeconds":1509044971,"id":55424,"title":"\u003cp\u003eWeek03 — Divide and Conquer\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eSo far we have seen different ways of solving problems Greedy ,Recursion and so . today we will talk about divide-and-conquer.\u003c/p\u003e\u003ch1\u003eDivide-and-conquer\u003c/h1\u003e\u003cp\u003ebreaks a problem into subproblems that are similar to the original problem, then each problem is solved independently, and finally combines the solutions to the subproblems to create a solution to the original problem.\u003c/p\u003e\u003cp\u003eNote that divide-and-conquer solves subproblems recursively so each subproblem must be smaller than the original problem, otherwise it won’t make sense to divide a problem to larger problem :D and of course there must be a base case for subproblems.\u003c/p\u003e\u003cp\u003eAnother way to illustrate is that we keep on dividing the subproblems into even smaller sub-problems, we may eventually reach a stage where no more division is possible. Those smallest possible sub-problem are solved. The solution of all sub-problems is finally merged in order to obtain the solution of an original problem\u003c/p\u003e\u003ch3\u003eSo now the main steps of solving a problem using divide and conquer technique are:\u003c/h3\u003e \u003col\u003e   \u003cli\u003eDivide the problem into a number of subproblems that are smaller instances of the same problem.\u003c/li\u003e   \u003cli\u003eConquer the subproblems by solving them recursively. If they are small enough, solve the subproblems as base cases.\u003c/li\u003e   \u003cli\u003eCombine the solutions to the subproblems into the solution for the original problem.\u003c/li\u003e \u003c/ol\u003e\u003cp\u003e\u003cimg alt\u003d\" \" src\u003d\"/predownloaded/43/e2/43e20ce82117d33d3873b7cb83fc3c114dcfb1d5.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003eRemember when we talked earlier about binary search . let’s think of it as a divide and conquer technique to find an item in a list\u003c/p\u003e\u003cp\u003eWe divide the list into two parts Choose the part to work on then solve that part by doing the same steps again divide that part to another two parts and so on until we find our item\u003c/p\u003e\u003cp\u003eAnother Example is Merge sort : \u003ca href\u003d\"https://www.khanacademy.org/computing/computer-science/algorithms/merge-sort/a/overview-of-merge-sor\"\u003ehttps://www.khanacademy.org/computing/computer-science/algorithms/merge-sort/a/overview-of-merge-sor\u003c/a\u003et\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.geeksforgeeks.org/divide-and-conquer-introduction/\"\u003ehere are some more examples on divide and conquer\u003c/a\u003e\u003c/p\u003e\u003cp\u003eReferences : \u003ca href\u003d\"https://www.khanacademy.org/computing/computer-science/algorithms/merge-sort/a/divide-and-conquer-algorithms\"\u003ehttps://www.khanacademy.org/computing/computer-science/algorithms/merge-sort/a/divide-and-conquer-algorithms\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.tutorialspoint.com/data_structures_algorithms/divide_and_conquer.htm\"\u003ehttps://www.tutorialspoint.com/data_structures_algorithms/divide_and_conquer.htm\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.radford.edu/~nokie/classes/360/divcon.html\"\u003ehttp://www.radford.edu/~nokie/classes/360/divcon.html\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e","tags":[]}}