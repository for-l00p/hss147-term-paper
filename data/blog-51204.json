{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":true,"creationTimeSeconds":1490436686,"rating":0,"authorHandle":"I_Love_Dilya","modificationTimeSeconds":1490436686,"id":51204,"title":"\u003cp\u003eЛекция крч)\u003c/p\u003e","locale":"ru","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eFloyd\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003ecin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; m;\nwhile (m --) {\n    llong v, u, w;\n    cin \u0026gt;\u0026gt; v \u0026gt;\u0026gt; u \u0026gt;\u0026gt; w;\n    d[v][u] \u003d w;\n    d[u][v] \u003d w;\n} for (llong k \u003d 1; k \u0026lt;\u003d n; k ++) {\n    for (llong i \u003d 1; i \u0026lt;\u003d n; i ++) {\n        for (llong j \u003d 1; j \u0026lt;\u003d n; j ++) {\n            d[i][j] \u003d min (d[i][j], d[i][k] + d[k][j]);\n        }\n    }\n} for (llong i \u003d 1; i \u0026lt;\u003d n; i ++, cout \u0026lt;\u0026lt; \u0027\\n\u0027) {\n    for (llong j \u003d i + 1; j \u0026lt;\u003d n; j ++) {\n        cout \u0026lt;\u0026lt; d[i][j] \u0026lt;\u0026lt; \u0027 \u0027;\n    }\n} return 0;\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eDijkstra\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003ecin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; m \u0026gt;\u0026gt; s;\nwhile (m --) {\n    llong v, u, w;\n    cin \u0026gt;\u0026gt; v \u0026gt;\u0026gt; u \u0026gt;\u0026gt; w;\n    g[v].pb ({u, w});\n} q.insert ({0, s});\nfor (llong i \u003d 1; i \u0026lt;\u003d n; i ++) d[i] \u003d INF;\nd[s] \u003d 0;\nwhile (!q.empty ()) {\n    llong v \u003d q.begin () -\u0026gt; second;\n    q.erase (q.begin ());\n    for (auto it : g[v]) {\n        llong to \u003d it.F, dist \u003d it.S;\n        if (d[to] \u0026gt; d[v] + dist) {\n            q.erase ({d[to], to});\n            d[to] \u003d d[v] + dist;\n            q.insert ({d[to], to});\n        }\n    }\n} for (llong i \u003d 1; i \u0026lt;\u003d n; i ++) {\n    cout \u0026lt;\u0026lt; d[i] \u0026lt;\u0026lt; \u0027 \u0027;\n}\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eTrie\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003estruct node {\n    int nxt[26];\n    bool isEnd;\n    node();\n};\n\nnode::node(){\n    for(int i \u003d 0; i \u0026lt; 26; ++i){\n        nxt[i] \u003d -1;\n    }\n    isEnd \u003d false;\n}\n\nnode t[MXN];\n\ninline void add(string s){\n    int v \u003d 0, c;\n    for(int i \u003d 0; i \u0026lt; sz(s); ++i){\n    c \u003d s[i] - \u0027a\u0027;\n    if(t[v].nxt[c] \u003d\u003d -1)\n        t[v].nxt[c] \u003d num++;\n    v \u003d t[v].nxt[c];\n    }\n    t[v].isEnd \u003d true;\n}\n\ninline bool find_string(string s){\n    int v \u003d 0, c;\n    for(int i \u003d 0; i \u0026lt; sz(s); ++i){\n        c \u003d s[i] - \u0027a\u0027;\n        if(t[v].nxt[c] \u003d\u003d -1)\n            return false;\n        v \u003d t[v].nxt[c];\n    }\n    return t[v].isEnd;\n}\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e","tags":[]}}