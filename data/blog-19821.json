{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1439733266,"rating":0,"authorHandle":"intptr","modificationTimeSeconds":1439733443,"id":19821,"title":"\u003cp\u003eHow does the algorithm for Contest 316 C problem work?\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eLooking at the algorithm for the problem C in contest 316 I couldn\u0027t figure out how it works so I decided it could be a good idea to ask for an explanation here.\u003c/p\u003e\u003cp\u003eReference to the solution is here : \u003ca href\u003d\"//codeforces.com/contest/570/submission/12523751\"\u003ehttp://codeforces.com/contest/570/submission/12523751\u003c/a\u003e\u003c/p\u003e\u003cp\u003eLet\u0027s assume an input of \u0026quot;.b..bz....\u0026quot;\u003c/p\u003e\u003cp\u003eAfter precomputation the array named \u0027ok\u0027 looks like this \u003c/p\u003e\u003cp\u003e[0,1,0,1,1,0,0,1,1,1] num \u003d 7; group \u003d 3\u003c/p\u003e\u003cp\u003eNow we start queries :\u003c/p\u003e\u003cp\u003e1st one is [1,h] :\u003c/p\u003e\u003cp\u003eWe evaluate a \u003d ok(1) ( True ) and b ( False ) \u003c/p\u003e\u003cp\u003ethus (a !\u003d b) \u003d ( True )\u003c/p\u003e\u003cp\u003eThen num-- \u003d\u0026gt; num \u003d 6\u003c/p\u003e\u003cp\u003eHow does decreasing the total length by one make sense here?\u003c/p\u003e\u003cp\u003eIn general could someone give a good explanation for this implementation? I understand what must happen to solve the problem but my solutions end up being too long/convoluted.\u003c/p\u003e\u003c/div\u003e","tags":[]}}