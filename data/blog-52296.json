{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1496245801,"rating":3,"authorHandle":"joker70","modificationTimeSeconds":1496245801,"id":52296,"title":"\u003cp\u003eLightOj 1011\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eI have learn DP recently. I am practicing DP in this OJ. Now, I am stuck on this problem. \u003c/p\u003e\u003cp\u003eIn this \u003ca href\u003d\"http://http://lightoj.com/volume_showproblem.php?problem\u003d1011\"\u003eproblem\u003c/a\u003e I have to find the maximum summation of cells such that any two cells don\u0027t have the same row or column. \u003c/p\u003e\u003cp\u003eSo, I will use recursion from top of the matrix. When using recursion I got to check if that cell is available or not, i.e. that cells row and column has not previously been used. How can I do that?\u003c/p\u003e\u003c/div\u003e","tags":["#dp"]}}