{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1499491625,"rating":32,"authorHandle":"TooObvious","modificationTimeSeconds":1499491871,"id":53174,"title":"\u003cp\u003eMaterials from Summer Programming Camp\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003ch3\u003eDay 1 and 2\u003c/h3\u003e\u003ch4\u003eDynamic Programming\u003c/h4\u003e \u003cul\u003e   \u003cli\u003eTwo good blog entries for dp — \u003ca href\u003d\"//codeforces.com/blog/entry/43256\"\u003eBasic\u003c/a\u003e , \u003ca href\u003d\"//codeforces.com/blog/entry/47764\"\u003eGood Tricks\u003c/a\u003e\u003c/li\u003e   \u003cli\u003e\u003ca href\u003d\"//codeforces.com/problemset/problem/742/D\"\u003eModified Knapsack — 1\u003c/a\u003e\u003c/li\u003e   \u003cli\u003e\u003ca href\u003d\"//codeforces.com/problemset/problem/743/D\"\u003eMaximum Disjoint Subtrees Sum\u003c/a\u003e\u003c/li\u003e   \u003cli\u003e\u003ca href\u003d\"//codeforces.com/problemset/problem/755/F\"\u003eModified Knapsack — 2\u003c/a\u003e\u003c/li\u003e   \u003cli\u003e\u003ca href\u003d\"//codeforces.com/contest/505/problem/C\"\u003eState-Space Reduction\u003c/a\u003e\u003c/li\u003e   \u003cli\u003e\u003ca href\u003d\"//codeforces.com/contest/559/problem/C\"\u003eChess Board Dp\u003c/a\u003e\u003c/li\u003e \u003c/ul\u003e\u003ch4\u003eSegment Trees\u003c/h4\u003e \u003cul\u003e   \u003cli\u003eA nice blog entry for this \u003ca href\u003d\"//codeforces.com/blog/entry/15890\"\u003eEverything About Segment Trees\u003c/a\u003e,contains many good problems to try as well\u003c/li\u003e   \u003cli\u003e\u003ca href\u003d\"//codeforces.com/problemset/problem/756/C\"\u003eStack-SegTree problem\u003c/a\u003e\u003c/li\u003e   \u003cli\u003e\u003ca href\u003d\"//codeforces.com/problemset/problem/718/C\"\u003eMatrix Expo on SegTree\u003c/a\u003e\u003c/li\u003e   \u003cli\u003e\u003ca href\u003d\"https://www.hackerearth.com/practice/notes/segment-tree-and-lazy-propagation/\"\u003eImplementation-Hackerearth\u003c/a\u003e\u003c/li\u003e \u003c/ul\u003e\u003ch4\u003eTries\u003c/h4\u003e \u003cul\u003e   \u003cli\u003eTopcoder tutorial is pretty good to get an understanding , \u003ca href\u003d\"https://www.topcoder.com/community/data-science/data-science-tutorials/using-tries/\"\u003eTries\u003c/a\u003e\u003c/li\u003e   \u003cli\u003eTry to make your own implementation and code up the problems in , \u003ca href\u003d\"https://threads-iiith.quora.com/Tutorial-on-Trie-and-example-problems\"\u003eBIT-Tries\u003c/a\u003e\u003c/li\u003e   \u003cli\u003e\u003ca href\u003d\"//codeforces.com/problemset/problem/514/C\"\u003eWatto and Mechanism\u003c/a\u003e\u003c/li\u003e   \u003cli\u003e\u003ca href\u003d\"//codeforces.com/problemset/problem/271/D\"\u003eGood Substrings\u003c/a\u003e\u003c/li\u003e \u003c/ul\u003e\u003ch4\u003eMo\u0027s Algorithm \u0026amp; SQRT decomposition\u003c/h4\u003e \u003cul\u003e   \u003cli\u003e\u003ca href\u003d\"https://blog.anudeep2011.com/mos-algorithm/\"\u003eBlog\u003c/a\u003e , an entry by anudeep nekkanti which is really good.It has good problems at the end of it.\u003c/li\u003e   \u003cli\u003e\u003ca href\u003d\"//codeforces.com/contest/220/problem/B\"\u003eEasy-Medium on Mo\u0027s\u003c/a\u003e\u003c/li\u003e   \u003cli\u003e\u003ca href\u003d\"//codeforces.com/contest/13/problem/E\"\u003eMedium-Hard\u003c/a\u003e\u003c/li\u003e   \u003cli\u003e\u003ca href\u003d\"//codeforces.com/contest/455/problem/D\"\u003eMedium-Hard\u003c/a\u003e\u003c/li\u003e   \u003cli\u003e\u003ca href\u003d\"//codeforces.com/blog/entry/43230\"\u003eMo\u0027s Algorithm on Trees\u003c/a\u003e\u003c/li\u003e \u003c/ul\u003e\u003cp\u003ePlease leave a comment with other good problems or blog entries that you find. Will help make the blog better.\u003c/p\u003e\u003c/div\u003e","tags":[]}}