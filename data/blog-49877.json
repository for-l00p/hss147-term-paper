{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1484840350,"rating":3,"authorHandle":"sw1ft","modificationTimeSeconds":1484840384,"id":49877,"title":"\u003cp\u003eC-Style Strings vs. C++ Strings\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHey everyone. Yesterday I found problem \u003ca href\u003d\"https://uva.onlinejudge.org/index.php?option\u003donlinejudge\u0026amp;page\u003dshow_problem\u0026amp;problem\u003d1620\"\u003eUVa 10679 â€” I Love Strings!!\u003c/a\u003e, \u003ca href\u003d\"http://ideone.com/svVoZX\"\u003esolved it\u003c/a\u003e using C++ Strings and KMP, and got a runtime of 1.080/3.000s. I found this rather high so I looked for the problem on the web and found on \u003ca href\u003d\"http://www.algorithmist.com/index.php/UVa_10679\"\u003eAlgorithmist\u003c/a\u003e that this problem perfectly suits Aho-Corasick, so I found \u003ca href\u003d\"http://www.geeksforgeeks.org/aho-corasick-algorithm-pattern-searching/\"\u003ethis guide\u003c/a\u003e and solved the problem based on that, but I\u0027m getting TLE. After this I was a little bit confused, but maybe such implementation is just slow. Then I checked the \u003ca href\u003d\"https://uva.onlinejudge.org/index.php?option\u003donlinejudge\u0026amp;Itemid\u003d99999999\u0026amp;page\u003dproblem_stats\u0026amp;problemid\u003d1620\u0026amp;category\u003d\"\u003eProblem Stats\u003c/a\u003e and found that morris821028\u0027s solution is ranked 17 with a runtime of 0.016, so I thought he must have implemented Aho-Corasick in a (much) faster way. Right after this I looked for \u003ca href\u003d\"https://github.com/morris821028/UVa/blob/master/volume106/10679%20-%20I%20Love%20Strings.cpp\"\u003ehis solution\u003c/a\u003e: turns out he used KMP, just like me, but with C-Style strings instead...\u003c/p\u003e\u003cp\u003eAre C-Style Strings really this faster or is this just an especial case?\u003c/p\u003e\u003c/div\u003e","tags":["strings"]}}