{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1440275098,"rating":70,"authorHandle":"Kostroma","modificationTimeSeconds":1441548938,"id":19923,"title":"\u003cp\u003eCodeforces Round #317 [AimFund Thanks-Round] Editorial\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e\u003ca href\u003d\"/contest/572/problem/A\" title\u003d\"Codeforces Round 317 [AimFund Thanks-Round] (Div. 2)\"\u003e572A - Массивы\u003c/a\u003e\u003c/p\u003e\u003cp\u003eIn this problem one need to check whether it\u0027s possible to choose \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e elements from array \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/span\u003e elements from array \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u003c/span\u003e so that each of chosen element in \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003c/span\u003e is less than each of chosen elements in \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u003c/span\u003e. If it\u0027s possible then it\u0027s possible to choose \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e smallest elements in \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/span\u003e largest elements in \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u003c/span\u003e. That means that in particular, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e-th smallest element of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003c/span\u003e is less than \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/span\u003e-th largest element in \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u003c/span\u003e. So, if \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e[\u003ci\u003ek\u003c/i\u003e] \u0026lt; \u003ci\u003eB\u003c/i\u003e[\u003ci\u003en\u003c/i\u003e - \u003ci\u003em\u003c/i\u003e + 1]\u003c/span\u003e then the answer is \u0026quot;YES\u0026quot; and if not, then the answer is \u0026quot;NO\u0026quot;.\u003c/p\u003e\u003cp\u003eProblem author: \u003ca class\u003d\"rated-user user-orange\" href\u003d\"/profile/zeliboba\" title\u003d\"Международный мастер zeliboba\"\u003ezeliboba\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eProblem developers: \u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/AlexDmitriev\" title\u003d\"Гроссмейстер AlexDmitriev\"\u003eAlexDmitriev\u003c/a\u003e, \u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/Kostroma\" title\u003d\"Гроссмейстер Kostroma\"\u003eKostroma\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eSolution code: \u003ca href\u003d\"/contest/572/submission/12873382\" title\u003d\"Посылка 12873382 от Kostroma\"\u003e12873382\u003c/a\u003e.\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"/contest/572/problem/B\" title\u003d\"Codeforces Round 317 [AimFund Thanks-Round] (Div. 2)\"\u003e572B - Биржевые заявки\u003c/a\u003e\u003c/p\u003e\u003cp\u003eFirst of all the problem may be solved for buy orders and sell orders separately.\u003c/p\u003e\u003cp\u003eThe easiest soultion is to use structure like std::map or java.lang.TreeMap. To aggregate orders we just add volume to the corresponding map element: \u003ccode\u003eaggregated[price] +\u003d volume\u003c/code\u003e.\u003c/p\u003e\u003cp\u003eAfter that we should extract lowest (or largest) element from map \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e\u003c/span\u003e times (or while it\u0027s not empty).\u003c/p\u003e\u003cp\u003eComplexity of this solution is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003enlogn\u003c/i\u003e)\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eIt is also possible to solve the problem without data structres other than an array. You should just maintain at most \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e\u003c/span\u003e best orders in sorted order and when adding another order you insert it in appropriate place and move worse elements in linear time of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e\u003c/span\u003e. Complexity of this solution is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003esn\u003c/i\u003e)\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eProblem authors and developers: \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/ArtDitel\" title\u003d\"Кандидат в мастера ArtDitel\"\u003eArtDitel\u003c/a\u003e, \u003ca class\u003d\"rated-user user-orange\" href\u003d\"/profile/yarrr\" title\u003d\"Мастер yarrr\"\u003eyarrr\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eSolution code: \u003ca href\u003d\"/contest/572/submission/12873385\" title\u003d\"Посылка 12873385 от Kostroma\"\u003e12873385\u003c/a\u003e.\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"/contest/571/problem/A\" title\u003d\"Codeforces Round 317 [AimFund Thanks-Round] (Div. 1)\"\u003e571A - Удлинение палочек\u003c/a\u003e\u003c/p\u003e\u003cp\u003eLet\u0027s count the number of ways to form a triple which can\u0027t represent triangle sides, and then we subtract this value from \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/75/1d/751dc51ff17be456c0decdd74645568dcb2957ec.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e — the total number of ways to increase the sticks not more than \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/span\u003e in total. This number is obtained from partition of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/span\u003e into 4 summands (\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/sub\u003e + \u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/sub\u003e + \u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ec\u003c/i\u003e\u003c/sub\u003e + \u003ci\u003eunused\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/sub\u003e \u003d \u003ci\u003el\u003c/i\u003e\u003c/span\u003e), or can be counted using a \u003ccode\u003efor\u003c/code\u003e loop. \u003c/p\u003e\u003cp\u003eNow we consider triples \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e + \u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/sub\u003e, \u003ci\u003eb\u003c/i\u003e + \u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/sub\u003e, \u003ci\u003ec\u003c/i\u003e + \u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ec\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e, where \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/sub\u003e + \u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/sub\u003e + \u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ec\u003c/i\u003e\u003c/sub\u003e ≤ \u003ci\u003el\u003c/i\u003e, \u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/sub\u003e, \u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/sub\u003e, \u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ec\u003c/i\u003e\u003c/sub\u003e ≥ 0\u003c/span\u003e. Fix the maximal side, for example it would be \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e + \u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e. We\u0027ll have to do the following algo for \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e + \u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ec\u003c/i\u003e + \u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ec\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e in the same way. The triple is not a triangle with maximal side \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e + \u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e if \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e + \u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/sub\u003e ≥ \u003ci\u003eb\u003c/i\u003e + \u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/sub\u003e + \u003ci\u003ec\u003c/i\u003e + \u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ec\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e. If we iterate over \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e between \u003cspan class\u003d\"tex-span\"\u003e0\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/span\u003e, we have the following conditions on \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/sub\u003e, \u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ec\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e:\u003c/p\u003e \u003ccenter\u003e\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/sub\u003e + \u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ec\u003c/i\u003e\u003c/sub\u003e ≤ \u003ci\u003ea\u003c/i\u003e - \u003ci\u003eb\u003c/i\u003e - \u003ci\u003ec\u003c/i\u003e + \u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/sub\u003e, \u003c/span\u003e\u003c/center\u003e \u003ccenter\u003e\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/sub\u003e + \u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ec\u003c/i\u003e\u003c/sub\u003e ≤ \u003ci\u003el\u003c/i\u003e - \u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/sub\u003e, \u003c/span\u003e\u003c/center\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/sub\u003e, \u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ec\u003c/i\u003e\u003c/sub\u003e ≥ 0.\u003c/span\u003e So, non-negative integers \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/sub\u003e, \u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ec\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e should be such that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/sub\u003e + \u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ec\u003c/i\u003e\u003c/sub\u003e ≤ \u003ci\u003emin\u003c/i\u003e(\u003ci\u003ea\u003c/i\u003e - \u003ci\u003eb\u003c/i\u003e - \u003ci\u003ec\u003c/i\u003e + \u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/sub\u003e, \u003ci\u003el\u003c/i\u003e - \u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/sub\u003e)\u003c/span\u003e. If we denote this minimum as \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e than we can choose \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/sub\u003e, \u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ec\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e in \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/66/f1/66f116bfc0abea0a893b0b93fa1f2221b415d3eb.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e different ways (again we divide \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e into three summands: \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/sub\u003e, \u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ec\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e and some unused volume). Also when we fix \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e, there are \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e - \u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/sub\u003e + 1\u003c/span\u003e ways to choose \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ec\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e, so the overall number of pair \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/sub\u003e, \u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ec\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e is\u003c/p\u003e \u003ccenter\u003e\u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/d0/2e/d02e9a527fe9c68b0bd68acc0891dac4b7e3b933.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/center\u003e\u003cp\u003eso we obtain the same formula.\u003c/p\u003e\u003cp\u003eTo sum up, we need to iterate over the maximal side and over the addition to that side, then write these formulas, and subtract the result from the total number of different additions to the sides. The complexity of the solution is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003el\u003c/i\u003e)\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eProblem author: \u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/Kostroma\" title\u003d\"Гроссмейстер Kostroma\"\u003eKostroma\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eProblem developers: \u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/Kostroma\" title\u003d\"Гроссмейстер Kostroma\"\u003eKostroma\u003c/a\u003e, \u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/AlexDmitriev\" title\u003d\"Гроссмейстер AlexDmitriev\"\u003eAlexDmitriev\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eSolution code: \u003ca href\u003d\"/contest/571/submission/12873406\" title\u003d\"Посылка 12873406 от Kostroma\"\u003e12873406\u003c/a\u003e.\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"/contest/571/problem/B\" title\u003d\"Codeforces Round 317 [AimFund Thanks-Round] (Div. 1)\"\u003e571B - Минимизация\u003c/a\u003e\u003c/p\u003e\u003cp\u003eWe can divide all indices \u003cspan class\u003d\"tex-span\"\u003e[1;\u003ci\u003en\u003c/i\u003e]\u003c/span\u003e into groups by their remainder modulo \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e. While counting \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/c4/d9/c4d9e225842567577789321425c8a5551438a14d.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, we can consider each group separately and sum the distances between neighbouring numbers in each group. \u003c/p\u003e\u003cp\u003eConsider one group, corresponding to some remainder \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e modulo \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e, i.e. containing \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e for \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/d5/e0/d5e0f5f49169004b21da2b36d4e63ec7fb1b648b.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. Let\u0027s write down its numbers from left to right: \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e, \u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e, ..., \u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e. Then this group adds to the overall sum the value\u003c/p\u003e \u003ccenter\u003e\u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/dc/0f/dc0ffc4455e060d71f1d11d09665f521be294e70.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/center\u003e\u003cp\u003eWe can notice that if we sort \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e, ..., \u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e in non-decreasing order, this sum will not increase. So, in the optimal answer we can consider that numbers in each group don\u0027t decrease. Furthermore, in that case this sum is equal to \u003cspan class\u003d\"tex-span\"\u003e|\u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/sub\u003e - \u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e|\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eNow consider two groups \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e, ..., \u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ec\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e, \u003ci\u003ec\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e, ..., \u003ci\u003ec\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e, both sorted in non-decreasing order. We claim that either \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e ≥ \u003ci\u003ec\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e or \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/sub\u003e ≤ \u003ci\u003ec\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/span\u003e, i.e. segments \u003cspan class\u003d\"tex-span\"\u003e[\u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e, \u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/sub\u003e]\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e[\u003ci\u003ec\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e, \u003ci\u003ec\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/sub\u003e]\u003c/span\u003e can have common points only in their endpoints.\u003c/p\u003e\u003cp\u003eWhy is this true? These groups add \u003cspan class\u003d\"tex-span\"\u003e|\u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/sub\u003e - \u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e| + |\u003ci\u003ec\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/sub\u003e - \u003ci\u003ec\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e|\u003c/span\u003e to the overall sum. We consider the case \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ec\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e ≥ \u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/span\u003e, the other is symmetric. If \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ec\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e \u0026lt; \u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e, then swapping \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ec\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e will not increase the values these groups add to the answer, since the right border of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/span\u003e group moves to the left, and the left border of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ec\u003c/i\u003e\u003c/span\u003e group moves to the right. So, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ec\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e ≥ \u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e in that case, and the assertion is proved.\u003c/p\u003e\u003cp\u003eNow we know that the values in each group should from a continuous segment of the sorted original array. In fact, we have \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/ca/9d/ca9d266eb01bf13bf2a0c4ac11701274db4d0aec.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e groups of size \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/cc/63/cc63ec5984c951f28d9549770f866707b3be965e.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e (so called small groups) and \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/6d/d5/6dd53f9c67b2840744dc838c07e8f0fc2b315a02.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e groups of size \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/76/80/7680c284ce3f8e4c0db6dcf30f962c0e67bd3f6b.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e (so called large groups). Consider the following dynamic programming: \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edp\u003c/i\u003e[\u003ci\u003eL\u003c/i\u003e][\u003ci\u003eS\u003c/i\u003e]\u003c/span\u003e — the minimal sum of values added to the answer by \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eL\u003c/i\u003e\u003c/span\u003e large groups and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eS\u003c/i\u003e\u003c/span\u003e small groups, if we choose the elements for them from the first \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/80/88/8088ef010ba732bd4e5511a8bf9f46f736cbeac9.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e elements of the sorted array \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003c/span\u003e. There are no more than \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003ek\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e)\u003c/span\u003e states, and each transition can be made in \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(1)\u003c/span\u003e: we choose large or small group to add and obtain the number it adds to the sum by subtracting two elements of the sorted array. The answer for the problem will be in \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/f9/e4/f9e40fd032de2faf8c3d2da74fe39df7caef02eb.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e.\u003c/p\u003e\u003cp\u003eThe overall complexity of the solution is \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/2a/eb/2aeb552255a7d08da1a61af20caca454db0ae8a7.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. We can note that in pretests \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/6d/d5/6dd53f9c67b2840744dc838c07e8f0fc2b315a02.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e was quite small, and some slower solutions could pass, but they failed on final tests.\u003c/p\u003e\u003cp\u003eProblem author: \u003ca class\u003d\"rated-user user-orange\" href\u003d\"/profile/zeliboba\" title\u003d\"Международный мастер zeliboba\"\u003ezeliboba\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eProblem developers: \u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/Kostroma\" title\u003d\"Гроссмейстер Kostroma\"\u003eKostroma\u003c/a\u003e, \u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/AlexDmitriev\" title\u003d\"Гроссмейстер AlexDmitriev\"\u003eAlexDmitriev\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eSolution code: \u003ca href\u003d\"/contest/571/submission/12873418\" title\u003d\"Посылка 12873418 от Kostroma\"\u003e12873418\u003c/a\u003e.\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"/contest/571/problem/C\" title\u003d\"Codeforces Round 317 [AimFund Thanks-Round] (Div. 1)\"\u003e571C - КНФ-2\u003c/a\u003e\u003c/p\u003e\u003cp\u003eFirstly let\u0027s assign values to variables occurring in our fomula only with negation or only without negation. After that we can throw away the disjuncts which contained them, since they are already true, and continue the process until it is possible. To make it run in time limit, one should use dfs or bfs algorithm to eliminate these variables and disjuncts.\u003c/p\u003e\u003cp\u003eSo now we have only variables which have both types of occurrences in disjucnts. Let\u0027s build a graph with the vertices corresponding to disjuncts, and for each varible \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/span\u003e make an edge between the disjuncts that contain \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e!\u003ci\u003ea\u003c/i\u003e\u003c/span\u003e. Now we should choose the directions of edges in this graph in such a way that every vertex has at least one incoming edge. \u003c/p\u003e\u003cp\u003eWe can notice that if some connected component of this graph is a tree, the solution is not possible: on each step we can take some leaf of this tree, and we have to orient its only edge to it, and then erase the leaf. In the end we\u0027ll have only one vertex, and it\u0027ll not have any incoming edges.\u003c/p\u003e\u003cp\u003eOtherwise, take some cycle in the component and orient the edges between neighbouring vertices along it. Then run dfs from every vertex of the cycle and orient each visited edge in the direction we went along it. It is easy to easy that after this process every vertex will have at least one incoming edge.\u003c/p\u003e\u003cp\u003eSo, we should consider cases with the variables which values can be assigned at once, than construct a graph from disjuncts and variables and find whether each connected component has a cycle. If so, we also should carefully construct the answer, assigning the remaining variables their values, looking at the directions of the edges in the graph. The overall complexity is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e + \u003ci\u003em\u003c/i\u003e)\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eProblem author: \u003ca class\u003d\"rated-user user-orange\" href\u003d\"/profile/zeliboba\" title\u003d\"Международный мастер zeliboba\"\u003ezeliboba\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eProblem developers: \u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/Kostroma\" title\u003d\"Гроссмейстер Kostroma\"\u003eKostroma\u003c/a\u003e, \u003ca class\u003d\"rated-user user-orange\" href\u003d\"/profile/zeliboba\" title\u003d\"Международный мастер zeliboba\"\u003ezeliboba\u003c/a\u003e, \u003ca class\u003d\"rated-user user-orange\" href\u003d\"/profile/yarrr\" title\u003d\"Мастер yarrr\"\u003eyarrr\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eSolution codes: \u003ca href\u003d\"/contest/571/submission/12873432\" title\u003d\"Посылка 12873432 от Kostroma\"\u003e12873432\u003c/a\u003e (linear solution), \u003ca href\u003d\"/contest/571/submission/12873446\" title\u003d\"Посылка 12873446 от Kostroma\"\u003e12873446\u003c/a\u003e (\u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/ee/25/ee259b9b93864a58ef559dc68e9ce1fd4bd94c67.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e), \u003ca href\u003d\"/contest/571/submission/12873456\" title\u003d\"Посылка 12873456 от Kostroma\"\u003e12873456\u003c/a\u003e (matching solution).\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"/contest/571/problem/D\" title\u003d\"Codeforces Round 317 [AimFund Thanks-Round] (Div. 1)\"\u003e571D - Кампус\u003c/a\u003e\u003c/p\u003e\u003cp\u003eLet\u0027s suppose for each dormitory from \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eQ\u003c/i\u003e\u003c/span\u003e query we already know the last raid moment.\u003c/p\u003e\u003cp\u003eWhen task will be much easier: we can throw away \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eM\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eZ\u003c/i\u003e\u003c/span\u003e queries and to get right answer we should subtract two values: people count in dormitory right now and same count in a last raid moment.\u003c/p\u003e\u003cp\u003eOn this basis, we have such plan:\u003c/p\u003e \u003col\u003e   \u003cli\u003eFor each \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eQ\u003c/i\u003e\u003c/span\u003e query let\u0027s find the last raid moment using \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eM\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eZ\u003c/i\u003e\u003c/span\u003e queries.\u003c/li\u003e   \u003cli\u003eFind people count in two interesting moments using \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eU\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003c/span\u003e queries.\u003c/li\u003e   \u003cli\u003eCalculcates the final answer.\u003c/li\u003e \u003c/ol\u003e\u003cp\u003eLet\u0027s try to solve the first part.\u003c/p\u003e\u003cp\u003eWe want to make such queries on disjoint sets:\u003c/p\u003e \u003col\u003e   \u003cli\u003eMerge two sets (\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eM\u003c/i\u003e\u003c/span\u003e query).\u003c/li\u003e   \u003cli\u003eAssign value \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003etime\u003c/i\u003e\u003c/span\u003e for all elements in particular set (\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eZ\u003c/i\u003e\u003c/span\u003e query).\u003c/li\u003e   \u003cli\u003eGet value for a particular element (\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eQ\u003c/i\u003e\u003c/span\u003e query).\u003c/li\u003e \u003c/ol\u003e\u003cp\u003eTo solve this task we\u0027ll use a well-known technique: \u0026quot;merge smaller set to bigger\u0026quot;.\u003c/p\u003e\u003cp\u003eWe\u0027ll maintain such values:\u003c/p\u003e \u003cul\u003e   \u003cli\u003e\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eelements\u003c/i\u003e\u003c/span\u003e — set elements.\u003c/li\u003e   \u003cli\u003e\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eset\u003c/i\u003e_\u003ci\u003eid\u003c/i\u003e\u003c/span\u003e — for each element their set id.\u003c/li\u003e   \u003cli\u003e\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003elast\u003c/i\u003e_\u003ci\u003eset\u003c/i\u003e_\u003ci\u003eupdate\u003c/i\u003e_\u003ci\u003etime\u003c/i\u003e\u003c/span\u003e — last moment when assign operation has occurred for each set.\u003c/li\u003e   \u003cli\u003e\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003elast\u003c/i\u003e_\u003ci\u003eupdate\u003c/i\u003e_\u003ci\u003etime\u003c/i\u003e\u003c/span\u003e — last moment when assign operation has occurred for each element.\u003c/li\u003e   \u003cli\u003e\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eactual\u003c/i\u003e_\u003ci\u003etime\u003c/i\u003e\u003c/span\u003e — moment of time when \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003elast\u003c/i\u003e_\u003ci\u003eupdate\u003c/i\u003e_\u003ci\u003etime\u003c/i\u003e\u003c/span\u003e was actually for the element.\u003c/li\u003e \u003c/ul\u003e\u003cp\u003eLet\u0027s focus on \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eactual\u003c/i\u003e_\u003ci\u003etime\u003c/i\u003e\u003c/span\u003e value.\u003c/p\u003e\u003cp\u003eIt\u0027s obvious that when we merge two sets each element can have a different last assign moment. But after first assignment all elements from any set will have the same value. So the answer for \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eQ\u003c/i\u003e\u003c/span\u003e query for element \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e from set \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e\u003c/span\u003e: \u003ccode\u003eIf  last_set_update_time[s]\u003dactual_time[i]  then  last_update_time[i]  else  last_set_update_time[s]\u003c/code\u003e\u003c/p\u003e\u003cp\u003eFor each \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eZ\u003c/i\u003e\u003c/span\u003e query you should just update \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003elast\u003c/i\u003e_\u003ci\u003eset\u003c/i\u003e_\u003ci\u003eupdate\u003c/i\u003e_\u003ci\u003etime\u003c/i\u003e\u003c/span\u003e array.\u003c/p\u003e\u003cp\u003eIt\u0027s easy to maintain this values when you merge two sets:\u003c/p\u003e\u003cp\u003eLet\u0027s suppose we want to merge set \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003efrom\u003c/i\u003e\u003c/span\u003e to set \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eto\u003c/i\u003e\u003c/span\u003e. For each element from set \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003efrom\u003c/i\u003e\u003c/span\u003e we already know last assign time. So just update \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003elast\u003c/i\u003e_\u003ci\u003eupdate\u003c/i\u003e_\u003ci\u003etime\u003c/i\u003e\u003c/span\u003e with this value and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eactual\u003c/i\u003e_\u003ci\u003etime\u003c/i\u003e\u003c/span\u003e is equal of last assign operation for set \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eto\u003c/i\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eThe second part of the solution is the same as first one.\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e * \u003ci\u003elg\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e) + \u003ci\u003em\u003c/i\u003e)\u003c/span\u003e time and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e + \u003ci\u003em\u003c/i\u003e)\u003c/span\u003e memory.\u003c/p\u003e\u003cp\u003eProblem author: \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/ArtDitel\" title\u003d\"Кандидат в мастера ArtDitel\"\u003eArtDitel\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eProblem developers: \u003ca class\u003d\"rated-user user-orange\" href\u003d\"/profile/yarrr\" title\u003d\"Мастер yarrr\"\u003eyarrr\u003c/a\u003e, \u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/gchebanov\" title\u003d\"Гроссмейстер gchebanov\"\u003egchebanov\u003c/a\u003e, \u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/Kostroma\" title\u003d\"Гроссмейстер Kostroma\"\u003eKostroma\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eSolution codes: \u003ca href\u003d\"/contest/571/submission/12873477\" title\u003d\"Посылка 12873477 от Kostroma\"\u003e12873477\u003c/a\u003e (solution, described in the editorail), \u003ca href\u003d\"/contest/571/submission/12873469\" title\u003d\"Посылка 12873469 от Kostroma\"\u003e12873469\u003c/a\u003e (solution with treaps).\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"/contest/571/problem/E\" title\u003d\"Codeforces Round 317 [AimFund Thanks-Round] (Div. 1)\"\u003e571E - Геометрические прогрессии\u003c/a\u003e\u003c/p\u003e\u003cp\u003eIf intersection of two geometric progressions is not empty, set of common elements indexes forms arithmetic progression in each progression or consists of not more than one element. Let\u0027s intersect first progression with each other progression. If any of these intersections are empty then total intersection is empty. If some of these intersection consist of one element, then we could check only this element. Otherwise one could intersect arithmetic progressions of first progression indexes and take minimal element of this intersection. The remaining question is how intersect two geometric progression? Let\u0027s factorise all numbers in these two progressions and find set of appropriate indexes for every prime factor in both progressions. These progressions one need intersect both by values and by indexes.\u003c/p\u003e\u003cp\u003eProblem author: \u003ca class\u003d\"rated-user user-orange\" href\u003d\"/profile/zeliboba\" title\u003d\"Международный мастер zeliboba\"\u003ezeliboba\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eProblem developers: \u003ca class\u003d\"rated-user user-orange\" href\u003d\"/profile/zeliboba\" title\u003d\"Международный мастер zeliboba\"\u003ezeliboba\u003c/a\u003e, \u003ca class\u003d\"rated-user user-orange\" href\u003d\"/profile/yarrr\" title\u003d\"Мастер yarrr\"\u003eyarrr\u003c/a\u003e, \u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/gchebanov\" title\u003d\"Гроссмейстер gchebanov\"\u003egchebanov\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eSolution code: \u003ca href\u003d\"/contest/571/submission/12873480\" title\u003d\"Посылка 12873480 от Kostroma\"\u003e12873480\u003c/a\u003e.\u003c/p\u003e\u003c/div\u003e","tags":["aimfund","editorial","tutorial","cf317","thanks-round","maths","div0"]}}