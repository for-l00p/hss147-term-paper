{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1497645758,"rating":2,"authorHandle":"murugappan_s","modificationTimeSeconds":1497645758,"id":52661,"title":"\u003cp\u003eJune Long Challenge cloning problem Deterministic solution\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eThis month\u0027s codechef long challenge had a great set of problems. One problem was cloning(\u003ca\u003ehttps://www.codechef.com/problems/CLONEME/)\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eI couldn\u0027t solve it during the contest,but upsolved it just now.\u003c/p\u003e\u003cp\u003eI did it finding prefix square sums and prefix sum of the input and used a mergesort tree.To resolve collisions for ranges which have same prefix square sums and prefix sums,I had to do a lot of collision resolution work(computing various prefix power sums).\u003c/p\u003e\u003cp\u003eI find the pairs of numbers which differ in the intervals.If that count of pairs is greater than 1,we can answer them easily else find whether they occur at same position by find number of elements strictly lesser than and less than the value,then answer them. Here is my submission : \u003ca href\u003d\"https://www.codechef.com/viewsolution/14267198\"\u003ehttps://www.codechef.com/viewsolution/14267198\u003c/a\u003e \u003c/p\u003e\u003cp\u003eIs there a deterministic solution or any better solution which has less collision?? If there is any good editorial please provide the link. Thanks in advance.\u003c/p\u003e\u003cp\u003ePlease don\u0027t down-vote before reading.(sorry if it was harsh).Once again thanks in advance. :)\u003c/p\u003e\u003c/div\u003e","tags":["codechef","longchallenge","june","cloning"]}}