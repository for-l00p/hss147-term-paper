{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1496116797,"rating":3,"authorHandle":"-synx-","modificationTimeSeconds":1496116797,"id":52256,"title":"\u003cp\u003eCounting bits in unsigned 64 bit using precomputation?\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eI know that counting bits using precomputation is the fastest way to go (over \u003ccode\u003e__builtin_popcount()\u003c/code\u003e).\u003cbr /\u003eFor 32 bit integers we can do \u003ccode\u003ecnt[x\u0026gt;\u0026gt;16]+cnt[x\u0026amp;65535]\u003c/code\u003e by precomputing counts upto \u003ccode\u003e(1\u0026lt;\u0026lt;16)\u003c/code\u003e.\u003cbr /\u003eHow can we do it for 64 bit integers by precomputing upto \u003ccode\u003e(1\u0026lt;\u0026lt;22)\u003c/code\u003e.\u003c/p\u003e\u003c/div\u003e","tags":["popcount","bitwise"]}}