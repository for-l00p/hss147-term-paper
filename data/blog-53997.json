{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1503412323,"rating":-5,"authorHandle":"Unlimited_Time","modificationTimeSeconds":1503412323,"id":53997,"title":"\u003cp\u003eNotes on Codeforces Beta Round #71, A, B, C\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e\u003ca href\u003d\"/contest/79/problem/A\" title\u003d\"Codeforces Beta Round 71\"\u003e79A - Bus Game\u003c/a\u003e\u003c/p\u003e\u003cp\u003eWe can directly simulate the process and thus obtain the final result.\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"/contest/79/problem/B\" title\u003d\"Codeforces Beta Round 71\"\u003e79B - Colorful Field\u003c/a\u003e\u003c/p\u003e\u003cp\u003eWe store the positions of all the “waste” in each row, and also the corresponding number. For each query, we find the right row and check whether it is “waste” or not. If no, then we calculate the total number of waste before this position, which can be obtained with constant complexity if we use prefix technique. Then, we will know the total number of crops and the correct type can be computed according to the remainder obtained by dividing \u003cspan class\u003d\"tex-span\"\u003e3\u003c/span\u003e.\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"/contest/79/problem/C\" title\u003d\"Codeforces Beta Round 71\"\u003e79C - Beaver\u003c/a\u003e\u003c/p\u003e\u003cp\u003eFor each of the given \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e small strings, we can calculate its beginning and ending positions in the long string, where it appears. The above results can be directly computed without using any advanced techniques about string, since the length of small string is quite short.\u003c/p\u003e\u003cp\u003eFor each index \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e in the long string, we store two types of information. We first record the indices of small strings that start from \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e and their beginning position, specifically in this trival case equal to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e. Secondly, we record the indicies of small strings that end at \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e and their beginning position, which is just \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e - \u003ci\u003elength\u003c/i\u003e(\u003ci\u003esmallstring\u003c/i\u003e) + 1\u003c/span\u003e. \u003c/p\u003e\u003cp\u003eThe left work is to use two pointers technique to calculate the required answer. We use \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e1\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e2\u003c/span\u003e to denote the beginning and ending positions of the current range that we are observing. At the same time, we record a “set” which contains the small strings belonging to the current range. \u003c/p\u003e\u003cp\u003eWhen we move \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e2\u003c/span\u003e forward by one step, we add new small strings (if any) to the set, and check is there any small string ending at \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e2\u003c/span\u003e are included in the set. If yes, it means that the current range contains at least one small string and thus we should move \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e1\u003c/span\u003e forward by one step to obtain a new range for the next check. Before \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e1\u003c/span\u003e is increased, all the small strings that start at \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e1\u003c/span\u003e should be deleted from the set. If no, we can further move \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e2\u003c/span\u003e forward to check the next extended range.\u003c/p\u003e\u003cp\u003eAs we use “set” in the STL of C++, the updating of set has complexity of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003elogN\u003c/i\u003e)\u003c/span\u003e, and thus the total complexity is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eNlogN\u003c/i\u003e)\u003c/span\u003e. \u003c/p\u003e\u003c/div\u003e","tags":[]}}