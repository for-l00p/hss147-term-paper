{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":false,"creationTimeSeconds":1518069030,"rating":0,"authorHandle":"klinchuh","modificationTimeSeconds":1518078721,"id":57615,"title":"\u003cp\u003eДерево отрезков\u003c/p\u003e","locale":"ru","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eНиже написан пример дерева отрезков для суммы суммы элементов.\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eint d[N * 4], t[N];\n\nvoid build(int v, int l, int r) { //функция построения дерева на массиве t\n    if(l \u003d\u003d r) {\n        d[v] \u003d t[l];\n    } else {\n        int mid \u003d (l + r) / 2;\n        build(v * 2, l, mid);\n        build(v * 2 + 1, mid + 1, r);\n        d[v] \u003d d[v * 2] + d[v * 2  + 1];\n    }\n}\n\nint get(int v, int l, int r, int ql, int qr) { // функция получения суммы на отрезке массива \n    if(l \u0026gt; qr || r \u0026lt; ql) {\n        return 0;\n    }\n    if(ql \u0026lt;\u003d l \u0026amp;\u0026amp; r \u0026lt;\u003d qr) {\n        return d[v];\n    }\n    int mid \u003d (l + r) / 2;\n    return get(v * 2, l, mid, ql, qr) + get(v * 2 + 1, mid + 1, r, ql, qr);\n}\n\nvoid mod(int v, int l, int r, int pos, int val) { // функция изменения элемента массива\n    if(l \u003d\u003d r) {\n        d[v] \u003d val;\n    } else {\n        int mid \u003d (l + r) /2;\n        if(pos \u0026lt;\u003d mid)\n            mod(v * 2, l, mid, pos, val);\n        else\n            mod(v * 2 + 1, mid + 1, r, pos, val);\n        d[v] \u003d d[v * 2] + d[v * 2 + 1];\n    }\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":[]}}