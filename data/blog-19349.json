{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1437507148,"rating":11,"authorHandle":"akash_goel","modificationTimeSeconds":1437507199,"id":19349,"title":"\u003cp\u003eWhich maximum flow algorithm is this?\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eI read Cormen and Wikipedia pages for Max flow algorithms, but I feel that I\u0027m very confused right now.\u003c/p\u003e\u003cp\u003eIn my understanding, a max flow would basically work as follows:\u003c/p\u003e \u003col\u003e   \u003cli\u003eFind an augmenting path and maintain a parent array. Should be O(E) using BFS.\u003c/li\u003e   \u003cli\u003eUpdate the flow on all the edges on this path using the parent array. O(V) worst case. Update the max flow value.\u003c/li\u003e   \u003cli\u003eRepeat the above steps until no more augmenting paths are found and return the max flow.\u003c/li\u003e \u003c/ol\u003e\u003cp\u003eMy questions are:\u003c/p\u003e\u003cp\u003eQl. What is the limit on the number of times step 1 (bfs) is required?\u003c/p\u003e\u003cp\u003eQ2. Is this Edmond Karp or Dinitz algorithm that I\u0027m talking about?\u003c/p\u003e\u003cp\u003eThis is my first post, so I hope you will point out any problems in the way I\u0027ve framed this question. Thanks.\u003c/p\u003e\u003c/div\u003e","tags":["max-flow","graph-theory","dinitz","edmond-karp"]}}