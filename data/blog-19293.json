{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1437154688,"rating":0,"authorHandle":"prathams","modificationTimeSeconds":1437203587,"id":19293,"title":"\u003cp\u003eHow to solve it\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eWe call a natural number supernatural if it does not contain any ones in its decimal representation and the product of its digits is equal to n. For given n, find how many supernatural numbers exist.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eConstraint\u003c/strong\u003e : The input contains a single integer n not exceeding \u003cspan class\u003d\"tex-span\"\u003e 2Ã—10\u003csup class\u003d\"upper-index\"\u003e9\u003c/sup\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eOutput modulo 101.\u003c/p\u003e\u003cp\u003eI got this problem on \u003ca href\u003d\"http://www.e-olymp.com/en/problems/6082\"\u003elink\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eUPD\u003c/strong\u003e : I solved this problem but only 80% test cases are passing, rest giving TLE, can anyone please suggest how can i improve the below code using some trick or memoization:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e#include\u0026lt;bits/stdc++.h\u0026gt;\nusing namespace std;\n#define MOD 101\n#define LL long long\n#define out(x) cout \u0026lt;\u0026lt; #x \u0026lt;\u0026lt; \u0026quot; : \u0026quot; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; \u0026quot;\\n\u0026quot;;\n\nbool isPrime(LL n) {\n   for(LL i \u003d 2;i * i \u0026lt;\u003d n; i++) {\n      if(n % i \u003d\u003d 0) return false;\n   }\n   return true;\n}\n\nLL ans \u003d 0;\n\nvoid solve(LL n) {\n   if(n \u0026lt;\u003d 1) return;\n   if(isPrime(n)) {\n      if(n \u0026lt; 10) ans \u003d (ans + 1) % MOD;\n      return;\n   }\n   if(n \u0026lt; 10) ans \u003d (ans + 1) % MOD;\n   for(int i \u003d 2;i \u0026lt; 10;i++) {\n      if(n % i \u003d\u003d 0)\n        solve(n / i);\n   }  \n}\n\nint main() {\n   ios_base::sync_with_stdio(false); cin.tie(NULL);\n   LL n; cin \u0026gt;\u0026gt; n;\n   solve(n);\n   cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; endl;\n   return 0;               \n}\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":[]}}