{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":true,"creationTimeSeconds":1525354326,"rating":0,"authorHandle":"elena","modificationTimeSeconds":1525367075,"id":59226,"title":"\u003cp\u003eРабота с классами и интерфейсами\u003c/p\u003e","locale":"ru","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e\u003cem\u003eКраткий конспект лекций о классах и интерфейсах появится позже. Пока — задания по этим темам.\u003c/em\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eЗадание 1.\u003c/strong\u003e \u003c/p\u003e\u003cp\u003eРазработайте указанные ниже классы и приложение, в котором создаются несколько экземпляров разработанных классов. Каждый класс должен быть не \u0026quot;формальным\u0026quot;, а содержать поля, характеризующие описываемый предмет. Инициализация этих полей должна проводиться в конструкторе. Кроме того, должны быть определены методы, меняющие эти поля и предоставляющие значения этих полей. Каждый раз при успешном создании очередного экземпляра класса должно выводиться соответствующее сообщение. \u003c/p\u003e\u003cp\u003eПриложение может иметь как графический, так и консольный интерфейс; должно содержать обработку ошибок пользовательского ввода. \u003cbr /\u003e\u003c/p\u003e\u003cp\u003eПожалуйста, внимательно прочтите первый вариант задания — в нем содержится подробное описание операций, которые должно поддерживать ваше приложение.\u003c/p\u003e\u003cp\u003e\u003cem\u003eПримечание. При разработке классов может оказаться удобным воспользоваться примером из лекции, описывающим автомобили и их шины — он приведен (в урезанном варианте) после всех заданий.\u003c/em\u003e\u003c/p\u003e\u003cp\u003eИндивидуальные задания:\u003c/p\u003e\u003cp\u003eВариант 1. Суда и порты их приписки. Каждый порт должен содержать сведения о судах, приписанных к нему, а каждое судно должно \u0026quot;знать\u0026quot; свой порт. Возможности: \u003c/p\u003e \u003cul\u003e   \u003cli\u003e\u003cp\u003eсоздать порт;\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eсоздать судно (как с портом приписки, так и \u0026quot;свободное\u0026quot;);\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eпереименовать порт;\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eпереименовать судно;\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eназначить судну порт приписки;\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eизменить для судна порт приписки;\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eполучить для выбранного порта актуальный список приписанных к нему судов; \u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eполучить список всех судов, не приписанных ни к какому порту;\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eполучить порт приписки для выбранного судна;\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eудалить судно;\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eудалить порт приписки (два варианта действий — сделать суда не принадлежащими никакому порту, передать все суда в другой порт приписки).\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e\u003cp\u003eВариант 2. Книги и их тематика. В каждой книге должно содержаться указание на ее тему (темы), в каждой теме должен быть список книг.\u003c/p\u003e\u003cp\u003eВариант 3. Принтеры и картриджи. Каждый принтер должен \u0026quot;знать\u0026quot;, какой картридж к нему подходит, а каждый картридж содержит список подходящих принтеров.\u003c/p\u003e\u003cp\u003eВариант 4. Студенты и изучаемые ими дисциплины специализации. На каждой дисциплине специализации существует список изучающих ее студентов, а каждому студенту известно, какие дисциплины специализации он изучает\u003c/p\u003e\u003cp\u003eВариант 5. Авторы и их произведения. Каждое произведение имеет ссылку на своего автора (авторов), каждый автор знает о своих произведениях\u003c/p\u003e\u003cp\u003eВариант 6. Акции и их владельцы. Владелец имеет сведения об акциях, а в акциях фиксируется информация об их владельце\u003c/p\u003e\u003cp\u003eВариант 7. Сотрудники и отделы, в которых они работают. В каждом отделе есть список работающих в нем сотрудников, информация о сотруднике содержит сведения об отделе, в котором он работает\u003c/p\u003e\u003cp\u003eВариант 8. Товары и фирмы, их производящие. В каждой фирме имеется номенклатура товаров, каждый товар содержит сведения о фирме, которой он произведен \u003c/p\u003e\u003cp\u003eВариант 9. Мебельные гарнитуры, содержащие список входящих в них предметов, и собственно эти предметы, на каждом из которых указано, в какой именно гарнитур он входит\u003c/p\u003e\u003cp\u003eВариант 10. Выкройки и их составные части. Каждая выкройка состоит из нескольких частей, на каждой части имеется указание, к какой выкройке эта часть относится\u003c/p\u003e\u003cp\u003eВариант 11. Экспериментальные установки и их компоненты. Каждая установка имеет список компонентов, входящих в ее состав, каждый компонент содержит сведения о том, к какой установке (установкам) он относится\u003c/p\u003e\u003cp\u003eВариант 12. Планеты и луны. Каждая планета имеет список своих спутников (лун), а в описании каждой луны содержится информация о том, спутником какой планеты она является\u003c/p\u003e\u003cp\u003eВариант 13. Команды и их участники. Каждая команда содержит список участников, каждый участник знает, в каокй команде он состоит. \u003c/p\u003e\u003cp\u003eВариант 14. Трамвайные маршруты и остановки. Каждый маршрут содержит список своих остановок, каждая остановка содержит список маршрутов, которые через нее проходят\u003c/p\u003e\u003cp\u003eВариант 15. Группы в социальной сети и их участники. Каждая группа содержит список участников, каждый участник \u0026quot;знает\u0026quot;, в какой группе (группах) он состоит\u003c/p\u003e\u003cp\u003eВариант 16. Метеослужбы и их прогнозы погоды в разных городах (на текущий день). Каждая метеослужба содержит список городов, для которых она формирует прогноз. В каждом городе указана метеослужба (метеослужбы), которые формируют прогноз для него.\u003c/p\u003e\u003cp\u003eВариант 17. Список заданий, выданных студентам. В каждом задании указано, каким студентам оно выдано, у каждого студента есть список полученных им заданий.\u003c/p\u003e\u003cp\u003eВариант 18. Список компьютеров и список программного обеспечения, установленного на них. Для каждого компьютера указано ПО, которое на нем установлено, для каждой единицы ПО указано, на каких компьютерах оно стоит.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eЗадание 2.\u003c/strong\u003e \u003c/p\u003e\u003cp\u003eПридумайте и разработайте иерархию классов, основываясь на следующем предмете (список — см. ниже). \u003c/p\u003e\u003cp\u003eВ иерархии должно быть не менее трех уровней. В каждом классе должен присутствовать хотя бы один уникальный (с точки зрения иерархии) метод и хотя бы один переопределенный метод (с одного из предыдущих уровней иерархии, если таковые есть). \u003c/p\u003e\u003cp\u003eВ иерархии должны быть использованы все модификаторы доступа (обоснованно). На каждом уровне иерархии (кроме первого) должно быть не менее двух классов. \u003c/p\u003e\u003cp\u003eКроме того, должно быть написано приложение, демонстрирующее все возможности вашей иерархии. Приложение может иметь как графический, так и текстовый интерфейс.\u003c/p\u003e\u003cp\u003eПожалуйста, внимательно прочтите первый вариант задания — в нем содержится подробное описание операций, которые должно поддерживать ваше приложение.\u003c/p\u003e\u003cp\u003eСписок предметов:\u003c/p\u003e\u003cp\u003eВариант 1. Жидкость\u003c/p\u003e\u003cp\u003eПриложение должно поддерживать:\u003c/p\u003e \u003cul\u003e   \u003cli\u003e\u003cp\u003eвозможность хранить в едином списке всех объекты иерархии (крайне желательно, чтобы объект мог вывести свое \u0026quot;происхождение\u0026quot; от базового класса);\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eвозможность работать с объектами разных уровней иерархии посредством разных методов (в частности, вызывать те методы, которые появились именно на этом уровне иерархии);\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eвозможность добавлять / удалять / модифицировать объекты.\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e\u003cp\u003eВариант 2. Животное\u003c/p\u003e\u003cp\u003eВариант 3. Диск\u003c/p\u003e\u003cp\u003eВариант 4. Транспортное средство\u003c/p\u003e\u003cp\u003eВариант 5. Пищевой продукт\u003c/p\u003e\u003cp\u003eВариант 6. Емкость\u003c/p\u003e\u003cp\u003eВариант 7. Посуда\u003c/p\u003e\u003cp\u003eВариант 8. Поверхность\u003c/p\u003e\u003cp\u003eВариант 9. Приспособление для воспроизведения\u003c/p\u003e\u003cp\u003eВариант 10. Средство передвижения\u003c/p\u003e\u003cp\u003eВариант 11. Устройство для хранения информации\u003c/p\u003e\u003cp\u003eВариант 12. Мебель\u003c/p\u003e\u003cp\u003eВариант 13. Музыкальный инструмент\u003c/p\u003e\u003cp\u003eВариант 14. Средство обмена сообщениями\u003c/p\u003e\u003cp\u003eВариант 15. Растение\u003c/p\u003e\u003cp\u003eВариант 16. Источник света\u003c/p\u003e\u003cp\u003eВариант 17. Помещение\u003c/p\u003e\u003cp\u003eВариант 18. Учебная дисциплина\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eЗадание 3.\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eПовторите предыдущую разработку, но уже с использованием интерфейсов. Для этого оставьте только \u0026quot;верхний\u0026quot; слой иерархии классов, а все методы, определенные в родительских классах, поместите в интерфейсы. Интерфейсов должно быть несколько, какие-то классы должны реализовывать одну группу интерфейсов, какие-то — другую. Должен быть также общий интерфейс. \u003c/p\u003e\u003cp\u003e\u003cstrong\u003eКраткий пример для Задания 1\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eПриведем краткий пример взаимодействия классов на примере классов автомобиля и шин, которые на нем установлены (впоследствии будет перенесен в конспект лекции).\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e\u003cbr /\u003eclass Tire{\n\n int diam;\n String man;\n Car instOn;\n\n public Tire(){\n diam \u003d 13;\n man \u003d \u0026quot;Nokia\u0026quot;;\n }\n \n void setInstOn(Car s){\n     this.instOn \u003d s;\n }\n \n public String getInfo(){\n String s \u003d\u0026quot;Tire \u0026quot;+man+\u0026quot;, diameter \u003d \u0026quot;+diam;\n return s;\n }\n\n}\n\nclass Car{\n\n Tire lf;\n Tire rf;\n Tire lr;\n Tire rr;\n\n public Car(){\n  System.out.println(\u0026quot;My Car created\u0026quot;);\n  lf \u003d new Tire();\n  lf.setInstOn(this);\n  rf \u003d new Tire();\n  rf.setInstOn(this);\n  lr \u003d new Tire();\n  lr.setInstOn(this);\n  rr \u003d new Tire();\n  rr.setInstOn(this);\n  System.out.println(\u0026quot;Tires installed\u0026quot;);\n  System.out.println(\u0026quot;Left front is \u0026quot;+lf.getInfo());\n }\n\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":[]}}