{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1430904401,"rating":-4,"authorHandle":"lth","modificationTimeSeconds":1430904401,"id":17746,"title":"\u003cp\u003eProblem on a tree\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHi guys.\u003cbr /\u003e I am trying to solve the following problem : \u003cbr /\u003e Given a tree, you must remove an edge and add an edge so that the new tree is connected and diameter of the new tree is smallest possible. Number of vertices are up to 300000.\u003cbr /\u003e When I remove any edge (u,v) I got 2 new trees: one rooted at v and one for which u is leaf. It is obvious that smallest diameter I can achieve is max{d(first tree),d(second tree),d(firs_tree)/2+d(second_tree)/2+1}. Now I can traverse over all edges and remove them and take minimum of those values. Now problem is: I can calculate the diameter of the hanging tree just using dynamic programming on the tree, but I am somehow in trouble of calculating the diameter of the trimmed tree. It seems it is also possible to calculate the diameter of the trimmed tree using dynamic programming but in opposite order, I mean from leaves to root or somehow, but I don\u0027t know how exactly to do that. Can anyone help me or give me some hints ? \u003cbr /\u003e Thanks in advance.\u003cbr /\u003e \u003cbr /\u003e P.S. Problem is not from currently running contest.\u003c/p\u003e\u003c/div\u003e","tags":["graphs","tree","dp on a tree","who cares of tags"]}}