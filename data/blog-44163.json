{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1459696550,"rating":61,"authorHandle":"fmoraes","modificationTimeSeconds":1459696550,"id":44163,"title":"\u003cp\u003eAnnouncing EclipseForces, an Eclipse plugin for Codeforces\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eI am pleased to announce the initial release of \u003ca href\u003d\"https://github.com/fmoraes74/eclipseforces\"\u003eEclipseForces\u003c/a\u003e, a plugin for Eclipse for competing on Codeforces contests.\u003c/p\u003e\u003cp\u003eI have been using it for some time and I feel like it is finally ready for general usage by others. The initial release supports the following features:\u003c/p\u003e \u003cul\u003e   \u003cli\u003eautomatically parse the contest problems and generate stubs for each problem including JUnit test cases for provided samples\u003c/li\u003e   \u003cli\u003eautomatically parse timeout, memory limit, modulo and relative error\u003c/li\u003e   \u003cli\u003esupport for code templates, so you can customize the look and feel of the generated code\u003c/li\u003e   \u003cli\u003eeasily add new testcases by using Ctrl+6 (customizable)\u003c/li\u003e   \u003cli\u003eplugin support for adding additional programming languages (Java supported by the plugin)\u003c/li\u003e \u003c/ul\u003e\u003ch2\u003eInstalling\u003c/h2\u003e\u003cp\u003eTo install, download the plugin from the Github releases page: \u003ca href\u003d\"https://github.com/fmoraes74/eclipseforces/releases\"\u003ehttps://github.com/fmoraes74/eclipseforces/releases\u003c/a\u003e and place it inside the Eclipse plugins directory and restart Eclipse.\u003c/p\u003e\u003ch2\u003eUsing\u003c/h2\u003e\u003cp\u003eTo use it, add the EclipseForces views to your preferred perspectives by using the Window-\u0026gt;Show View-\u0026gt;Other... and adding the Contest List and Problem Statement views.\u003c/p\u003e\u003cp\u003eTo solve problems from a contest, find the contest in the Contest List view (select one of the options in the view menu to refresh) and double-click the desired contest. An Eclipse project will be created with the template class for each problem and accompanying JUnit testcases. You can customize the code template via the preferences for the plugin. \u003c/p\u003e\u003ch2\u003eSupported template variables\u003c/h2\u003e\u003cp\u003eThere are four supported template variables that can be used in the generated code template. They are defined by surrounding the keywords below with dollar sign (couldn\u0027t figure out how to properly show it in the blog output):\u003c/p\u003e \u003cul\u003e   \u003cli\u003eCLASSNAME — name of the class being generated\u003c/li\u003e   \u003cli\u003eCONTEST — name of the contest for the problem\u003c/li\u003e   \u003cli\u003eMODULO — variable with any parsed modulo or blank if none. This will define a fully self contained statement for the generated language\u003c/li\u003e   \u003cli\u003eNAME — name of the problem\u003c/li\u003e \u003c/ul\u003e\u003ch2\u003eSupport\u003c/h2\u003e\u003cp\u003eIf you find any issues with the plugin, please report it via the \u003ca href\u003d\"https://github.com/fmoraes74/eclipseforces/issues\"\u003eIssues\u003c/a\u003e page on the Github project.\u003c/p\u003e\u003cp\u003eI hope you enjoy it.\u003c/p\u003e\u003c/div\u003e","tags":["eclipseforces","eclipse","plugin"]}}