{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":false,"creationTimeSeconds":1471535999,"rating":58,"authorHandle":"CtrlAlt","modificationTimeSeconds":1471721303,"id":46629,"title":"\u003cp\u003eОбзор решений задачи KQUERY\u003c/p\u003e","locale":"ru","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e\u003cem\u003eЗа последнее время у меня набралось определённое количество заметок на различные темы, с которыми до конца не ясно что делать. Скорее всего, для синих эта информация не слишком актуальна, для красных — давно очевидна. Из этих заметок вряд ли получится сделать статьи, а достаточно заинтересованный человек вполне может собрать всю приведённую в них информацию из интернета по частям самостоятельно. Тем не менее, я всё же решил сделать пост (или, может быть несколько) на Codeforces, в надежде, что эти сведения для кого-нибудь окажутся полезными.\u003c/em\u003e\u003c/p\u003e\u003cp\u003eОригинальная задача \u003ca href\u003d\"http://www.spoj.com/problems/KQUERY/\"\u003eKQUERY\u003c/a\u003e формулируется следующим образом. Дан массив \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/3d/e3/3de3a1ab78737b959929b9a5e7cb80acb6b4ed83.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e размера \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/3d/b6/3db639e3b13cf3695a110c12bf0f5199ca96a024.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, а также \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/cb/a5/cba5048588d040a045323d1a266e565753c65441.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e запросов вида \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/99/c0/99c010b06aece58e0c46610caeefce50e30038db.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e — определить количество элементов, больших \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/de/1e/de1e2205e44a30e53772fe149c5b57c6a7d68415.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, на отрезке \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/68/c2/68c2913cee1960f06c71de88677bb62a26b5ec16.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e.\u003c/p\u003e\u003cp\u003eСразу следует заметить, что из-за достаточно малого TL вердикт Accepted по оригинальной задаче получает только одно из приведённых ниже решений. Тем не менее, рассмотрение альтернативных подходов к задаче также не лишено смысла.\u003c/p\u003e\u003cp\u003eOnline-версия задачи KQUERY — \u003ca href\u003d\"http://www.spoj.com/problems/KQUERYO/\"\u003eKQUERYO\u003c/a\u003e. Среди её особенностей — увеличенный TL и некорректные тесты (см. комментарии к задаче). Все показанные online-решения получают применительно к данной задаче вердикт Accepted.\u003c/p\u003e\u003cp\u003eDynamic-версия задачи KQUERY — \u003ca href\u003d\"http://www.spoj.com/problems/KQUERY2/\"\u003eKQUERY2\u003c/a\u003e. В данном посте эта задача (пока) не рассматривается; её обсуждение можно найти \u003ca href\u003d\"//codeforces.com/blog/entry/18470\"\u003eздесь\u003c/a\u003e.\u003c/p\u003e\u003ch4\u003eРешение #1: merge tree\u003c/h4\u003e\u003cp\u003e\u003cem\u003eПрепроцессинг \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/20/a8/20a80e6f88fb8b89f99053e3b8edc2b4fe7c79af.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, ответ на запрос \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/58/27/5827f81bfc4249c7202c355974eb9a4b86e3b7ec.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, online\u003c/em\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://ideone.com/xnup07\"\u003eКод решения\u003c/a\u003e\u003c/p\u003e\u003cp\u003eСоздадим дерево отрезков, у которого в вершине, соответствующей подотрезку \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/7c/5c/7c5cfb4a6259ba733ffab3b72fc378277884b14d.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, хранится отсортированный вектор элементов массива \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/d2/f7/d2f7c8dc9a68fa5dd5bbb8a11e03086ef1e61714.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e (в иностранных источниках такое дерево отрезков иногда называют merge tree). Объединять отсортированные вектора можно при помощи алгоритма STL merge().\u003c/p\u003e\u003cp\u003eПри обработке запроса к отрезку \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/b3/a1/b3a15711bbed5a6fce6b164a08471e51a6c03c3a.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e мы, как обычно, спускаемся к вершинам, подотрезки которых входят в целевой отрезок, и в каждой из этих вершин выполняем двоичный поиск, чтобы определить количество элементов, больших \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/de/1e/de1e2205e44a30e53772fe149c5b57c6a7d68415.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e.\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://youtu.be/dH3vcXHsV-o?t\u003d1532\"\u003eВидео об этом решении\u003c/a\u003e\u003c/p\u003e\u003ch4\u003eРешение #1a: частичное каскадирование\u003c/h4\u003e\u003cp\u003e\u003cem\u003eПрепроцессинг \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/20/a8/20a80e6f88fb8b89f99053e3b8edc2b4fe7c79af.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, ответ на запрос \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/a4/03/a4038e792c2ee937317f783f757e5113ffc433d4.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, online\u003c/em\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://ideone.com/XmD7z2\"\u003eКод решения\u003c/a\u003e\u003c/p\u003e\u003cp\u003eВ предыдущем решении мы использовали двоичный поиск, чтобы в каждой вершине, подотрезок которой входит в отрезок запроса, находить индекс первого элемента, большего \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/de/1e/de1e2205e44a30e53772fe149c5b57c6a7d68415.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. Мы могли бы определять этот индекс за \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/77/93/779302726b0f7eb1ffe589d79155df53ccde749e.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, если бы в каждой вершине была сохранена дополнительная информация.\u003c/p\u003e\u003cp\u003eПусть \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/18/83/1883e3e4e3d5775ce5c7ceb3de7bf35393f1b350.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e — отсортированный вектор, хранящийся в вершине \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/5e/e7/5ee7dafd39be90b8743ef8b57dbad10343efcd8b.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/03/d3/03d3234411fd6eb1f41ca304233ba509f5b46a69.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e и \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/d6/72/d6729351f72379b48325c2cb5026e30ec3e915f4.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e — отсортированные вектора, хранящиеся в её левом и правом потомках. Пусть в вершине \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/5e/e7/5ee7dafd39be90b8743ef8b57dbad10343efcd8b.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e также имеются массивы \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/3f/c6/3fc68ab8eacdde2b246ccac33636932fd3287be8.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e и \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/6d/fb/6dfb527bd47bbf94f40e7a3a04815469914fc395.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, такие что \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/5a/29/5a297404f43f1461ae29db4e38164f3c9b5c2cf3.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e — индекс первого элемента, большего или равного \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/79/55/7955e037f4253f45d6d5ac9926f8455134d4eea3.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, в массиве \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/03/d3/03d3234411fd6eb1f41ca304233ba509f5b46a69.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/a7/e3/a7e35fefaaa69e899ce6bcb3fdf4e98c216c899b.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e — аналогичный индекс в массиве \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/d6/72/d6729351f72379b48325c2cb5026e30ec3e915f4.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. Тогда, зная индекс \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/12/20/122049df163a29ea1e631694b46d263d83449020.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e первого элемента, большего \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/de/1e/de1e2205e44a30e53772fe149c5b57c6a7d68415.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, в массиве вершины \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/5e/e7/5ee7dafd39be90b8743ef8b57dbad10343efcd8b.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, мы за \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/77/93/779302726b0f7eb1ffe589d79155df53ccde749e.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e определяем индекс первого элемента, большего \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/de/1e/de1e2205e44a30e53772fe149c5b57c6a7d68415.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, в массивах вершин-потомков (это \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/5a/29/5a297404f43f1461ae29db4e38164f3c9b5c2cf3.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e и \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/a7/e3/a7e35fefaaa69e899ce6bcb3fdf4e98c216c899b.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e).\u003c/p\u003e\u003cp\u003eМассивы \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/3f/c6/3fc68ab8eacdde2b246ccac33636932fd3287be8.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e и \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/6d/fb/6dfb527bd47bbf94f40e7a3a04815469914fc395.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e формируются в функции build(), когда выполняется объединение двух отсортированных массивов в один. Можно выполнять это объединение вручную, как в сортировке слиянием, попутно заполняя массивы \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/3f/c6/3fc68ab8eacdde2b246ccac33636932fd3287be8.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e и \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/6d/fb/6dfb527bd47bbf94f40e7a3a04815469914fc395.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e.\u003c/p\u003e\u003cp\u003eПри обработке запроса достаточно выполнить бинпоиск в корневой вершине, чтобы найти индекс первого элемента, большего \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/de/1e/de1e2205e44a30e53772fe149c5b57c6a7d68415.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, а далее обновлять его значениями из \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/3f/c6/3fc68ab8eacdde2b246ccac33636932fd3287be8.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e и \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/6d/fb/6dfb527bd47bbf94f40e7a3a04815469914fc395.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. Данную технику называют \u003ca href\u003d\"http://blog.ezyang.com/2012/03/you-could-have-invented-fractional-cascading/\"\u003eчастичным каскадированием (fractional cascading)\u003c/a\u003e, она позволяет снять лишний логарифм при обработке запросов.\u003c/p\u003e\u003cp\u003eПрактика, однако, показывает, что несмотря на лучшую асимптотическую оценку, \u003ca href\u003d\"//codeforces.com/blog/entry/21892\"\u003eданное решение работает на 30-40% медленнее предыдущего\u003c/a\u003e, поэтому пользоваться им не стоит.\u003c/p\u003e\u003cp\u003e\u003cimg alt\u003d\" \" src\u003d\"/predownloaded/47/54/475462fdaef2857a2365db71463f4b91de1d1d0c.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003ch4\u003eРешение #2: сканирующая прямая по значениям (ординатам)\u003c/h4\u003e\u003cp\u003e\u003cem\u003eПрепроцессинг \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/94/0c/940c6dc1948589199edb727668e66d7a4de7de83.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, ответ на запрос \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/a4/03/a4038e792c2ee937317f783f757e5113ffc433d4.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, offline\u003c/em\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://ideone.com/wCdmq9\"\u003eКод решения\u003c/a\u003e\u003c/p\u003e\u003cp\u003eРассмотрим геометрическую интерпретацию исходной задачи. Если элементы массива \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/3d/e3/3de3a1ab78737b959929b9a5e7cb80acb6b4ed83.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e представить на плоскости в виде точек \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/a6/6b/a66bc83d5600fcd9917d6979678651a73237377b.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, то ответом на запрос \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/99/c0/99c010b06aece58e0c46610caeefce50e30038db.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e является количество точек, лежащих выше отрезка \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/5a/f9/5af9c7f6e6bb0e5b5e33c476829c92413c0ffb42.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003eВведём два вида событий: появление точки и появление запроса. Отсортируем все события в порядке убывания ординат (для точек это \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/31/bb/31bb098657ab69f41896c7c03ee5c4d55727e386.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, для запросов — \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/de/1e/de1e2205e44a30e53772fe149c5b57c6a7d68415.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e). По абсциссам построим стандартное дерево отрезков для суммы, в котором будем отмечать появление точек.\u003c/p\u003e\u003cp\u003eПри обработке появления точки присваиваем в дереве отрезков единицу её абсциссе \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/12/20/122049df163a29ea1e631694b46d263d83449020.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. При обработке появления запроса определяем сумму на отрезке \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/b3/a1/b3a15711bbed5a6fce6b164a08471e51a6c03c3a.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. Заметим, что если разные события имеют одинаковую ординату, в первую очередь должны обрабатываться события, связанные с запросами.\u003c/p\u003e\u003cp\u003e\u003cimg alt\u003d\" \" src\u003d\"/predownloaded/9e/4b/9e4bc4fac0994076bcc62069f4ff9b28ea9c3eaf.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003ch4\u003eРешение #3: сканирующая прямая по индексам (абсциссам)\u003c/h4\u003e\u003cp\u003e\u003cem\u003eПрепроцессинг \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/94/0c/940c6dc1948589199edb727668e66d7a4de7de83.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, ответ на запрос \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/19/31/19316b90f62a4b3196158d91ba3a57eda4f8be66.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, offline\u003c/em\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://ideone.com/2zA3YD\"\u003eКод решения\u003c/a\u003e\u003c/p\u003e\u003cp\u003eПродолжим использовать ту же геометрическую интерпретацию задачи, что и для предыдущего решения, но теперь сканирующая прямая движется не сверху вниз, а слева направо.\u003c/p\u003e\u003cp\u003eВведём три вида событий: появление точки, начало запроса, конец запроса. Отсортируем все события в порядке возрастания абсцисс (для точек это \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/12/20/122049df163a29ea1e631694b46d263d83449020.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, для начал запросов — \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/7d/e1/7de1ad353074d06873bd07a6b04b208512d13dd3.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, для концов запросов — \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/2b/e1/2be1626ec27d404466d4e93f80697b8ced7e9cc4.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e). По ординатам построим стандартное дерево отрезков для суммы, в котором будем отмечать появление точек.\u003c/p\u003e\u003cp\u003eПри обработке появления точки присваиваем в дереве отрезков единицу её ординате \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/31/bb/31bb098657ab69f41896c7c03ee5c4d55727e386.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. При обработке начала запроса вычитаем из ответа сумму на отрезке \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/3d/00/3d00625de32a180891f77638a7c7492d87b39ccb.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, при обработке конца запроса добавляем к ответу сумму на отрезке \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/3d/00/3d00625de32a180891f77638a7c7492d87b39ccb.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. Если разные события имеют одинаковую абсциссу, сначала обрабатываются начала запросов, затем точки, затем концы запросов.\u003c/p\u003e\u003cp\u003e\u003cimg alt\u003d\" \" src\u003d\"/predownloaded/10/53/105386f332bc5b0e99f426e3a3142aa0cab7161b.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003ch4\u003eРешение #3a: неявное дерево отрезков\u003c/h4\u003e\u003cp\u003e\u003cem\u003eПрепроцессинг \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/94/0c/940c6dc1948589199edb727668e66d7a4de7de83.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, ответ на запрос \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/3f/4b/3f4b434313df851b380e8dd88001f0c15c1a0488.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, offline\u003c/em\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://ideone.com/sNS0Xb\"\u003eКод решения\u003c/a\u003e\u003c/p\u003e\u003cp\u003eИспользуем сжатие координат или неявное дерево отрезков, чтобы снизить потребление памяти с \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/8c/ec/8cec8b5dd31bc1173489bfcff3e152c6004bd9fd.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e до \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/04/fc/04fc703aed4241003dea041d632a4f8fc2e6ae03.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. Время обработки запроса при этом сократится от \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/19/31/19316b90f62a4b3196158d91ba3a57eda4f8be66.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e до \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/3f/4b/3f4b434313df851b380e8dd88001f0c15c1a0488.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e.\u003c/p\u003e\u003cp\u003eНеявное дерево отрезков строится не в массиве, а полностью на указателях. Новые вершины создаются только в том случае, если к ним обращается функция модификации дерева.\u003c/p\u003e\u003ch4\u003eРешение #3b: персистентное дерево отрезков\u003c/h4\u003e\u003cp\u003e\u003cem\u003eПрепроцессинг \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/20/a8/20a80e6f88fb8b89f99053e3b8edc2b4fe7c79af.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, ответ на запрос \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/a4/03/a4038e792c2ee937317f783f757e5113ffc433d4.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, online\u003c/em\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://ideone.com/IOxfS0\"\u003eКод решения\u003c/a\u003e\u003c/p\u003e\u003cp\u003eОставим в геометрической интерпретации только точки и сохраним версии неявного дерева отрезков для каждого индекса \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/12/20/122049df163a29ea1e631694b46d263d83449020.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. Каждая новая версия не дублирует все вершины предыдущей, а добавляет только \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/a4/03/a4038e792c2ee937317f783f757e5113ffc433d4.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e изменённых вершин.\u003c/p\u003e\u003cp\u003eДля ответа на запрос \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/99/c0/99c010b06aece58e0c46610caeefce50e30038db.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e требуется вычислить сумму на отрезке \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/a3/49/a3494520f87ecb997ddb53421802c02b4db81fd3.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e в версии \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/2b/e1/2be1626ec27d404466d4e93f80697b8ced7e9cc4.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e и вычесть сумму на отрезке \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/a3/49/a3494520f87ecb997ddb53421802c02b4db81fd3.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e в версии \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/a2/13/a213be3bb3e754ecd34115c6d17f467adb01b97f.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e.\u003c/p\u003e\u003ch4\u003eРешение #4: sqrt-декомпозиция\u003c/h4\u003e\u003cp\u003e\u003cem\u003eПрепроцессинг \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/20/a8/20a80e6f88fb8b89f99053e3b8edc2b4fe7c79af.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, ответ на запрос \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/6a/9a/6a9a49896e935ee04de445af512370ac8c6e3910.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, online\u003c/em\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://ideone.com/qXTfr3\"\u003eКод решения\u003c/a\u003e\u003c/p\u003e\u003cp\u003eРазделим исходный массив на блоки размером \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/08/86/0886ffa0a7aa6934b4f603d9f8a47f8ed71c9cb0.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e (получится \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/ed/1d/ed1deda41287dfee4812c382bf7f5ae170c890a7.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e блоков). Отсортируем каждый из блоков.\u003c/p\u003e\u003cp\u003eПусть выполняется запрос к отрезку \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/f6/29/f6290226d0436d2c28711a87f562e7725f1761a1.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. В тех блоках, которые полностью покрываются отрезком запроса, количество чисел, больших \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/de/1e/de1e2205e44a30e53772fe149c5b57c6a7d68415.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, может быть найдено двоичным поиском. На концах отрезка \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/f6/29/f6290226d0436d2c28711a87f562e7725f1761a1.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, не покрывающих полностью соответствующие блоки (а также в том случае, когда \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/7d/e1/7de1ad353074d06873bd07a6b04b208512d13dd3.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e и \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/2b/e1/2be1626ec27d404466d4e93f80697b8ced7e9cc4.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e принадлежат одному блоку), ответ считается наивным методом за линейное время. Таким образом, время ответа на запрос выражается как \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/ff/b9/ffb9ff692d06d70200636f2d143503bc2060baec.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e.\u003c/p\u003e\u003cp\u003eПри \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/ff/f6/fff6288963c1483ecd267d0cd87e7a2b84a608f4.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e получаем классическую sqrt-декомпозицию, имеющую время обработки запроса \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/6a/9a/6a9a49896e935ee04de445af512370ac8c6e3910.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. Можно попытаться улучшить это значение, подобрав размер \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/08/86/0886ffa0a7aa6934b4f603d9f8a47f8ed71c9cb0.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e так, чтобы минимизировать выражение \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/01/84/0184b71e8b544604a4f88e7c8fb4c8aa677482aa.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. При \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/c5/33/c5331b0b2a59f20e61306f81873742117183f225.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e таким значением будет \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/8e/00/8e00b488881d95a0b1fd5eba33654fbbf8f444cc.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. Тем не менее, фактическое увеличение производительности по сравнению с sqrt-декомпозицией составляет ~5%, что влечёт общую нецелесообразность подобной оптимизации.\u003c/p\u003e\u003ch4\u003eСравнение быстродействия решений\u003c/h4\u003e\u003cp\u003eСформируем массив \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/3d/e3/3de3a1ab78737b959929b9a5e7cb80acb6b4ed83.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e размера \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/f4/a1/f4a15f735b241136db52e253aeb1371d51f6d4fe.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, заполненный случайными числами из диапазона \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/f3/5f/f35ffd21a2dfc2ea6d24e99581158dec32c1cf8a.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. Затем выполним \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/65/0b/650bbc9de529091d262a2648b9cb6cf40b40b5ac.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e случайных KQUERY-запросов к данному массиву. Для каждого значения \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/aa/6c/aa6cd582ae888ab2f2958e61e133cefcde912a4c.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e произведём 10 тестов, в качестве итогового времени возьмём среднее.\u003c/p\u003e\u003cp\u003e\u003cimg alt\u003d\" \" src\u003d\"/predownloaded/e4/f9/e4f9df82cbdd2191e896bc84f16945906f3594da.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003eМожно видеть, что наиболее быстрым из online-решений является использование дерева отрезков с отсортированными подмассивами в вершинах, имеющее асимптотику \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/58/27/5827f81bfc4249c7202c355974eb9a4b86e3b7ec.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e на запрос (!).\u003c/p\u003e\u003cp\u003eКак было упомянуто ранее, в оригинальной задаче \u003ca href\u003d\"http://www.spoj.com/problems/KQUERY/\"\u003eKQUERY\u003c/a\u003e вердикт Accepted получает только offline-решение #2 (сканирующая прямая по убыванию ординат). Можно попробовать произвести (неасимптотические) оптимизации других решений: не использовать ООП-стиль, заменить std::vector на статические массивы и т. д. Описание оптимизаций, достойных внимания, приветствуется в комментариях.\u003c/p\u003e\u003ch4\u003eДругие задачи, сводящиеся к KQUERY\u003c/h4\u003e\u003cp\u003e\u003cstrong\u003eКоличество различных чисел на отрезке (\u003ca href\u003d\"http://www.spoj.com/problems/DQUERY/\"\u003eDQUERY\u003c/a\u003e)\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eСуществует простое сведение задачи DQUERY к задаче KQUERY за время \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/f0/d7/f0d7a68e3f961bf99a691fbd4aa38a84e195540d.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e.\u003c/p\u003e\u003cp\u003eОпределим массив \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/b3/dd/b3ddf72b20f020cd3194ba5f5e9e87ce326f5574.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, такой что \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/ed/7f/ed7f03b1ed813e73e2bd52b63bb8b0b113f7118f.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. Другими словами, \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/12/20/122049df163a29ea1e631694b46d263d83449020.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e-й элемент массива \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/b3/dd/b3ddf72b20f020cd3194ba5f5e9e87ce326f5574.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e содержит индекс следующего справа элемента, равного \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/31/bb/31bb098657ab69f41896c7c03ee5c4d55727e386.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e (если \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/31/bb/31bb098657ab69f41896c7c03ee5c4d55727e386.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e — последнее появление элемента, то \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/3d/95/3d95658db0c2fe74eb06fa3c47b6b986f44a2d83.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e).\u003c/p\u003e\u003cp\u003eКоличество различных элементов на отрезке — это количество элементов, справа от которых на отрезке нет равных им, то есть количество таких \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/10/59/10595a7b5c3282bcd417187e1ce8503dbe6a554e.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, что \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/74/e7/74e72b0352b903b4d6f2aadc0c95eadd3d322a2b.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. Таким образом, результат запроса DQUERY \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/cc/31/cc31a8e064a74ff2f9a0e60a3cc488646db389f5.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e к массиву \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/3d/e3/3de3a1ab78737b959929b9a5e7cb80acb6b4ed83.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e равен результату запроса KQUERY \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/5c/93/5c934ecc7e9803810cbf6c63fe2a5e79e5efbb82.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e к массиву \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/b3/dd/b3ddf72b20f020cd3194ba5f5e9e87ce326f5574.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e.\u003c/p\u003e\u003cp\u003eНа spoj.com задачу DQUERY можно сдать с использованием любого из показанных выше решений, кроме самого медленного (#4, sqrt-декомпозиция).\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"//codeforces.com/blog/entry/8962\"\u003eОбсуждение задачи на Codeforces\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eK-я порядковая статистика на отрезке (\u003ca href\u003d\"http://www.spoj.com/problems/MKTHNUM/\"\u003eMKTHNUM\u003c/a\u003e)\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eИспользуя бинарный поиск по ответу, любое online-решение задачи KQUERY можно преобразовать в решение задачи MKTHNUM, асимптотика которого будет в \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/c9/11/c911dfee307e8f6b242c430cc02b00c3e94d0a4e.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e раз выше: из решений KQUERY с асимптотикой \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/a4/03/a4038e792c2ee937317f783f757e5113ffc433d4.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e и \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/58/27/5827f81bfc4249c7202c355974eb9a4b86e3b7ec.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e получаются решения MKTHNUM с асимптотикой \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/5a/73/5a73510c74aa0c428bf1cf59fcdb16a997069ef1.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/42/e5/42e5313d7d72cd86b70395b32dfada58e0628199.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e соответственно.\u003c/p\u003e\u003cp\u003eНа spoj.com задачу MKTHNUM можно сдать с использованием любого из online-решений, кроме самого медленного (#4, sqrt-декомпозиция). В решении #3b нужно аккуратно учитывать отрицательные элементы массива.\u003c/p\u003e\u003cp\u003eВажно, что эта задача имеет online-решение с временем обработки запроса \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/a4/03/a4038e792c2ee937317f783f757e5113ffc433d4.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. Это решение (не рассматриваемое здесь подробно) получается из решения #3b, но вместо бинарного поиска по ответу используется параллельный спуск по деревьям отрезков версий \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/2b/e1/2be1626ec27d404466d4e93f80697b8ced7e9cc4.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e и \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/a2/13/a213be3bb3e754ecd34115c6d17f467adb01b97f.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e.\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"//codeforces.com/blog/entry/2954\"\u003eОбсуждение задачи на Codeforces\u003c/a\u003e\u003c/p\u003e\u003cp\u003eРешения указанных задач также приведены в \u003ca href\u003d\"http://opentrains.mipt.ru/zksh/files/zksh2015/lectures/mipt-2014-burunduk1-ds.pdf\"\u003eлекции ЗКШ 2015\u003c/a\u003e (автор \u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/burunduk1\" title\u003d\"International Grandmaster burunduk1\"\u003eburunduk1\u003c/a\u003e).\u003c/p\u003e\u003c/div\u003e","tags":["kquery","дерево отрезков","сканирующая прямая"]}}