{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1504632329,"rating":5,"authorHandle":"1am","modificationTimeSeconds":1504633950,"id":54348,"title":"\u003cp\u003eDay 1 Review\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003ch1\u003eNext Array\u003c/h1\u003e\u003cp\u003eThe first topic we discussed was building a next array for problem Not Equal on a Segment. The next array will store the nearest index to my right that doesn\u0027t equal my value. \u003cbr /\u003e\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eif (arr[i] !\u003d arr[i + 1]) after[i] \u003d i + 1;\nelse after[i] \u003d after[i + 1];\n\u003c/code\u003e\u003c/pre\u003e\u003ch1\u003eBinary Search the Answer\u003c/h1\u003e\u003cp\u003eWe used binary search on the minimum height of the flower to solve problem Present. The check is greedy: \u003cbr /\u003e start at index one, and add to a counter the mid — its height. Keep a cumulative sum with you while you move; if you added x to the height of the ith flower, subtract x from the (w+ i) flower. Then adjust the flowers heights based on the cumulative sum.\u003c/p\u003e\u003ch1\u003eMeet in the middle\u003c/h1\u003e\u003cp\u003eTo solve Anya and Cubes, we were able to reduce the complexity of our problem from O (3 ^n) to O( 3^(n/2) *n * lg (3^(n/2))). We calculate all possible sums we can get from the first half, and store in a map the sum with the corresponding k. Then when we go to do all possible sums from the second half, we need to add to the answer the number of ways I can make S- sum such that the number of exclamation marks I use in both halves doesn\u0027t exceed K. \u003c/p\u003e\u003cp\u003eHere is the code for emergency reference: \u003ca href\u003d\"https://ideone.com/mEtlky\"\u003ehttps://ideone.com/mEtlky\u003c/a\u003e\u003c/p\u003e\u003ch1\u003eDynamic Programming with Bitmasks\u003c/h1\u003e\u003cp\u003eWe solved problem Kefa and Dishes using dynamic programming, with a bitmask as our state. The point of that is that I always need to know what meals I have eaten so far as so not to eat them again. So a bitmask is just a number, where the ith bit is 1 if I ate the ith meal, and 0 otherwise.\u003c/p\u003e\u003cp\u003eTo check if a bit is on, all you must do is check if((1 \u0026lt;\u0026lt; i) \u0026amp; mask)), then it is on. To turn the ith bit on, the mask now becomes (1 \u0026lt;\u0026lt; i) | mask. Where (1 \u0026lt;\u0026lt;i) is 2 ^i, or 1 left shifted i bits.\u003c/p\u003e\u003cp\u003eHere is the code for extreme emergency reference: \u003ca href\u003d\"https://ideone.com/A2ugJn\"\u003ehttps://ideone.com/A2ugJn\u003c/a\u003e\u003c/p\u003e\u003ch1\u003eOther Topics\u003c/h1\u003e\u003cp\u003eThe other problems and concepts left that we didn\u0027t discuss are: \u003cbr /\u003e 1. Floyd Warshall — (problem \u003ca href\u003d\"//codeforces.com/problemset/problem/25/C\"\u003eRoads in Berland\u003c/a\u003e)\u003cbr /\u003e \u003ca href\u003d\"https://www.youtube.com/watch?v\u003dLwJdNfdLF9s\"\u003ehttps://www.youtube.com/watch?v\u003dLwJdNfdLF9s\u003c/a\u003e\u003cbr /\u003e 2. Small to Big — (problem \u003ca href\u003d\"//codeforces.com/problemset/problem/600/E\"\u003eLomsat gelral\u003c/a\u003e)\u003cbr /\u003e \u003ca href\u003d\"//codeforces.com/blog/entry/21827\"\u003ehttp://codeforces.com/blog/entry/21827\u003c/a\u003e\u003cbr /\u003e 3. Lowest Common Ancestor (LCA) — (problem \u003ca href\u003d\"//codeforces.com/problemset/problem/191/C\"\u003eFools and Roads\u003c/a\u003e)\u003cbr /\u003e \u003ca href\u003d\"https://www.youtube.com/watch?v\u003dctZ7fjMbPWE\"\u003ehttps://www.youtube.com/watch?v\u003dctZ7fjMbPWE\u003c/a\u003e\u003cbr /\u003e 4. Trie — (problem \u003ca href\u003d\"//codeforces.com/problemset/problem/271/D\"\u003eGood Substrings\u003c/a\u003e)\u003cbr /\u003e \u003ca href\u003d\"https://www.youtube.com/watch?v\u003dAXjmTQ8LEoI\"\u003ehttps://www.youtube.com/watch?v\u003dAXjmTQ8LEoI\u003c/a\u003e\u003cbr /\u003e 5. Dijkstra — (problem \u003ca href\u003d\"//codeforces.com/problemset/problem/301/B\"\u003eYaroslav and Time\u003c/a\u003e)\u003cbr /\u003e 6. BFS — (problem \u003ca href\u003d\"//codeforces.com/problemset/problem/253/C\"\u003eText Editor\u003c/a\u003e)\u003cbr /\u003e 7. Disjoint Sets — (problem \u003ca href\u003d\"//codeforces.com/problemset/problem/455/C\"\u003eCivilization\u003c/a\u003e)\u003cbr /\u003e 8. Two pointers — (problem \u003ca href\u003d\"//codeforces.com/problemset/problem/279/B\"\u003eBooks\u003c/a\u003e)\u003cbr /\u003e \u003cbr /\u003e If you have any issues with any of the above topics, make sure to review it and solve the corresponding problem asap. If you are still having problems with it, write a comment on this blog and we will try to help you out as fast as we can.\u003c/p\u003e\u003cp\u003e(ONLY) For those who cannot attend, here is the link to the virtual contest tomorrow: \u003ca href\u003d\"//codeforces.com/gym/100609/attachments\"\u003ehttp://codeforces.com/gym/100609/attachments\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e","tags":[]}}