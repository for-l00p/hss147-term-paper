{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1456261240,"rating":12,"authorHandle":"binary_eagle","modificationTimeSeconds":1456261240,"id":43318,"title":"\u003cp\u003ePersistent Segment Tree Help Needed.\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHi Codeforces Community,\u003c/p\u003e\u003cp\u003eI recently learnt about segment trees and enjoyed it a lot. Right now, I am trying to solve a problem \u003ca href\u003d\"http://www.spoj.com/problems/MKTHNUM/\"\u003ehttp://www.spoj.com/problems/MKTHNUM/\u003c/a\u003e. \u003c/p\u003e\u003cp\u003eThe approach I used was to build the segment tree but maintain a sorted array at each segment. Afterwards, for each query [L, R], I got all the disjoint segments that form [L, R] and merged them recursively in order to answer query. I realize that there is a faster way to answer each query in lgn, (lgn)^2 times. I also think it is related with persistent segment tree.\u003c/p\u003e\u003cp\u003eI have tried to access Anudeep\u0027s tutorial on it but it is not loading. Please can someone help with an example or idea of how Persistent segment trees work?\u003c/p\u003e\u003cp\u003eThank you.\u003c/p\u003e\u003c/div\u003e","tags":["trees","segment trees","persistent segment trees","query"]}}