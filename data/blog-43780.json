{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1457892618,"rating":17,"authorHandle":"Akshat.saxena21","modificationTimeSeconds":1457892618,"id":43780,"title":"\u003cp\u003eComparison Between endl and \\n in C++\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eThough there is no difference between the working of endl and \\n. Both work as a ‘enter Key’. But there is a huge difference between their working mechanism. Endl flushes the output buffer and ‘\\n’ doesn’t. if you want the buffer flushed frequently, use ‘\\n’. if you do, use endl.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eEndl is actually slower\u003c/strong\u003e because it forces a flush, which actually unnecessary. You would need to force a flush right before prompting the user for input from cin, but not \u003cstrong\u003ewhen writing a million lines of output. Write ‘\\n ’ instead of endl.\u003c/strong\u003e **** The only difference is that std::endl flushes the output buffer, and \u0027\\n\u0027 doesn\u0027t. If you don\u0027t want the buffer flushed frequently, use \u0027\\n\u0027. If you do (for example, if you want to get all the output, and the program is unstable), use std::endl.\u003c/p\u003e\u003cp\u003eThe difference can be illustrated by the following: std::cout \u0026lt;\u0026lt; std::endl; is equivalent to std::cout \u0026lt;\u0026lt; \u0027\\n\u0027 \u0026lt;\u0026lt; std::flush; So, • Use std::endl If you want to force an immediate flush to the output. if you are in a command line app and want to guarantee that the user can see the output immediately. • Use \\n if you are in a worried about performance (which is probably not the case if you are using the \u0026lt;\u0026lt; operator). I use \\n on most lines. Then use std::endl at the end of a paragraph (but that is habit it is usually not necessary). Contrary to other claims, the \\n character is mapped to the correct platform end of line sequence only if the stream is going to a file (std::cin and std::cout being special but still files (or file-like)).\u003c/p\u003e\u003c/div\u003e","tags":["c++","endl","escape sequence"]}}