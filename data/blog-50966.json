{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1489431602,"rating":7,"authorHandle":"ulna","modificationTimeSeconds":1489431699,"id":50966,"title":"\u003cp\u003eTime limits for old problems is too strict ?\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eLately I have been solving this problem, \u003ca href\u003d\"//codeforces.com/contest/121/problem/E\"\u003elucky array\u003c/a\u003e. I implmented a O(m log n + 30 * n log n) where n, m \u0026lt;\u003d 1e5(\u003ca href\u003d\"//codeforces.com/contest/121/submission/25459382\"\u003emy submission\u003c/a\u003e). My solution got tle in some test cases. And I have found that the solution in the editorial is the same as mine. Then I tried using bottom-up segment tree instead of top-down but it didn\u0027t aid the issue. \u003c/p\u003e\u003cp\u003eI think the main reason that causes the tle is because the execution time is multiplied by 2. And that is too much. I had once encounter the same issue but with different tasks, I managed to optimized well and passed. But I couldn\u0027t this time. I think that maybe the time limit should be increased if the execution time have to be multiplied by 2 ? Or it would become a constant optimizing problem.\u003c/p\u003e\u003c/div\u003e","tags":["old problem","ggwp","cf \u003d constant failure"]}}