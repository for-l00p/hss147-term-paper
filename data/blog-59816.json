{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1527966059,"rating":34,"authorHandle":"Kognition","modificationTimeSeconds":1527966059,"id":59816,"title":"\u003cp\u003eCircle Sum Queries\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eA friend told me a problem that he had been trying to optimize for a personal graphics project, and it involved having an \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eh\u003c/i\u003e × \u003ci\u003ew\u003c/i\u003e\u003c/span\u003e grid, and wanting to do some pre-processing to answer circle-sum queries. A circle here would be defined as having some center, \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ey\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ec\u003c/i\u003e\u003c/sub\u003e, \u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ec\u003c/i\u003e\u003c/sub\u003e)\u003c/span\u003e, where \u003cspan class\u003d\"tex-span\"\u003e1 ≤ \u003ci\u003ey\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ec\u003c/i\u003e\u003c/sub\u003e ≤ \u003ci\u003eh\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e1 ≤ \u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ec\u003c/i\u003e\u003c/sub\u003e ≤ \u003ci\u003ew\u003c/i\u003e\u003c/span\u003e and some radius \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003er\u003c/i\u003e\u003c/span\u003e, and it is the set of integer grid points \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ey\u003c/i\u003e, \u003ci\u003ex\u003c/i\u003e)\u003c/span\u003e such that \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ex\u003c/i\u003e - \u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ec\u003c/i\u003e\u003c/sub\u003e)\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e + (\u003ci\u003ey\u003c/i\u003e - \u003ci\u003ey\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ec\u003c/i\u003e\u003c/sub\u003e)\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e ≤ \u003ci\u003er\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eThe progress he\u0027s made is that in \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e((\u003ci\u003ehw\u003c/i\u003e)\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e)\u003c/span\u003e pre-processing, you can just precompute all the possible queries, so one possible set of complexities is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e((\u003ci\u003ehw\u003c/i\u003e)\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e)\u003c/span\u003e pre-processing and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(1)\u003c/span\u003e queries. Another possibility is to precompute prefix sums in \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003ehw\u003c/i\u003e)\u003c/span\u003e time and answer the queries in \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003er\u003c/i\u003e)\u003c/span\u003e time.\u003c/p\u003e\u003cp\u003eIs there any clever way to get a better set of pre-processing and query complexity than the two methods mentioned above?\u003c/p\u003e\u003c/div\u003e","tags":[]}}