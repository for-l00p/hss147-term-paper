{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1517116272,"rating":-1,"authorHandle":"Akikaze","modificationTimeSeconds":1517116350,"id":57385,"title":"\u003cp\u003eEditorial — Contest for D17 (23-01-2018 and 26-01-2018)\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eChân thành cảm ơn tới \u003ca class\u003d\"rated-user user-green\" href\u003d\"/profile/duonglee\" title\u003d\"Pupil duonglee\"\u003eduonglee\u003c/a\u003e, \u003ca class\u003d\"rated-user user-cyan\" href\u003d\"/profile/thanthoai999999999\" title\u003d\"Specialist thanthoai999999999\"\u003ethanthoai999999999\u003c/a\u003e, \u003ca class\u003d\"rated-user user-black\" href\u003d\"/profile/nghiatd_16\" title\u003d\"Unrated, nghiatd_16\"\u003enghiatd_16\u003c/a\u003e và \u003ca class\u003d\"rated-user user-cyan\" href\u003d\"/profile/neko_nyaa\" title\u003d\"Specialist neko_nyaa\"\u003eneko_nyaa\u003c/a\u003e vì đã đóng góp đề, và cảm ơn tới \u003ca class\u003d\"rated-user user-green\" href\u003d\"/profile/lananh98.ptit\" title\u003d\"Pupil lananh98.ptit\"\u003elananh98.ptit\u003c/a\u003e và \u003ca class\u003d\"rated-user user-cyan\" href\u003d\"/profile/neko_nyaa\" title\u003d\"Specialist neko_nyaa\"\u003eneko_nyaa\u003c/a\u003e đã giúp mình với vai trò testers. ;)\u003c/p\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eBài A - U23 Việt Nam vô địch\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eTác giả: \u003ca class\u003d\"rated-user user-green\" href\u003d\"/profile/duonglee\" title\u003d\"Pupil duonglee\"\u003eduonglee\u003c/a\u003e\u003c/p\u003e\u003cp\u003eĐây là một bài reverse problem (bài toán ngược, chỉ có input/output mẫu và phải suy luận lại đề bài).\u003c/p\u003e\u003cp\u003eTừ hình vẽ, ta cũng có thể hiểu được đề bài: cho tọa độ điểm B và một chuỗi hành động di chuyển, tọa độ xuất phát là (0,0), hãy cho biết sau khi thực hiện hết chuỗi hành động thì ta có thể kết thúc tại B không?\u003c/p\u003e\u003cp\u003eBài tập này có 2 vấn đề chính:\u003c/p\u003e \u003cul\u003e   \u003cli\u003e\u003cp\u003eHành động \u0026quot;U/D\u0026quot; dịch chuyển 2 đơn vị.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eOutput có dấu chấm. (really? tui sẽ đổ tội cho Dương Lee về vụ này -_- )\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e\u003cp\u003eTham khảo code đáp án tại \u003ca href\u003d\"https://ideone.com/GC5fHU\"\u003eđây.\u003c/a\u003e (viết bởi \u003ca class\u003d\"rated-user user-black\" href\u003d\"/profile/nghiatd_16\" title\u003d\"Unrated, nghiatd_16\"\u003enghiatd_16\u003c/a\u003e)\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eBài B - Tidus\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eTác giả: \u003ca class\u003d\"rated-user user-cyan\" href\u003d\"/profile/thanthoai999999999\" title\u003d\"Specialist thanthoai999999999\"\u003ethanthoai999999999\u003c/a\u003e\u003c/p\u003e\u003cp\u003eBài này có thể giải bằng phương pháp brute-force (duyệt trâu).\u003c/p\u003e\u003cp\u003eTa hoàn toàn có thể khởi tạo xâu gồm các số từ 1 tới N viết liên tiếp, sau đó tìm lần xuất hiện đầu tiên của xâu biểu diễn số N. Việc này có thể dễ dàng thực hiện bằng hàm find của STL.\u003c/p\u003e\u003cp\u003eĐộ phức tạp của phương pháp này là O(N*log10(N)).\u003c/p\u003e\u003cp\u003eTham khảo code đáp án tại \u003ca href\u003d\"https://ideone.com/XkapRQ\"\u003eđây.\u003c/a\u003e (viết bởi \u003ca class\u003d\"rated-user user-black\" href\u003d\"/profile/nghiatd_16\" title\u003d\"Unrated, nghiatd_16\"\u003enghiatd_16\u003c/a\u003e)\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eBài C - Nguyên tử ổn định\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eTác giả: \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/Akikaze\" title\u003d\"Expert Akikaze\"\u003eAkikaze\u003c/a\u003e\u003c/p\u003e\u003cp\u003eĐây là một bài reverse problem (bài toán ngược, chỉ có input/output mẫu và phải suy luận lại đề bài).\u003c/p\u003e\u003cp\u003eThực ra, đây chỉ là một bài về dãy số. Không có kiến thức Hóa nào cần được sử dụng tại đây.\u003c/p\u003e\u003cp\u003eNguyên tắc của dãy số này là: bắt đầu từ phần tử thứ nhất bằng 2, 2 phần tử tiếp theo đó sẽ bằng phần tử liền trước nó cộng với 2*4, 2 phần tử sau nữa sẽ bằng phần tử liền trước nó cộng với 3*6, rồi cộng với 4*8, 5*10, v.v. ....\u003c/p\u003e\u003cp\u003eMột thông tin thêm: dãy số này chính là dãy tổng số lượng electron có trong 1 nguyên tử / ion mà khiến nguyên tử / ion đó ổn định điện tích (hay nói đơn giản hơn là mang cấu hình electron của khí hiếm).\u003c/p\u003e\u003cp\u003eTham khảo thêm về dãy số tại đây: \u003ca href\u003d\"http://oeis.org/A018227\"\u003ehttp://oeis.org/A018227\u003c/a\u003e\u003c/p\u003e\u003cp\u003eTham khảo code đáp án tại \u003ca href\u003d\"https://ideone.com/LblxW2\"\u003eđây.\u003c/a\u003e (viết bởi \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/Akikaze\" title\u003d\"Expert Akikaze\"\u003eAkikaze\u003c/a\u003e)\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eBài D - The new version of PROPTIT Encryption Algorithm\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eTác giả: \u003ca class\u003d\"rated-user user-black\" href\u003d\"/profile/nghiatd_16\" title\u003d\"Unrated, nghiatd_16\"\u003enghiatd_16\u003c/a\u003e\u003c/p\u003e\u003cp\u003eCó lẽ đề bài đã giải thích quá cụ thể nên mình sẽ không giải thích thêm nữa.\u003c/p\u003e\u003cp\u003eNếu cần dịch sang tiếng Việt, thì đây là bản dịch:\u003c/p\u003e\u003cp\u003eTheo phương pháp mã hóa này, việc mã hóa sẽ thực hiện giữa các từ trong một câu (giới hạn mỗi câu bởi dấu chấm). Với mỗi từ trong câu, ta sẽ tính tổng giá trị của mã ASCII tất cả các chữ cái trong từ đó (lưu ý phân biệt hoa thường), rồi sắp xếp bằng giá trị này theo thứ tự tăng dần. Nếu hai từ có tổng trị số mã ASCII bằng nhau thì ta so sánh theo cách thông thường (giống hàm strcmp của C).\u003c/p\u003e\u003cp\u003eMột số lưu ý về bài này:\u003c/p\u003e \u003cul\u003e   \u003cli\u003e\u003cp\u003eInput không phải là một xâu được quy chuẩn (bạn có thể thấy có những dấu cách dư trong các test cases). Nhưng output thì bắt buộc phải chuẩn xác về cách chấm câu và đánh dấu cách.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eĐôi khi ngay sau dấu chấm không phải dấu cách mà là một số chữ cái. Hiển nhiên những chữ cái đó thuộc về câu tiếp theo.\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e\u003cp\u003eTham khảo code đáp án tại \u003ca href\u003d\"https://ideone.com/T3pfT4\"\u003eđây.\u003c/a\u003e (viết bởi \u003ca class\u003d\"rated-user user-cyan\" href\u003d\"/profile/neko_nyaa\" title\u003d\"Specialist neko_nyaa\"\u003eneko_nyaa\u003c/a\u003e)\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eBài E1/E2 - Dãy con tổng lớn nhất\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eTác giả: \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/Akikaze\" title\u003d\"Expert Akikaze\"\u003eAkikaze\u003c/a\u003e, \u003ca class\u003d\"rated-user user-cyan\" href\u003d\"/profile/neko_nyaa\" title\u003d\"Specialist neko_nyaa\"\u003eneko_nyaa\u003c/a\u003e\u003c/p\u003e\u003cp\u003eVới bản dễ, các cách làm có độ phức tạp O(N^2) hoặc nhỏ hơn được chấp nhận.\u003c/p\u003e\u003cp\u003ePhương pháp ở đây sẽ là, trước hết ta lập một mảng S[N], với S[i] là tổng của i phần tử đầu tiên.\u003c/p\u003e\u003cp\u003eTừ đây, ta hoàn toàn có thể duyệt trâu N*(N-1)/2 dãy con của dãy đã cho để tìm giá trị lớn nhất. Tổng của một dãy con có khoảng [A,B] (từ phần tử thứ A tới phần tử thứ B) sẽ là S[B] — S[A] (tính toán này có độ phức tạp O(1)).\u003c/p\u003e\u003cp\u003eVới bản khó, các cách làm có độ phức tạp O(N) hoặc nhỏ hơn được chấp nhận.\u003c/p\u003e\u003cp\u003eTrước hết, ta đặt curr \u003d 0, ans \u003d -inf. curr là tổng giá trị các phần tử của dãy con lớn nhất tính tới điểm đang xét, ans là biến lưu kết quả bài toán.\u003c/p\u003e\u003cp\u003eÝ tưởng của thuật toán là, mỗi khi curr bé hơn 0, ta có thể reset curr về 0, sau đó duyệt tiếp.\u003c/p\u003e\u003cp\u003eNhư vậy, ta duyệt toàn bộ mảng, qua mỗi phần tử, ta thực hiện như sau (gọi mảng ban đầu là a):\u003c/p\u003e \u003cpre\u003e\u003ccode\u003ecurr \u003d max(a[i], curr+a[i]);\nans \u003d max(ans, curr);\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eBiến ans sau khi kết thúc quá trình duyệt sẽ là đáp án.\u003c/p\u003e\u003cp\u003eTham khảo thêm về phương pháp này tại: \u003ca href\u003d\"https://www.geeksforgeeks.org/largest-sum-contiguous-subarray/\"\u003eThuật toán Kadane\u003c/a\u003e\u003c/p\u003e\u003cp\u003eVà rõ ràng, với độ phức tạp chênh lệch 1 bậc lũy thừa của N, mà N tối đa lên tới 10^6, thì việc nhân 3 giới hạn thời gian cũng chẳng đủ để cách làm độ phức tạp O(N^2) vượt qua bản khó!\u003c/p\u003e\u003cp\u003eTham khảo code đáp án với độ phức tạp O(N^2) tại \u003ca href\u003d\"https://ideone.com/Rwjbla\"\u003eđây.\u003c/a\u003e (viết bởi \u003ca class\u003d\"rated-user user-cyan\" href\u003d\"/profile/neko_nyaa\" title\u003d\"Specialist neko_nyaa\"\u003eneko_nyaa\u003c/a\u003e)\u003c/p\u003e\u003cp\u003eTham khảo code đáp án với độ phức tạp O(N) tại \u003ca href\u003d\"https://ideone.com/oW5P5h\"\u003eđây.\u003c/a\u003e (viết bởi \u003ca class\u003d\"rated-user user-cyan\" href\u003d\"/profile/neko_nyaa\" title\u003d\"Specialist neko_nyaa\"\u003eneko_nyaa\u003c/a\u003e)\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e","tags":[]}}