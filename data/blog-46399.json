{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1470155996,"rating":0,"authorHandle":"Pranky","modificationTimeSeconds":1470156822,"id":46399,"title":"\u003cp\u003eSPOJ — MKTHNUM using MO\u0027s algorithm\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHi, Tried solving \u003cstrong\u003e\u003ca href\u003d\"http://www.spoj.com/problems/MKTHNUM/\"\u003eMKTHNUM — K-th Number\u003c/a\u003e\u003c/strong\u003e Using \u003cstrong\u003eMO\u0027s algorithm\u003c/strong\u003e. I am getting a \u003cstrong\u003eWA\u003c/strong\u003e but I am having a hard time finding a mistake in my code. My code passes a sample test which is offered on the problem site and I tested it using \u003ca href\u003d\"http://spojtoolkit.com/test/MKTHNUM\"\u003espojtoolkit\u003c/a\u003e and things there were looking good.\u003c/p\u003e\u003cp\u003eI would be really happy if a more experienced coder helped me. I think it could be beneficial to the community since I couldn\u0027t find an approach using \u003cstrong\u003eMO\u0027s algorithm\u003c/strong\u003e online to this problem.\u003c/p\u003e\u003cp\u003eHere is my code:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e#include \u0026lt;ext/pb_ds/assoc_container.hpp\u0026gt;\n#include \u0026lt;ext/pb_ds/tree_policy.hpp\u0026gt;\n#include \u0026lt;bits/stdc++.h\u0026gt;\nusing namespace __gnu_pbds;\nusing namespace std;\n \n#define all(x) x.begin(), x.end()\n#define gc getchar_unlocked\n#define pc putchar_unlocked\n#define pb push_back\n#define gdc __gdc\n#define endl \u0027\\n\u0027\n#define Y second\n#define X first\n \ntypedef long long ll;\ntypedef vector\u0026lt;int\u0026gt; vi;\ntypedef pair\u0026lt;int, int\u0026gt; pii;\ntemplate \u0026lt;typename T\u0026gt;\nusing ordered_set \u003d tree\u0026lt;T, null_type, less\u0026lt;T\u0026gt;, rb_tree_tag, tree_order_statistics_node_update\u0026gt;;\n \nconst pii dir_t1[] \u003d {{-1, 0}, {0, 1}, {1, 0}, {0, -1}};\nconst pii dir_t2[] \u003d {{-1, 0}, {-1, 1}, {0, 1}, {1, 1}, {1, 0}, {1, -1}, {0, -1}, {-1, 1}};\n \nconst ll LLINF \u003d numeric_limits\u0026lt;ll\u0026gt;::max() / 2;\nconst int INF \u003d 1e9 + 11;\nconst int MOD \u003d 1e9 + 7;\nconst int ASCII \u003d 300;\n \nconst int MAX_N \u003d 1e5 + 11;\nconst int MAX_M \u003d 5e3 + 11;\nconst int BLOCK \u003d ceil(sqrt(MAX_N));\nconst int MAX_L \u003d ceil(log2(MAX_N));\n \nstruct Query {\n    ll lo, hi, id, k;\n    inline bool operator \u0026lt; (Query \u0026amp;other) const {\n        if (lo / BLOCK !\u003d other.lo / BLOCK)\n            return lo / BLOCK \u0026lt; other.lo / BLOCK;\n        return hi \u0026lt; other.hi;\n    }\n} q[MAX_M];\n \nll n, m;\nll arr[MAX_N];\nll ans[MAX_M];\nordered_set\u0026lt;ll\u0026gt; dp;\n \ntemplate \u0026lt;typename T\u0026gt; T input() {\n    T res;\n    cin \u0026gt;\u0026gt; res;\n    return res;\n}\n \n// FAST I/O\ninline void scan_int(ll \u0026amp;x) {\n    register int c \u003d gc();\n    int neg \u003d 0;\n \n    while ((c \u0026lt; \u00270\u0027 || c \u0026gt; \u00279\u0027) \u0026amp;\u0026amp; c !\u003d \u0027-\u0027)\n        c \u003d gc();\n \n    if (c \u003d\u003d \u0027-\u0027)\n        neg \u003d 1, c \u003d gc();\n \n    for (x \u003d 0; c \u0026gt;\u003d \u00270\u0027  \u0026amp;\u0026amp; c \u0026lt;\u003d \u00279\u0027; c \u003d gc())\n        x \u003d (x \u0026lt;\u0026lt; 1 ) + ( x \u0026lt;\u0026lt; 3) + c - 48;\n \n    if (neg)\n        x *\u003d -1;\n}\n \ninline void print_int(ll x) {\n    ll rev, exp_10 \u003d 0;\n    if (x \u003d\u003d 0) {\n        pc(\u00270\u0027), pc(\u0027\\n\u0027);\n        return;\n    }\n \n    for (rev \u003d x; rev % 10 \u003d\u003d 0; rev /\u003d 10)\n        ++exp_10;\n \n    for (rev \u003d 0; x; x /\u003d 10)\n        rev \u003d (rev \u0026lt;\u0026lt; 3) + (rev \u0026lt;\u0026lt; 1) + x % 10;\n \n    while (rev)\n        pc(rev % 10 + \u00270\u0027), rev /\u003d 10;\n    while (exp_10--)\n        pc(\u00270\u0027);\n    pc(\u0027\\n\u0027);\n}\n \nint main() {\n \n    scan_int(n), scan_int(m);\n    for (int i \u003d 0; i \u0026lt; n; ++i)\n        scan_int(arr[i]);\n    for (int i \u003d 0; i \u0026lt; m; ++i) {\n        scan_int(q[i].lo), scan_int(q[i].hi), scan_int(q[i].k);\n        --q[i].lo, --q[i].hi, --q[i].k, q[i].id \u003d i;\n    }\n \n    sort(q, q + m);\n    int l \u003d 0, r \u003d 0;\n    for(int i \u003d 0;  i \u0026lt; m; ++i) {\n\t\twhile(l \u0026lt; q[i].lo)\n            dp.erase(arr[l++]);\n\t\twhile(l \u0026gt; q[i].lo)\n            dp.insert(arr[--l]);\n \n\t\twhile(r \u0026lt;\u003d q[i].hi) {\n            if (l \u0026lt;\u003d r)\n                dp.insert(arr[r]);\n            ++r;\n        }\n\t\twhile(r \u0026gt; q[i].hi + 1)\n            dp.erase(arr[--r]);\n \n        ans[q[i].id] \u003d *dp.find_by_order(q[i].k);\n\t}\n \n    for (int i \u003d 0; i \u0026lt; m; ++i)\n        print_int(ans[i]);\n \n    return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cstrong\u003eThank you for any help in advance. :)\u003c/strong\u003e\u003c/p\u003e\u003c/div\u003e","tags":["spoj.com","mos_algorithm","sqrt-decomposition","mkthnum"]}}