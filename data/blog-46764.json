{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":true,"creationTimeSeconds":1472111153,"rating":-8,"authorHandle":"Lo_R_D","modificationTimeSeconds":1472111153,"id":46764,"title":"\u003cp\u003eАномальное поведение программы на С++\u003c/p\u003e","locale":"ru","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eДобрый день. \u003c/p\u003e\u003cp\u003eНачну по порядку: вчера я два часа писал двумерное дерево отрезков с операцией суммы на сжатых координатах с хранением только ненулевых вершин. После этого еще два часа ушли на поиск ошибки. Потом начался раунд Aim Tech, и только после него я смог найти причину вердикта \u0026quot;Ошибка исполнения на тесте 17\u0026quot;. Взгляните на следующий \u003ca href\u003d\"http://ideone.com/wm67zx\"\u003eкод\u003c/a\u003e и то как он работает. \u003c/p\u003e\u003cp\u003eСначала я думал, что это срабатывает только для нулевой вершины, поэтому просто пропускал её. Но решить проблему с \u0026quot;Ошибкой исполнения\u0026quot; помогло лишь то, что перед использованием функции getNext() (а так же функций getLeft() и getRight()) я дополнительно вызываю их один раз без использования того, что они возвращают, потому что то что они могут вернуть после первого вызова — непредсказуемо. В частности: на Codeforces этот код вместо нуля выводит 24, у меня на компьютере — случайное большое число. \u003c/p\u003e\u003c/div\u003e","tags":[]}}