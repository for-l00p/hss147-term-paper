{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1408300224,"rating":46,"authorHandle":"Erfan.aa","modificationTimeSeconds":1408305278,"id":13430,"title":"\u003cp\u003eCodeforces Round #261 Editorial\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003ch3\u003e\u003ca href\u003d\"/contest/459/problem/A\" title\u003d\"Codeforces Round 261 (Div. 2)\"\u003e459A - Pashmak and Garden\u003c/a\u003e\u003c/h3\u003e\u003cp\u003eFour vertices of a square with side length \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/span\u003e (and sides parallel to coordinate axis) are in this form: \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e0\u003c/sub\u003e, \u003ci\u003ey\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e0\u003c/sub\u003e)\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e0\u003c/sub\u003e + \u003ci\u003ea\u003c/i\u003e, \u003ci\u003ey\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e0\u003c/sub\u003e)\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e0\u003c/sub\u003e, \u003ci\u003ey\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e0\u003c/sub\u003e + \u003ci\u003ea\u003c/i\u003e)\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e0\u003c/sub\u003e + \u003ci\u003ea\u003c/i\u003e, \u003ci\u003ey\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e0\u003c/sub\u003e + \u003ci\u003ea\u003c/i\u003e)\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eTwo vertices are given, calculate the two others (and check the ranges).\u003c/p\u003e\u003cp\u003eTotal complexity : \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(1)\u003c/span\u003e\u003c/p\u003e\u003cp\u003eSample solution: \u003ca href\u003d\"//codeforces.com/contest/459/submission/7495194\"\u003e7495194\u003c/a\u003e\u003c/p\u003e\u003ch3\u003e\u003ca href\u003d\"/contest/459/problem/B\" title\u003d\"Codeforces Round 261 (Div. 2)\"\u003e459B - Pashmak and Flowers\u003c/a\u003e\u003c/h3\u003e\u003cp\u003eIf all numbers are equal then answer will be \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e * (\u003ci\u003en\u003c/i\u003e - 1) / 2\u003c/span\u003e, otherwise the answer will be \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ecnt\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e * \u003ci\u003ecnt\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003c/span\u003e, where \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ecnt\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/span\u003e is the number of our maximum elements and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ecnt\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003c/span\u003e is the number of our minimum elements.\u003c/p\u003e\u003cp\u003eTotal complexity : \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e)\u003c/span\u003e\u003c/p\u003e\u003cp\u003eSample solution: \u003ca href\u003d\"//codeforces.com/contest/459/submission/7495202\"\u003e7495202\u003c/a\u003e\u003c/p\u003e\u003ch3\u003e\u003ca href\u003d\"/contest/459/problem/C\" title\u003d\"Codeforces Round 261 (Div. 2)\"\u003e459C - Pashmak and Buses\u003c/a\u003e\u003c/h3\u003e\u003cp\u003eFor each student consider a sequence of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ed\u003c/i\u003e\u003c/span\u003e elements from \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e that shows the bus number which is taken by this student on each day. Obviously, there are \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ed\u003c/i\u003e\u003c/sup\u003e\u003c/span\u003e different sequence at all, so if \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e \u0026gt; \u003ci\u003ek\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ed\u003c/i\u003e\u003c/sup\u003e\u003c/span\u003e, pigeonhole principle indicates that at least two of this sequences will be equal, so that two students will become close friends and no solutions exist. But if \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e ≤ \u003ci\u003ek\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ed\u003c/i\u003e\u003c/sup\u003e\u003c/span\u003e, then we can assign a unique sequence to each student and compute the answer. For computing that, we can find the first \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ed\u003c/i\u003e\u003c/span\u003e-digits numbers in \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e-based numbers.\u003c/p\u003e\u003cp\u003eTotal complexity : \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e * \u003ci\u003ed\u003c/i\u003e)\u003c/span\u003e\u003c/p\u003e\u003cp\u003eSample solutions: \u003ca href\u003d\"//codeforces.com/contest/459/submission/7495236\"\u003e7495236\u003c/a\u003e\u003c/p\u003e\u003ch3\u003e\u003ca href\u003d\"/contest/459/problem/D\" title\u003d\"Codeforces Round 261 (Div. 2)\"\u003e459D - Pashmak and Parmida\u0027s problem\u003c/a\u003e\u003c/h3\u003e\u003cp\u003eFirst of all, we can map the given numbers to integers of range \u003cspan class\u003d\"tex-span\"\u003e[1, 10\u003csup class\u003d\"upper-index\"\u003e6\u003c/sup\u003e]\u003c/span\u003e. Let \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e be \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e(1, \u003ci\u003ei\u003c/i\u003e, \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e)\u003c/span\u003e and let \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003er\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e be \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e(\u003ci\u003ei\u003c/i\u003e, \u003ci\u003en\u003c/i\u003e, \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e)\u003c/span\u003e, we want to find the number of pairs \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ei\u003c/i\u003e, \u003ci\u003ej\u003c/i\u003e)\u003c/span\u003e such that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e \u0026lt; \u003ci\u003ej\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e \u0026gt; \u003ci\u003er\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e. For computing \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003es, we can store an array named \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ecnt\u003c/i\u003e\u003c/span\u003e to show the number of occurence of any \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e with \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ecnt\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e]\u003c/span\u003e. To do this, we can iterate from left to right and update \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ecnt\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e]\u003c/span\u003es; also, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e would be equal to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ecnt\u003c/i\u003e[\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e]\u003c/span\u003e at position \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e (\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003er\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e s can be computed in a similar way).\u003c/p\u003e\u003cp\u003eBeside that, we get help from binary-indexed trees. We use a Fenwick tree and iterate from right to left. In each state, we add the number of elements less than \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e to answer and add \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003er\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e to the Fenwick tree.\u003c/p\u003e\u003cp\u003eTotal complexity : \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e * \u003ci\u003elogn\u003c/i\u003e)\u003c/span\u003e\u003c/p\u003e\u003cp\u003eAlso we can solve this problem using divide and conquer method. You can see the second sample solution to find out how to do this exactly.\u003c/p\u003e\u003cp\u003eSample solutions: \u003ca href\u003d\"//codeforces.com/contest/459/submission/7495214\"\u003e7495225\u003c/a\u003e \u003ca href\u003d\"//codeforces.com/contest/459/submission/7495239\"\u003e7495225\u003c/a\u003e\u003c/p\u003e\u003ch3\u003e\u003ca href\u003d\"/contest/459/problem/E\" title\u003d\"Codeforces Round 261 (Div. 2)\"\u003e459E - Pashmak and Graph\u003c/a\u003e\u003c/h3\u003e\u003cp\u003eIn this problem, a directed graph is given and we have to find the length of a \u003cem\u003elongest strictly-increasing trail\u003c/em\u003e in it.\u003c/p\u003e\u003cp\u003eFirst of all consider a graph with \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e vertices and no edges, then just sort the given edges by their weights (non-decreasingly) and add them to the graph one by one.\u003c/p\u003e\u003cp\u003eLet \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edp\u003c/i\u003e[\u003ci\u003ev\u003c/i\u003e]\u003c/span\u003e be the length of a longest \u003cem\u003eincreasing trail\u003c/em\u003e which ends in the vertex \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e\u003c/span\u003e. In the mentioned method, when you\u0027re adding a directed edge \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003exy\u003c/i\u003e\u003c/span\u003e to the graph, set \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edp\u003c/i\u003e[\u003ci\u003ey\u003c/i\u003e]\u003c/span\u003e value to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003emax\u003c/i\u003e(\u003ci\u003edp\u003c/i\u003e[\u003ci\u003ey\u003c/i\u003e], \u003ci\u003edp\u003c/i\u003e[\u003ci\u003ex\u003c/i\u003e] + 1)\u003c/span\u003e (because of trails which ends in \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ey\u003c/i\u003e\u003c/span\u003e and use this edge). You need to take care of the situation of being some edges with equal weights; for this job we can add all edges of the same weights simultaneously.\u003c/p\u003e\u003cp\u003eTotal complexity : \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e + \u003ci\u003em\u003c/i\u003e * \u003ci\u003elogm\u003c/i\u003e)\u003c/span\u003e\u003c/p\u003e\u003cp\u003eSample solution: \u003ca href\u003d\"//codeforces.com/contest/459/submission/7495216\"\u003e7495216\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e","tags":["codeforces round #261","editorial"]}}