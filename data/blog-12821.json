{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1403621923,"rating":-11,"authorHandle":"ap_hawkdown","modificationTimeSeconds":1403622010,"id":12821,"title":"\u003cp\u003eSieve of Eratosthenes\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eSieve of Eratosthenes used to determine prime numbers. A bool array in taken and initialized to false\u003cbr /\u003efirst of all it starts with 2 and updates index of bool array of all multiples of 2 to be true..\u003c/p\u003e\u003cp\u003elike 4,6,8..but not 2 which is kept false. next false number is picked which is 3..and all its multiples are updated true like 6,9,12,15...updated true but 3 is kept false\u003c/p\u003e\u003cp\u003esimilarly it is followed..\u003c/p\u003e\u003cp\u003eall numbers in the end which are false are primes.\u003c/p\u003e\u003cp\u003ethen next false number is picked \u003c/p\u003e\u003cp\u003eint main() { static bool b[100000];\u003c/p\u003e\u003cp\u003efor(int i\u003d2;i\u0026lt;\u003d30000;i+\u003d1)\u003c/p\u003e\u003cp\u003e{\u003c/p\u003e \u003cpre\u003eif(!b[i])\n\n{for(int j\u003d2;j*i\u0026lt;30000;j++)\n\n{\n\n    b[i*j]\u003dtrue;\u003c/pre\u003e\u003cp\u003e}\u003c/p\u003e \u003cpre\u003e}\u003c/pre\u003e\u003cp\u003e} for(int i\u003d2;i\u0026lt;30000;i++)\u003c/p\u003e\u003cp\u003e{\u003c/p\u003e \u003cpre\u003eif(!b[i])\u003c/pre\u003e\u003cp\u003e{\u003c/p\u003e \u003cpre\u003eprintf(\u0026quot;%d\u0026quot;,i);\u003c/pre\u003e\u003cp\u003e}\u003c/p\u003e\u003cp\u003e}\u003c/p\u003e\u003cp\u003ereturn 0;\u003c/p\u003e\u003cp\u003e}\u003c/p\u003e\u003c/div\u003e","tags":["seive"]}}