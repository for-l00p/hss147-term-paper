{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1507900522,"rating":-7,"authorHandle":"Unlimited_Time","modificationTimeSeconds":1507900847,"id":55163,"title":"\u003cp\u003eNotes on Codeforces Beta Round #83, Div2-A, B, C, D\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e\u003ca href\u003d\"/contest/108/problem/A\" title\u003d\"Codeforces Beta Round 83 (Div. 2 Only)\"\u003e108A - Palindromic Times\u003c/a\u003e\u003c/p\u003e\u003cp\u003eNote that for each hour, there either exists a unique answer or no answer. For instance, at hour 14, the answer is \u003cspan class\u003d\"tex-span\"\u003e14: 41\u003c/span\u003e while for hour 17, no answer exists.\u003c/p\u003e\u003cp\u003eTherefore, we can first check for the given hour whether there is a feasible answer or not. If no, then we continue to search for the next hour that has such an answer. \u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"/contest/108/problem/B\" title\u003d\"Codeforces Beta Round 83 (Div. 2 Only)\"\u003e108B - Datatypes\u003c/a\u003e\u003c/p\u003e\u003cp\u003eWe should first sort the array in an increasing order. Then, for every pair of \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e, \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e + 1\u003c/sub\u003e)\u003c/span\u003e with \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e \u0026lt; \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e + 1\u003c/sub\u003e\u003c/span\u003e, we check whether there exists such an integer \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eThe maximum \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e that can be represented by \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e bits is \u003cspan class\u003d\"tex-span\"\u003e2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/sup\u003e - 1\u003c/span\u003e. Thus, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e \u003d 2\u003csup class\u003d\"upper-index\"\u003e2\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/sup\u003e - 2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e + 1\u003c/sup\u003e + 1\u003c/span\u003e. One can check that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e\u003c/span\u003e can always be represented by \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e + 1\u003c/sub\u003e\u003c/span\u003e bits as long as \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e + 1\u003c/sub\u003e ≥ 2\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"/contest/108/problem/C\" title\u003d\"Codeforces Beta Round 83 (Div. 2 Only)\"\u003e108C - Dorm Water Supply\u003c/a\u003e\u003c/p\u003e\u003cp\u003eAccording to the description of the problem, the graph in fact consists of several simple rings and single links. Thus, we start enumerating from node 1 to node \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e and for each node that has no input pipe, we visit all the nodes along the pipes while recording the minimum diameter. Finally, print out the recorded results.\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"/contest/108/problem/D\" title\u003d\"Codeforces Beta Round 83 (Div. 2 Only)\"\u003e108D - Basketball Team\u003c/a\u003e\u003c/p\u003e\u003cp\u003eWe denote the number of his teammates as \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003c/span\u003e and the number of the other students as \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eS\u003c/i\u003e\u003c/span\u003e. Then, the problem can be solved based on the following three cases.\u003c/p\u003e\u003cp\u003e1) \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e + \u003ci\u003eS\u003c/i\u003e \u0026lt; \u003ci\u003en\u003c/i\u003e - 1\u003c/span\u003e: this means that there are not enough students;\u003c/p\u003e\u003cp\u003e2) \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eS\u003c/i\u003e \u0026lt; \u003ci\u003en\u003c/i\u003e - 1\u003c/span\u003e: this means that the probability is absolutely one;\u003c/p\u003e\u003cp\u003e3) none of the above cases: the answer is just \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/03/b9/03b9addf126bcaced3d8abb5565f8404d7607990.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. To compute \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/9b/63/9b6333a264103ea3159d27c84cf94de609189fee.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, I usually transform it into \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eF\u003c/i\u003e \u003d \u003ci\u003ee\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003elog\u003c/i\u003e(\u003ci\u003eF\u003c/i\u003e)\u003c/sup\u003e\u003c/span\u003e. In other words, we first calculate \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/40/2a/402abe3d1b74cd86004b1dfe5ff0d1935942278d.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, and then obtain \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eF\u003c/i\u003e \u003d \u003ci\u003ee\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ef\u003c/i\u003e\u003c/sup\u003e\u003c/span\u003e. I think “log” can guarantee better precision than directly mutiplying all the float numbers together.\u003c/p\u003e\u003c/div\u003e","tags":[]}}