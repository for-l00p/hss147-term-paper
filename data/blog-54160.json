{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1504041692,"rating":18,"authorHandle":"Pancake","modificationTimeSeconds":1504041759,"id":54160,"title":"\u003cp\u003eDiscussion: OI style, ACM-ICPC style, or Codeforces style?\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eSo, after four years of non-participation on Codeforces, I recently did three contests in a row and managed to drop a whole color (in part because of being out of practice and in part because of not treating the contests seriously). In fact, I was never dedicated enough for competitive programming (in terms of time/effort/methodology), for a number of reasons, but here\u0027s one issue that I\u0027d like to survey fellow competitive programmers about: what is your favorite contest format, and why? Below is my personal view. (This may have been discussed previously, but it\u0027s always nice to become acquainted with new/recent opinions).\u003c/p\u003e \u003cul\u003e   \u003cli\u003e\u003cp\u003eOI style (IOI \u0026amp; national olympiads): this is by far my personal favorite. First of all, I\u0027m not a fan of team competitions since I like to have a quantifiable measure of my own performance. Furthermore, scoring does not depend on the time that is taken to solve a (sub)problem. This has several benefits. For one thing, it prevents irritating factors from playing a role, such as rushing to submit a solution (say, based on a greedy approach) without being sure about its correctness in order to score higher. The subtasks thing (with full feedback) is also quite a neat feature and means there is something for everyone (unlike Codeforces contest where it\u0027s not unlikely that most people only manage to do 0, 1 or 2 problems). This allows for a nice score distribution and is obviously more meaningful than ranking participants based on time. The absence of penalties for non-AC solutions is not something I\u0027m particularly fond of.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eACM-ICPC style: penalties are there, so that\u0027s a plus point. Time-based ranking is a minus. Feedback is also present. As said, no fan of team competitions. Since the number of problems on the problem set is usually high, the \u0026quot;something for everyone\u0026quot; part is also available (in a balanced problem set, at least).\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eCodeforces/TopCoder: usually, there are only pretests during the rounds, and the balance of difficulty is not that great. Additionally, while I know that hacks/challenges add to the fun for some participants, I don\u0027t particularly enjoy them (granted, because I\u0027m not good at them, but that\u0027s only a semi-reason; I believe that they, like time-based ranking, make the contests unnecessarily \u003cem\u003etoo\u003c/em\u003e competitive). In fact, I would advocate enabling contestants to opt to participate in \u0026quot;anonymous\u0026quot; mode; you could still participate, but your rating changes/color/submitted code would only be visible to you. Again, I\u0027m aware that this is not \u0026quot;fun\u0026quot; for many competitive programmers, but it\u0027s just an option that would ensure that some users aren\u0027t too discouraged.\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e\u003c/div\u003e","tags":["ioi-style","#codeforces","acm-icpc"]}}