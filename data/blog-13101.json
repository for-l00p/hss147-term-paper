{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1405768747,"rating":-16,"authorHandle":"Ivy_End","modificationTimeSeconds":1405836531,"id":13101,"title":"\u003cp\u003e1B â€” Spreadsheet\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e\u003ca href\u003d\"/contest/1/problem/B\" title\u003d\"Codeforces Beta Round 1\"\u003e1B - Spreadsheet\u003c/a\u003e\u003c/p\u003e\u003ch4\u003eAnalysis\u003c/h4\u003e\u003cp\u003eThe essence of this problem lays in the conversion between decimal(\u00270\u0027-\u00279\u0027) and base 26(\u0027A\u0027-\u0027Z\u0027).\u003c/p\u003e\u003cp\u003eNotice: There is no number in the base 26 system that function as the number \u00270\u0027 in the decimal system, so when the decimal number is a multiple of 26, a special handle is needed.\u003c/p\u003e\u003cp\u003e\u003ccode\u003eif(C % 26 \u003d\u003d 0) { strTmp \u003d \u0027Z\u0027 + strTmp; C /\u003d 26; C--; continue; }\u003c/code\u003e\u003c/p\u003e\u003cp\u003eIn the code above, \u003ccode\u003eC\u003c/code\u003e means the column, while \u003ccode\u003estrTmp\u003c/code\u003e stands for the base 26 string after conversion.\u003c/p\u003e\u003ch4\u003eSolution\u003c/h4\u003e \u003cpre\u003e\u003ccode\u003e#include \u0026lt;iostream\u0026gt;\n#include \u0026lt;ctype.h\u0026gt;\n\nusing namespace std;\n\nstring Convert(string x);\n\nint N;\nstring strInput; \n\nint main()\n{\n\tcin \u0026gt;\u0026gt; N;\n\tfor(int i \u003d 1; i \u0026lt;\u003d N; i++)\n\t{\n\t\tcin \u0026gt;\u0026gt; strInput;\n\t\tcout \u0026lt;\u0026lt; Convert(strInput) \u0026lt;\u0026lt; endl;\n\t}\n\treturn 0;\n} \n\nstring Convert(string x)\n{\n\tstring strRet \u003d \u0026quot;\u0026quot;; \n\tint nTmp \u003d 0;\n\tbool bTmp \u003d false;\n\tfor(int i \u003d 0; i \u0026lt; x.size(); i++)\n\t{\n\t\tif(isdigit(x[i]) \u0026amp;\u0026amp; !bTmp) { bTmp \u003d true; nTmp++; }\n\t\tif(!isdigit(x[i])) { bTmp \u003d false; }\n\t}\n\tif(nTmp \u003d\u003d 1)\n\t{\n\t\tstring R, C;\n\t\tint nC \u003d 0, nHex \u003d 1;\n\t\tfor(int i \u003d 0; i \u0026lt; x.size(); i++)\n\t\t{\n\t\t\tif(isalpha(x[i])) { C +\u003d x[i]; }\n\t\t\telse { R +\u003d x[i]; }\n\t\t}\n\t\tfor(int i \u003d 0; i \u0026lt; C.size(); i++)\n\t\t{\n\t\t\tnC +\u003d (C[C.size() - i - 1] - \u0027A\u0027 + 1) * nHex;\n\t\t\tnHex *\u003d 26;\n\t\t}\n\t\tstrRet +\u003d \u0026quot;R\u0026quot; + R + \u0026quot;C\u0026quot;;\n\t\tstring strTmp \u003d \u0026quot;\u0026quot;;\n\t\twhile(nC)\n\t\t{\n\t\t\tstrTmp \u003d (char)(nC % 10 + 48) + strTmp;\n\t\t\tnC /\u003d 10;\n\t\t}\n\t\tstrRet +\u003d strTmp;\n\t}\n\telse\n\t{\n\t\tint C \u003d 0;\n\t\tint nPos \u003d x.find(\u0027C\u0027);\n\t\tfor(int i \u003d nPos + 1; i \u0026lt; x.size(); i++)\n\t\t{\n\t\t\tC *\u003d 10;\n\t\t\tC +\u003d (x[i] - \u00270\u0027);\n\t\t}\n\t\tstring strTmp \u003d \u0026quot;\u0026quot;;\n\t\twhile(C)\n\t\t{\n\t\t\tif(C % 26 \u003d\u003d 0) { strTmp \u003d \u0027Z\u0027 + strTmp; C /\u003d 26; C--; continue; }\n\t\t\tstrTmp \u003d (char)((C % 26) + \u0027A\u0027 - 1) + strTmp;\n\t\t\tC /\u003d 26;\n\t\t}\n\t\tstrRet \u003d strTmp + x.substr(1, nPos - 1);\n\t}\n\treturn strRet;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":["implementation","math"]}}