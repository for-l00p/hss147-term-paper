{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1503234530,"rating":-9,"authorHandle":"Unlimited_Time","modificationTimeSeconds":1503234530,"id":53968,"title":"\u003cp\u003eNotes on Codeforces Beta Round #70, A, B, C, D\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e\u003ca href\u003d\"/contest/78/problem/A\" title\u003d\"Codeforces Beta Round 70 (Div. 2)\"\u003e78A - Хайку\u003c/a\u003e\u003c/p\u003e\u003cp\u003eCount the total number of “a, e, i, o, u” in each line, and check whether they satisfy the form of “5, 7, 5”.\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"/contest/78/problem/B\" title\u003d\"Codeforces Beta Round 70 (Div. 2)\"\u003e78B - Пасхальные яйца\u003c/a\u003e\u003c/p\u003e\u003cp\u003eFor simplicity, we use 0, 1, 2,...,6 to denote the seven colors. The following pattern always satisties the requirement 012345634563456345634...\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"/contest/78/problem/C\" title\u003d\"Codeforces Beta Round 70 (Div. 2)\"\u003e78C - Игра для бобров\u003c/a\u003e\u003c/p\u003e\u003cp\u003eA very interesting problem!! \u003c/p\u003e\u003cp\u003eWe use FIRST to denote the player who moves first, and SECOND to denote the other player. If \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e is an even number, this results in a perfectly “symmetric” situation, and SECOND always wins since he can simply “copy” what FIRST has done. As long as FIRST can succeed cutting the logs, SECOND can also make it. \u003c/p\u003e\u003cp\u003eWhen \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e is an odd number, it becomes a little complicated. We write \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e \u003d \u003ci\u003eXY\u003c/i\u003e\u003c/span\u003e, where both \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eX\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eY\u003c/i\u003e\u003c/span\u003e are divisors of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/span\u003e, and it also means that the original log of length \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/span\u003e has been cut into \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eX\u003c/i\u003e\u003c/span\u003e new logs with the same length \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eY\u003c/i\u003e\u003c/span\u003e. To satisfy \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eY\u003c/i\u003e ≥ \u003ci\u003ek\u003c/i\u003e\u003c/span\u003e, we should have \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/74/19/7419a8642bef129ed98df8e2888ff6e7a1fb3ff5.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. If we set \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eX\u003c/i\u003e\u003c/span\u003e as the maximum divisor that satisfies this condition, then none of the logs of length \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eY\u003c/i\u003e\u003c/span\u003e can be further cut. We can prove this by contradiction. Assume that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eY\u003c/i\u003e\u003c/span\u003e can be further cut, which implies that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eY\u003c/i\u003e \u003d \u003ci\u003epq\u003c/i\u003e\u003c/span\u003e, and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eq\u003c/i\u003e ≥ \u003ci\u003ek\u003c/i\u003e\u003c/span\u003e. Thus, we can obtain a larger \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eX\u003c/i\u003e\u0027 \u003d \u003ci\u003eXp\u003c/i\u003e\u003c/span\u003e, which is impossible since we have set the maximum value to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eX\u003c/i\u003e\u003c/span\u003e. \u003c/p\u003e\u003cp\u003eTherefore, FIRST can first cut any original log so that none of the new logs can be further cut. Then, the situation is equivalent to saying that we are given \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e - 1\u003c/span\u003e (an even number) logs while rightnow SECOND is the first one to move, and thus FIRST wins. Be careful that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eX\u003c/i\u003e\u003c/span\u003e cannot be \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e, and thus if \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eX\u003c/i\u003e \u003d 1\u003c/span\u003e, FIRST still loses.\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"/contest/78/problem/D\" title\u003d\"Codeforces Beta Round 70 (Div. 2)\"\u003e78D - Выстрел лучника\u003c/a\u003e\u003c/p\u003e\u003cp\u003eA wonderful mathematical problem. We count the number of hexagons column by column. We denote the column that contains the center “A” as the first column. According to the symmetry, it is sufficient to focus on the columns to the right of “A”, inclusively. For each column, we use binary search to find the highest hexagon. Again due to the symmetry, we only need to count the hexagons above “A”.\u003c/p\u003e\u003cp\u003eFor the hexagon with height \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eh\u003c/i\u003e\u003c/span\u003e, we can check two points, the right upper point and the rightmost point, to see whether both of them fall inside the circle or not. If yes, this hexagon is covered by the circle; otherwise not. The left work is to compute the distance of these two points from the center, which needs some simple geometric calculation (using Pythagorean theorem) and omitted here.\u003c/p\u003e\u003c/div\u003e","tags":[]}}