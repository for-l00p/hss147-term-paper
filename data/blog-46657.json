{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":true,"creationTimeSeconds":1471688647,"rating":16,"authorHandle":"tree_lover","modificationTimeSeconds":1471695232,"id":46657,"title":"\u003cp\u003eСведение запросов на пути к запросам на прямоугольике\u003c/p\u003e","locale":"ru","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eЗаметим, что вершина u — предок вершины v \u0026lt;\u003d\u0026gt; tin[u] \u0026lt; tin[v] \u0026amp;\u0026amp; tout[u] \u0026gt; tout[v], а значит, если мы представим вершины как точки на плоскости \u0026lt;tin[x], tout[x]\u0026gt; и вес вершины это будет вес точки, то сумма на прямоугольнике x1 \u003d 0, x2 \u003d tin[v], y1 \u003d tout[v], y2 \u003d INF это будет сумма на пути от вершины до корня включительно, а значит чтобы найти сумму на пути мы можем найти сумму на пути от u до корня, от v до корня, сложить и вычесть 2 * (сумму от lca(u, v)) до корня.\u003c/p\u003e\u003cp\u003eТак мы можем считать любую обратимую функцию на пути, с изменением в точке.\u003c/p\u003e\u003cp\u003eНо если посмотреть внимательнее, то мы можем посмотреть на время входа lca(u, v) и задать еще и нижнее ограничение на время входа. Тогда мы можем считать любую другую операцию (ассоцитативную), например, минимум при помощи минимума на прямоугольнике.\u003c/p\u003e\u003c/div\u003e","tags":[]}}