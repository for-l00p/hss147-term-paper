{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1500496763,"rating":0,"authorHandle":"triveni","modificationTimeSeconds":1500501367,"id":53388,"title":"\u003cp\u003eAndrew Stankevich Contest 5 Editorial\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eContest Link: \u003ca href\u003d\"//codeforces.com/gym/100201\"\u003ehttp://codeforces.com/gym/100201\u003c/a\u003e.    \u003c/p\u003e\u003ch3\u003e\u003ca href\u003d\"/group/qo1icaI3vI/contest/100201/problem/A\" title\u003d\"2003-2004 Winter Petrozavodsk Camp, Andrew Stankevich Contest 5 (ASC 5)\"\u003e100201A - Ackerman\u0027s Function\u003c/a\u003e\u003c/h3\u003e\u003cp\u003eThis problem requires basic knowledge of number theory concepts such as Euler\u0027s Totient Function and Fermat\u0027s Little Theorem.\u003c/p\u003e\u003cp\u003eLet\u0027s write down some of the elements of A(i, j) first. \u003ctable\u003e \u003ctbody\u003e\u003ctr\u003e    \u003ctd\u003e 2        \u003c/td\u003e \u003ctd\u003e4         \u003c/td\u003e \u003ctd\u003e 6\u003c/td\u003e \u003ctd\u003e 8\u003c/td\u003e \u003ctd\u003e 10\u003c/td\u003e \u003ctd\u003e 12\u003c/td\u003e \u003ctd\u003e 14\u003c/td\u003e \u003ctd\u003e 16\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e    \u003ctd\u003e 2\u003c/td\u003e \u003ctd\u003e4 \u003c/td\u003e \u003ctd\u003e 8\u003c/td\u003e \u003ctd\u003e 16\u003c/td\u003e \u003ctd\u003e 32\u003c/td\u003e \u003ctd\u003e 64\u003c/td\u003e \u003ctd\u003e 128\u003c/td\u003e \u003ctd\u003e 256\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e    \u003ctd\u003e 2\u003c/td\u003e \u003ctd\u003e4 \u003c/td\u003e \u003ctd\u003e 2|3\u003c/td\u003e \u003ctd\u003e 2|4\u003c/td\u003e \u003ctd\u003e 2|5\u003c/td\u003e \u003ctd\u003e 2|6\u003c/td\u003e \u003ctd\u003e 2|7\u003c/td\u003e \u003ctd\u003e 2|8\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e    \u003ctd\u003e 2\u003c/td\u003e \u003ctd\u003e4 \u003c/td\u003e \u003ctd\u003e 2|4\u003c/td\u003e \u003ctd\u003e 2|(2|4) \u003d 2|16\u003c/td\u003e \u003ctd\u003e 2|(2|16) \u003d ...\u003c/td\u003e \u003ctd\u003e ...\u003c/td\u003e \u003ctd\u003e ...\u003c/td\u003e \u003ctd\u003e ...\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e    \u003ctd\u003e 2\u003c/td\u003e \u003ctd\u003e4 \u003c/td\u003e \u003ctd\u003e 2|16     \u003c/td\u003e \u003ctd\u003e ...\u003c/td\u003e \u003ctd\u003e ...\u003c/td\u003e \u003ctd\u003e ...\u003c/td\u003e \u003ctd\u003e ...\u003c/td\u003e \u003ctd\u003e ...\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e    \u003ctd\u003e 2\u003c/td\u003e \u003ctd\u003e4 \u003c/td\u003e \u003ctd\u003e ...\u003c/td\u003e \u003ctd\u003e ...\u003c/td\u003e \u003ctd\u003e ...\u003c/td\u003e \u003ctd\u003e ...\u003c/td\u003e \u003ctd\u003e ...\u003c/td\u003e \u003ctd\u003e ...\u003c/td\u003e \u003c/tr\u003e\u003c/tbody\u003e\u003c/table\u003e\u003c/p\u003e\u003cp\u003eWhere \u003cstrong\u003e2 | x\u003c/strong\u003e denotes \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/3a/c0/3ac0ebabfcdea8fff048541478d9628f9b7eb6b1.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. For example : \u003cspan class\u003d\"tex-span\"\u003e2|3 \u003d 2\u003csup class\u003d\"upper-index\"\u003e2\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e\u003c/sup\u003e\u003c/span\u003e or \u003cspan class\u003d\"tex-span\"\u003e2|5 \u003d 2\u003csup class\u003d\"upper-index\"\u003e2\u003csup class\u003d\"upper-index\"\u003e2\u003csup class\u003d\"upper-index\"\u003e2\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e\u003c/sup\u003e\u003c/sup\u003e\u003c/sup\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eNow we notice few things \u003c/p\u003e \u003cul\u003e   \u003cli\u003eif i \u003d 1 then ans is \u003cspan class\u003d\"tex-span\"\u003e2 × \u003ci\u003ej\u003c/i\u003e\u003c/span\u003e\u003c/li\u003e   \u003cli\u003eif i \u003d 2 then ans is \u003cspan class\u003d\"tex-span\"\u003e2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/sup\u003e\u003c/span\u003e\u003c/li\u003e   \u003cli\u003eif j \u003d 1 then ans is 2\u003c/li\u003e   \u003cli\u003eif j \u003d 2 then ans is 4\u003c/li\u003e   \u003cli\u003eif i \u003d 3 then ans is 2| j\u003c/li\u003e   \u003cli\u003eif i \u003d 4 \u003cbr /\u003e       * if j \u003d\u003d 3 then ans is 2|4 \u003cbr /\u003e       * otherwise ans is \u003cspan class\u003d\"tex-span\"\u003e2|\u003ci\u003esomeNumberGreaterThan\u003c/i\u003e15\u003c/span\u003e\u003c/li\u003e   \u003cli\u003eotherwise \u003cspan class\u003d\"tex-span\"\u003e2|\u003ci\u003esomeNumberGreaterThan\u003c/i\u003e15\u003c/span\u003e\u003c/li\u003e \u003c/ul\u003e\u003cp\u003eWe can use Fermat\u0027s theorem to proceed further. It states, \u003c/p\u003e\u003cp\u003e     \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/84/0f/840fb19fdddaa27b2010d8327095de2f983827b6.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e  \u003c/p\u003e\u003cp\u003eWe can now solve this case recursively as follows :\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eint solve(int exp, int m) :  // solving 2|exp mod m\n    if m \u003d\u003d 1 :  // for someNumberGreaterThan15 cases, this will reach in less than 16 steps\n       return 0;\n    elif exp \u003d\u003d 1 :\n       return 2 mod m\n    else :\n       m1 \u003d component of 2 power of m // imp so that Fermat\u0027s theorem can be applied\n       m \u003d m / m1\n       ans1 \u003d pow(solve(exp-1, phi(m)), m) // Fermat\u0027s theorem.\n       ans2 \u003d 2 | exp mod m1 // this is easy to figure out\n       for i \u003d 0 to m * m1 :   // combine the two answers\n           if i mod m \u003d\u003d ans1 and i mod m1 \u003d\u003d ans2 :\n              return i\n    return 0\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eNote that this recursion can go upto \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eexp\u003c/i\u003e\u003c/span\u003e steps deep. And it is guaranteed to stop after that many steps. Note that, when we encounter the situations \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003esomeNumberGreaterThan\u003c/i\u003e15\u003c/span\u003e. The recursion will stop in less than 16 steps. Because everytime we are passing \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ephi\u003c/i\u003e(\u003ci\u003em\u003c/i\u003e)\u003c/span\u003e to the next level. And when \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/span\u003e is even, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ephi\u003c/i\u003e(\u003ci\u003em\u003c/i\u003e) ≤ \u003ci\u003em\u003c/i\u003e / 2\u003c/span\u003e. If \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/span\u003e is odd then \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ephi\u003c/i\u003e(\u003ci\u003em\u003c/i\u003e)\u003c/span\u003e is even in the next level. That means in every two steps m is reducing to atleast half of its original value. So we can bound the number of levels to 15 in these cases as well.\u003c/p\u003e\u003cp\u003eCode : \u003ca href\u003d\"http://ideone.com/Hawaam\"\u003eIdeone\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e","tags":["number theory","fermat"]}}