{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":true,"creationTimeSeconds":1434280214,"rating":1,"authorHandle":"rustammm","modificationTimeSeconds":1434280214,"id":18557,"title":"\u003cp\u003eПерегрузка операторов\u003c/p\u003e","locale":"ru","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cpre\u003e\u003ccode\u003estruct point {\n  double x, y;\n  \n  point() {}\n  point(double x, double y): x(x), y(y) {}\n\n  point operator+ (point p) {\n    return point(x + p.x, y + p.y);\n  }\n  \n  point\u0026amp; operator+\u003d(point p) {\n    x +\u003d p.x;\n    y +\u003d p.y;\n    return *this;\n  }\n\n  friend ostream\u0026amp; operator\u0026lt;\u0026lt;(ostream\u0026amp; os, const point\u0026amp; p)  {\n    os \u0026lt;\u0026lt; p.x \u0026lt;\u0026lt; \u0027 \u0027 \u0026lt;\u0026lt; p.y;\n    return os;\n  }\n\n  friend istream\u0026amp; operator \u0026gt;\u0026gt;(std::istream \u0026amp;is, point\u0026amp; p) { \n    is \u0026gt;\u0026gt; p.x \u0026gt;\u0026gt; p.y;\n    return is; \n  } \n\n};\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":[]}}