{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1520675020,"rating":18,"authorHandle":"Tomzik","modificationTimeSeconds":1520675020,"id":58279,"title":"\u003cp\u003eInclusive/exclusive bounds\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHello everyone,\u003c/p\u003e\u003cp\u003eWhen writing algorithms operating on sequences, we need to be precise with how we deal with bounds.\u003c/p\u003e\u003cp\u003eFor instance, in C, we usually write loops such as:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e  for (i \u003d 0; i \u0026lt; n; i++) { ... }   // exclusive bound\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eBut in other language, we\u0027d write.\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e   for i \u003d 0 to n - 1   // inclusive bound\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eSimilarly, let say we write a binary search function \u003ccode\u003ebinary_search(arr, i, j)\u003c/code\u003e, we need to to decide whether \u003ccode\u003ej\u003c/code\u003e is included or not.\u003c/p\u003e\u003cp\u003eHow do you decide which version to use? Do you try to be consistent or do you decide depending on the problem?\u003c/p\u003e\u003c/div\u003e","tags":["algorithms"]}}