{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1407589087,"rating":4,"authorHandle":"Rubanenko","modificationTimeSeconds":1407594291,"id":13337,"title":"\u003cp\u003eCFR #260 D\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eI\u0027ve implemented a solution for the last contest\u0027s problem D which works correct but dramatically slow! It works more than ten minutes on my PC which seems to be quite slower than naive approach. I divide the data into blocks, and store cnt[] array in every block and a deque for maintaining update queries. I cut blocks sometimes, so I rebuild structure when the number of blocks is above 2 * initialNumberOfBlocks. Probably the problem is that I\u0027m a Java noob, who knows :D \u003c/p\u003e\u003cp\u003eIf you have a couple of minutes, please have a look at my \u003ca href\u003d\"//codeforces.com/contest/455/submission/7404666\"\u003ecode\u003c/a\u003e. I tried to make it readable... hope it is :) \u003c/p\u003e\u003cp\u003eThanks!\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eUPD\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eAfter I fixed the but \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/mentalist\" title\u003d\"Эксперт mentalist\"\u003ementalist\u003c/a\u003e found, the program got ML. It\u0027s also quite strange because I didn\u0027t rely on garbage collector and create no more than 400 Blocks. Each Block has int cnt[100000] inside, so total memory usage should not be more than something about 40 mb, but it exceeds 256 mb on practice. \u003ca href\u003d\"//codeforces.com/contest/455/submission/7406494\"\u003eCode\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e","tags":["cf260","noob","java","sqrt_decomposition"]}}