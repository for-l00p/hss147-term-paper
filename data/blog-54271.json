{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1504432623,"rating":-6,"authorHandle":"iCanCodeBro","modificationTimeSeconds":1504432623,"id":54271,"title":"\u003cp\u003eTrobule understanding optimal solution in CodeAgon from Hackerrank\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eIn \u003ca href\u003d\"https://www.hackerrank.com/contests/codeagon/challenges/buying-everything/\"\u003ethis\u003c/a\u003e problem I am having trouble understanding why we use concept like sliding window instead of trying all combinations+DP ? Especially the bold line in below paragraph which is from the Editorial.\u003c/p\u003e\u003cp\u003eHowever, the second sample test case shows that when \u003ccode\u003en\u0026gt;m\u003c/code\u003e there is a possibility that purchasing items from the first \u003ccode\u003em\u003c/code\u003e shops will take more time than skipping one or more shops. We\u0027ll need to calculate the amount of time for each possible combination of shops and choose the combination that takes the least amount of time. It\u0027s important that we can calculate all of these times optimally. \u003cstrong\u003eIf we were to create an array of each of the combinations and then use the loop above for each combination, we\u0027d be forgetting that each combination is only different from the next by one shop.\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eCan you please explain proof for the statement ?\u003c/p\u003e\u003cp\u003ePseudo codes from editorial \u003ca href\u003d\"https://ideone.com/RoH8PS\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eThanks.\u003c/p\u003e\u003c/div\u003e","tags":["#hackerrank","#dp","proof"]}}