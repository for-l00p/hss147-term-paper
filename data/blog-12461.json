{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1401397206,"rating":0,"authorHandle":"HidenoriS","modificationTimeSeconds":1401486317,"id":12461,"title":"\u003cp\u003eI/O and Time Complexity. \u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eI/O is really important. If input is large enough, O(N) algorithm could get TLE.\u003c/p\u003e\u003cp\u003e1) Java\u003c/p\u003e \u003cul\u003e   \u003cli\u003e\u003cp\u003eInput : Use Scanner. If input is large (\u0026gt; 10^5 characters), write \u003ca href\u003d\"http://pastebin.com/uPiFBT7g\"\u003eFastScanner\u003c/a\u003e class and use it.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eOutput : Use System.out.println. If you need to output multiple times (\u0026gt; 10^4 times), use StringBuilder to concatenate them first and print using System.out.println at the end. \u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e\u003cp\u003e2) C++\u003c/p\u003e \u003cul\u003e   \u003cli\u003e\u003cp\u003eInput : Use cin or scanf. If input is large(\u0026gt; 10^5 characters), use only scanf.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eOutput : Use cout or printf. If you need to output multiple times (\u0026gt; 10^4 times), use only printf.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eAdvanced: add ios_base::sync_with_stdio(0); on the first line in main function. Use only cin, cout. This is really fast.\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e\u003cp\u003e(cin, cout are by default slower since they must sync with printf and scanf. By disabling it, they work a lot faster.)\u003c/p\u003e\u003cp\u003e3) Time Complexity\u003c/p\u003e \u003cul\u003e   \u003cli\u003e\u003cp\u003eA program usually can run up to C * 10^7 calculations, where C is a reasonably small constant (usually \u0026lt;10), if the time limit is a few seconds.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eExample: If N \u0026lt; 10^6, O(N^2) will never work. If N \u0026lt; 10^2, O(N^3) works for sure. If N \u0026lt; 2*10^4, O(N^2) may need some optimization.\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e\u003c/div\u003e","tags":[]}}