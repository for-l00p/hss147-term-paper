{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1421971523,"rating":26,"authorHandle":"sh19910711","modificationTimeSeconds":1422024796,"id":15960,"title":"\u003cp\u003eSnippet Manager for Online Judges\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eGreetings :-)\u003c/p\u003e\u003ch3\u003etl;dr\u003c/h3\u003e\u003cp\u003e\u003ca href\u003d\"https://github.com/social-snippet/social-snippet\"\u003ehttps://github.com/social-snippet/social-snippet\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003cimg alt\u003d\"Application Demo\" src\u003d\"/predownloaded/ed/a4/eda4b023f38c8f9252234482e26e228cb7715d23.gif\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e \u003chr /\u003e\u003ch3\u003e0. Introduction to the Social Snippet\u003c/h3\u003e\u003cp\u003eI\u0027m starting a new software project, \u0026quot;\u003ca href\u003d\"https://social-snippet.github.io/\"\u003eThe Social Snippet Project\u003c/a\u003e\u0026quot;, to manage the snippet libraries for the online judges (e.g. \u003ca href\u003d\"https://github.com/watashi/AlgoLib\"\u003ewatashi\u0027s library\u003c/a\u003e, \u003ca href\u003d\"https://github.com/marioyc/ACM-ICPC-Library\"\u003emarioyc\u0027s library\u003c/a\u003e and etc...). As its name implies, it\u0027s made possible to share and retrieve your snippet libraries around the world through \u003ca href\u003d\"https://github.com\"\u003eGitHub\u003c/a\u003e and other hosting services. \u003c/p\u003e\u003cp\u003eThe social snippet project provides several things:\u003c/p\u003e \u003col\u003e   \u003cli\u003eCommand-line interface to use and manage the snippet libraries and its dependencies\u003c/li\u003e   \u003cli\u003e\u003ca href\u003d\"https://sspm.herokuapp.com\"\u003eRegistry system\u003c/a\u003e to find the snippet libraries\u003c/li\u003e   \u003cli\u003eEditor plugins to use the snippets actually (e.g. \u003ca href\u003d\"http://www.vim.org\"\u003eVim\u003c/a\u003e, \u003ca href\u003d\"http://www.gnu.org/software/emacs/\"\u003eEmacs\u003c/a\u003e and etc...)\u003c/li\u003e \u003c/ol\u003e\u003cp\u003eThe mission of the project is to create the snippet system which you can use on any programming languages, any editor softwares and any operating systems.\u003c/p\u003e \u003chr /\u003e\u003ch3\u003e1. How It Works\u003c/h3\u003e\u003ch4\u003eInserting Snippet\u003c/h4\u003e\u003cp\u003eLet\u0027s assume that we are tackling some graph shortest path problems, and then we decide to solve the problems by using find_shortest() function from our graph library. Here is a pseudo C++ program code for that:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e    // solution.cpp\n    #include \u0026lt;iostream\u0026gt;\n    using namespace std;\n\n    // @snip \u0026lt;graph-lib:algorithm/find_shortest.cpp\u0026gt;\n\n    void solve(Graph graph, Vertex start, Vertex goal) {\n        cout \u0026lt;\u0026lt; \u0026quot;The Answer \u003d \u0026quot; \u0026lt;\u0026lt; find_shortest(graph, start, goal) \u0026lt;\u0026lt; endl;\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003ch4\u003eThe \u003ccode\u003e@snip\u003c/code\u003e / \u003ccode\u003e@snippet\u003c/code\u003e annotation tags\u003c/h4\u003e\u003cp\u003eThe social snippet specifies the snippet code by putting annotation tags on the comment line.\u003c/p\u003e\u003cp\u003e\u003ccode\u003e// @snip \u0026lt;graph-lib:algorithm/find_shortest.cpp\u0026gt;\u003c/code\u003e\u003c/p\u003e\u003cp\u003eIn order to insert a snippet, we can use a \u003ccode\u003e@snip\u003c/code\u003e annotation tag. After inserting a snippet, the tagged line will be replaced by a snippet code such as follow:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e    // @snippet \u0026lt;graph-lib:algorithm/find_shortest.cpp\u0026gt;\n    int find_shortest(Graph graph, Vertex start, Vertex goal) {\n        ... some implementation ...\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe \u003ccode\u003e@snippet\u003c/code\u003e annotation tag shows that the snippet code is already inserted in the program code. Finally, the first program code will be translated as the follows:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e    // solution.cpp\n    #include \u0026lt;iostream\u0026gt;\n    using namespace std;\n\n    // @snippet \u0026lt;graph-lib:algorithm/find_shortest.cpp\u0026gt;\n    int find_shortest(Graph graph, Vertex start, Vertex goal) {\n        ... some implementation ...\n    }\n\n    void solve(Graph graph, Vertex start, Vertex goal) {\n        cout \u0026lt;\u0026lt; \u0026quot;Answer  is \u0026quot; \u0026lt;\u0026lt; find_shortest(graph, start, goal) \u0026lt;\u0026lt; endl;\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003ch4\u003eDependency Management\u003c/h4\u003e\u003cp\u003eOne more thing, the social snippet can resolve the dependencies among the snippets. For example, not deeply thinking, if the previous snippet depends on the dijkstra\u0027s algorithm, then a replaced snippet code will be:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e    // @snippet \u0026lt;graph-lib:algorithm/find-min/dijkstra.cpp\u0026gt;\n    vector\u0026lt;int\u0026gt; find_min(Graph graph, Vertex start) {\n        vector\u0026lt;int\u0026gt; min_dist;\n        ... some implementation ...\n        return min_dist;\n    }\n\n    // @snippet \u0026lt;graph-lib:algorithm/find_shortest.cpp\u0026gt;\n    int find_shortest(Graph graph, Vertex start, Vertex goal) {\n        vector\u0026lt;int\u0026gt; dist \u003d find_min(graph, start);\n        return dist[goal.id];\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003elike above. The depended snippets are also inserted into the program code automatically.\u003c/p\u003e\u003ch4\u003eUsage Example\u003c/h4\u003e\u003cp\u003eHere is my last submission for \u003ca href\u003d\"//codeforces.com/contest/501\"\u003eCodeforces Round #268\u003c/a\u003e. I was using the \u003ca href\u003d\"https://social-snippet.github.io\"\u003esocial-snippet\u003c/a\u003e as a template code manager.\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"//codeforces.com/contest/501/submission/9413315\"\u003ehttp://codeforces.com/contest/501/submission/9413315\u003c/a\u003e\u003c/p\u003e \u003chr /\u003e\u003ch4\u003eInstallation Guide\u003c/h4\u003e\u003cp\u003eCore utilities (including command-line interfaces) are available on \u003ca href\u003d\"https://rubygems.org\"\u003eRubyGems.org\u003c/a\u003e. First, you need to install \u003ca href\u003d\"https://www.ruby-lang.org\"\u003eRuby\u003c/a\u003e, and then type:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e    $ gem install social_snippet\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eAnd next, you need to install your editor\u0027s plugin for the social snippet. In the case of \u003ca href\u003d\"https://github.com/social-snippet/vim-social-snippet\"\u003esocial_snippet.vim\u003c/a\u003e (Vim plugin), you should install plugins first as follow:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e    git clone https://github.com/Shougo/neobundle.vim ~/.vim/bundle/neobundle.vim\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eAnd then, write the followings to your configuration file (\u003ccode\u003e~/.vimrc\u003c/code\u003e):\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e    set runtimepath+\u003d~/.vim/bundle/neobundle.vim/\n    call neobundle#begin(expand(\u0027~/.vim/bundle/\u0027))\n    NeoBundle \u0026quot;Shougo/neocomplete.vim\u0026quot;\n    NeoBundle \u0026quot;social-snippet/vim-social-snippet\u0026quot;\n    NeoBundleCheck\n    call neobundle#end()\n    let g:neocomplete#enable_at_startup \u003d 1\n    let g:social_snippet#complete#enable \u003d 1\n\n\u003c/code\u003e\u003c/pre\u003e \u003chr /\u003e\u003ch4\u003eThe Command-line Interface\u003c/h4\u003e\u003cp\u003eThe \u003ccode\u003esspm\u003c/code\u003e command is to manage the snippet libraries. It has several sub-commands. If you are finding some libraries, then you should type the below command to search:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e    $ sspm search \u0026lt;keyword\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eAnd if you find the expected library, then you should type the below command to install:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e    $ sspm install \u0026lt;name\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eYou can view the available sub-commands by typing:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e    $ sspm\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eor\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e    $ sspm --help\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eYou can also view the usage of the sub-command by typing:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e    $ sspm {sub-command} --help\n\u003c/code\u003e\u003c/pre\u003e \u003chr /\u003e\u003ch3\u003e2. Publish Your Libraries on the Registry System\u003c/h3\u003e\u003cp\u003e\u003ca href\u003d\"https://sspm.herokuapp.com\"\u003eThe social snippet reigistry system\u003c/a\u003e is currently supported only the libraries publishing on the GitHub. If you have a GitHub repository, you can publish it by putting \u003ccode\u003esnippet.json\u003c/code\u003e file into the repository. The \u003ccode\u003esnippet.json\u003c/code\u003e\u0027s format is as follow:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e    {\n        \u0026quot;name\u0026quot;: \u0026quot;your-lib-name\u0026quot;,\n        \u0026quot;desc\u0026quot;: \u0026quot;the description\u0026quot;,\n        \u0026quot;languages\u0026quot;: [\u0026quot;C\u0026quot;, \u0026quot;C++\u0026quot;],\n        \u0026quot;license\u0026quot;: \u0026quot;MIT\u0026quot;,\n        \u0026quot;main\u0026quot;: \u0026quot;path/to/src\u0026quot;\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe repository will be registered to the registry system as the name written in the \u003ccode\u003esnippet.json\u003c/code\u003e. In order to publish the repository, you should type the below command:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e    $ sspm publish {The URL of repository}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eFor example:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e    $ sspm publish git://github.com/social-snippet/example-repo\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eHere are the examples, please check them out:\u003c/p\u003e \u003cul\u003e   \u003cli\u003e\u003ca href\u003d\"https://github.com/social-snippet/example-repo\"\u003ehttps://github.com/social-snippet/example-repo\u003c/a\u003e\u003c/li\u003e   \u003cli\u003e\u003ca href\u003d\"https://github.com/sh19910711/contest-base-simple\"\u003ehttps://github.com/sh19910711/contest-base-simple\u003c/a\u003e\u003c/li\u003e   \u003cli\u003e\u003ca href\u003d\"https://github.com/sh19910711/ruby-contest-lib\"\u003ehttps://github.com/sh19910711/ruby-contest-lib\u003c/a\u003e\u003c/li\u003e \u003c/ul\u003e \u003chr /\u003e\u003ch3\u003e3. Welcome Patches\u003c/h3\u003e\u003cp\u003eWhy don\u0027t you contribute this project. The project is under the terms of \u003ca href\u003d\"https://github.com/social-snippet/social-snippet/blob/master/LICENSE.txt\"\u003eMIT License\u003c/a\u003e, and the project is still in the development phase. So welcome patches and pull-requests (Now I\u0027m writing the documents for the developers). Feel free to contribute to the project, it\u0027s fine if you do just the ones you understand. There is a heavy context switching in the development. My hope is to focus me to a single task as possible. Help me:\u003c/p\u003e \u003cul\u003e   \u003cli\u003e\u003ca href\u003d\"https://github.com/social-snippet/social-snippet\"\u003eCore Utilities — CLI / API\u003c/a\u003e (\u003ca href\u003d\"https://rubygems.org/gems/social_snippet\"\u003esocial_snippet\u003c/a\u003e gem)   \u003cul\u003e     \u003cli\u003eLanguages: Ruby\u003c/li\u003e   \u003c/ul\u003e\u003c/li\u003e   \u003cli\u003e\u003ca href\u003d\"https://github.com/social-snippet/social-snippet-registry-core\"\u003eThe Back-end\u003c/a\u003e of the \u003ca href\u003d\"https://github.com/social-snippet/social-snippet-registry\"\u003eRegistry System\u003c/a\u003e   \u003cul\u003e     \u003cli\u003eLanguages: Ruby / \u003ca href\u003d\"http://slim-lang.com/\"\u003eSlim\u003c/a\u003e (for HTML)\u003c/li\u003e     \u003cli\u003eFrameworks: \u003ca href\u003d\"http://www.padrinorb.com/\"\u003ePadrino\u003c/a\u003e\u003c/li\u003e     \u003cli\u003eStorages: \u003ca href\u003d\"http://www.mongodb.org/\"\u003eMongoDB\u003c/a\u003e, \u003ca href\u003d\"http://memcached.org/\"\u003eMemcached\u003c/a\u003e\u003c/li\u003e   \u003c/ul\u003e\u003c/li\u003e   \u003cli\u003e\u003ca href\u003d\"https://github.com/social-snippet/social-snippet-registry-assets\"\u003eThe Front-end\u003c/a\u003e of the Registry System   \u003cul\u003e     \u003cli\u003eLanguages: \u003ca href\u003d\"http://coffeescript.org/\"\u003eCoffeeScript\u003c/a\u003e (for JavaScript) / \u003ca href\u003d\"http://sass-lang.com/\"\u003eSass\u003c/a\u003e (for CSS)\u003c/li\u003e     \u003cli\u003eFrameworks: \u003ca href\u003d\"http://marionettejs.com/\"\u003eMarionette.js\u003c/a\u003e, \u003ca href\u003d\"http://backbonejs.org/\"\u003eBackbone.js\u003c/a\u003e\u003c/li\u003e   \u003c/ul\u003e\u003c/li\u003e   \u003cli\u003e\u003ca href\u003d\"https://github.com/social-snippet/vim-social-snippet\"\u003eVim Plugin\u003c/a\u003e   \u003cul\u003e     \u003cli\u003eLanguages: \u003ca href\u003d\"http://vimdoc.sourceforge.net/htmldoc/usr_41.html\"\u003eVim script\u003c/a\u003e, Ruby\u003c/li\u003e   \u003c/ul\u003e\u003c/li\u003e   \u003cli\u003e\u003ca href\u003d\"https://github.com/social-snippet/social-snippet/wiki/Project-Ideas\"\u003eProject Ideas Page\u003c/a\u003e\u003c/li\u003e \u003c/ul\u003e \u003chr /\u003e\u003cp\u003eThanks\u003c/p\u003e\u003c/div\u003e","tags":["code snippets","social snippet","tools"]}}