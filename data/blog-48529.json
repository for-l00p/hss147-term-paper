{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1479759674,"rating":37,"authorHandle":"C137","modificationTimeSeconds":1480061901,"id":48529,"title":"\u003cp\u003eRegular problem analysis blog (3) / Graph problem\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003c/p\u003e\u003cp\u003eHello Codeforces, my name is \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/New_Horizons\" title\u003d\"Expert New_Horizons\"\u003eNew_Horizons\u003c/a\u003e and as I said before, I will continue writing regularly in this blog:\u003c/p\u003e\u003cp\u003eIt has been a long time since i wrote something new, because I was busy with some stuff, however I will try to post at least one topic every 10-15 days, and i am gonna select a problem that i really found it useful and interesting, and then i will talk about the way i solved this problem, with long editorial and analysis, by this way of sharing my thoughts i hope that grey, green and cyan contestants will benefit from it and learn something new, also i am hoping that top rated contestants will also add their notes to my solution, and suggest some more optimized code.\u003c/p\u003e\u003cp\u003e\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003c/p\u003e\u003cp\u003eToday, I choose to you this graph problem, I hope you will like it:\u003c/p\u003e\u003cp\u003eP.S: if you are familiar with the basics of graph theory and the BFS algorithm, then i strongly recommend you to try with this problem at least for one hour before reading this blog:\u003c/p\u003e\u003cp\u003eBefore I start, I would like to thank \u003ca class\u003d\"rated-user user-cyan\" href\u003d\"/profile/Nour_R\" title\u003d\"Specialist Nour_R\"\u003eNour_R\u003c/a\u003e and \u003ca class\u003d\"rated-user user-gray\" href\u003d\"/profile/Abdussalam_Al_Ali\" title\u003d\"Newbie Abdussalam_Al_Ali\"\u003eAbdussalam_Al_Ali\u003c/a\u003e for solving this problem after reading this blog, and adding his notes and suggestions to make it even more clear.\u003c/p\u003e\u003cp\u003eproblem name: long journey\u003c/p\u003e\u003cp\u003eLink: \u003ca href\u003d\"https://csacademy.com/contest/archive/#task/long_journey\"\u003ehere\u003c/a\u003e\u003c/p\u003e\u003cp\u003etype: Graphs\u003c/p\u003e\u003cp\u003eDifficulty level: Average\u003c/p\u003e\u003cp\u003eShort Description:\u003c/p\u003e\u003cp\u003eGiven an un-directed un-weighted connected graph, two friends A and B stand in a starting node \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003est\u003c/i\u003e\u003c/span\u003e, A wants to go to node \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003een\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e using the shortest possible path, similar B wants to go to node \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003een\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e using the shortest possible path, but they both want to share the maximum number of edges, your task is to calculate the maximum number of edges they will share.\u003c/p\u003e\u003cp\u003eExample:\u003c/p\u003e\u003cp\u003e\u003cimg alt\u003d\" \" src\u003d\"/predownloaded/88/66/8866b0b1263595309d7ade1d898b84cfb17acdc4.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003esee the graph in the picture, let \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003est\u003c/i\u003e\u003c/span\u003e be node 1, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003een\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e be node 4 and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003een\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e be node 6.\u003c/p\u003e\u003cp\u003ethe optimal path for A will be \u003cspan class\u003d\"tex-span\"\u003e1 - 2 - 3 - 4\u003c/span\u003e\u003c/p\u003e\u003cp\u003ethe optimal path for B will be \u003cspan class\u003d\"tex-span\"\u003e1 - 2 - 3 - 5 - 6\u003c/span\u003e\u003c/p\u003e\u003cp\u003esharing two edges, from 1 to 2, and from 2 to 3.\u003c/p\u003e\u003cp\u003eProblem Analysis:\u003c/p\u003e\u003cp\u003eAs a start we will make the following assuming, solve the problem based on it, then prove it\u0027s true:\u003c/p\u003e\u003cp\u003ethe optimal path for A will be something like:\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003est\u003c/i\u003e - \u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e - \u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e - ...... - \u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003elen\u003c/i\u003e\u003c/sub\u003e - \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e - \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e - ..... - \u003ci\u003een\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e\u003c/p\u003e\u003cp\u003eand the optimal path for B will be something like:\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003est\u003c/i\u003e - \u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e - \u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e - ...... - \u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003elen\u003c/i\u003e\u003c/sub\u003e - \u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e - \u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e - ..... - \u003ci\u003een\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e\u003c/p\u003e\u003cp\u003ewhere nodes \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e, \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e, ...., \u003ci\u003een\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/sub\u003e, \u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e, \u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e, ...., \u003ci\u003een\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e are all distinct\u003c/p\u003e\u003cp\u003ethat means, they will both start at node \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003est\u003c/i\u003e\u003c/span\u003e, travel together till node \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003elen\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e then separate, and never meet again.\u003c/p\u003e\u003cp\u003ebut why this is true??? let\u0027s look at the two examples below:\u003c/p\u003e\u003cp\u003ein figure 1, the two friends should travel from node \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/span\u003e to node \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ee\u003c/i\u003e\u003c/span\u003e, there are two possible paths:\u003c/p\u003e\u003cp\u003e\u003cimg alt\u003d\" \" src\u003d\"/predownloaded/76/62/76626ec8dad6ce0eeb64889b0c558a3adc65e9c1.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e \u003cul\u003e   \u003cli\u003e\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e - \u003ci\u003eb\u003c/i\u003e - \u003ci\u003ee\u003c/i\u003e\u003c/span\u003e\u003c/li\u003e   \u003cli\u003e\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e - \u003ci\u003ec\u003c/i\u003e - \u003ci\u003ed\u003c/i\u003e - \u003ci\u003ee\u003c/i\u003e\u003c/span\u003e\u003c/li\u003e \u003c/ul\u003e\u003cp\u003ethe optimal, is for them both to follow the first path, because it\u0027s the shortest, remember they both should take the shortest possible path.\u003c/p\u003e\u003cp\u003ein figure 2, the two friends should travel from node a to node f, there are two possible paths:\u003c/p\u003e\u003cp\u003e\u003cimg alt\u003d\" \" src\u003d\"/predownloaded/b9/ba/b9bad5bd227a72fba422d18020839c7ce4c54960.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e \u003cul\u003e   \u003cli\u003e\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e - \u003ci\u003eb\u003c/i\u003e - \u003ci\u003ec\u003c/i\u003e - \u003ci\u003ef\u003c/i\u003e\u003c/span\u003e\u003c/li\u003e   \u003cli\u003e\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e - \u003ci\u003ed\u003c/i\u003e - \u003ci\u003ee\u003c/i\u003e - \u003ci\u003ef\u003c/i\u003e\u003c/span\u003e\u003c/li\u003e \u003c/ul\u003e\u003cp\u003ethe two paths are in the same length, but it\u0027s better for them to choose the same path, to travel as much together as possible.\u003c/p\u003e\u003cp\u003eso it\u0027s clear, that if they are at any node, let\u0027s say \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e, and they will meet again at any other node, let\u0027s say \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ey\u003c/i\u003e\u003c/span\u003e, then for sure all the nodes from the shortest path between \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ey\u003c/i\u003e\u003c/span\u003e are part of the answer !!!\u003c/p\u003e\u003cp\u003eNow, we can say the answer is at a node \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003elen\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e such that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003elen\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e is a part of a shortest path between \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003est\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003een\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e, and a part of a shortest path between \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003est\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003een\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e, and it\u0027s distance of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003est\u003c/i\u003e\u003c/span\u003e is maximum possible.\u003c/p\u003e\u003cp\u003eSo, all we should do is make three BFS the first from node \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003est\u003c/i\u003e\u003c/span\u003e store the distances in array \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edis\u003c/i\u003e1\u003c/span\u003e, second from node \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003een\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e store the distances in array \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edis\u003c/i\u003e2\u003c/span\u003e, third from node \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003een\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e store the distances in array \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edis\u003c/i\u003e3\u003c/span\u003e, then for each node \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e, we say:\u003c/p\u003e\u003cp\u003e\u003ccode\u003eif(dis1[x]+dis2[x]\u003d\u003ddis1[en_a] \u0026amp;\u0026amp; dis1[x]+dis3[x]\u003d\u003ddis1[en_b] )ans\u003dmax(ans,dis[x]);\u003c/code\u003e\u003c/p\u003e\u003cp\u003eremember, if you want to check if a node \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e, is a part from the shortest path between nodes \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003est\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003een\u003c/i\u003e\u003c/span\u003e, then run two BFS, and check whether \u003ccode\u003edis1[x]+dis2[x]\u003d\u003ddis1[en]\u003c/code\u003e\u003c/p\u003e\u003cp\u003ethe time complexity for this code is a simple BFS and it\u0027s \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e + \u003ci\u003em\u003c/i\u003e)\u003c/span\u003e, and the space complexity is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e)\u003c/span\u003e.\u003c/p\u003e\u003cp\u003e\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003c/p\u003e\u003cp\u003eThis is all I can say for this problem, I hope you liked my analysis and you benefit from it, I am not gonna post my code, because I think you can code it now after reading the analysis, If there is still something unclear, then fell free to ask me in the comments below, or send me a message...\u003c/p\u003e\u003cp\u003eI will try to post the next blog about the next problem in the following 10-14 days... Happy coding, and have a nice day :D\u003c/p\u003e\u003cp\u003e\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003c/p\u003e\u003c/div\u003e","tags":["regular problem analysis","new_horizons","graphs","bfs"]}}