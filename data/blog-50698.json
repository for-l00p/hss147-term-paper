{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1488141936,"rating":24,"authorHandle":"Walid_Amin","modificationTimeSeconds":1488143257,"id":50698,"title":"\u003cp\u003eVery strange behavior in time analysis of map and question about unordered_map\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e\u003cstrong\u003eHello everyone, I hope you all are fine :)\u003c/strong\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eThere are basically two questions, both concerning this problem \u0026quot;Molly\u0027s Chemicals ( \u003ca href\u003d\"//codeforces.com/problemset/problem/776/C\"\u003ehttp://codeforces.com/problemset/problem/776/C\u003c/a\u003e )\u003c/strong\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eSorry for the long post, I will appreciate it very much if anyone participated in this discussion.\u003c/strong\u003e\u003c/p\u003e \u003chr /\u003e\u003cp\u003e\u003cstrong\u003e\u003cem\u003e1- Problem related question (about map)\u003c/em\u003e\u003c/strong\u003e \u003c/p\u003e\u003cp\u003eFirst of them concerning C++ map in STL, it is obvious that time complexity intended for this problem is O(N * log(10^15) * search) where search using map is logN so total complexity is O(N * logN * log(10^15)). To make sure that there are only N elements in the map, I do this check: if(cnt.count(x))  ans+\u003dcnt[x];\u003c/p\u003e\u003cp\u003eIf I replaced previous part with this: ans+\u003dcnt[x];\u003c/p\u003e\u003cp\u003eIt will insert x as a key in the map with value 0 if x wasn\u0027t in the map, so this should make complexity O(N * log(NlogN) * log(10^15)).\u003c/p\u003e\u003cp\u003eSo it can be shown mathematically that second version has a constant less than two times than that of the first version: N * log(NlogN) * log(10^15) \u0026lt; N * log(N*N) * log(10^15) \u003d 2 * N * log(N) * log(10^15)\u003c/p\u003e\u003cp\u003ebut first version runs in 390 ms but second runs in 1497 ms which is approximately 4 times while time analysis shows that it should be much less than 2\u003c/p\u003e \u003chr /\u003e\u003cp\u003e\u003cstrong\u003e\u003cem\u003e2- Problem unrelated question (about unordered_map)\u003c/em\u003e\u003c/strong\u003e \u003c/p\u003e\u003cp\u003eSecond and last question concerning C++ unordered_map in STL, the average search time is O(1) but in worst case is O(N) and it seems in the previous problem the author put nice cases for anti-hash tests for unordered_map so it causes TLE.\u003c/p\u003e\u003cp\u003eBut I tried every method to pass those tests, and made for more than 20 different tries, I have used many combinations of those:\u003c/p\u003e \u003cul\u003e   \u003cli\u003e\u003cp\u003eUsed reserve function in unordered_map, set it to MAX, MAX+7, 2*MAX, 7*MAX and others.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eUsed max_load_factor function in unordered_map, set it to 1, 0.5, 0.2, 0.231 and others.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eChanged hash function, set it to x%prime (tried different primes), tried to XOR it and also add it with a constant.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eXORed value before sending it to unordeded_map hoping to change distribution of the numbers.\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e\u003cp\u003eBut all attempts to make it pass have failed, although the time limit is 2.5 seconds and map version passed in 0.4 second!!\u003c/p\u003e\u003cp\u003eIs there anyway to make unordered_map pass? and why it TLE although all previous attempts which should change distribution of the numbers and make it pass author\u0027s cases?\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eThanks in advance\u003c/strong\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eSorry again for the long post, Wish you all best of luck and have a good day :)\u003c/strong\u003e\u003c/p\u003e\u003c/div\u003e","tags":["map","unordered_map","hash","time analysis"]}}