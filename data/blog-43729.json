{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1457673499,"rating":46,"authorHandle":"ko_osaga","modificationTimeSeconds":1457673499,"id":43729,"title":"\u003cp\u003eDP Optimization Challenge from Korean OI\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eI got a nice problem from Korean OI : \u003ca href\u003d\"https://www.acmicpc.net/problem/2300\"\u003ehttps://www.acmicpc.net/problem/2300\u003c/a\u003e .\u003c/p\u003e\u003cp\u003eSince deriving recurrence is not the point of this topic, I will give you the formula : \u003c/p\u003e \u003cul\u003e   \u003cli\u003e\u003cp\u003eN \u0026lt;\u003d 10000\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003e0 \u0026lt;\u003d Xi \u0026lt;\u003d X(i+1) \u0026lt;\u003d 10^9, (1 \u0026lt;\u003d i \u0026lt; N), 0 \u0026lt;\u003d Yi \u0026lt;\u003d 10^9 (1 \u0026lt;\u003d i \u0026lt;\u003d N)\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eDP[i] \u003d Min(DP[j] + Cost(j+1, i))for all j \u0026lt; i. when Cost(s, e) \u003d Max(X[e] — X[s], Max(Y[s], Y[s+1] ... Y[e]))\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e\u003cp\u003eThe goal is to calculate DP[N] — and O(N^2) solution is quite straightforward.\u003c/p\u003e\u003cp\u003eHowever, I heard that there is a subquardatic solution to this problem! I tried various strategies to solve it, but failed. \u003c/p\u003e\u003cp\u003eDoes anyone have a hint / idea to the subquadratic solution?\u003c/p\u003e\u003c/div\u003e","tags":["dp","optimization","koi"]}}