{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1511461530,"rating":-16,"authorHandle":"Meenachinmay","modificationTimeSeconds":1511461530,"id":55974,"title":"\u003cp\u003eCodeforces educational round #33 Problem no 2 tutorial\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003ethe direct formula is given in the problem. we just need to use that but a bit magic can work here rather than a brute force approach. the solution is like: run a loop from k\u003d1 to k \u0026lt;\u003d 10 //(constraints are 10**5 so this loop will work perfectly) then check for every K in given formula like... long long num \u003d ((1LL \u0026lt;\u0026lt; k) — 1) * ((1LL) \u0026lt;\u0026lt; (k-1)) // 2^k — 1 * 2^(k-1) is given then check that this num is even or not if yes add this to ans. repeat same for the entire loop at the end you will end up with your ans.\u003c/p\u003e\u003c/div\u003e","tags":["tutorial edu #33 b"]}}