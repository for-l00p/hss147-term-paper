{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1428069085,"rating":8,"authorHandle":"ale64bit","modificationTimeSeconds":1428069085,"id":17263,"title":"\u003cp\u003eHelp with problem about sets\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eIs this problem solvable with some data structure or some other idea is required?\u003c/p\u003e\u003cp\u003eYou have \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eM\u003c/i\u003e\u003c/span\u003e sets of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eN\u003c/i\u003e\u003c/span\u003e-bit strings, numbered from \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eM\u003c/i\u003e\u003c/span\u003e, and all of them are initially empty. Then, you have \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eQ\u003c/i\u003e\u003c/span\u003e operations of the following kind: add to the \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e-th set, all the \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eN\u003c/i\u003e\u003c/span\u003e-bit strings with the \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e-th bit equal to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/span\u003e. You must output the number of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eN\u003c/i\u003e\u003c/span\u003e-bit strings in the set consisting of the intersection of all the \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eM\u003c/i\u003e\u003c/span\u003e sets after adding all the strings.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eInput\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eThe first line of input consists of 3 positive integers: \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eM\u003c/i\u003e\u003c/span\u003e (\u003cspan class\u003d\"tex-span\"\u003e2 ≤ \u003ci\u003eM\u003c/i\u003e ≤ 100000\u003c/span\u003e), \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eN\u003c/i\u003e\u003c/span\u003e (\u003cspan class\u003d\"tex-span\"\u003e1 ≤ \u003ci\u003eN\u003c/i\u003e ≤ 10000\u003c/span\u003e) and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eQ\u003c/i\u003e\u003c/span\u003e (\u003cspan class\u003d\"tex-span\"\u003e0 ≤ \u003ci\u003eQ\u003c/i\u003e ≤ 100000\u003c/span\u003e). The next \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eQ\u003c/i\u003e\u003c/span\u003e lines consists each of 3 integers: \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e (\u003cspan class\u003d\"tex-span\"\u003e1 ≤ \u003ci\u003ei\u003c/i\u003e ≤ \u003ci\u003eM\u003c/i\u003e\u003c/span\u003e), \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e (\u003cspan class\u003d\"tex-span\"\u003e0 ≤ \u003ci\u003ek\u003c/i\u003e \u0026lt; \u003ci\u003eN\u003c/i\u003e\u003c/span\u003e) and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/span\u003e (\u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/59/0b/590b47cc62120e1ac751883e145105e23e8d4cae.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e), representing the operation described above in the statement.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eOutput\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eOne line with one integer. The number of strings in the intersection of the \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eM\u003c/i\u003e\u003c/span\u003e sets after all the operations. It is guaranteed that the answer will fit in a 32 bit signed integer.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eExample input\u003c/strong\u003e\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e3 3 3\n1 0 1\n3 2 1\n2 1 0\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cstrong\u003eExample output\u003c/strong\u003e\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e1\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cstrong\u003eExplanation\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eThere are 3 initial empty sets of 3-bit strings. There are 3 operations. The first one adds to the first set all the strings with the bit 0 equal to 1. The second one adds to the third set all the strings with the bit 2 equal to 1. The third one adds to the second set all the strings with the bit 1 equal to 0. So, after all the operations, the sets consists of the following strings:\u003c/p\u003e\u003cp\u003e1) {100, 101, 110, 111}\u003c/p\u003e\u003cp\u003e2) {000, 001, 100, 101}\u003c/p\u003e\u003cp\u003e3) {001, 011, 101, 111}\u003c/p\u003e\u003cp\u003eThe intersection of the 3 sets is the set {101}, so the answer is 1.\u003c/p\u003e\u003cp\u003eThanks! \u003c/p\u003e\u003c/div\u003e","tags":["advanced data structure","binary","sets"]}}