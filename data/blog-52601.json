{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1497430385,"rating":86,"authorHandle":"rachitjain","modificationTimeSeconds":1497430385,"id":52601,"title":"\u003cp\u003eA Superb Problem on Hashing + Queries on Array [CodeChef]\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e\u003ca href\u003d\"http://rachitiitr.blogspot.in/2017/06/a-superb-problem-on-hashing-queries-on.html\"\u003ehttp://rachitiitr.blogspot.in/2017/06/a-superb-problem-on-hashing-queries-on.html\u003c/a\u003e \u003c/p\u003e\u003cp\u003eThis was my favorite problem from the recent long contest from CodeChef.\u003cbr /\u003eI solved the problem by building up a solution from scratch, and feel it\u0027s worth sharing.\u003cbr /\u003eHere is what other things you can learn from this post:\u003cbr /\u003e1. How to check whether two sets are identical using hashing.\u003cbr /\u003e2. An easy data structure to find the number of elements less than \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eK\u003c/i\u003e\u003c/span\u003e in subarray \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e[\u003ci\u003eL\u003c/i\u003e...\u003ci\u003eR\u003c/i\u003e]\u003c/span\u003e.\u003cbr /\u003e3. A variant of BIT i.e fenwick tree. We can use BITs for a lot of purposes :) \u003c/p\u003e\u003cp\u003eHave a good day!\u003c/p\u003e\u003c/div\u003e","tags":[]}}