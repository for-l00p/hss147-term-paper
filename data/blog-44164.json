{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1459697064,"rating":2,"authorHandle":"xblwyc","modificationTimeSeconds":1459697339,"id":44164,"title":"\u003cp\u003eAny data structure supporting log(n) update, delete and index query?\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eSuppose we are going to insert n numbers(may have duplicates), how would you design a data structure that supports the following functions in O(log n) time. The value range is very large.\u003c/p\u003e\u003cp\u003eint insert(int val) // return the index(how many numbers that are smaller than val) of the val\u003c/p\u003e\u003cp\u003eint find(int k) // return the kth minimal value.\u003c/p\u003e\u003cp\u003evoid delete(int val) // delete the value \u003c/p\u003e\u003cp\u003eFor offline algorithm(We can know all the values before), using binary index tree will be enough. But without that, how can we implement it?\u003c/p\u003e\u003c/div\u003e","tags":[]}}