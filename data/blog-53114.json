{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1499202406,"rating":0,"authorHandle":"el-hussein","modificationTimeSeconds":1499202817,"id":53114,"title":"\u003cp\u003eAccepted Solutions For The Filtration Contest\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eB: Codeforces Rating \u003c/p\u003e \u003cpre\u003e\u003ccode\u003e#include\u0026lt;bits/stdc++.h\u0026gt;\nusing namespace std;\nint x, sum, n, t, a;\nint main(){\n\tcin \u0026gt;\u0026gt; t;\n\twhile(t--){\n\t\tcin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; x;\n\t\tsum \u003d 1500;\n\t\twhile(n--){\n\t\t\tcin \u0026gt;\u0026gt; a;\n\t\t\tsum +\u003d a;\n\t\t}\n\t\tif(sum \u003d\u003d x)\n\t\t\tcout \u0026lt;\u0026lt; \u0026quot;Correct\\n\u0026quot;;\n\t\telse\n\t\t\tcout \u0026lt;\u0026lt; \u0026quot;Bug\\n\u0026quot;;\n\t}\t\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eC: X and paintings \u003c/p\u003e \u003cpre\u003e\u003ccode\u003e#include\u0026lt;bits/stdc++.h\u0026gt;\nusing namespace std;\nint r1, c1, r2, c2, r, c, t, n;\nint grid[105][105];\nchar col;\nint main(){\n\tscanf(\u0026quot;%d\u0026quot;, \u0026amp;t);\n\twhile(t--){\n\t\tscanf(\u0026quot;%d %d %d\u0026quot;, \u0026amp;r, \u0026amp;c, \u0026amp;n);\n\t\twhile(n--){\n\t\t\tscanf(\u0026quot;%d %d %d %d %c\u0026quot;, \u0026amp;r1, \u0026amp;c1, \u0026amp;r2, \u0026amp;c2, \u0026amp;col);\n\t\t\tfor(int i\u003dr1; i\u0026lt;\u003dr2; i++)\n\t\t\t\tfor(int j\u003dc1; j\u0026lt;\u003dc2; j++)\n\t\t\t\t\tgrid[i][j] \u003d col;\n\t\t}\n\t\tfor(int i\u003d1; i\u0026lt;\u003dr; i++){\n\t\t\tfor(int j\u003d1; j\u0026lt;\u003dc; j++)\n\t\t\t\tif(grid[i][j]\u0026lt;\u003d\u0027z\u0027\u0026amp;\u0026amp;grid[i][j]\u0026gt;\u003d\u0027a\u0027)\n\t\t\t\t\tprintf(\u0026quot;%c\u0026quot;, (char)grid[i][j]);\n\t\t\t\telse\n\t\t\t\t\tprintf(\u0026quot;.\u0026quot;);\n\t\t\tprintf(\u0026quot;\\n\u0026quot;);\n\t\t}\n\t\tmemset(grid, -1, sizeof(grid));\n\t}\n}\n\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eD: Palindrome Password \u003c/p\u003e \u003cpre\u003e\u003ccode\u003e#include\u0026lt;bits/stdc++.h\u0026gt;\nusing namespace std;\nint n, mx;\nstring s, p;\nvector\u0026lt;pair\u0026lt;int, string\u0026gt; \u0026gt; ans;\nvector\u0026lt;string\u0026gt; ANS;\nint main(){\n\tscanf(\u0026quot;%d\u0026quot;, \u0026amp;n);\n\tcin \u0026gt;\u0026gt; s;\n\tfor(int i\u003d1;\ti\u0026lt;n;\t++i){\n\t\tif(s[i]\u003d\u003ds[i-1])\n\t\t\tp+\u003ds[i];\n\t\telse{\n\t\t\tmx \u003d max(mx, (int)p.size());\n\t\t\tans.push_back({p.size(), p+s[i-1]});\n\t\t\tp\u003d\u0026quot;\u0026quot;;\n\t\t}\n\t\t\n\t}\n\tans.push_back({p.size(), p+s[n-1]});\n\tmx \u003d max(mx, (int)p.size());\n\tfor(int i\u003d0;i\u0026lt;(int)ans.size(); ++i){\n\t\tif(ans[i].first\u003d\u003dmx)\n\t\t\tANS.push_back(ans[i].second);\n\t}\n\t\n\t\n\tcout \u0026lt;\u0026lt; ANS.size() \u0026lt;\u0026lt; endl;\n\tfor(int i\u003d0;i\u0026lt;(int)ANS.size(); ++i)\n\t\t\tcout \u0026lt;\u0026lt; ANS[i] \u0026lt;\u0026lt; endl;\n}\n\n\u003c/code\u003e\u003c/pre\u003e \u003cpre\u003e\u003ccode\u003eE: Teams \nint GCD(int u, int v) {\n    while ( v !\u003d 0) {\n        unsigned r \u003d u % v;\n        u \u003d v;\n        v \u003d r;\n    }\n    return u;\n}\n#include\u0026lt;bits/stdc++.h\u0026gt;\nusing namespace std;\nint t, n, gcd, mn, arr[10005];\nint main(){\n\tscanf(\u0026quot;%d\u0026quot;, \u0026amp;t);\n\twhile(t--){\n\t\tmn \u003d 0;\n\t\tscanf(\u0026quot;%d\u0026quot;, \u0026amp;n);\n\t\tfor(int i\u003d0; i\u0026lt;n; ++i){\n\t\t\tscanf(\u0026quot;%d\u0026quot;, arr+i);\n\t\t\tif(i)\n\t\t\t\tgcd\u003d__gcd(gcd, arr[i]);\n\t\t\telse\n\t\t\t\tgcd\u003darr[i];\n\t\t}\n\t\tprintf(\u0026quot;%d \u0026quot;, gcd);\n\t\tfor(int i\u003d0; i\u0026lt;n; ++i){\n\t\t\tmn +\u003d arr[i]/gcd;\n\t\t}\n\t\tprintf(\u0026quot;%d\\n\u0026quot;, mn);\n\t}\n}\n\u003c/code\u003e\u003c/pre\u003e \u003cpre\u003e\u003ccode\u003eF: the Tower of Evil \n#include\u0026lt;bits/stdc++.h\u0026gt;\nusing namespace std;\nint t, h, w, d, mod, rem;\nint main(){\n\tscanf(\u0026quot;%d\u0026quot;, \u0026amp;t);\n\twhile(t--){\n\t\tscanf(\u0026quot;%d %d %d\u0026quot;, \u0026amp;h, \u0026amp;w, \u0026amp;d);\n\t\tmod \u003d 2*w-2;\n\t\trem \u003d (h%mod \u003d\u003d 0)?mod:h%mod;\n\t\tif(rem\u0026gt;w)\n\t\t\trem \u003d mod+2 \u0026amp;mdash; rem;\n\t\tprintf(\u0026quot;%s\\n\u0026quot;, (rem\u003d\u003dd)?\u0026quot;Yes\u0026quot;:\u0026quot;No\u0026quot;);\n\t}\n}\ncode Explanation :-\n      |4-r|   +   | 4-r  |    ++    | 4-r  |  \n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 13 17 18 \u003d\u0026gt;h\n1 2 3 4 3 2 1 2 3 4  3  2  1  2  3  4  3  2  \u003d\u0026gt;d\n1st solution\n  1 2 0 1 2 0 1 2 0  1  2  0  1  2  0  1  2  \u003d\u0026gt;rem\n2nd solution\n1 2 3 4 5 6 1 2 3 4  5  6  1  2  3  4  5  6  \u003d\u0026gt;rem\n          0             0                 0\n\u003c/code\u003e\u003c/pre\u003e \u003cpre\u003e\u003ccode\u003eG: Give Me This Pizza \n#include\u0026lt;bits/stdc++.h\u0026gt;\nusing namespace std;\nint n, arr[100005], ans[100005], freq[55];\nint main(){\n\tscanf(\u0026quot;%d\u0026quot;, \u0026amp;n);\n\tfor(int i\u003d0; i\u0026lt;n; ++i){\n\t\tscanf(\u0026quot;%d\u0026quot;, arr+i);\n\t}\n\n\tfor(int i\u003dn-1; i\u0026gt;\u003d0; i--){\n\t\tfreq[arr[i]] \u003d i;\n\t\tint mni \u003d 1000000;\n\t\tfor(int j\u003darr[i]+1; j\u0026lt;51; ++j){\n\t\t\tif(freq[j])\n\t\t\t\tmni \u003d min(mni, freq[j]);\n\t\t}\n\t\tans[i] \u003d (mni\u003d\u003d1000000)?-1:arr[mni];\n\t}\n\tfor(int i\u003d0; i\u0026lt;n; ++i){\n\t\tprintf(\u0026quot;%d \u0026quot;, ans[i]);\n\t}\n}\n\u003c/code\u003e\u003c/pre\u003e \u003cpre\u003e\u003ccode\u003eH: Popcorn \n#include\u0026lt;bits/stdc++.h\u0026gt;\nusing namespace std;\nlong long t, n, m, mul \u003d 1, ans \u003d 1, cnt;\nint main(){\n\tfreopen(\u0026quot;popcorn.in\u0026quot;, \u0026quot;r\u0026quot;, stdin);    // input file\n\tscanf(\u0026quot;%lld\u0026quot;, \u0026amp;t);\n\twhile(t--){\n\t\tmul \u003d ans \u003d cnt \u003d 1;\n\t\tscanf(\u0026quot;%lld %d\u0026quot;, \u0026amp;n, \u0026amp;m);\n\t\twhile(cnt\u0026lt;\u003dm){\n\t\t\tmul *\u003d n--;\n\t\t\tcnt++;\n\t\t}\n\t\tfor(int i\u003dm; i\u0026gt;1; --i)\n\t\t\tans *\u003d i;\n\t\tcout \u0026lt;\u0026lt; mul/ans \u0026lt;\u0026lt; endl;\n\t}\n}\n\u003c/code\u003e\u003c/pre\u003e \u003cpre\u003e\u003ccode\u003eI: A or B Equals C \n#include \u0026lt;bits/stdc++.h\u0026gt;\nusing namespace std;\n\nconst int M \u003d 1e9+7;\nlong long T, n, ans;\nstring a, b;\n\nint main(){\n\tcin \u0026gt;\u0026gt; T;\n\twhile(T--){\n\t\tans \u003d 1;\n\t\tcin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; a \u0026gt;\u0026gt; b;\n\t\t\n\t\tfor(int i \u003d 0 ; i \u0026lt; n ; ++i){\n\t\t\tif(a[i] \u003d\u003d \u00271\u0027 \u0026amp;\u0026amp; b[i] \u003d\u003d \u00270\u0027) ans \u003d 0;\n\t\t\tif(a[i] \u003d\u003d \u00271\u0027 \u0026amp;\u0026amp; b[i] \u003d\u003d \u00271\u0027) ans \u003d (2*ans)%M;\n\t\t}\n\t\t\n\t\tif(!ans) \n                       printf(\u0026quot;IMPOSSIBLE\\n\u0026quot;);\n\t\telse \n                       printf(\u0026quot;%lld\\n\u0026quot;, ans);\n\t}\n}\n\u003c/code\u003e\u003c/pre\u003e \u003cpre\u003e\u003ccode\u003eJ: Bonapity\n// AMR SABER solution\n#include \u0026lt;bits/stdc++.h\u0026gt;\nusing namespace std;\nint T;\nstring a, b;\nvoid normalize(string \u0026amp;str){\n\tfor(int i \u003d 0 ; i \u0026lt; (int)str.size() ; ++i){\n\t\tstr[i] \u003d tolower(str[i]);\n\t\tif(str[i] \u003d\u003d \u0027i\u0027) str[i] \u003d \u0027e\u0027;\n\t\tif(str[i] \u003d\u003d \u0027p\u0027) str[i] \u003d \u0027b\u0027;\n\t}\n}\n\nint main(){\n\tcin \u0026gt;\u0026gt; T;\n\twhile(T--){\n\t\tcin \u0026gt;\u0026gt; a \u0026gt;\u0026gt; b;\n\t\tnormalize(a);\n\t\tnormalize(b);\n\t\tif(a \u003d\u003d b) printf(\u0026quot;Yes\\n\u0026quot;);\n\t\telse printf(\u0026quot;No\\n\u0026quot;);\n\t}\n}\n\u003c/code\u003e\u003c/pre\u003e \u003cpre\u003e\u003ccode\u003eK: Husam and the Broken Present 1 \n\n#include \u0026lt;bits/stdc++.h\u0026gt;\nusing namespace std;\nconst int N \u003d 2e2;\nint n, a, arr[N];\nint main(){\n\tcin \u0026gt;\u0026gt; n;\n\tfor(int i \u003d 0 ; i \u0026lt; n ; ++i){\n\t\tfor(int j \u003d 0 ; j \u0026lt; n ; ++j){\n\t\t\tcin \u0026gt;\u0026gt; a;\n\t\t\tif(i \u003d\u003d j) arr[i] \u003d sqrt(a);\n\t\t}\n\t}\n\tfor(int i \u003d 0 ; i \u0026lt; n ; ++i) printf(\u0026quot;%d \u0026quot;, arr[i]);\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":[]}}