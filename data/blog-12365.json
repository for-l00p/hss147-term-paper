{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1400686105,"rating":-9,"authorHandle":"sharifruet","modificationTimeSeconds":1400686177,"id":12365,"title":"\u003cp\u003eInput processing in java\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eI think the simplest and convenient way of processing input is using java.util.Scanner. In this topic I\u0027ll explain various types of input using java.util.Scanner by going through example code.\u003c/p\u003e\u003cp\u003eThe following code is the skeleton of using java.util.Scanner to read input from standard input.\u003c/p\u003e \u003cpre\u003e\u003ccode\u003epublic static void main(String[] args) {\n   Scanner scn \u003d new Scanner(System.in);\n   // Codes for input goes here\n\n   scn.close();\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eTo read numbers like integers, doubles etc we can use code like the following code.\u003c/p\u003e\u003cp\u003eExample input pattern: 1 2 3, \u003c/p\u003e \u003cpre\u003e\u003ccode\u003e1\n2\n3\nor\n1\n2 3\n   ....\n   int n1 \u003d scn.nextInt(); // n1 \u003d 1\n   int n2 \u003d scn.nextInt(); // n2 \u003d 2\n   int n3 \u003d scn.nextInt(); // n3 \u003d 3\n   ...\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eTo read Strings we can do the following Example input pattern:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eabc\nabc xyz\n12:10:00\n\n   ....\n   String line1 \u003d scn.nextLine(); // line1 \u003d \u0026quot;abc\u0026quot;\n   String line2 \u003d scn.nextLine(); // line2 \u003d \u0026quot;abc xyz\u0026quot;\n   String line3 \u003d scn.nextLine(); // line3 \u003d \u0026quot;12:10:00\u0026quot;\n   ...\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eTo read mixed type input I mean both String and numbers. One way is we can read as the String then process for numbers.\u003c/p\u003e\u003cp\u003eExample input pattern:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eabc\n12 10 25\n\n   ....\n   String line1 \u003d scn.nextLine();       // line1 \u003d \u0026quot;abc\u0026quot;\n   String line2 \u003d scn.nextLine();       // line2\u003d \u0026quot;12 10 25\u0026quot;\n   String arr[] \u003d line2.split(\u0026quot; \u0026quot;);\n   int n1 \u003d Integer.parseInt(arr[0]);   // n1 \u003d 12\n   int n2 \u003d Integer.parseInt(arr[1]);   // n2 \u003d 10\n   int n3 \u003d Integer.parseInt(arr[2]);   // n3 \u003d 25\n   ...\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eTo read the above pattern what we also can do is-\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e   ....\n   String line1 \u003d scn.nextLine(); // line1 \u003d \u0026quot;abc\u0026quot;\n   int n1 \u003d scn.nextInt();        // n1 \u003d 12\n   int n2 \u003d scn.nextInt();        // n2 \u003d 10\n   int n3 \u003d scn.nextInt();        // n3 \u003d 25\n   ...\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThank you.\u003c/p\u003e\u003c/div\u003e","tags":["java","input reading","similar codes"]}}