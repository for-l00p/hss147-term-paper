{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1507448504,"rating":18,"authorHandle":"pnnb1997","modificationTimeSeconds":1507448618,"id":55053,"title":"\u003cp\u003eProblem 101505G\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e\u003ca href\u003d\"//codeforces.com/gym/101505\"\u003eContest link (PDF statements only), problem Orchard Division\u003c/a\u003e\u003c/p\u003e\u003cp\u003eMy solution is: iterate through different rows that have 1 or more trees on them (horizontal cut), then use binary search and fenwick tree to calculate the best vertical cut for exact n/2 trees in the rectangle formed by the vertical cut and the horizontal cut in 4 edges of the grid. But I\u0027m getting wrong answer verdict. I don\u0027t know which part is bugged in my code. Please help me.\u003c/p\u003e\u003cp\u003eCode:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e#include \u0026lt;bits/stdc++.h\u0026gt;\n\n#define X first\n#define Y second\n\nusing namespace std;\n\nint up[1000005], down[1000005];\n\nvoid update(int fen[], int n, int p, int val){\n    for(int i \u003d p; i \u0026lt;\u003d n; i +\u003d i \u0026amp; -i)\n        fen[i] +\u003d val;\n}\n\nint sum(int fen[], int p) {\n    int ans \u003d 0;\n    for(int i \u003d p; i; i -\u003d i \u0026amp; -i)\n        ans +\u003d fen[i];\n    return ans;\n}\n\nint main() {\n    ios_base::sync_with_stdio(0);\n    cin.tie(NULL);\n\n    int n, m, mxy;\n    long long ans;\n\n    while (cin \u0026gt;\u0026gt; m \u0026gt;\u0026gt; n) {\n        vector\u0026lt; pair\u0026lt;int, int\u0026gt; \u0026gt; a(n);\n        map\u0026lt;int, int\u0026gt; mm, my;\n        memset(up, 0, sizeof(up));\n        memset(down, 0, sizeof(down));\n        mxy \u003d 0;\n        \n        for (int i \u003d 0; i \u0026lt; n; ++i) {\n            cin \u0026gt;\u0026gt; a[i].X \u0026gt;\u0026gt; a[i].Y;\n            mm[a[i].Y] \u003d 0;\n            mxy \u003d max(mxy, a[i].Y);\n        }\n\n        if (n \u0026amp; 1) {\n            cout \u0026lt;\u0026lt; \u0026quot;-1\\n\u0026quot;;\n            continue;\n        }\n\n        int cnt \u003d 0;\n\n        for (auto it \u003d mm.begin(); it !\u003d mm.end(); ++it) {\n            it-\u0026gt;second \u003d ++cnt;\n            my[cnt] \u003d it-\u0026gt;first;\n        }\n\n        for (int i \u003d 0; i \u0026lt; n; ++i)\n            update(down, mm.size(), mm[a[i].Y], 1);\n\n        sort(a.begin(), a.end());\n        a.push_back(make_pair(2000000000, 2000000000));\n        ans \u003d (1ll \u0026lt;\u0026lt; 62);\n\n        update(up, mm.size(), mm[a[0].Y], 1);\n        update(down, mm.size(), mm[a[0].Y], -1);\n\n        for (int i \u003d 1; i \u0026lt; n; ++i) {\n            if (a[i].X !\u003d a[i - 1].X) {\n                int l \u003d 0, r \u003d cnt + 1;\n\n                while (l \u0026lt; r - 1) {\n                    int c \u003d (l + r) \u0026gt;\u0026gt; 1;\n\n                    if (sum(up, c) \u0026lt; n / 2)\n                        l \u003d c;\n                    else\n                        r \u003d c;\n                }\n\n                if (r \u0026lt;\u003d cnt \u0026amp;\u0026amp; sum(up, r) \u003d\u003d n / 2)\n                    ans \u003d min(ans, (long long)(a[i - 1].X + 1) * (my[r] + 1));\n\n                l \u003d 0, r \u003d cnt + 1;\n                    \n                while (l \u0026lt; r - 1) {\n                    int c \u003d (l + r) \u0026gt;\u0026gt; 1;\n\n                    if (sum(up, cnt) - sum(up, c) \u0026lt; n / 2)\n                        r \u003d c;\n                    else\n                        l \u003d c;\n                }\n\n                if (l \u0026gt; 0 \u0026amp;\u0026amp; sum(up, cnt) - sum(up, l) \u003d\u003d n / 2)\n                    ans \u003d min(ans, (long long)(a[i - 1].X + 1) * (m - my[l] - 1));\n\n                if (a[i - 1].X \u003d\u003d m - 1)\n                    continue;                    \n\n                l \u003d 0, r \u003d cnt + 1;\n                \n                while (l \u0026lt; r - 1) {\n                    int c \u003d (l + r) \u0026gt;\u0026gt; 1;\n\n                    if (sum(down, c) \u0026lt; n / 2)\n                        l \u003d c;\n                    else\n                        r \u003d c;\n                }\n\n                if (r \u0026lt;\u003d cnt \u0026amp;\u0026amp; sum(down, r) \u003d\u003d n / 2)\n                    ans \u003d min(ans, (long long)(m - a[i].X) * (my[r] + 1));\n\n                l \u003d 0, r \u003d cnt + 1;\n                    \n                while (l \u0026lt; r - 1) {\n                    int c \u003d (l + r) \u0026gt;\u0026gt; 1;\n\n                    if (sum(down, cnt) - sum(down, c) \u0026lt; n / 2)\n                        r \u003d c;\n                    else\n                        l \u003d c;\n                }\n\n                if (l \u0026gt; 0 \u0026amp;\u0026amp; sum(down, cnt) - sum(down, l) \u003d\u003d n / 2)\n                    ans \u003d min(ans, (long long)(m - a[i].X) * (m - my[l] - 1));\n            }\n\n            if (a[i].Y \u0026lt;\u003d m) {\n                update(up, mm.size(), mm[a[i].Y], 1);\n                update(down, mm.size(), mm[a[i].Y], -1);\n            }\n        }\n\n        if (ans \u003d\u003d (1ll \u0026lt;\u0026lt; 62))\n            cout \u0026lt;\u0026lt; \u0026quot;-1\\n\u0026quot;;\n        else\n            cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0027\\n\u0027;\n    }\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":["grid","gym"]}}