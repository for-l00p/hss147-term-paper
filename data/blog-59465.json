{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1526326785,"rating":258,"authorHandle":"VLamarca","modificationTimeSeconds":1526331863,"id":59465,"title":"\u003cp\u003ePlease change the score of hacking in CF rounds\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHi!\u003c/p\u003e\u003cp\u003eIn this blog I would like to humbly suggest a change in how hacking is calculated in CF rounds. I\u0027ve talked to some of my friends and they agree that it feels a little unfair that someone who solved more problems scores less than someone who hacked more. A great example from where this happens is from the top positions (and other positions too) in today\u0027s round: \u003ca href\u003d\"//codeforces.com/contest/979/standings\"\u003eCodeforces Round #482 (Div. 2) \u003c/a\u003e.\u003c/p\u003e\u003cp\u003eI have two main suggestions on how to calculate hacking points in a way that I consider fairer. The specific way may vary, but the key points are:\u003c/p\u003e\u003cp\u003e1) \u003cstrong\u003eThe more you successfully hack a certain problem, the less you should score with it.\u003c/strong\u003e This means that the first hack on problem A should get you 100 points, but the second 50, the third 25 and so on (or something like this, maybe keep 50 for all the following hacks starting with the second one). I feel that a decreasing function for this is fairer because, in most cases, when you hack a certain problem, it is easier to hack it again. It only depends on luck to have lots of people in your room that made the mistake you spotted. \u003cstrong\u003eNotice that, in this suggestion, if you hack problem A one time and then problem B one time, both of them should get you 100 points each.\u003c/strong\u003e\u003c/p\u003e\u003cp\u003e2) \u003cstrong\u003eThe harder the problem, the more you should score by hacking it.\u003c/strong\u003e This means that hacking problem A should get you 100 points, and hacking problem B 150 points, or something like this. I feel that in most cases it is harder to hack harder problems because generally their solutions are longer and therefore harder to read. Also fewer people solve harder problems, so it makes sense to increase the value of hacking them to make it more attractive for people that did passed pretest for this problem to try to hack others\u0027 solutions.\u003c/p\u003e\u003cp\u003eI am happy to discuss ideas in this regard.\u003c/p\u003e\u003cp\u003eThanks for reading! (Also if you spot any mistakes in my english I would appreciate to hear about them in my private talks :) )\u003c/p\u003e\u003c/div\u003e","tags":[]}}