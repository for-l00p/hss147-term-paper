{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1433444282,"rating":93,"authorHandle":"ADJA","modificationTimeSeconds":1433445151,"id":18329,"title":"\u003cp\u003eCodeforces Round #306 (Div. 2) Editorial\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003ch2\u003e\u003ca href\u003d\"/contest/550/problem/A\" title\u003d\"Codeforces Round 306 (Div. 2)\"\u003e550A - Two Substrings\u003c/a\u003e\u003c/h2\u003e\u003cp\u003eThere are many ways to solve this problem. Author solution does the following: check if substring \u0026quot;AB\u0026quot; goes before \u0026quot;BA\u0026quot;, and then vice versa, if \u0026quot;BA\u0026quot; goes before \u0026quot;AB\u0026quot;. \u003c/p\u003e\u003cp\u003eYou can do it in the following way: find the first occurence of \u0026quot;AB\u0026quot; then check all substrings of length two to the right of it to check if substring \u0026quot;BA\u0026quot; also exists. Then do it vice versa. \u003c/p\u003e\u003cp\u003eComplexity of the solution is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e)\u003c/span\u003e, where \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e is the length of the given string.\u003c/p\u003e\u003ch2\u003e\u003ca href\u003d\"/contest/550/problem/B\" title\u003d\"Codeforces Round 306 (Div. 2)\"\u003e550B - Preparing Olympiad\u003c/a\u003e\u003c/h2\u003e\u003cp\u003eBecause of the low constraints, this problem can be solved by complete search over all problem sets (there are \u003cspan class\u003d\"tex-span\"\u003e2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/sup\u003e\u003c/span\u003e of them).\u003c/p\u003e\u003cp\u003eFor every potential problem set (which can be conviniently expressed as bit mask) we need to check if it satisfies all needed criteria. We can simply find the sum of problem complexities and also the difference between the most difficult and the easiest problems in linear time, iterating over the problems that we included in our current set/bitmask. If this problem set can be used, we increase the answer by one.\u003c/p\u003e\u003cp\u003eComplexity of this solution is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/sup\u003e·\u003ci\u003en\u003c/i\u003e)\u003c/span\u003e.\u003c/p\u003e\u003ch2\u003e\u003ca href\u003d\"/contest/550/problem/C\" title\u003d\"Codeforces Round 306 (Div. 2)\"\u003e550C - Divisibility by Eight\u003c/a\u003e\u003c/h2\u003e\u003cp\u003eThis problem can be solved with at least two different approaches. \u003c/p\u003e\u003cp\u003eThe first one is based on the \u0026quot;school\u0026quot; property of the divisibility by eight — number can be divided by eight if and only if its last three digits form a number that can be divided by eight. Thus, it is enough to test only numbers that can be obtained from the original one by crossing out and that contain at most three digits (so we check only all one-digit, two-digit and three-digit numbers). This can be done in \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003elen\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e3\u003c/sup\u003e)\u003c/span\u003e with three nested loops (here \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003elen\u003c/i\u003e\u003c/span\u003e is the length of the original number).\u003c/p\u003e\u003cp\u003eSecond approach uses dynamic programming. Let\u0027s calculate \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edp\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e][\u003ci\u003ej\u003c/i\u003e]\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e1 ≤ \u003ci\u003ei\u003c/i\u003e ≤ \u003ci\u003en\u003c/i\u003e\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e0 ≤ \u003ci\u003ej\u003c/i\u003e \u0026lt; 8\u003c/span\u003e. The value of dp is true if we can cross out some ditits from the prefix of length \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e such that the remaining number gives \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e modulo eight, and false otherwise. \u003c/p\u003e\u003cp\u003eThis dp can be calculated in the following way: let \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e be \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003eth digit of the given number. Then \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edp\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e][\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003ci\u003emod\u003c/i\u003e8] \u003d 1\u003c/span\u003e (just this number). For all \u003cspan class\u003d\"tex-span\"\u003e0 ≤ \u003ci\u003ej\u003c/i\u003e \u0026lt; 8\u003c/span\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edp\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e][(\u003ci\u003ej\u003c/i\u003e * 10 + \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e)\u003ci\u003emod\u003c/i\u003e8] \u003d \u003ci\u003emax\u003c/i\u003e(\u003ci\u003edp\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e][(\u003ci\u003ej\u003c/i\u003e * 10 + \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e)\u003ci\u003emod\u003c/i\u003e8], \u003ci\u003edp\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e - 1][\u003ci\u003ej\u003c/i\u003e])\u003c/span\u003e (we add current digit to some previous result), \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edp\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e][(\u003ci\u003ej\u003c/i\u003e * 10)\u003ci\u003emod\u003c/i\u003e8] \u003d \u003ci\u003emax\u003c/i\u003e(\u003ci\u003edp\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e][(\u003ci\u003ej\u003c/i\u003e * 10)\u003ci\u003emod\u003c/i\u003e8], \u003ci\u003edp\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e - 1][\u003ci\u003ej\u003c/i\u003e])\u003c/span\u003e (we cross out current digit). \u003c/p\u003e\u003cp\u003eAnswer is \u0026quot;YES\u0026quot; if \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edp\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e][0] \u003d 1\u003c/span\u003e for some position \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e. For restoring the answer we need to keep additional array \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eprev\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e][\u003ci\u003ej\u003c/i\u003e]\u003c/span\u003e, which will say from where current value was calculated. Complexity of such solution is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(8·\u003ci\u003elen\u003c/i\u003e)\u003c/span\u003e (again \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003elen\u003c/i\u003e\u003c/span\u003e is the length of the original number).\u003c/p\u003e\u003ch2\u003e\u003ca href\u003d\"/contest/550/problem/D\" title\u003d\"Codeforces Round 306 (Div. 2)\"\u003e550D - Regular Bridge\u003c/a\u003e\u003c/h2\u003e\u003cp\u003eLet\u0027s prove that there is no solution for even \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e. \u003c/p\u003e\u003cp\u003eSuppose our graph contains some bridges, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e \u003d 2\u003ci\u003es\u003c/i\u003e\u003c/span\u003e (even), all degrees are \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e. Then there always exists strongly connected component that is connected to other part of the graph with exactly one bridge. \u003c/p\u003e\u003cp\u003eConsider this component. Let\u0027s remove bridge that connects it to the remaining graph. Then it has one vertex with degree \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e - 1 \u003d 2\u003ci\u003es\u003c/i\u003e - 1\u003c/span\u003e and some vertices with degrees \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e \u003d 2\u003ci\u003es\u003c/i\u003e\u003c/span\u003e. But then the graph consisting of this component will contain only one vertex with odd degree, which is impossible by Handshaking Lemma. \u003c/p\u003e\u003cp\u003eLet\u0027s construct the answer for odd \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e. Let \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e \u003d 2\u003ci\u003es\u003c/i\u003e - 1\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eFor \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e \u003d 1\u003c/span\u003e graph consisting of two nodes connected by edge works. \u003c/p\u003e\u003cp\u003eFor \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e ≥ 3\u003c/span\u003e let\u0027s construct graph with \u003cspan class\u003d\"tex-span\"\u003e2\u003ci\u003ek\u003c/i\u003e + 4\u003c/span\u003e nodes. Let it consist of two strongly connected components connected by bridge. Enumerate nodes of first component from \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e + 2\u003c/span\u003e, second component will be the same as the first one.\u003c/p\u003e\u003cp\u003eLet vertex \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e be connected to the second component by bridge. Also connect it with \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e - 1\u003c/span\u003e edges to vertices \u003cspan class\u003d\"tex-span\"\u003e2, 3, ..., \u003ci\u003ek\u003c/i\u003e\u003c/span\u003e. Connect vertices \u003cspan class\u003d\"tex-span\"\u003e2, 3, ..., \u003ci\u003ek\u003c/i\u003e\u003c/span\u003e to each other (add all possible edges between them), and then remove edges between every neighbouring pair, for example edges \u003cspan class\u003d\"tex-span\"\u003e2 - 3\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e4 - 5\u003c/span\u003e, ..., \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ek\u003c/i\u003e - 1) - \u003ci\u003ek\u003c/i\u003e\u003c/span\u003e. \u003c/p\u003e\u003cp\u003eThen we connect vertices \u003cspan class\u003d\"tex-span\"\u003e2, 3, ..., \u003ci\u003ek\u003c/i\u003e\u003c/span\u003e with vertices \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e + 1\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e + 2\u003c/span\u003e. And finally add an edge between nodes \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e + 1\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e + 2\u003c/span\u003e. \u003c/p\u003e\u003cp\u003eBuild the second component in the similar manner, and add a bridge between components. Constructed graph has one bridge, all degrees of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e and consists of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003ek\u003c/i\u003e)\u003c/span\u003e nodes and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003ek\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e)\u003c/span\u003e edges.\u003c/p\u003e\u003cp\u003eComplexity of the solution — \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003ek\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e)\u003c/span\u003e.\u003c/p\u003e\u003ch2\u003e\u003ca href\u003d\"/contest/550/problem/E\" title\u003d\"Codeforces Round 306 (Div. 2)\"\u003e550E - Brackets in Implications\u003c/a\u003e\u003c/h2\u003e\u003cp\u003eLet input consists of \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/6f/d2/6fd2b88c3fc5c8f5756108f2edf7e88ef59892b4.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e is \u003cspan class\u003d\"tex-span\"\u003e0\u003c/span\u003e or \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e for all \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eLet\u0027s show that there is no solution in only two cases:\u003c/p\u003e\u003cp\u003e1) \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/sub\u003e \u003d 1\u003c/span\u003e.\u003c/p\u003e\u003cp\u003e\u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/69/11/69118ff705dfa91385fd4e991e5f7ea8ff63f3e6.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, for all \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e, and no parentheses can change last \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e to \u003cspan class\u003d\"tex-span\"\u003e0\u003c/span\u003e.\u003c/p\u003e\u003cp\u003e2) Input has the form \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/4b/9c/4b9c82feb3a7e97ae973869d503f541a61e921e8.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e or its suffix with at least two arguments.\u003c/p\u003e\u003cp\u003eThis can be proven by induction. For input \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/2c/e4/2ce4ebc52e7abb953802196ece2c39513d9a4b89.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e there is no solution, for longer inputs any attempt to put parentheses will decrease the number of \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003es in the beginning by one, or will introduce \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e in the last position (which will lead to case one). \u003c/p\u003e\u003cp\u003eLet\u0027s construct solution for all other cases.\u003c/p\u003e\u003cp\u003e1) For input \u003cspan class\u003d\"tex-span\"\u003e0\u003c/span\u003e we don\u0027t need to do anything.\u003c/p\u003e\u003cp\u003e2) For input of the form \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/31/7c/317c3ea24792d26ff22531f621daf6581f171b93.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e we don\u0027t need any parentheses, the value of this expression is always \u003c/p\u003e\u003cp\u003e3) Expression in the form \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/de/29/de29d2314b96a5c748c7884a81598e38bb40975e.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e (where second missed part consists of ones only). Then \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/2d/b3/2db3bb77c53c8313aa3464233ed451eed0606935.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e.\u003c/p\u003e\u003cp\u003eComplexity of the solution is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e)\u003c/span\u003e.\u003c/p\u003e\u003c/div\u003e","tags":[]}}