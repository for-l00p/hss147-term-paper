{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1434323263,"rating":1,"authorHandle":"mehthemez","modificationTimeSeconds":1434376999,"id":18575,"title":"\u003cp\u003e2D-Segment Tree VS 2D- BIT ?\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHello. I\u0027ve been doing a problem on poj.com ( link : \u003ca href\u003d\"http://poj.org/problem?id\u003d1195\"\u003ehttp://poj.org/problem?id\u003d1195\u003c/a\u003e )\u003c/p\u003e\u003cp\u003eThe main idea of the problem is that we are given a S * S grid and there is 2 kind of operations.\u003c/p\u003e\u003cp\u003eOperation 1 : Change the cell x, y by adding a certain value A.\u003c/p\u003e\u003cp\u003eOperation 2 : Answer the sum of the rectangle which is defined by the two points; top leftmost : (l, b), bottom rightmost (r, t)\u003c/p\u003e\u003cp\u003eSo obviously we need a 2D Binary Indexed Tree (because of operation 1). But I tried to implement a 2D Segment Tree, and I\u0027m getting a TLE.\u003c/p\u003e\u003cp\u003eCan someone help me figure out why ? Are Segment Trees not efficient here or my implementation of 2D Segment Tree is just bad ?\u003c/p\u003e\u003cp\u003eLink to my C++ code (getting TLE): \u003ca href\u003d\"http://pastebin.com/KA3UXm3N\"\u003ehttp://pastebin.com/KA3UXm3N\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e","tags":[]}}