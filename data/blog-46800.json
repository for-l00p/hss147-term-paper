{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1472322483,"rating":53,"authorHandle":"C137","modificationTimeSeconds":1472815693,"id":46800,"title":"\u003cp\u003eRegular Problem Analysis Blog (1) / Segment tree problem\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHello Codeforces, my name is \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/New_Horizons\" title\u003d\"Expert New_Horizons\"\u003eNew_Horizons\u003c/a\u003e and starting from today I\u0027m gonna try to write regularly in this blog:\u003c/p\u003e\u003cp\u003eThe idea is, every 7-10 days i am gonna select a problem that i really found it useful and interesting, and then i will talk about the way i solved this problem, with long editorial and analysis, by this way of sharing my thoughts i hope that grey, green and cyan contestants will benefit from it and learn something new, also i am hoping that top rated contestants will also add their notes to my solution, and suggest some more optimized code.\u003c/p\u003e\u003cp\u003eAs a start i choose the following interesting problem, I hope you will like it :D\u003c/p\u003e\u003cp\u003eP.S: if you are familiar with the Segment tree data structure, then i strongly recommend you to try with this problem at least for two hours before reading this blog, otherwise as a start you should check \u003ca href\u003d\"https://www.youtube.com/watch?v\u003dZBHKZF5w4YU\"\u003ethis\u003c/a\u003e and \u003ca href\u003d\"http://www.geeksforgeeks.org/segment-tree-set-1-range-minimum-query/\"\u003ethis\u003c/a\u003e, also for more advanced Techniques you can check \u003ca href\u003d\"//codeforces.com/blog/entry/15890\"\u003ethis amazing article\u003c/a\u003e .\u003c/p\u003e\u003cp\u003eBefore I start, I would like to thank \u003ca class\u003d\"rated-user user-green\" href\u003d\"/profile/Nour_R\" title\u003d\"Pupil Nour_R\"\u003eNour_R\u003c/a\u003e for solving this problem after reading this blog, and adding his notes and suggestions to make it even more clear.\u003c/p\u003e\u003cp\u003eproblem name: Billboard\u003c/p\u003e\u003cp\u003eSource: 2008-2009 ACM-ICPC, NEERC, Northern Subregional Contest\u003c/p\u003e\u003cp\u003eLink: \u003ca href\u003d\"//codeforces.com/gym/100623\"\u003ethis\u003c/a\u003e\u003c/p\u003e\u003cp\u003etype: Data Structures\u003c/p\u003e\u003cp\u003eDifficulty level: Medium\u003c/p\u003e\u003cp\u003eShort Description:\u003c/p\u003e\u003cp\u003eYou are given a Billboard with width \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ew\u003c/i\u003e\u003c/span\u003e, and height \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eh\u003c/i\u003e\u003c/span\u003e, also you are given \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e ads, each ad has height 1 and width \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ew\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e and for each ad you must decide in which row you will put it, you start putting ads from top and going down if there is enough width in this row, if you can put the ad, then print the number of the row, otherwise print \u003cspan class\u003d\"tex-span\"\u003e - 1\u003c/span\u003e\u003c/p\u003e\u003cp\u003eExample:\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ew\u003c/i\u003e \u003d 6, \u003ci\u003eh\u003c/i\u003e \u003d 3, \u003ci\u003en\u003c/i\u003e \u003d 5\u003c/span\u003e\u003c/p\u003e\u003cp\u003eads widths: 3 3 5 2 5\u003c/p\u003e\u003cp\u003eanswer: 1 1 2 3 -1\u003c/p\u003e\u003cp\u003eafter putting the first ad, the remaining width will be: 3 6 6 \u003c/p\u003e\u003cp\u003eafter putting the second ad, the remaining width will be: 0 6 6\u003c/p\u003e\u003cp\u003eafter putting the third ad, the remaining width will be: 0 1 6\u003c/p\u003e\u003cp\u003eafter putting the fourth ad, the remaining width will be: 0 1 4\u003c/p\u003e\u003cp\u003ethere is no row with width 5, so you cant put the last ad.\u003c/p\u003e\u003cp\u003eProblem Analysis:\u003c/p\u003e\u003cp\u003eThe first thing that came to my mind when I read this problem was to use \u003ccode\u003eset\u0026lt;pair\u0026lt;int, int\u0026gt; \u0026gt;\u003c/code\u003e the first parameter of the pair is the row index, and the second is the remaining width in that row, I spent nearly 30 minutes trying to get something useful out of this idea using \u003ccode\u003elower_bound\u003c/code\u003e but I only ended with a piece of useless code, so I erased the whole code, cleared this idea from my head, and started thinking in something else.\u003c/p\u003e\u003cp\u003elets say that the current ad width is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e I am interested in the first row with remaining width greater than or equal to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e, then I should update the value in that row and decrease it by \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e, the word \u0026quot;Update\u0026quot; took me to think about Segment tree, what if i used a segment tree, and in each node of the tree I can store the max value in it\u0027s range?? now initially i will build the tree, and for each node i will put the value \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ew\u003c/i\u003e\u003c/span\u003e which is the width of the Billboard, now I can know for each range in the array whether I can put the ad in it or not only with log h time\u003d30, that\u0027s great, I started to make some progress, now how can I know the index of the first row greater than or equal to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e ??? or there is no answer???\u003c/p\u003e\u003cp\u003eLet\u0027s first talk about the no answer case: \u003c/p\u003e\u003cp\u003e\u003ccode\u003eif quer (1,1,h) \u0026lt; x\u003c/code\u003e then there is no answer, because in the whole tree there is no node with remaining width greater than \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eIf there is an answer, but it\u0027s not in the range (1, ind) then for sure it will be in the range (ind+1, h) this is so familiar to binary search, actually it\u0027s a binary search, so now I can get the first row (the answer) in only log h * log h time \u003d30*30\u003d900 for each ad.\u003c/p\u003e\u003cp\u003enow my pseudo code was something like this:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003efor each ad \nread x\nif(quer(1,1,h)\u0026lt;x)print -1\nst\u003d1, en\u003dh\ndo binary search\nif(quer(1,1,mid)\u0026gt;\u003dx)en\u003dmid\nelse st\u003dmid+1\nprint st\nupdate(1,1,h) // decrease the value at st by x\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eOK, now most of the work is done, Or that\u0027s what I thought, two big problems were about to make me change the whole idea, and give up solving this problem...\u003c/p\u003e\u003cp\u003eFirst problem, the time complexity n* log h* log h\u003d200000*30*30\u003d180000000 too big!! and needs optimizations\u003c/p\u003e\u003cp\u003eSecond problem, Memory, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eh\u003c/i\u003e\u003c/span\u003e is too big, it can go up to 10^9 so I can\u0027t use a segment tree array of size 3*h\u003c/p\u003e\u003cp\u003eAfter five minutes, I noticed that i am not interested in the whole billboard, I just need to use the first \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e rows of it, because in the worst case, I will but one ad in each row, using only \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e rows.\u003c/p\u003e\u003cp\u003eAbout the time,I needed to get rid of one of the log n the query or the binary search, After drawing some trees, I noticed something so important, I can use the structure of the tree to do the Binary Search !!!\u003c/p\u003e\u003cp\u003eEach node of the tree has at most two children, the left child, and the right child, the left child might take me closer to to the answer, and to the lower row, and the right child also might take me closer to the answer, but to a higher row, so when I can go to the left child, I must go straight to it, otherwise go to the right child, finally return the index of the leaf I will reach, and now my pseudo code was something like this:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003efor each ad \nread x\nif(tree[1]\u0026lt;x)print -1\nind \u003dquer(1,1,n,x)\nprint ind\nupdate(1,1,n) // decrease the value at ind by x\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eand the quer function will be:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eint quer(int pos, int l, int r, int x){\n\tif(l\u003d\u003dr)return l;\n\tint mid\u003d(l+r)/2;\n\tif(tree[2*pos]\u0026gt;\u003dx)return quer(2*pos, l ,mid,x);\n\telse return quer(2*pos+1, mid+1, r, x);\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eNow all the ideas were clear to me, my time complexity is n*log n, the memory is 3*n, and everything was ready on paper, it took me 10 minutes to write the code, and you can\u0027t imagine how sad and depressed i was when i got TLE, I checked my code again, and found a stupid bug in the update function, fixed it and got the beloved green light, after a very interesting and amusing two hours of thinking :D\u003c/p\u003e\u003cp\u003eThis is all I can say for this problem, I hope you liked my analysis and you benefit from it, I am not gonna post my code, because I think you can code it now after reading the analysis, If there is still something unclear, then fell free to ask me in the comments below, or send me a message...\u003c/p\u003e\u003cp\u003eIf you liked the idea, then I will try to post the next blog about the next problem in the following week...\u003c/p\u003e\u003cp\u003eHappy coding, and have a nice day :D\u003c/p\u003e\u003c/div\u003e","tags":["regular problem analysis","new_horizons","data structure","segment tree"]}}