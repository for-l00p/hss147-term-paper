{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1462200116,"rating":154,"authorHandle":"M_H_M","modificationTimeSeconds":1462363674,"id":44669,"title":"\u003cp\u003eSolve #349 B Div 1 with five cities!\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eRound 349 B Div1 : \u003ca href\u003d\"/contest/666/problem/B\" title\u003d\"Codeforces Round 349 (Div. 1)\"\u003e666B - Мировое турне\u003c/a\u003e. \u003cbr /\u003e The Idea of problem is fixing two middle cities! \u003cbr /\u003e But I solved the problem by this Idea : \u003cbr /\u003e Consider that the answer\u0027s cities are a, b, c, d and a \u0026lt; b \u0026lt; c \u0026lt; d \u003cbr /\u003e ---- dp[ k ][ i ] \u003d the maximum length with k cities so that k\u0027th city is i(labels are increasing!). \u003cbr /\u003e ---- We can update dp with O(n ^ 2) [ dp[ k ][ i ] \u003d max(j \u0026lt; i : dp[ k — 1 ][ j ] + d[ j ][ i ]) ] \u003cbr /\u003e\u003c/p\u003e\u003cp\u003eWe shuffle the labels of cities while the labels of answer\u0027s cities become increasing! \u003cbr /\u003e The mathematical expectation of the above algorithm is (4! * 4 * N ^ 2) :)) \u003cbr /\u003e My implementation : \u003ca href\u003d\"/contest/666/submission/17588529\" title\u003d\"Посылка 17588529 от M_H_M\"\u003e17588529\u003c/a\u003e. \u003cbr /\u003e We can have a harder problem with five cities : (5! * 5 * N ^ 2)\u003c/p\u003e\u003c/div\u003e","tags":[]}}