{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":true,"creationTimeSeconds":1526304069,"rating":5,"authorHandle":"Felix_Mate","modificationTimeSeconds":1526305099,"id":59455,"title":"\u003cp\u003eЗадачи с Timus \u003c/p\u003e","locale":"ru","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eХотелось бы узнать решение 2-х задач с тимуса\u003c/p\u003e\u003cp\u003e1)\u003ca href\u003d\"http://acm.timus.ru/problem.aspx?space\u003d1\u0026amp;num\u003d1677\"\u003ehttp://acm.timus.ru/problem.aspx?space\u003d1\u0026amp;num\u003d1677\u003c/a\u003e Знаю, как её решать неоптимально (проблемы с ML, но не с TL). Можно получить точную дробь-ответ в длинной арифметике. У нас цепь маркова, переходы задаются с помощью граней префикса строки, состояния- префиксы длины 0,1,2,...n\u003dlen(s). Переход из состояния i в состояние j происходит с P\u003d1/A (A-мощность алфавита), i\u0026lt;n и с P\u003d1 из n в n. Можно написать соответствующие матожидания и получить СЛАУ. Решать СЛАУ можно за O(n), введя коэффициенты a[i],b[i] и с начального значения их пересчитывать. Проблема возникает с тем, что они быстро растут и потому ML. Код: \u003ca href\u003d\"https://ideone.com/41LFtk\"\u003ehttps://ideone.com/41LFtk\u003c/a\u003e \u003c/p\u003e\u003cp\u003e2)\u003ca href\u003d\"http://acm.timus.ru/problem.aspx?space\u003d1\u0026amp;num\u003d1849\"\u003ehttp://acm.timus.ru/problem.aspx?space\u003d1\u0026amp;num\u003d1849\u003c/a\u003e Думаю, что мой алгоритм верный, но где-то кроется баг (скорее всего в модулярной арифметике). Вначале утверждение: пусть есть прямая l x\u003dxo+ut, y\u003dyo+vt. Тогда точка x,y принадлежит l \u0026lt;\u003d\u0026gt; xv-yu\u003dxo*v-yo*u. Отсюда сделаем предпосчёт: фиксируем всевозможные направления векторов стрельбы vx,vy и каждой точке xk,yk сопоставим 2 числа:(e,t), где e\u003dxk*v-yk*u и t\u003dxk,если u\u003d0, иначе t\u003dyk. Получим класс cl[u][v]: {e1,t1}, {e2,t2}, ... , {en,tn}, который отсортируем по e, а при равных e по t. Теперь, получая луч (xo,yo,u,v), можно за O(logn) найти все точки лежащие на этой прямой (прямой, а не луче): нужны те точки, у которых e\u003dxo*v-yo*u. Бинпоиском найдём в классе cl[u][v] границы alpha и beta. Среди этих точек нужны те, которые лежат на луче. Тут возможны случаи: если луч наклонный (например v\u0026gt;0), то тогда нужны точки с ординатой \u0026gt;\u003d yo-ищем на [alpha, beta] бинпоиском по t, если луч горизонтальный (например u\u0026gt;0), то тогда нужны точки с абсциссой \u0026gt;\u003d xo-ищем на [alpha, beta] бинпоиском по t (др. 2 случая аналогичны). Код: \u003ca href\u003d\"https://ideone.com/0Fm1CG\"\u003ehttps://ideone.com/0Fm1CG\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e","tags":[]}}