{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":true,"creationTimeSeconds":1509538170,"rating":-11,"authorHandle":"ashyk_yigit","modificationTimeSeconds":1509624089,"id":55522,"title":"\u003cp\u003eBinary indexed tree problem\u003c/p\u003e","locale":"ru","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHi CF community. I found problem tag of binary indexed tree. I have not any ideas. Help me! \u003cbr /\u003e \u003ca href\u003d\"http://acmp.ru/asp/do/index.asp?main\u003dtask\u0026amp;id_course\u003d2\u0026amp;id_section\u003d20\u0026amp;id_topic\u003d46\u0026amp;id_problem\u003d1178\"\u003eTASK\u003c/a\u003e \u003cbr /\u003e\u003c/p\u003e \u003cp\u003e(Time: 2 seconds Memory: 16 MB)\u003c/p\u003e \u003cp\u003e The famous company \u0026quot;Gold \u0026amp; Silver Soft\u0026quot; decided to take the leading place in the field of development of relational databases. The management of the company understands that for this it is necessary to surprise consumers with the speed of their software product. \u003c/p\u003e \u003cp\u003e It\u0027s no secret that the relational database is based on a table that can be considered as a one-dimensional array of records. It is known that when searching all records of the table are viewed sequentially, starting with the very first and ending with the one found. \u003c/p\u003e \u003cp\u003e The technical department of the company has established that it often happens that the search for the same record in the table is made several times. Based on this, the programmers decided after each new search query to change the order of the records in the table. In other words, after searching, the found entry is moved to the first place in the table. Obviously, the more often a specific record is searched, the closer it will be to the beginning of the table and the faster the search for that record will be. \u003c/p\u003e \u003cp\u003e Your task is to write a program that for each of the M consecutive search queries will determine the number of scanned records when searching for a given one. For the sake of simplicity, we assume that there is a table with N records, where the record is a number from 1 to N. At the beginning, all records in the table are arranged in ascending order, i.e., the i-th place in the table contains the number i. For the example below, for M \u003d 2, N \u003d 6, and requests for the search for the numbers \u0026quot;5\u0026quot; and \u0026quot;3\u0026quot;, you will need 5 and 4 viewing the records, respectively.Tests have in task.  \u003c/p\u003e \u003cp\u003e Input \u003c/p\u003e \u003cp\u003e The first line of the input file INPUT.TXT contains two integers N and M (1 ≤ N, M ≤ 65535) — the number of records in the table and the number of search requests, respectively. The numbers are separated by a single space. \u003c/p\u003e \u003cp\u003e The second line contains M natural numbers Ai (1 ≤ Ai ≤ N) separated by single spaces, where Ai is a query to find the number Ai in the table. Search requests are executed sequentially in the order in which they are entered. \u003c/p\u003e \u003cp\u003e Output \u003c/p\u003e \u003cp\u003e The only output line OUTPUT.TXT must contain M natural numbers separated by single spaces, the i-th number is the number of scanned records when searching for the number Ai. \u003c/p\u003e\u003cp\u003eThanks in advance! \u003c/p\u003e\u003c/div\u003e","tags":["binary indexed tree","fenwick tree","acmp"]}}