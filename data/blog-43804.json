{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1458021724,"rating":1,"authorHandle":"rhezo","modificationTimeSeconds":1458021724,"id":43804,"title":"\u003cp\u003eBAT2 SPOJ\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHow to solve \u003ca href\u003d\"http://www.spoj.com/problems/BAT2/\"\u003eBAT2-SPOJ?\u003c/a\u003e\u003c/p\u003e\u003cp\u003eMy idea is that you need to find all increasing subsequences from left (1-\u0026gt;n), and all increasing subsequences from right (n-\u0026gt;1). Since n can be \u0026lt;\u003d100, this will take 2^100 time, which is too slow. How can it be done efficiently? Or am I thinking in the wrong direction?\u003c/p\u003e\u003c/div\u003e","tags":[]}}