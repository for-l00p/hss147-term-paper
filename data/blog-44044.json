{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1459169800,"rating":2,"authorHandle":"yashi","modificationTimeSeconds":1459178935,"id":44044,"title":"\u003cp\u003eLongest Repeated Substring Using Suffix Array [SOLVED]\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHello there, \u003cbr /\u003e \u003cbr /\u003e I was trying to solve this \u003ca href\u003d\"https://www.hackerearth.com/code-monk-triessuffix-tree/algorithm/power-of-string-3/\"\u003eproblem\u003c/a\u003e on Hackerearth the problem asks for the length of \u003cstrong\u003ethe longest substring\u003c/strong\u003e which is repeated at least \u003cstrong\u003eK\u003c/strong\u003e times, \u003cstrong\u003e1 \u0026lt;\u003d K \u0026lt;\u003d |S| \u0026lt;\u003d 10^6\u003c/strong\u003e \u003cbr /\u003e \u003cbr /\u003e I built the suffix array of the string and built the LCP array then get the maximum element among the minimum elements in all possible consecutive segments of length \u003cstrong\u003eK-1\u003c/strong\u003e in the LCP array, Thus, if the LCP array was \u003cstrong\u003e[0,1,2,3,2,3]\u003c/strong\u003e and K was \u003cstrong\u003e4\u003c/strong\u003e then we have : \u003cbr /\u003e\u003cbr /\u003e 1. [0,1,2] min is 0 \u003cbr /\u003e 2. [1,2,3] min is 1 \u003cbr /\u003e 3. [2,3,2] min is 2 \u003cbr /\u003e 4. [3,2,3] min is 2 \u003cbr /\u003e \u003cbr /\u003e Now the maximum element is 2 and this is the answer, My solution keeps getting WA on some test files, and unfortunately editorial page has no explanation about the solution, just two codes, one uses an absolutely different idea where it uses hashing and binary search (No idea!!) and the other one slightly uses the same idea using suffix tree instead but it\u0027s so messy and couldn\u0027t track it down. \u003cbr /\u003e \u003cbr /\u003e Here\u0027s my \u003ca href\u003d\"http://pastebin.com/i4JHMr76\"\u003ecode\u003c/a\u003e .\u003cbr /\u003e Any help would be highly appreciated .\u003c/p\u003e\u003c/div\u003e","tags":["suffix array","lrs","strings"]}}