{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1401442504,"rating":9,"authorHandle":"adelnobel","modificationTimeSeconds":1401442504,"id":12469,"title":"\u003cp\u003eDetecting negative cycles with SPFA (Shortest Path Faster Algorithm)\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHi everyone,\u003c/p\u003e\u003cp\u003eI read about the SPFA a while ago and today I decided to try it out on some problems (for those who don\u0027t know about it \u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://wcipeg.com/wiki/Shortest_Path_Faster_Algorithm\"\u003ehttp://wcipeg.com/wiki/Shortest_Path_Faster_Algorithm\u003c/a\u003e \u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://en.wikipedia.org/wiki/Shortest_Path_Faster_Algorithm\"\u003ehttp://en.wikipedia.org/wiki/Shortest_Path_Faster_Algorithm\u003c/a\u003e )\u003c/p\u003e\u003cp\u003eNeither of the links above mentions anything about detecting negative cycles. Obviously, in the presence of a negative cycle, these implementations will never terminate. However, Steven Halim in his book says that it\u0027s sufficient to test whether a node entered the queue more than \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eV\u003c/i\u003e - 1\u003c/span\u003e times. Does anyone know a proof for this?\u003c/p\u003e\u003c/div\u003e","tags":["spfa","shortest path","bellman-ford","negative cycle"]}}