{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":false,"creationTimeSeconds":1267268500,"rating":12,"authorHandle":"ivan.popelyshev","modificationTimeSeconds":1267706068,"id":107,"title":"Codeforces Beta Round #2 - Another Tutorial","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cdiv class\u003d\"from-renderer\"\u003e\u003cdiv class\u003d\"from-renderer\"\u003e   \u003cdiv class\u003d\"from-renderer\"\u003e     \u003cdiv class\u003d\"from-renderer\"\u003e       \u003cdiv class\u003d\"from-renderer\"\u003e         \u003cdiv class\u003d\"from-renderer\"\u003e           \u003cdiv class\u003d\"from-renderer\"\u003e             \u003cdiv class\u003d\"from-renderer\"\u003e               \u003cdiv class\u003d\"from-renderer\"\u003e                 \u003cdiv class\u003d\"from-renderer\"\u003e                   \u003cdiv class\u003d\"from-renderer\"\u003e                     \u003cdiv class\u003d\"from-renderer\"\u003e                       \u003cdiv class\u003d\"from-renderer\"\u003eLets start from the end.\u003cb\u003e\u003cbr /\u003e\u003cbr /\u003e\u003c/b\u003e\u003ch2\u003e\u003ca href\u003d\"http://codeforces.ru/contest/2/problem/C\"\u003eProblem С. Commentator problem\u003c/a\u003e\u003c/h2\u003eLet \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eR\u003c/i\u003e\u003c/span\u003e be the distance from point                         А to a circle with center О and radius \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003er\u003c/i\u003e\u003c/span\u003e. From this point the circle is observed at the angle \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/83/b0/83b078d53e26200f06051adcef44a0b730d3dd21.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e.\u003cbr /\u003e                         So, the three stadiums are observed at the same angle if                         \u003ci\u003e\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eR\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e / \u003ci\u003er\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e \u003d \u003ci\u003eR\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e / \u003ci\u003er\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e \u003d \u003ci\u003eR\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e3\u003c/sub\u003e / \u003ci\u003er\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e3\u003c/sub\u003e\u003c/span\u003e.\u003c/i\u003e\u003cbr /\u003e           Take two different points A, B. The set of points                         C that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eAC\u003c/i\u003e / \u003ci\u003eBC\u003c/i\u003e \u003d \u003ci\u003econst\u003c/i\u003e\u003c/span\u003e is either a line (perpendicular bisector of AB) or a circle with center somewhere on the line AB. This circle is easy to find. It contains two points that lie on AB and satisfy \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eAC\u003c/i\u003e / \u003ci\u003eBC\u003c/i\u003e\u003c/span\u003e condition.\u003cbr /\u003e \u003cbr /\u003eLet \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eX\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/span\u003e be the set of points from which stadiums \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e2\u003c/span\u003e are observed at the same angle. Let \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eX\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003c/span\u003e be the set of points from which stadiums \u003cspan class\u003d\"tex-span\"\u003e2\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e3\u003c/span\u003e are observed at the same angle. The answer belongs to both \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eX\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eX\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003c/span\u003e  . The centers of the three stadiums don\u0027t lie on one line, so the number of points in the intersection of  \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eX\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eX\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003c/span\u003e will be finite.\u003cbr /\u003eCheck them all. The answer is the point that lies closer to any of the stadiums. The stadiums don\u0027t intersect, so that point will not lie inside any of them.\u003cbr /\u003eHow to get a big circle for \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eX\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/span\u003e : put the centers of the stadiums in the points far away, for example in \u003cspan class\u003d\"tex-span\"\u003e(0, 0)\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e(1000, 0)\u003c/span\u003e.                         The ratio of the radii should be the closer possible to 1, for example \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/7a/3e/7a3e1d86a0dcb716fec7b49e45cd246aa11a6125.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e.                         The center and the radius of the new circle will have the order \u003cspan class\u003d\"tex-span\"\u003e10\u003csup class\u003d\"upper-index\"\u003e6\u003c/sup\u003e\u003c/span\u003e . The answer should be known with \u003cspan class\u003d\"tex-span\"\u003e10\u003csup class\u003d\"upper-index\"\u003e - 5\u003c/sup\u003e\u003c/span\u003e precision.                   Roofly speaking, we need \u003cspan class\u003d\"tex-span\"\u003e11\u003c/span\u003e digits, \u003cu\u003edouble precision\u003c/u\u003e will be enough.\u003cbr /\u003e\u003cbr /\u003e\u003ch2\u003e\u003ca href\u003d\"http://codeforces.ru/contest/2/problem/B\"\u003eProblem B. The least round way\u003c/a\u003e\u003c/h2\u003eLet us solve the problem in the case of positive matrix.\u003cbr /\u003eLet the number in the end be \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eN\u003c/i\u003e \u003d 2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/sup\u003e· 5\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/sup\u003e·\u003c/span\u003e(other primes). The number of zeroes at the end of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eN\u003c/i\u003e\u003c/span\u003e is equal to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003emin\u003c/i\u003e(\u003ci\u003ek\u003c/i\u003e, \u003ci\u003em\u003c/i\u003e)\u003c/span\u003e. At the aid of dynamic programming find minimal value of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e (let it be \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/span\u003e) and minimal value of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/span\u003e (let it be \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/span\u003e),                     and paths that lead to these values. In case of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e \u0026lt; \u003ci\u003em\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/span\u003e choose the path corresponding to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/span\u003e, else                          \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/span\u003e.                         \u003cbr /\u003e                   So \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003emin\u003c/i\u003e(\u003ci\u003ek\u003c/i\u003e, \u003ci\u003em\u003c/i\u003e)\u003c/span\u003e is the upper bound for the answer. Let us prove that it is the lower bound too. If there exists a path leading to a number with number of zeroes less than \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003emin\u003c/i\u003e(\u003ci\u003ek\u003c/i\u003e, \u003ci\u003em\u003c/i\u003e)\u003c/span\u003e then in the factorization of that number the power of two is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e \u0026lt; \u003ci\u003ek\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/span\u003e or the power of five                         is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e \u0026lt; \u003ci\u003em\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/span\u003e.                         We come to a contradiction.\u003cbr /\u003eSo we need to calculate the power of \u003cspan class\u003d\"tex-span\"\u003e2\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e5\u003c/span\u003e in the factorization of each value in the matrix and use dynamic programming on each of the two matrices.\u003cbr /\u003e                         \u003cbr /\u003eIn the case of matrix containing zeroes, calculate separately the best path not containing zeroes and any path containing zeroes:\u003cbr /\u003e\u003cbr /\u003eReplace all \u003cspan class\u003d\"tex-span\"\u003e0\u003c/span\u003e\u003ci\u003e \u003c/i\u003eby \u003cspan class\u003d\"tex-span\"\u003e10\u003c/span\u003e and use the method described above. For paths containing zeroes the result will contain at least one zero at the end. If the method returned a number without zeroes at the end, the corresponding path is the answer, else any path containing zeroes is the answer.\u003cbr /\u003eThe complexity of the algorithm depends on the complexity of the dynamics, it is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e· \u003ci\u003eM\u003c/i\u003e)\u003c/span\u003e.\u003cbr /\u003e\u003cbr /\u003e\u003ch2\u003e\u003ca href\u003d\"http://codeforces.ru/contest/2/problem/A\"\u003eProblem A. Winner\u003c/a\u003e\u003c/h2\u003e                         Simple problem, just code it.\u003cbr /\u003e At the first pass calculate the sum of points for each player at game end. Let \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eM\u003c/i\u003e\u003c/span\u003e be the maximum of these sums. At the second pass check every round. If current player \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eX\u003c/i\u003e\u003c/span\u003e has not less than \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eM\u003c/i\u003e\u003c/span\u003e points and his final score is equal to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eM\u003c/i\u003e\u003c/span\u003e then he is the winner.\u003cbr /\u003e                         The following test illustrates that player could receive more than \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eM\u003c/i\u003e\u003c/span\u003e points, then lose some and, finally, win.\u003cbr /\u003e                         \u003cu\u003eInput:\u003c/u\u003e                         \u003cbr /\u003e  Masha 12\u003cbr /\u003e  Masha -5\u003cbr /\u003e  Sasha                         10\u003cbr /\u003e                   Masha 3\u003cbr /\u003e                         \u003cu\u003eOutput:\u003c/u\u003e                         \u003cbr /\u003e  Masha\u003cbr /\u003e                         \u003cbr /\u003e\u003cbr /\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e","tags":["codeforces beta round #2","tutorial","система тестирования"]}}