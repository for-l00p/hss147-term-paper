{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1284146427,"rating":0,"authorHandle":"IranianGuy","modificationTimeSeconds":1284186342,"id":654,"title":"My ideas for codeforces 27","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003eHere\u0027s my algorithms and ideas:\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003e\u003cspan style\u003d\"color: rgb(51,51,51);font-family: \u0026quot;Courier New\u0026quot; , Courier , FreeMono , monospace;font-size: 15.0px;line-height: 20.0px;\"\u003eHi guys.\u003cdiv\u003eCodeforces beta round #27 just finished. It was a great contest. I really enjoyed it.\u003c/div\u003e\u003cdiv\u003eHere is the problems:\u003c/div\u003e\u003cdiv\u003e\u003ca href\u003d\"http://codeforces.ru/contest/27\" style\u003d\"text-decoration: none;color: rgb(102,102,204);\"\u003ehttp://codeforces.ru/contest/27\u003c/a\u003e\u003c/div\u003e\u003cdiv\u003elet\u0027s take a look at them and see if they can be solved.\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003eWe start at problem A:\u003c/div\u003e\u003cdiv\u003e\u003ca href\u003d\"http://codeforces.ru/contest/27/problem/A\" style\u003d\"text-decoration: none;color: rgb(102,102,204);\"\u003ehttp://codeforces.ru/contest/27/problem/A\u003c/a\u003e\u003c/div\u003e\u003cdiv\u003eWe\u0027re given a set of numbers and we want to find the smallest number which is not in the list. This is easy. Take a boolean array of size 3000 and name it a. we assume a[i]\u003dtrue iff i is present in the set. It\u0027s easy to update our array,And for giving input we just start at a[1] and go through until we find a false,then we would print its index.\u003c/div\u003e\u003cdiv\u003eOur algorithm for this question is O(n+3000)\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003eNow let\u0027s move through Problem B:\u003c/div\u003e\u003cdiv\u003e\u003ca href\u003d\"http://codeforces.ru/contest/27/problem/B\" style\u003d\"text-decoration: none;color: rgb(102,102,204);\"\u003ehttp://codeforces.ru/contest/27/problem/B\u003c/a\u003e\u003c/div\u003e\u003cdiv\u003eI solved it like this:\u003c/div\u003e\u003cdiv\u003eI got two arrays of size n (number of participants). the first one was named play and the second was named won. play[i] indicates how many input lines contained i. and won[i] denotes number of times i has won. Of course for each participant we have play[i]\u003dn-1 except for those two in the missing line , for them play[j]\u003dn-2.\u003c/div\u003e\u003cdiv\u003eso we take a look through our play array and find out those with value n-2. let\u0027s call them u and v. Then we check won[u] \u0026amp; won[v]. If one of these is greater then of course that person has a better ability to sleep and wins.If they have same play then we can\u0027t find out which one was the winner and any ordering of their numbers is all right.\u003c/div\u003e\u003cdiv\u003ehere\u0027s my code for this one:\u003c/div\u003e\u003cdiv\u003e\u003ca href\u003d\"http://snipt.net/Amirkg/codeforces-27b/\" style\u003d\"text-decoration: none;color: rgb(102,102,204);\"\u003ehttp://snipt.net/Amirkg/codeforces-27b/\u003c/a\u003e\u003c/div\u003e\u003cdiv\u003eThis solution is O(n) so it works perfectly well in the given time limit.\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003eNow we reached Problem C:\u003c/div\u003e\u003cdiv\u003e\u003ca href\u003d\"http://codeforces.ru/contest/27/problem/C\" style\u003d\"text-decoration: none;color: rgb(102,102,204);\"\u003ehttp://codeforces.ru/contest/27/problem/C\u003c/a\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003eWe have the input array. assume that second item\u0026gt;\u003d first item. We start going through the array.The numbers rise to some point and then decrease.At the point where the rise ends and we start to decrease we have a number which is greater than one of the items before it and is certainly greater than the next item.These 3 provide our answer.\u003c/div\u003e\u003cdiv\u003eI think I didn\u0027t explain it well, Here\u0027s my CPP code:\u003c/div\u003e\u003cdiv\u003e\u003ca href\u003d\"http://snipt.net/Amirkg/codeforces-27c/\" style\u003d\"text-decoration: none;color: rgb(102,102,204);\"\u003ehttp://snipt.net/Amirkg/codeforces-27c/\u003c/a\u003e\u003c/div\u003e\u003cdiv\u003eIt\u0027s obvious that this algorithm is O(n).\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003eHere\u0027s my solution for Problem D:\u003c/div\u003e\u003cdiv\u003e\u003ca href\u003d\"http://codeforces.ru/contest/27/problem/D\" style\u003d\"text-decoration: none;color: rgb(102,102,204);\"\u003ehttp://codeforces.ru/contest/27/problem/D\u003c/a\u003e\u003c/div\u003e\u003cdiv\u003eIf we have two edges on the same side (inside or outside).They will intersect iff their segments intersect. Think of two edges on the same side one from i to j and the other from u to v.Then these edges intersect iff (i,j) \u0026amp; (u,v) intersect.We make a graph for the problem in this way:\u003c/div\u003e\u003cdiv\u003efor each of the m new edges we put a vertex in our graph.Two vertices are adjacent iff when we put their corresponding edges on the same side,they intersect.for example the vertex (6,10) is adjacent to (9,12) but is not adjacent to (1,5).\u003c/div\u003e\u003cdiv\u003enote: If (i,j) is completely inside (u,v) we assume they don\u0027t intersect.\u003c/div\u003e\u003cdiv\u003enote: we use (6,10) not [6,10] as mentioned in the problem statement.\u003c/div\u003e\u003cdiv\u003eNow we can\u0027t place edges corresponding to adjacent vertices on the same side. so It\u0027s possible to do what problem wants if and only if our graph is bipartite.It\u0027s easy to check for this one and of course it\u0027s easy to make \u0027i\u0027s and \u0027o\u0027s afterwards.\u003c/div\u003e\u003cdiv\u003eWell this algorithm takes O(n^3) time in worst case with the most simplistic coding. As M\u0026lt;\u003d100 , it works well. (We know that a normal computer can do 10^8 calculations per second)\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003c/span\u003e\u003c/div\u003e\u003c/div\u003e","tags":["codeforces"]}}