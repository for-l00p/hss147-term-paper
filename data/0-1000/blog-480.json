{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":false,"creationTimeSeconds":1277238152,"rating":22,"authorHandle":"pank.dm","modificationTimeSeconds":1277329586,"id":480,"title":"Как SnakeTeam заняли 15-е место на ICFPC-2010","locale":"ru","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003ch3\u003eПредисловие\u003c/h3\u003e \u003cbr /\u003e Вот уже несколько дней я хожу под впечатления от ICFPC, поэтому в качестве продолжения этого развлечения решил написать сей отчет. Он задумывался больше для себя, поэтому условие я не пересказываю (тем, кто не ломал себе мозг, раздумыванием над задачей этого году - советую сначала прочитать \u003ca href\u003d\"http://users.livejournal.com/_adept_/106759.html\"\u003eотчет адепта\u003c/a\u003e, а то все дальше написанное покажется феерическим бредом :). Сразу предупреждаю, что впереди будет много букав, немножко разбавленных картинками и комментариями Алексея.\u003cbr /\u003e \u003cbr /\u003e\u003ch3\u003e День 0 (Пятница, 18 июня)\u003c/h3\u003e \u003cbr /\u003e \u003cb\u003e16.00 \u003c/b\u003e\u003cbr /\u003e Появилось условие. Распечатав и пробежавшись глазами, я естественно ничего не понял. (\u0026quot;This wasn\u0027t the ICFP contest if it was that easy.\u0026quot; (c) organizers). Прочитав еще раз я тоже ничего не понял, но решил, что как-нибудь провремся. Забил на время на условие - надо было собираться на вручение дипломов студентам ШАД. Перед выходом я еще раз взглянул на условие, пронумеровал строчки в фабрике я заметил там закономерность - и мне показалось, что я понял как устроена фабрика (забегая вперед, скажу, что на самом деле все оказалось по-другому, но в целом идея была правильной).\u003cbr /\u003e \u003cbr /\u003e Немного предыстории. Про дату контеста я узнал с хабра (\u003ca href\u003d\"http://habrahabr.ru/blogs/icfpc/96526/\"\u003ehttp://habrahabr.ru/blogs/icfpc/96526/\u003c/a\u003e), буквально за 3 дня до начала. Про этот контест я слышал еще в прошлом году от Антона (С.) и Жени (Х.). Тогда надо было управлять полетами спутника. В этом году задание на первый взгляд полная жесть, потому что воообще непонятно как делать то, что они просят. Но сейчас, когда я уже пишу этот отчет, я понимаю, что это задание мне очень понравилось и оно концептуально точно интереснее задания со спутником. \u003cbr /\u003e В этом году я уже заранее знал, что буду участвовать, но еще не знал с кем. В прошлом году Антон обмолвился, что можно с  ними участвовать, поэтому я сначала написал ему. Но оказалось, что они с Женьком едут пьянствовать на выпускной ШАД. Дальше я написал Леше Тарасову. Он загорелся этой идеей, сказал, что обязательно надо участвовать - и вот уже в команде 2 человека \u003ci\u003e[Alexey: Я вообще мучительно разгорался, так как со временем был напряг и пришлось пожертвовать неофициальной частью выпускного ШАД]\u003c/i\u003e. Мысленно повспоминав, кого можно еще позвать мы сошлись на том, что зовем Олега (мы все вместе какое-то время работали в Яндексе, поэтому положительный опыт совместной работы у нас есть) и 3 человека будет достаточно. Решили участвовать у Леши дома (как он сказал - у него квартира раздолбанная, но вместительная).\u003cbr /\u003e \u003cbr /\u003e \u003cbr /\u003e \u003cb\u003e17.30\u003c/b\u003e\u003cbr /\u003e Собрал все самое необходимое (ноут, зарядка к ноуту, зарядка к телефону, спальник, зубная щетка / паста) и поехал на красную розу смотреть вручение дипломов.\u003cbr /\u003e \u003cbr /\u003e \u003cbr /\u003e \u003cb\u003e21.00\u003c/b\u003e\u003cbr /\u003e Встретил Олега и Лешу и поехали к последнему. По дороге зашли в магазин - купили всякой еды. (Пельмешки :) - вспомнить студенческие годы)\u003cbr /\u003e \u003cbr /\u003e \u003cb\u003e22.00\u003c/b\u003e\u003cbr /\u003e Можно сказать, что только в это время для нас начался контест. Фора приличная  - 6 часов, но догоняемая. \u003cbr /\u003e Немного о технической части. Мы уже заранее знали, что основным языком программирования будет питон (благо все его хоть немного знают).  Операционная система Linux (потому что Unix c его шеллом отлично приспособлен для решения всякого рода исследовательских задач с большим количеством текстовых данных). В качестве системы контроля версий был выбран дропбокс (и он более чем оправдал себя). В двух словах - это автоматически синхронизируемая сетевая папка, которую можно расшарить другим людям  (+ еще есть история изменений, но она нам не нужна).  То есть мы получаем выделенное ОБЩЕЕ место с разделенным процессором и памятью и вдобавок еще практически свн на имеющихся файлах. Из минусов - нельзя одновременно редактировать какой-то файл (возможны конфликты) и нужен постоянный коннект к инету, но это была не проблема. Практически все 72 часа мы сидели все вместе в одной комнате и кодили, кодили, думали, итд.. с небольшими перерывами на еду, прогуляться, поспать и магазин.\u003cbr /\u003e \u003cbr /\u003e \u003cbr /\u003e Придумали название команде: первое предложение было \u0026quot;NoCamel\u0026quot;, (типа перловцы не пройдут \u003ci\u003e[Alexey: вообще это слоган выпускников ФМШ-18, к которым я отношусь]\u003c/i\u003e) - отметено сразу. Остановились на \u0026quot;SnakeTeam\u0026quot;.\u003cbr /\u003e \u003cbr /\u003e Прочитали еще раз все вместе задание.\u003cbr /\u003e Начали разбираться с устройства фабрик, как с наиболее понятной части задания.\u003cbr /\u003e Сначала было гипотеза, что L, R кодирует \u0026quot;forward\u0026quot; и \u0026quot;backward\u0026quot; wires. Поотправляв маленькие фабрики на сервак - эта идея не оправдалась. Зато мы заметили, что и справа и слева от разделителя \u0026quot;0#\u0026quot; для каждого N встречается одинаковое число раз NL и NR. Стало понятно, что они кодируют правый и левый выход и вход элементов схемы. \u003cbr /\u003e X - это вход и выход. Но об общем устройстве схемы у нас оставались сомнения:\u003cbr /\u003e сначала думали, что оно такое\u003cbr /\u003e \u003cbr /\u003e (количество элементов схемы)L:\u003cbr /\u003e схема:\u003cbr /\u003e (количество элементов схемы)L\u003cbr /\u003e поэтому у нас не получалось отправить даже самую простую схему.\u003cbr /\u003e \u003cbr /\u003e Еще все осложнялось тем, что Олег приехал без ноута и поэтому сидел за Лешиным старым ноутом. (В котором сетевая карточка не работает, вай-фай работает по 20 минут через 10). А в данный момент надо много было сабмитить в инет. Поэтому было принято волевое решение съездить ко мне в ГЗ за вторым ноутом. (Ехать надо было от профсоюзной - управились за 30 минут)\u003cbr /\u003e \u003cbr /\u003e \u003cbr /\u003e \u003cb\u003e0.00\u003c/b\u003e\u003cbr /\u003e Вернулись с ноутом и всякой другой мелочевкой (коврики, тапочки) и вновь взялись за дело.\u003cbr /\u003e \u003cbr /\u003e Рабочее место готово:\u003cbr /\u003e \u003cimg src\u003d\"http://img85.imageshack.us/img85/6280/img6911a.jpg\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003cbr /\u003e \u003cbr /\u003e Пока я ездил - мне в голову пришла гениальная идея, что 19L: - это соединение с \u0026quot;External\u0026quot; элемента с 19, а X в схеме обозначает, что сюда подсоединяется \u0026quot;Еxternal\u0026quot; элемент.\u003cbr /\u003e Мы ее быстро проверили - и о чудо, работает! Теперь мы можем мастерить самые простые схемы.\u003cbr /\u003e \u003cbr /\u003e С помощью схемы только из Х-элемента мы узнаем input сервера.\u003cbr /\u003e \u003cbr /\u003e Дальше делаем все возможные схемы из X и 1 элемента. (их всего 4). Получаем некоторую информацию про первый элемент. Его можно мыслить просто как две функции трехзначной логики от двух переменных. Таких функций не очень много: 3^ (3^2) * 3^(3^2) \u003d 387420489\u003cbr /\u003e \u003cbr /\u003e Кодинг-кодинг-кодинг:\u003cbr /\u003e \u003cimg src\u003d\"http://img248.imageshack.us/img248/2622/img6912e.jpg\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003cbr /\u003e \u003cbr /\u003e Тот же кодинг, вид сбоку:\u003cbr /\u003e \u003cimg src\u003d\"http://img192.imageshack.us/img192/1116/img6913w.jpg\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003cbr /\u003e \u003cbr /\u003e \u003cbr /\u003e Я начинаю на питоне писать полный перебор по всем парам функций. В это время ребята решают задачку аналитически. У меня получился какой-то багнутый (в пересечении 4х вариантов ни одной пары функций), долго работающий перебор. Переписываю на плюсах, чтобы быстрее было отлаживать (кстати скажу, что это была моя первая и последняя программа на плюсах за этот контест). К тому времени Олег с Лешей аналитически (и вроде все-таки с помощью небольшого перебора) находят решение, которое мы удачно проверяем на моей программе. И Ура! Вот эти функции\u003cbr /\u003e \u003cbr /\u003e L: x - y\u003cbr /\u003e R: x*y - 1\u003cbr /\u003e \u003cbr /\u003e Время уже кстати близится к 2м часам. Голова больше не варит. Решили на этой радостной ноте лечь спать. Тем более, что дальше надо очень много работы сделать по тому, чтобы понять, как сгенерить фабрику, дающую нужную последовательность.\u003cbr /\u003e \u003cbr /\u003e Единственное что еще сделали перед сном  - проверили предположение, что все элементы в фабрике одинаковые.\u003cbr /\u003e \u003cbr /\u003e\u003ch3\u003e День 1 (Суббота, 19 июня)\u003c/h3\u003e \u003cbr /\u003e \u003cb\u003e10.00\u003c/b\u003e\u003cbr /\u003e Утро началось с осознания, того что мы пока знаем, что делать дальше (это приятно :)), но с другой стороны работы предстоит много.\u003cbr /\u003e \u003cbr /\u003e Я потихоньку начал придумывать фабрики, а Олег с Лешей писать парсер фабрик и интерпретатор. Когда у меня бывали затыки я помогал Олегу и в итоге нам удалось распарсить пример фабрики и сэмулировать ее работу. Ура! на нашем входе она дает то, что нужно.\u003cbr /\u003e \u003cbr /\u003e Примерно в это же время я придумываю как сделать фабрику, получающую на вход что угодно и выдающую все время 0. (в наших обозначениях это была фабрика x-c0)\u003cbr /\u003e \u003cbr /\u003e Дальше был прорыв, когда за счет обратных ребер с задержками мы получили фабрику x-0x, то есть получающую что угодно на вход и выдающую ту же самую последовательность, только с приписанным 0 спереди. После этого становится понятно, что надо научиться генерить фабрики x-1x и x-2x и задача генерации фабрики, генерирующей произвольный вход - решена. \u003cbr /\u003e \u003cbr /\u003e Доделываю эту техническую часть. В это время остальные члены команды придумывают удобный формат записи фабрик (хранится в текстовом файле, можно определять базовые фабрики в формате организаторов и ставить вместо ребер другие фабрики из других файлов). А также пишут собиралку фабрики из файла в формат для отправки.\u003cbr /\u003e \u003cbr /\u003e В итоге мы получили следующие файлы фабрик.\u003cbr /\u003e Какие-то из них базовые (ни от кого не зависят), другие строятся из простых, как их кирпичиков.\u003cbr /\u003e \u003cbr /\u003e \u003cbr /\u003e с0-0с1.txt    вход: константый 0, выход: 0, дальше константая 1\u003cbr /\u003e с0-1с0.txt\u003cbr /\u003e с0с1.txt    вход: 00..0, выход: 11...1\u003cbr /\u003e c2c0.txt\u003cbr /\u003e map01-10.txt    заменяет 0 и 1 во входе на 1 и 0 на выходе\u003cbr /\u003e map01-20.txt\u003cbr /\u003e x-0c1.txt    вход: xxxx.. , выход: 011....1\u003cbr /\u003e x-1c0.txt\u003cbr /\u003e x-1x.txt    вход: xxxx.. , выход: 1xxxx..\u003cbr /\u003e x-2c0.txt\u003cbr /\u003e x-2x.txt\u003cbr /\u003e \u003cbr /\u003e Формат сложных фабрик был примерно такой:\u003cbr /\u003e \u003cbr /\u003e Файл c0c1.txt:\u003cbr /\u003e //-----\u003cbr /\u003e 0L:        // базовая фабрика\u003cbr /\u003e X1R0#1L1R,\u003cbr /\u003e 0L0R0#X0R:\u003cbr /\u003e 1L\u003cbr /\u003e \u003cbr /\u003e [(1,1,\u0026quot;c2c0.txt\u0026quot;,\u0026quot;d\u0026quot;)] // массив преобразований фабрики\u003cbr /\u003e //-----------\u003cbr /\u003e (1, // к выходу из элемента 1\u003cbr /\u003e 1,  // к правому выходу\u003cbr /\u003e \u0026quot;c2c0.txt\u0026quot;, // подцепляем фабрику из файла c2c0.txt\u003cbr /\u003e \u0026quot;d\u0026quot;) // ниже элемента (важно когда обратное ребро)\u003cbr /\u003e \u003cbr /\u003e В процессе сборки фабрик нам потребовалась реализовать еще одну операцию - join: дописать подряд (вход одной к выходу другой) фабрики из нескольких файлов.\u003cbr /\u003e Например, файл c0-1c0.txt:\u003cbr /\u003e \u003cbr /\u003e join\u003cbr /\u003e c0-0c1.txt\u003cbr /\u003e map01-10.txt\u003cbr /\u003e \u003cbr /\u003e После всего этого, программа, которая по заданному выходу генерит фабрику, пишется просто элементарно. (Надо в обратном порядке записать нужные строки из  [x-0x.txt, x-1x.txt, x-2x.txt] в файл, а потом вызвать преобразовалку в формат для отправки.)\u003cbr /\u003e \u003cbr /\u003e Таким образом, к 16.00 мы засабмитили топливо к машине 0 (фабрика, производящая требуемый префикс была размера примерно 600). Немножко пошаманив, мне удалось отправить топливо \u0026quot;11111\u0026quot; к трем машинам и это были наши первые шаги к получению очков. \u003cbr /\u003e \u003cbr /\u003eЗабегая вперед, скажу, что наш способ построения фабрик был далек от оптимального. У нас, чтобы сгенерить аутпут порядка N, требовалась фабрика размера 40N, в то время, как другие люди добивались результат 2N. В голове всплывает такая картинка:\u003cbr /\u003e\u003cbr /\u003e\u003cimg src\u003d\"/predownloaded/03/74/0374ac1b4e4b5ea7e2d3d4079781171c300433d6.jpg\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003cbr /\u003e\u003cbr /\u003e\u003cbr /\u003e Кстати, очень важно отвлекаться и менять вид деятельности. Поэтому дальше мы пошли погулять и подышать свежим воздухом, чтобы хоть немного проветрить мозг.\u003ci\u003e [Alexey: Это была очень и очень правильная идея!]\u003cbr /\u003e\u003c/i\u003e \u003cbr /\u003e \u003cbr /\u003e \u003cb\u003e18.00\u003c/b\u003e\u003cbr /\u003e Решили распараллелиться:\u003cbr /\u003e я занимаюсь ломанием топлива,\u003cbr /\u003e Олег - машин,\u003cbr /\u003e а Леша пишет скрипт, с помощью которого можно сабмиттить топливо для машины прямо из консоли.\u003cbr /\u003e \u003cbr /\u003e \u003cbr /\u003e Далее, методом научного тыка я выясняю следующее:\u003cbr /\u003e 100...         :топливо из 1 танкера, 0 ингр.\u003cbr /\u003e 1100...        :1 танкер, 1 ингр., ошибка размерности\u003cbr /\u003e 11100..        :1 танкер, 1 ингр, С(1,1) \u003d 0\u003cbr /\u003e 1111000..    :(1, 1), С(1,1) \u003d 1\u003cbr /\u003e 1111100..    :(1, 1), С(1,1) \u0026gt;\u003d 2         \u003cbr /\u003e \u003cbr /\u003e \u003cbr /\u003e Вообще говоря, машина - система уравнений вида a_1 * a_2 * .. \u0026gt; (\u0026gt;\u003d) b_1 * b_2 * .... . \u003cbr /\u003e Количество уравнений - это количество chamber-ов в машине, \u003cbr /\u003e количество переменных - количество танкеров.\u003cbr /\u003e Топливо - это решение. Кол-во ингредиентов - это размерность решения.\u003cbr /\u003e Это стало понятно почти сразу после начала контеста, но если не знаешь как задавать топливо и машины в тритах, то этим никак не воспользуешься.\u003cbr /\u003e \u003cbr /\u003e \u003cbr /\u003e Нетрудно доказать, что последнее топливо будет подходить ко всем машинам, в которых 1 танкер и любое количество уравнений.  Я начал руками его подставлять во все машины подряд, попутно отдавая Олегу информацию про эти машины. (по сообщениям парсера можно узнать что-то про танкеры, чамберы у машины)\u003cbr /\u003e \u003cbr /\u003e \u003cb\u003e22.00\u003c/b\u003e\u003cbr /\u003e Точно таким же методом научного тыка я подбираю синтаксически корректное топливо к 2-х танкерным машинам. (получилось что-то типа \u0026quot;2201111111\u0026quot;). К этому времени Леша уже дописывает скрипт сабмита топлива и скрипт выдирания списка всех существующих машин. Мы говорим скрипту, чтобы он сабмитил по порядку во все машины 2 известных нам топлива: \u0026quot;11111\u0026quot; , \u0026quot;2201111111\u0026quot;. Он радостно работает и число решенных нами машин весело возрастает (как впрочем и наше количество очков). Олег с помощью бубна сабмитит нашу первую машину и уезжает домой.\u003cbr /\u003e \u003cbr /\u003e Дальше каким-то образом нам удается варьировать количество танкеров и ингредиентов в топливо, но общая логика ускользает. Например, почему:\u003cbr /\u003e \u003cbr /\u003e 22     \u003d 2, 0\u003cbr /\u003e 222    \u003d expected \u00272\u0027\u003cbr /\u003e 2222     \u003d 6, 0\u003cbr /\u003e 22222    \u003d expected \u00272\u0027\u003cbr /\u003e 222222     \u003d 366, 0\u003cbr /\u003e 2201    \u003d 2, 1\u003cbr /\u003e 122    \u003d 1, 2\u003cbr /\u003e \u003cbr /\u003e \u003cb\u003e00.00\u003c/b\u003e\u003cbr /\u003e Леша дописал на перле свой мега-агрегат по сабмиту топлива. Теперь у нас на диске для каждой машины с номером N создавалcя в специально отведенном месте файл N.info. Первая строчка - описание машины в троичном формате, дальше весь лог нашего общения с ней. И если машина решена то пишется строчка \u0026quot;Solved\u0026quot;. Другой специальный скрипт с помощью grep-a выдирает файлы в которых нет строчки \u0026quot;Solved\u0026quot; и делает список таких файлов. По которому можно пройтись еще одним скриптом и засабмитить какое-нибудь топливо по этой машине.\u003cbr /\u003e \u003cbr /\u003eperl-coder detected!! ^):\u003cbr /\u003e\u003cimg src\u003d\"http://img571.imageshack.us/img571/7214/img6920m.jpg\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003cbr /\u003e\u003cbr /\u003e\u003cbr /\u003e Олег доехал до дома и по дороге ему пришла гениальная мысль. Нам Верещагин на курсе по Колмогоровской сложности рассказывал про сложность префиксного кодирования числа N. \u003cbr /\u003e \u003cbr /\u003e Например, вот что сказал Олег:\u003cbr /\u003e \u0026quot;tanks comps chambers\u003cbr /\u003e 219 0 0 0 1\u003cbr /\u003e 2146 122000010 1 1 1\u003cbr /\u003e 2625 1221\u00270\u0027000010\u0027 1 1 1\u003cbr /\u003e 2627 1221\u00271\u0027000001\u00270 1 1 1\u003cbr /\u003e 2634 1221\u00272\u0027000000\u002710 1 1 1\u003cbr /\u003e 2638 122220\u002700\u0027000000010\u0027 1 1 1\u003cbr /\u003e 2641 122220\u002701\u0027000000001\u00270 1 1 1\u003cbr /\u003e 2644 122220\u002702\u0027000000000\u002710 1 1 1\u003cbr /\u003e 2646 122220\u002710\u0027000000000\u0027010 1 1 1\u003cbr /\u003e 2648 122220\u002711\u0027000000000\u00270010 1 1 1\u003cbr /\u003e \u003cbr /\u003e Чтобы префиксно закодировать число N, надо сначала написать количество бит, а затем сами биты. Но чтобы написать количество бит (log_2 N), надо написать log_2 log_2 N и т.д. То, что у меня выделено во 2 группе (1, 2, 3 или 4 цифры) - это размер последней группы. Но размер второй группы тоже надо указать. Он указан в первой\u003cbr /\u003e 1221     - 1 цифра\u003cbr /\u003e 1222220 - 2 цифры\u003cbr /\u003e 1222210 - 3 цифры\u003cbr /\u003e ...\u003cbr /\u003e \u0026quot;\u003cbr /\u003e Это еще не было окончательное решение, но чувствовалось, что мы еще на один шаг ближе к истине.\u003cbr /\u003e \u003cb\u003e\u003cbr /\u003e 02.00\u003c/b\u003e\u003cbr /\u003e К этом времени мой мозг окончательно отключился и я перестал соображать. Поэтому мы отправились спать. А Олег кажется понял как кодируются числа в машине и начал писать парсер таких чисел. А затем заодно и парсер машины.\u003cbr /\u003e \u003cbr /\u003e\u003ch3\u003e День 2 (Воскресенье, 20 июня)\u003c/h3\u003e \u003cbr /\u003e Проснулся и сразу в бой!:\u003cbr /\u003e\u003cimg src\u003d\"http://img121.imageshack.us/img121/7133/img6927f.jpg\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003cbr /\u003e\u003cbr /\u003e\u003cbr /\u003e \u003cb\u003e10.00\u003c/b\u003e\u003cbr /\u003eНе знаю до скольки еще вчера Олега сидел. Но на утро у нас были почти работающие парсеры машин и чисел. \u003cbr /\u003e \u003cbr /\u003e На почте у меня было письмо примерно такого содержания:\u003cbr /\u003e \u0026quot;В общем, парсилка строки в последовательность чисел - parse_string.py. Только вот она не может парсить машины, ибо у них формат немного другой.\u003cbr /\u003e \u003cbr /\u003e Предполагаемый формат машины: (кол-во чамберов) чамбер1 чамбер2 чамбер3 ...\u003cbr /\u003e \u003cbr /\u003e Формат чамбера: (кол-во секций в верхней трубе) (верхняя труба) (0|10) (кол-во секций в нижней трубе) (нижняя)\u003cbr /\u003e (0|10) посередине - это Main (0) или Aux (10).\u003cbr /\u003e \u003cbr /\u003e Формат трубы:\u003cbr /\u003e Префиксный код секций.\u003cbr /\u003e 0 - 0\u003cbr /\u003e 10 - 1\u003cbr /\u003e 11 - 2\u003cbr /\u003e 12 - 3\u003cbr /\u003e ?? - 4\u003cbr /\u003e ?? - 5\u003cbr /\u003e \u003cbr /\u003e Прога, парсящая машины по такому формату, - parse_cars.py. Она глохнет на машине 2689, однако, предыдущие 76 обрабатываются нормально.\u0026quot;\u003cbr /\u003e \u003cbr /\u003e Уже почти все понятно, но на самом деле до конца все равно не ясно. Не помню, что конкретно мы делали следующее время - но к 14.00 нам удалось понять формат кодирования чисел в топливе и машинах, а значит и написать парсер машин и генератор нужного топлива. Таким образом, вся загадочная часть закончилась. Осталась только математическая и это не могло не радовать.\u003cbr /\u003e \u003ci\u003e[Alexey: История определения была очень забавная. В какой-то момент из топлива удалось выделить осмысленный кусок 22011, который обозначал какое-то число. Чтобы узнать, что же это за число, мы сделали машину со специальной ошибкой, в которую подсунули 22011 в виде номера бака. В результате нам вернулся ответ: \u0026quot;в машине не подсоединен бак номер 8\u0026quot;. После этого задача сразу рассыпалась. Мы выяснили как кодируются баки, 4 оказалось 22000, а 5 22001. Дальше быстро раскололи, как кодируется все топливо].\u003c/i\u003e\u003cbr /\u003e Леша начал реализовывать свою гениальную идею о том, как можно решать машины. Идея состояла в следующем: будем решать одномерную задачу, рассмотрим неравенство, задаваемое одним чабмеров. Возьмем логарифм от обоих частей. Получим линейное неравенство относительно логарифмов. Таким образом, надо решить систему линейных неравенств - классическая задача линейного программирования. Решаем ее так: берем какой-нибудь известный солвер (Леша умел пользоваться glpk - GNU Linear Programming Kit) и прикручиваем его к нашей задаче. Он решает ее в вещественных числах, поэтому нам еще придется найти целочисленное решение подходящее под ответ. Также обнаружилась следующая неприятная особенность: glpk умеет решать только замкнутую задачу a \u0026gt;\u003d b (или по крайней мере мы умеем задавать ему только такую задачу). А  у нас были неравенства и a \u0026gt; b. Не знаю, какие костыли приделал к нему Леша, но в конце концов солвер сможет решать машины.\u003cbr /\u003e \u003cbr /\u003e \u003cbr /\u003e \u003cb\u003e16.00\u003c/b\u003e\u003cbr /\u003e Приезжает Олега. Он начинает думать о том, как можно генерить сложные задачи. Я в это время дописываю наш первый солвер: stupid_solver.py, который каждой машине в зависимости от количества танкеров в ней отправляет последовательность из нужного числа двоек. Он берет какое-то количество машин. \u003cbr /\u003e \u003cbr /\u003e Но мы на этом не останавливаемся: дальше я пишу brute_solver.py, который берет t переменных (t - количетво танкеров) и перебирает значение каждой от 1 до (10^6 ^ (1 / t)). То есть, чтобы всего вариантов на каждую машину было не очень много (10^6). Тогда же и был написан локальный проверяльщик подходит ли топливо к машине (так как гонять 10^6 вариантов по инету это ооооооочень долго - да и к тому времени их сервак начал подтормаживать)\u003cbr /\u003e \u003cbr /\u003e В это же время Леша пишет свой решатель машинок методом ЛП. fool_solver.py (следующая стадия после моего stupida :), это название понравилось мне еще и тем, что звучит также как и full - метод то и правда достаточно универсальный). Запускаем наши методы почти одновременно - каждый из них решает порядка 100 машин - очень неплохой результат (правда было непонятно, сколько из этих уникальных машин).\u003cbr /\u003e \u003cbr /\u003e Параллельно с этим пытаемся придумывать сложные машинки. Был идея придумать машинку, которая не решается в одномерных переменных. Понятно, что должно быть как минимум две переменных. Беру самое простое уравнение: A * B \u0026gt; B * A. ( \u0026gt; - следует понимать так: первая строка поэлементно \u0026gt;, все остальные \u0026gt;\u003d , A,B - матрицы 2*2). Придумываю какие-то рандомные примеры, проверяю в перемножением матриц в Sage - ничего не получается. Прошу Олега решать такое матричное уравнение в неопределенных переменных в Mathematice. Ничего не выдает. И тут до Олега доходит, что оно в принципе не решаемо. Так как tr(A * B) \u003d tr(B * A) - поэтому (A*B)[1,1] + (A*B)[2,2] \u003d (B*A)[1,1] + (B*A)[1,1]. А с другой стороны (A*B)[1,1] \u0026gt; (B*A)[1,1] и (B*A)[1,1] \u0026gt;\u003d (A*B)[2,2]. Противоречие.\u003cbr /\u003e \u003cbr /\u003e \u003cbr /\u003e Еще наблюдаем статистику по длине фабрик - люди умудрялись делать фабрики размера 6 (!!). Когда у нас например фабрика, генерирующая только легальный префикс имела размера порядка 500!. В общем быть с маленькой фабрикой нам не светит. Но с другой стороны, если ты решил машинку, то каждый тик будешь получать не больше чем в два раза меньше того, кто решил ее наилучшим образом. Поэтому надо просто больше задач решать и сложные придумывать.\u003cbr /\u003e \u003cbr /\u003e \u003cbr /\u003e \u003cb\u003e20.00\u003c/b\u003e\u003cbr /\u003e Дальше мозг отказывается думать (по крайней мере лично у меня). Опять идем гулять. В ростиксе перекусываем. Мы с Лешей опрокидываем по 0.5 пива в надежде достичь пика Балмера. Также было решено сосредоточиться на придумывании новых относительно сложных задач, потому как решатель более менее нормальный у нас есть. Еще пришла следующая идея для машин. Рассмотрим уравнение a^99 \u003d b^100. Минимальное решение у него 2^100 и 2^99, что исключает переборное решение. Если там еще чего-нибудь накрутить, то может получиться вполне себе задачка.\u003cbr /\u003e\u003cbr /\u003e\u003cimg src\u003d\"/predownloaded/1f/d4/1fd461005d135cb68d1730bc78a4f70e707b0192.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003cbr /\u003e \u003cbr /\u003e \u003cb\u003e22.00\u003c/b\u003e\u003cbr /\u003e Пика Балмера мне достичь не удалось - мозг встал окончательно, зато прогаться стало легко как никогда. [Alexey: Ну идея пика Балмера как раз в том, чтобы меньше думать перегруженной головой. Мне пиво однозначено помогло. И прогаться стало значительно легче и думаться.] Олег начал реализовывать задачку с a^99 \u003d b^100, только с наворотами (например безумные коэффициенты, за счет подстановок например таких a \u003d c^1000, c \u003d d^1000 итп. - я деталей уже не знаю). Леша еще улучшает солвер за счет каких-то оптимизаций и пытается придумать многомерный пример. А в целом туплю и иногда прогаю скрипты, которые меня просят.\u003cbr /\u003e \u003cbr /\u003e Пытаемся скормить наши задачки нашему солверу - он их успешно не решает. Значит, можно засылать. Но сервер уже конкретно подтормаживает + появляется какое-то глупое ограничение на длину машины (100 вроде). Поэтому наш метод сразу пролетает. Олег выдумывает еще какой-то метод, основанный на матрицах. Задачки кажутся сложными - и мы их вручную сабмитим на сервак (сервер почти встал и скрипты вообще не пробиваются - удается иногда вручную засабмитить). В итоге мы заслали где-то 50 задач. И тут как-то заметили, что одну из таких задач уже решило человек 25. Видимо у них были простые решения (наверно даже одномерные). Забили на этот способ.\u003cbr /\u003e \u003cbr /\u003e В это же время Леша периодически запускает свой солвер на новых задачках, а я запускаю брут солвер на них же. (Хотели сделать это по кронтабу, но изза торомозов, список новых машин с описаниями никак не выдирался с сервака - приходилось вручную делать).\u003cbr /\u003e \u003cbr /\u003e \u003cb\u003e01.00\u003c/b\u003e\u003cbr /\u003e Сервер окончательно встает (Error 503 Service Temporary Unavailable). Видимо все шлют новые / решает старые машинки (прям воруй / убивай какой-то). А так как все это делается скриптами - хабраэффект неминуем. Когда ты ничего не можешь заслать и даже посмотреть highscores - интерес что-то делать пропадает и хочется забить и лечь спать. \u003cbr /\u003e \u003cbr /\u003e Тут мы как-то замечаем (не знаю как это получилось в условиях таких лагов), что ограничения на длину машины пропадает - можно слать наши первые задачки.\u003cbr /\u003e Пытаемся разобраться с кронтабом, чтобы лечь спать, а он каждые 10 минут засылал наши задачки, а также качал новые, решал их и отправлял. Чтобы если образуется какая-то дырка без лагов, то мы либо сделали свое дело, либо еще больше его подвесили - не давая остальным получать очки. Получились полуавтоматические скрипты с практически встроенным разумом. (но скачивать новые машины все равно надо вручную). Тогда же мы и написали обобщенный солвер - который сначала решает методом ЛП, а потом пытаеся обычным перебором (так на всякий случай - защита от глупых багов в ЛП).\u003cbr /\u003e \u003cbr /\u003e Ручная проверка фабрики из 13К элементов:\u003cbr /\u003e\u003cimg src\u003d\"http://img580.imageshack.us/img580/2281/img6924.jpg\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003cbr /\u003e\u003cbr /\u003e\u003cbr /\u003e \u003cbr /\u003e \u003cb\u003e04.00\u003c/b\u003e\u003cbr /\u003e Удивительно, но сервер заработал! Отсылаем еще 20 сложных машин (оставив 2 просто для фана на утро). Через какое-то время проверяем - их еще никто не решил. Можно со спокойной совестью ложиться спать. Между тем уже светает - в голове безумные мысли бегают, не дают уснуть (как впрочем и предыдущие 2 ночи). Расстилаем спальники на полу, на матрасе и до утра можно отдыхать.\u003cbr /\u003e \u003cbr /\u003e \u003cimg src\u003d\"http://img685.imageshack.us/img685/369/img6925s.jpg\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003cbr /\u003e \u003cbr /\u003e \u003cbr /\u003e\u003ch3\u003e День 3 (Понедельник, 21 июня)\u003c/h3\u003e \u003cbr /\u003e \u003cb\u003e10.00\u003c/b\u003e\u003cbr /\u003e На утро видим, что мы очень даже неплохо поднялсиь за ночь. (Очевидно, что за счет сложных задач). Мы уже в топ 20! За ночь набежало порядка 1000 задач - надо отдавать скрипту их решать. Он справляется с не меньше чем с половиной.\u003cbr /\u003e \u003cbr /\u003e Сервер просто летает - это не может не радовать. \u003cbr /\u003e \u003cbr /\u003e Засабмичиваем две оставшиеся задачи. Думаем чем бы еще заняться, кроме как запуска каждые 10 минут решения новых задач. Возникает идея придумать бота, который будет слать наши сложные задачки, а мы их будем решать и в итоге делить очки с ним пополам (можно даже сделать так, что мы будем их решать лучше бота :) - чтобы больше очков получать).\u003cbr /\u003e \u003cbr /\u003e Сказано - сделано. Регаем бота. Без палева называем его \u0026quot;SnakeTeamBot\u0026quot; :) (в правилах ничего не сказано про то что ботов нельзя делать :)). Правда есть одно ограничение - нельзя слать машинок больше, чем ты решил. Ну что ж - даем боту в руки stupid_solver (чтобы он ненароком не решил сложные задачки :) ) и вперед. Дальше сабмит задачек и решения их с нашего аккаунта. (Все в почти автоматическом режиме - почти все реализовано на скриптах). \u003cbr /\u003e \u003cbr /\u003e Естественно мысль пошла дальше - ведь можно написать скрипт, который будет делать все это несколько раз. Решено было забить, так как времени осталось мало и вряд ли мы кого-нибудь обгоним таким трюком \u003ci\u003e[Alexey: написание бота было скорее развлечением и проверкой насколько хорошо работает алгоритм Олега по созданию мащин, получать сколько-то серьезное преимущество за счет бота не хотелось ].\u003c/i\u003e\u003cbr /\u003e \u003cbr /\u003e \u003cbr /\u003e \u003cb\u003e13.00\u003c/b\u003e\u003cbr /\u003e Осталось 3 часа до контеста - занимаемся всякой фигней, помимо запуска решателя (уже сразу же после того, как отработал предыдущий - наплыв новых машин очень высокий)\u003cbr /\u003e Уверенно держимся на 15 месте.\u003cbr /\u003e Наш бот уверенно ползет вверх и уже забрался в топ100\u003cbr /\u003e \u003cbr /\u003e \u003cb\u003e14.00 \u003c/b\u003e\u003cbr /\u003e Леша уходит на работу, да и мы разбредаемся по домам. Финишировать будем уже дома. \u003cbr /\u003e \u003cb\u003e\u003cbr /\u003e 15.00\u003c/b\u003e\u003cbr /\u003e Уже из дома запускаю солвер. Между тем, нас догоняет команда vorpal [Alexey: это пресловутый vorpal sword из jabberwocky]. С каждым тиком отставание сокращается. Успеем ли мы выстоять?\u003cbr /\u003e \u003cb\u003e\u003cbr /\u003e 16.00\u003c/b\u003e\u003cbr /\u003e Вот и конец. \u003cbr /\u003e Финальная таблица (5 верхних не показывается):\u003cbr /\u003e 3 548,266    joho\u003cbr /\u003e 3 317,292    HITOCry\u003cbr /\u003e 3 246,312    Celestial Dire Badger\u003cbr /\u003e 3 233,006    perpetuum_mobile\u003cbr /\u003e 3 047,350    Fail0verFlow\u003cbr /\u003e 2 657,573    ocamlriders\u003cbr /\u003e 2 506,430    The Cat is #1!!\u003cbr /\u003e 2 500,582    6-11\u003cbr /\u003e 1 947,789    eger a marson\u003cbr /\u003e 1 672,753    SnakeTeam\u003cbr /\u003e 1 667,446    vorpal\u003cbr /\u003e 1 323,462    shinh2\u003cbr /\u003e \u003cbr /\u003e Финишировали с 15 местом - очень неплохой результат. Бот - на 54.\u003cbr /\u003e \u003cbr /\u003e До верхних нам было не добраться, но натиск vorpala мы выдержали :). Видимо нам в этом неслабо помогла команда SnakeTeamBot \u003ci\u003e[Alexey: по прикидкам она дал нам 200-300 очкой, то есть дал ровно одно место]\u003c/i\u003e. Кстати, мы мониторили сколько человек решили эти сложные задачки - к концу контеста, кроме наших монстуозных решений по 13к было решений еще максимум от 2х команд (примерно по 3к).\u003cbr /\u003e \u003cbr /\u003e \u003chr /\u003e\u003ch3\u003e\u003cbr /\u003e Итого\u003c/h3\u003e \u003cbr /\u003e Впечатления от контеста сугубо положительные. Практически до конца оставался энтузиазм что-то делать. Порадовало, что задачка получилась очень многогранной и развиваться в ней можно было в разные стороны. Респект организаторам за подготовку такого мероприятия. Мне понравился опыт работы в команде - один бы я точно не написал такую тонну кода, который мы наваяли за эти дни и не разгадал все загадки оргов. \u003cbr /\u003e \u003cbr /\u003e Про тулзы. Дропбокс - мега штука. Очень удобно. Нам периодически приходилось меняться компами - и когда ты садишься за чужой - у тебя точно такая же общая папочка как и на твоем. Linux - это тоже очень круто. Я не представляю  как можно в винде заниматься такими  задачками, когда там даже нормального шелла нет. А когда ты можем любое свое действие сделать автоматическим - это реально помогает. Еще мега круто писать на языках высокого уровня, а еще более круто писать всем на одном языке - питоне. Тебе нужна функция которая уже написана в другом модуле: \u0026quot;from module_name import function_name as f\u0026quot; - спасет отца русской демократии. (у нас был небольшой фэйл, что веб скрипт начал писаться на перле и потом его просто не было времени переписывать, поэтому приходилось склеивать эти штуки с помощью шелла). Еще очень важно все находиться в одной комнате и общаться вживую - это экономит кучу сил и позволяет лучше понимать друг друга. Собраться всем у Леши было отличной идеей.\u003cbr /\u003e \u003cbr /\u003e Из минусов. Естественно, как и от всякого глобального мероприятия - от этого контеста жутко устаешь. Не так-то просто в бешеном темпе фигачить несколько суток подряд. Поэтому такое развлечение должно быть не чаще чем раз в год. Еще дико раздражало когда сервер висел. Если бы задачка не была завязана на черный ящик, который на сервере, то это было бы терпимо, но когда ты без сервера остаешься без информации - теряется всякий интерес что-то делать.\u003cbr /\u003e \u003cbr /\u003e Такие дела. Участвуйте в icfpc и получайте от этого море фана!\u003cbr /\u003e \u003cbr /\u003e \u003cbr /\u003e \u003ci\u003e[Alexey: Ощущения после окончания можно передать так: мы поехали на ралли Париж-Дакар и умудрились пройти все этапы, некоторые грубо проломив, доехали до конца и с еще очень приличным результатом.\u003cbr /\u003e\u003cbr /\u003e После мероприятия у меня родилась фраза передающее мое состояние в данный момент:\u003cbr /\u003e\u003cbr /\u003e \u0026quot;Дайте мне мощный комп и достаточно времени, и я запрограммирую землю.\u0026quot;]\u003c/i\u003e  \u003cbr /\u003e \u003cbr /\u003eБонус: вот это \u003ca href\u003d\"http://rutube.ru/tracks/1462306.html?v\u003da41e6d1b863c2c409cf48283a22f55a4\"\u003eвидео\u003c/a\u003e отлично передает мое общее впечатление от контеста.\u003cbr /\u003e\u003cbr /\u003e\u003cbr /\u003e\u003cb\u003eUPD:\u003c/b\u003e \u003ca href\u003d\"http://jerom.livejournal.com/161481.html\"\u003ehttp://jerom.livejournal.com/161481.html\u003c/a\u003e - отличная подборка отчетов других команд.\u003c/div\u003e","tags":["icfpc","безумие","машинки"]}}