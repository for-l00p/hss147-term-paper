{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":false,"creationTimeSeconds":1291063460,"rating":5,"authorHandle":"KhaustovPavel","modificationTimeSeconds":1291063460,"id":905,"title":"CodeForces Beta Round #42 :: Разбор задач","locale":"ru","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cdiv\u003e\u003cb\u003eЗадача A. Футбол\u003c/b\u003e\u003c/div\u003e\u003cdiv\u003eКлассическая задача A второго дивизиона. Можно было решить без хранения в памяти всех N строк входного файла. Хотя тесты проходило и любое решение, которое только можно себе представить.\u003c/div\u003e\u003cdiv\u003eРешение без сохранения всех N строк в памяти: считывать все строки, при встрече незнакомой строки присваивать ей идентификатор. Для каждого идентификатора завести счетчик, который будет отражать, сколько раз строка встретилось во входном файле. Из двух строк выбрать ту, у которой значение счетчика больше.\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003e\u003cb\u003eЗадача B. Письмо\u003c/b\u003e\u003c/div\u003e\u003cdiv\u003eСамое простое решение - это для каждой буквы (другие символы просто игнорировать) в обеих строках посчитать число ее вхождений. Если какая-то буква входит во вторую строку большее число раз, чем входит в первую, ответ \u0026quot;NO\u0026quot;, иначе ответ \u0026quot;YES\u0026quot;. Очевидная асимптотика решения O(L), где L - ограничение на длину строки во входном файле.\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003e\u003cb\u003eЗадача С. Счастливые билеты\u003c/b\u003e\u003c/div\u003e\u003cdiv\u003eВсем известно условие делимости числа на 3: \u0026quot;Число кратно трем, тогда и только тогда, когда сумма цифр этого числа делится без остатка на 3\u0026quot;. Соответственно, чтобы при склеивании двух чисел получить число кратное трем, необходим чтобы сумма цифр первого числа плюс сумма цифр второго числа было кратно трем.\u003c/div\u003e\u003cdiv\u003eСтоит отметить, что оперировать в условиях этой задачи можно только с остатками от деления на 3. Несложно понять, что есть смысл соединять числа, которые дают в остатке от деления на 3 двойку с теми, кто дает в остатке единицу. Числа, которые нацело делятся на 3 можно объединять только с числами, которые так же делятся нацело на 3. Если посчитать количество чисел на кусках билетов с остатком от деления на 3 равным 0, 1, 2 (обозначим их как R\u003csub\u003e0\u003c/sub\u003e, R\u003csub\u003e1\u003c/sub\u003e, R\u003csub\u003e2\u003c/sub\u003e соответственно), то ответом будет min(R\u003csub\u003e1\u003c/sub\u003e, R\u003csub\u003e2\u003c/sub\u003e) + [R\u003csub\u003e0\u003c/sub\u003e / 2]. Здесь [] - операция округления в меньшую сторону.\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003e\u003cb\u003eЗадача D. Путешествие\u003c/b\u003e\u003c/div\u003e\u003cdiv\u003eЗадача не требует знания каких-то алгоритмов, математики или даже банальной логики. От Вас требуется найти все частные случаи и не забыть рассмотреть каждый из них.\u003c/div\u003e\u003cdiv\u003eТеста \u0026quot;1 1\u0026quot; быть не могло (ограничения такие).\u003c/div\u003e\u003cdiv\u003eДля тестов \u0026quot;1 2\u0026quot; и \u0026quot;2 1\u0026quot; ответом служит последовательность из трех клеток (1 1, оставшаяся клетка, 1 1). Телепортов не требуется.\u003c/div\u003e\u003cdiv\u003eДля тестов \u0026quot;1 M\u0026quot; и \u0026quot;N 1\u0026quot; (2 \u0026lt; N, M) ответом служит последовательность 1 1 -\u0026gt; 1 2 -\u0026gt; ... -\u0026gt; 1 M (ну и аналогично для перевернутого случая) и снова 1 1 в конце. Требуется один телепорт (1 M -\u0026gt; 1 1).\u003c/div\u003e\u003cdiv\u003eДалее логика простая. Если хотя бы одна из сторон - четная, то пройти можно следующим алгоритмом:\u003c/div\u003e\u003cdiv\u003eРассмотрим случай, когда количество строк нечетно. При нечетном количестве столбцов можно действовать так же, поменяв строки и столбцы местами.\u003c/div\u003e\u003cdiv\u003eИз клетки 1 1 шагнем в 1 2 и далее пойдем змейкой по прямоугольнику Rect(1, 2, N, M). То есть во время обхода змейкой не посещаем первую строку. Такой обход закончится в клетке с координатами 2 M. После чего можно шагнуть на 1 M и спокойно прийти по первой строке в 1 1.\u003c/div\u003e\u003cdiv\u003eДля случая, когда N и M четные, можно воспользоваться тем же алгоритмом. Очевидно, что телепортов строить во всех этих случая не потребуется.\u003c/div\u003e\u003cdiv\u003eДля случая, когда N и M нечетные всегда потребуется один телепорт. Если действовать по той же стратегии, то в конце обхода змейкой можно попасть только в клетку с координатами N M, откуда необходимо телепортироваться в клетку 1 M и пройтись по первой строке до клетки 1 1.\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003e\u003cb\u003eЗадача E. Гонка\u003c/b\u003e\u003c/div\u003e\u003cdiv\u003eЗадача не требует знания каких-то сложных формул из физики. Сразу открою занавесу и выпишу все формулы, которые потребуются при решении.\u003c/div\u003e\u003cdiv\u003eX\u003csub\u003e0\u003c/sub\u003e \u003d 0\u003c/div\u003e\u003cdiv\u003eX\u003csub\u003en + 1\u003c/sub\u003e \u003d X\u003csub\u003en\u003c/sub\u003e + V\u003csub\u003en\u003c/sub\u003e (T\u003csub\u003en+1\u003c/sub\u003e - T\u003csub\u003en\u003c/sub\u003e), где X\u003csub\u003ei\u003c/sub\u003e - координата, T\u003csub\u003ei\u003c/sub\u003e - момент времени\u003c/div\u003e\u003cdiv\u003eНесложно понять, что решение с асимптотикой O(SN\u003csup\u003e2\u003c/sup\u003e) получит заслуженный Time Limit. Решение с асимптотикой O(KN\u003csup\u003e3\u003c/sup\u003e) вполне сойдет. Впрочем, скорее всего существует решение с гораздо более хорошей трудоемкостью.\u003c/div\u003e\u003cdiv\u003eДалее будет рассказано решение за O(KN\u003csup\u003e3\u003c/sup\u003e), которое имеет множество других достоинств.\u003c/div\u003e\u003cdiv\u003eБудем рассматривать всю гонку, как набор некоторых событий упорядоченных во времени. События - изменение скорости какого-либо участника в какой-либо момент времени. Для каждого участника несложно (еще при чтении) получить все события, которые с ним связаны. Каждое из них обладает двумя параметрами: время, когда была сменена скорость и сама величина скорости. Все события можно объединить и упорядочить хронологически (в порядке неубывания времени, когда происходит событие).\u003c/div\u003e\u003cdiv\u003eТеперь нет смысла идти по всем моментам времени (от 0 до S). Есть смысл рассматривать только моменты времени, в которые происходит хотя бы одно событие. Всего смен скоростей будет O(NK). Для дальнейшего решения можно сделать несколько утверждений:\u003c/div\u003e\u003cdiv\u003eМежду двумя соседними моментами времени (в которые происходят события) скорости автомобилей остаются постоянными. Соответственно, автомобиль i обгонит на участке между этими двумя моментами времени автомобиль j если V\u003csub\u003ei\u003c/sub\u003e \u0026gt; V\u003csub\u003ej\u003c/sub\u003e (иначе обгон точно не возможен). А далее требуется соблюдение одного из двух условий:\u003c/div\u003e\u003cdiv\u003e\u003cul\u003e\u003cli\u003eКоордината автомобиля i в первый момент времени меньше, чем у автомобиля j, а во второй момент времени координата автомобила i уже больше координаты автомобиля j.\u003c/li\u003e\u003c/ul\u003e\u003cul\u003e\u003cli\u003eКоордината автомобиля i в первый момент времени такая же, как у автомобиля j, а во второй момент координата автомобиля i больше координаты автомобиля j. При этом на предыдущем этапе координата автомобиля i была меньше (то есть он сравнялся с автомобилем j на прошлом интервале времени).\u003cbr /\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003cdiv\u003eНа каждом временном интервале можно за O(N\u003csup\u003e2\u003c/sup\u003e) проверять для каждой пары (i, j) обгоняет ли автомобиль i автомобиль j.\u003c/div\u003e\u003cdiv\u003eКаждое из вышеописанных условий можно проверить в целых числах (32 бита вполне хватает). Ответ так же не потребует 64-битовой переменной.\u003c/div\u003e\u003cdiv\u003eСтоит отметить, что решение не использует значение S, которое дается во входном файле.  Дописав один IF можно получить решение, которое будет правильно обрабатывать даже случаи, когда автомобили некоторое время ехали бок о бок.\u003c/div\u003e\u003c/div\u003e","tags":["codeforces format","codeforces round #42","разбор задач"]}}