{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1276751233,"rating":12,"authorHandle":"Harta","modificationTimeSeconds":1276751387,"id":464,"title":"Need help for this problem","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003eHi all,\u003cbr /\u003e\u003cbr /\u003eI need your help to solve \u003ca href\u003d\"http://www.ut.ee/boi/?item\u003dboi.tasks.2\"\u003ethis problem\u003c/a\u003e (task mines day 2 Baltic OI 2010). I heard that it can be solved using Gaussian Elimination (but I haven\u0027t had detail ideas). According to what I know, Gaussian Elimination runs in O(N^3) and the space is O(N^2). I tried to transform this problem to gaussian elimination version. I ended up with this transformation:\u003cbr /\u003e1. Now define (x,y) into a number (we number every cells start from 1 to N*M)\u003cbr /\u003e2. Build N*M equations and save it in gaussian table. So table[i][j] has value 1 if node i and j are adjacent, otherwise 0\u003cbr /\u003e3. Input[i][j] (the given input) means how many bombs in cell(i,j) then table[transform(i,j)][N*M+1]\u003dInput[i][j]\u003cbr /\u003e4. Solve it using gaussian elimination.\u003cbr /\u003e\u003cbr /\u003eUnfortunately, for above-mentioned solution, I need O((N*M)^2) space and O((N*M)^3) time which is far enough to solve this problem. Any helps and ideas are appreciated. Thank you for your attention.\u003cbr /\u003e\u003cbr /\u003eI am looking forward for a reply.\u003c/div\u003e","tags":["boi 2010","mines","problem"]}}