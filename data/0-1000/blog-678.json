{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":false,"creationTimeSeconds":1284757483,"rating":6,"authorHandle":"RAD","modificationTimeSeconds":1284805239,"id":678,"title":"Codeforces Beta Round #28 (Problem D Tutorial)","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e\u003cfont face\u003d\"Arial, sans-serif\"\u003e\u003cspan style\u003d\"line-height: 21.0px;\"\u003e\u003c/span\u003e\u003c/font\u003e\u003c/p\u003e\u003cfont face\u003d\"Arial, sans-serif\"\u003e\u003cp\u003e\u003cspan style\u003d\"line-height: 18.0px;\"\u003e\u003c/span\u003e\u003c/p\u003e\u003cp\u003e\u003c/p\u003e\u003cp\u003e\u003c/p\u003e\u003cp\u003e\u003c/p\u003e\u003cp\u003eLet\u0027s divide all trucks into the classes by \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e + \u003ci\u003er\u003c/i\u003e + \u003ci\u003ec\u003c/i\u003e\u003c/span\u003e. It can be seen, that all the trucks that can be included in the answer are in the same class.\u003c/p\u003e\u003cp\u003eLet\u0027s solve the problem separately for each class. Consider all trucks from same class in the order they appear, and keep the following value: z[k] \u003d the maximum sum that you can get, if the last taken truck has \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003er\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e \u003d \u003ci\u003ek\u003c/i\u003e\u003c/span\u003e. Consider the truck number \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e - there are 2 options to update z:\u003c/p\u003e\u003cp\u003eIt can update z[\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003er\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e] with \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ez\u003c/i\u003e[\u003ci\u003er\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e + \u003ci\u003ec\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e] + \u003ci\u003ev\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e, i. e. continue the motorcade, which has last truck with \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003er\u003c/i\u003e \u003d \u003ci\u003er\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e + \u003ci\u003ec\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e. (For neighboring trucks should be true the following: \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003er\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eprev\u003c/i\u003e\u003c/sub\u003e  \u003d  \u003ci\u003er\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e  +  \u003ci\u003ec\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e)\u003c/p\u003e\u003cp\u003eIf \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e \u003d 0\u003c/span\u003e, it can update z[\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003er\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e] with \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e, i. e. became the first truck in the new motorcade. (For the first truck should be true the following: \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e \u003d 0\u003c/span\u003e)\u003c/p\u003e\u003cp\u003eThe answer will be in z[0].\u003c/p\u003e\u003cp\u003eTo restore the trucks included in the answer, we can keep with the maximal sum in z the index of last truck that updated this sum. Also we store the ancestor p for each truck that updated something in z. This ancestor is calculated when we consider \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e-th truck and doesn\u0027t change further: p[i] \u003d -1 if truck \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e became beginning of the motorcade, otherwise p[i] \u003d last truck that updated z[\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003er\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e  +  \u003ci\u003ec\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e].\u003c/p\u003e\u003cp\u003eWe start restore of the answer from last truck updated z[0]. After that we restore everything using only p.\u003c/p\u003e\u003c/font\u003e\u003cp\u003e\u003cspan\u003e\u003cspan style\u003d\"font-size: 12.0pt;line-height: 115.0%;font-family: Arial , sans-serif;color: black;\"\u003e\u003c/span\u003e\u003c/span\u003e\u003c/p\u003e\u003c/div\u003e","tags":["beta round # 28","codeforces","tutorial"]}}