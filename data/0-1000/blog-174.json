{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1268540971,"rating":16,"authorHandle":"wrong","modificationTimeSeconds":1268582876,"id":174,"title":"TopCoder High School Round3","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eI participated in TopCoder High School Round3(TCHS2010 Round3). This blog is in codeforces, but I have English blog only here. So I will write some reports of other competitions.\u003c/p\u003e\u003cp\u003e\u003cbr /\u003e\u003c/p\u003e\u003ch2\u003eEasy(250)\u003c/h2\u003e\u003cp\u003e\u003cstrong\u003eProblem Summary\u003c/strong\u003e\u003cstrong\u003e\u003cbr /\u003e\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eThere is a rectangular grid which has size \u003cstrong\u003ewidth\u003c/strong\u003ex\u003cstrong\u003eheight\u003c/strong\u003e. Starting in the top left cell, tracing the border of the grid in clockwise order, writing a string (\u003cstrong\u003ephrase\u003c/strong\u003e + \u0026quot;.\u0026quot;). Then you are to calculate subsection of this grid which has its top left corner at (\u003cstrong\u003ex1\u003c/strong\u003e, \u003cstrong\u003ey1\u003c/strong\u003e), and its bottom right corner at (\u003cstrong\u003ex2\u003c/strong\u003e, \u003cstrong\u003ey2\u003c/strong\u003e).\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eSolution\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eIt\u0027s easy to calculate what is the letter in position (x, y). So you can simply iterate x from x1 to x2, and y from y1 to y2.\u003c/p\u003e\u003cp\u003e\u003cbr /\u003e\u003c/p\u003e\u003ch2\u003eMedium(550)\u003c/h2\u003e\u003cp\u003e\u003cstrong\u003eProblem Summary\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eThere is a paper which a maze is written on both side. There is one start and one goal. You can fold and unfold the paper on vertical line. You are to calculate the minimum required steps to solve the maze. \u003c/p\u003e\u003cp\u003e\u003cstrong\u003eSolution\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eThe solution is BFS. But implementation is too hard.\u003c/p\u003e\u003cp\u003e\u003cbr /\u003e\u003c/p\u003e\u003ch2\u003eHard(950)\u003c/h2\u003e\u003cp\u003e\u003cstrong\u003eProblem Summary\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eYou have \u003cstrong\u003etwoBricks \u003c/strong\u003ebricks which have 2 units wide and 1 unit high, and \u003cstrong\u003ethreeBricks\u003c/strong\u003e bricks which have 3 units wide and 1 unit high. Then you are to build perfect rectangle with your bricks. How many kinds can you make rectangles?\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eSolution\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eFirst, consider how many rectangle which has width W and height 1 can be made. If you know this value, the answer is sum of these values iterating W from 1 to 500000. And you can calculate this value with binary search.\u003c/p\u003e\u003c/div\u003e","tags":["algorithms","tchs","topcoder"]}}