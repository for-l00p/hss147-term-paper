{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":false,"creationTimeSeconds":1287510728,"rating":2,"authorHandle":"natalia","modificationTimeSeconds":1287578469,"id":768,"title":"Codeforces Beta Round #36 (Problem B solution)","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003eIn author\u0027s solution the fractal is built by a recursive function. Let \u0027\u0027a\u0027\u0027 be a square \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/sup\u003e × \u003ci\u003en\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/sup\u003e\u003c/span\u003e  result matrix. Write the recursive function  fractal(x, y, k) filling a square part of the matrix with an upper left corner in (x, y) and a length of the side \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/sup\u003e\u003c/span\u003e, drawing the fractal of depth \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e. In case k \u003d 0 put \u0027\u0027.\u0027\u0027 at the current position. Otherwise you have to divide the part of the matrix into \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e\u003c/span\u003e square parts with size  \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ek\u003c/i\u003e - 1\u003c/sup\u003e × \u003ci\u003en\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ek\u003c/i\u003e - 1\u003c/sup\u003e\u003c/span\u003e, and fill them according to the model. If the corresponding symbol in the model is \u0027\u0027*\u0027\u0027, fill the square with symbols \u0027\u0027*\u0027\u0027,  otherwise execute fractal(x1, y1, k-1) for (x1, y1) being the coordinates of the upper left corner of the new square.\u003cbr /\u003e\u003cbr /\u003e\u003cdiv\u003e\u003cspan style\u003d\"border-collapse: collapse;font-family: verdana , arial , sans-serif;font-size: 12.0px;\"\u003e\u003ca class\u003d\"rated-user user-blue\" href\u003d\"http://codeforces.ru/profile/kdalex\" style\u003d\"font-family: arial;text-decoration: none;font-weight: bold;color: rgb(0,0,204);\" title\u003d\"Лейтенант kdalex\"\u003ekdalex\u003c/a\u003e offers a solution (\u003c/span\u003e\u003ca href\u003d\"http://codeforces.ru/blog/entry/764\"\u003ehttp://codeforces.ru/blog/entry/764\u003c/a\u003e), which is easier in implementation. Consider all positions (x, y). If for some \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ec\u003c/i\u003e \u003d \u003ci\u003en\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ed\u003c/i\u003e\u003c/sup\u003e\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e0 ≤ \u003ci\u003ed\u003c/i\u003e \u0026lt; \u003ci\u003ek\u003c/i\u003e\u003c/span\u003e the square ((x/c)%n, (y/c)%n) of the model is black then (x, y) must be black, otherwise it is white. It is easy to check that if the square ((x/c)%n, (y/c)%n) is black for d \u003d k - 1 , then we have that the current position (x, y) is in the black square after the first step of the algorithm. If ((x/c)%n, (y/c)%n) is black for d \u003d k - 2, it happens after the second step, etc.\u003c/div\u003e\u003c/div\u003e","tags":["beta round #36","codeforces","tutorial"]}}