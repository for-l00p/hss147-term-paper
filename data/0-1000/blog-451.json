{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":false,"creationTimeSeconds":1276202630,"rating":30,"authorHandle":"tourist","modificationTimeSeconds":1276289435,"id":451,"title":"Codeforces Beta Round #17 Tutorial","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003ca href\u003d\"http://codeforces.ru/blog/entry/447\"\u003eContest discussion\u003c/a\u003e\u003cbr /\u003e\u003cb\u003e\u003cbr /\u003eProblem A. Noldbach problem\u003cbr /\u003e\u003cbr /\u003e\u003c/b\u003eTo solve this problem you were to find prime numbers in range \u003cspan class\u003d\"tex-span\"\u003e[2..\u003ci\u003eN\u003c/i\u003e]\u003c/span\u003e. The constraints were pretty small, so you could do that in any way - using the Sieve of Eratosthenes or simply looping over all possible divisors of a number.\u003cbr /\u003eTake every pair of neighboring prime numbers and check if their sum increased by \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e is a prime number too. Count the number of these pairs, compare it to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eK\u003c/i\u003e\u003c/span\u003e and output the result.\u003cbr /\u003e\u003cbr /\u003e\u003cb\u003eProblem B. Hierarchy\u003c/b\u003e\u003cbr /\u003e \u003cbr /\u003eNote that if employee, except one, has exactly one supervisor, then our hierarchy will be tree-like for sure.\u003cbr /\u003eFor each employee consider all applications in which he appears as a subordinate. If for more than one employee there are no such applications at all, it\u0027s obvious that \u003cspan class\u003d\"tex-span\"\u003e - 1\u003c/span\u003e is the answer. In other case, for each employee find such an application with minimal cost and add these costs to get the answer.\u003cbr /\u003eAlternatively, you could use Kruskal\u0027s algorithm finding a minimum spanning tree for a graph. But you should be careful so that you don\u0027t assign the second supervisor to some employee.\u003cbr /\u003eAnd yes, the employees\u0027 qualifications weren\u0027t actually needed to solve this problem :)\u003cbr /\u003e\u003cbr /\u003e\u003cb\u003eProblem C. Balance\u003cbr /\u003e\u003c/b\u003e\u003cbr /\u003eConsider the input string \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003c/span\u003e of length \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e. Let\u0027s perform some operations from the problem statement on this string; suppose we obtained some string \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u003c/span\u003e. Let \u003ci\u003ecompression\u003c/i\u003e of string \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eX\u003c/i\u003e\u003c/span\u003e be a string \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eX\u003c/i\u003e\u0027\u003c/span\u003e obtained from \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eX\u003c/i\u003e\u003c/span\u003e by replacing all consecutive equal letters with one such letter. For example, if \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eS\u003c/i\u003e \u003d \u0026quot;\u003ci\u003eaabcccbbaa\u003c/i\u003e\u0026quot;\u003c/span\u003e, then its compression \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eS\u003c/i\u003e\u0027 \u003d \u0026quot;\u003ci\u003eabcba\u003c/i\u003e\u0026quot;\u003c/span\u003e.\u003cbr /\u003eNow, consider compressions of strings \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u003c/span\u003e - \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u0027\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u0027\u003c/span\u003e. It can be proven that if \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u003c/span\u003e can be obtained from some string \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003c/span\u003e using some number of operations from the problem statement, then \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u0027\u003c/span\u003e is a subsequence of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u0027\u003c/span\u003e, and vice versa - if for any strings \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u003c/span\u003e of equal length \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u0027\u003c/span\u003e is a subsequence of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u0027\u003c/span\u003e, then string \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u003c/span\u003e can be obtained from string \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003c/span\u003e using some number of operations.\u003cbr /\u003eIntuitively you can understand it in this manner: suppose we use some letter \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/span\u003e from position \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003c/span\u003e in order to put letter \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/span\u003e at positions \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e..\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u003c/span\u003e (again, using problem statement operations). Then we can\u0027t use letters at positions \u003cspan class\u003d\"tex-span\"\u003e1..\u003ci\u003ei\u003c/i\u003e - 1\u003c/span\u003e of string \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003c/span\u003e in order to influence positions \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e + 1..\u003ci\u003en\u003c/i\u003e\u003c/span\u003e of string \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u003c/span\u003e in any way; also, we can\u0027t use letters at positions \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e + 1..\u003ci\u003en\u003c/i\u003e\u003c/span\u003e of string \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003c/span\u003e in order to influence positions \u003cspan class\u003d\"tex-span\"\u003e1..\u003ci\u003ej\u003c/i\u003e - 1\u003c/span\u003e of string \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u003c/span\u003e.\u003cbr /\u003e\u003cbr /\u003eNow we have some basis for our solution, which will use dynamic programming. We\u0027ll form string \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u003c/span\u003e letter by letter, considering the fact that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u0027\u003c/span\u003e should still be a subsequence of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u0027\u003c/span\u003e (that is, we\u0027ll search for \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u0027\u003c/span\u003e in \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u0027\u003c/span\u003e while forming \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u003c/span\u003e). For this matter we\u0027ll keep some position \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e in string \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u0027\u003c/span\u003e denoting where we stopped searching \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u0027\u003c/span\u003e in \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u0027\u003c/span\u003e at the moment, and three variables \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ekA\u003c/i\u003e\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ekB\u003c/i\u003e\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ekC\u003c/i\u003e\u003c/span\u003e, denoting the frequences of characters \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ec\u003c/i\u003e\u003c/span\u003e respectively in string \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u003c/span\u003e. Here are the transitions of our DP:\u003cbr /\u003e1) The next character of string \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u003c/span\u003e is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/span\u003e. Then we may go from the  state \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ei\u003c/i\u003e, \u003ci\u003ekA\u003c/i\u003e, \u003ci\u003ekB\u003c/i\u003e, \u003ci\u003ekC\u003c/i\u003e)\u003c/span\u003e to the state \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003enext\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e, \u0027\u003ci\u003ea\u003c/i\u003e\u0027\u003c/sub\u003e, \u003ci\u003ekA\u003c/i\u003e + 1, \u003ci\u003ekB\u003c/i\u003e, \u003ci\u003ekC\u003c/i\u003e)\u003c/span\u003e.\u003cbr /\u003e2) The next character of string \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u003c/span\u003e is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/span\u003e. Then we may go from the  state \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ei\u003c/i\u003e, \u003ci\u003ekA\u003c/i\u003e, \u003ci\u003ekB\u003c/i\u003e, \u003ci\u003ekC\u003c/i\u003e)\u003c/span\u003e to the state \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003enext\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e, \u0027\u003ci\u003eb\u003c/i\u003e\u0027\u003c/sub\u003e, \u003ci\u003ekA\u003c/i\u003e, \u003ci\u003ekB\u003c/i\u003e + 1, \u003ci\u003ekC\u003c/i\u003e)\u003c/span\u003e.\u003cbr /\u003e3) The next character of string \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u003c/span\u003e is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ec\u003c/i\u003e\u003c/span\u003e. Then we may go from the  state \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ei\u003c/i\u003e, \u003ci\u003ekA\u003c/i\u003e, \u003ci\u003ekB\u003c/i\u003e, \u003ci\u003ekC\u003c/i\u003e)\u003c/span\u003e to the state \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003enext\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e, \u0027\u003ci\u003ec\u003c/i\u003e\u0027\u003c/sub\u003e, \u003ci\u003ekA\u003c/i\u003e, \u003ci\u003ekB\u003c/i\u003e, \u003ci\u003ekC\u003c/i\u003e + 1)\u003c/span\u003e.\u003cbr /\u003eWhere \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003enext\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e, \u003ci\u003ex\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e is equal to minimal \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e such that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e ≥ \u003ci\u003ei\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u0027\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e \u003d \u003ci\u003ex\u003c/i\u003e\u003c/span\u003e (that is, the nearest occurrence of character \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e in \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u0027\u003c/span\u003e, starting from position \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e). Clearly, if in some case \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003enext\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e, \u003ci\u003ex\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e is undefined, then the corresponding transition is impossible.\u003cbr /\u003eHaving calculated \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e(\u003ci\u003ei\u003c/i\u003e, \u003ci\u003ekA\u003c/i\u003e, \u003ci\u003ekB\u003c/i\u003e, \u003ci\u003ekC\u003c/i\u003e)\u003c/span\u003e, it\u0027s easy to find the answer: \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/24/66/2466ca85c80233a0df685647c637880dd4b056ee.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e for all triples \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ekA\u003c/i\u003e\u003c/span\u003e,  \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ekB\u003c/i\u003e\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ekC\u003c/i\u003e\u003c/span\u003e for which the balance condition is fulfilled.\u003cbr /\u003e\u003cbr /\u003eSuch a solution exceeds time and memory limits. Note that if string \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u003c/span\u003e is going to be balanced, then \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ekA\u003c/i\u003e, \u003ci\u003ekB\u003c/i\u003e, \u003ci\u003ekC\u003c/i\u003e ≤ (\u003ci\u003en\u003c/i\u003e + 2) / 3\u003c/span\u003e, so the number of states can be reduced up to 27 times. But it\u0027s also possible to decrease memory usage much storing matrix \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e\u003c/span\u003e by layers, where each layer is given by some value of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ekA\u003c/i\u003e\u003c/span\u003e (or \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ekB\u003c/i\u003e\u003c/span\u003e or \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ekC\u003c/i\u003e\u003c/span\u003e). It\u0027s possible since the value of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ekA\u003c/i\u003e\u003c/span\u003e is increased either by \u003cspan class\u003d\"tex-span\"\u003e0\u003c/span\u003e or by \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e in each transition.\u003cbr /\u003e\u003cbr /\u003eThe overall complexity is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e4\u003c/sup\u003e)\u003c/span\u003e with a quite small constant.\u003cbr /\u003e\u003cb\u003e\u003cbr /\u003eProblem D. Notepad\u003c/b\u003e\u003cbr /\u003e\u003cbr /\u003eThe answer to the problem is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003en\u003c/i\u003e - 1\u003c/sup\u003e * (\u003ci\u003eb\u003c/i\u003e - 1)\u003c/span\u003e mod \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ec\u003c/i\u003e\u003c/span\u003e. The main thing you should be able to do in this problem - count the value of  \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003eB\u003c/i\u003e\u003c/sup\u003e\u003c/span\u003e mod \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eC\u003c/i\u003e\u003c/span\u003e for some long numbers \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u003c/span\u003e and a short number \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eC\u003c/i\u003e\u003c/span\u003e. Simple exponentiation by squaring exceeds time limit since to converse of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u003c/span\u003e to binary you need about \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(|\u003ci\u003eB\u003c/i\u003e|\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e)\u003c/span\u003e operations, where \u003cspan class\u003d\"tex-span\"\u003e|\u003ci\u003eB\u003c/i\u003e|\u003c/span\u003e is the number of digits in decimal representation of number \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u003c/span\u003e.\u003cbr /\u003eThe first thing to do is to transform \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003c/span\u003e to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003c/span\u003e mod \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eC\u003c/i\u003e\u003c/span\u003e. It isn\u0027t difficult to understand that this transformation doesn\u0027t change the answer.\u003cbr /\u003eLet\u0027s represent \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eC\u003c/i\u003e\u003c/span\u003e as \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eC\u003c/i\u003e \u003d \u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ek\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/sup\u003e\u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ek\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003c/sup\u003e...\u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/sub\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ek\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/sub\u003e\u003c/sup\u003e\u003c/span\u003e, where \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e are different prime numbers.\u003cbr /\u003eCalculate \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003et\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e \u003d \u003ci\u003eA\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003eB\u003c/i\u003e\u003c/sup\u003e\u003c/span\u003e mod \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ek\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/sup\u003e\u003c/span\u003e for all \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e in the following way. There are two possible cases:\u003cbr /\u003e1) \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003c/span\u003e is not divisible by \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e: then \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e are coprime, and you can use \u003ca href\u003d\"http://en.wikipedia.org/wiki/Euler%27s_theorem\"\u003eEuler\u0027s theorem\u003c/a\u003e: \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003eB\u003c/i\u003e\u0027\u003c/sup\u003e \u003d \u003ci\u003eA\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003eB\u003c/i\u003e\u003c/sup\u003e\u003c/span\u003e (mod \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eC\u003c/i\u003e\u003c/span\u003e), where \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u0027 \u003d \u003ci\u003eB\u003c/i\u003e\u003c/span\u003e mod \u003cspan class\u003d\"tex-span\"\u003eφ(\u003ci\u003eC\u003c/i\u003e)\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003eφ(\u003ci\u003eC\u003c/i\u003e)\u003c/span\u003e is Euler\u0027s totient function;\u003cbr /\u003e2) \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003c/span\u003e is divisible by \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e: then if \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e ≥ \u003ci\u003ek\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e then \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003et\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e \u003d \u003ci\u003eA\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003eB\u003c/i\u003e\u003c/sup\u003e\u003c/span\u003e mod \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ek\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/sup\u003e \u003d 0\u003c/span\u003e, and if \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e \u0026lt; \u003ci\u003ek\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e then you can calculate \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003et\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e in any way since B is very small.\u003cbr /\u003eSince all \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ek\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/sup\u003e\u003c/span\u003e are pairwise coprime you may use \u003ca href\u003d\"http://en.wikipedia.org/wiki/Chinese_remainder_theorem\"\u003echinese remainder theorem\u003c/a\u003e to obtain the answer.\u003cbr /\u003e\u003cbr /\u003eYou can also use Euler\u0027s theorem directly. Note that if for some \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e, \u003ci\u003eB\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e ≥ 29\u003c/span\u003e you know that \u003cspan class\u003d\"tex-span\"\u003e|\u003ci\u003eB\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e - \u003ci\u003eB\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e|\u003c/span\u003e mod \u003cspan class\u003d\"tex-span\"\u003eφ(\u003ci\u003eC\u003c/i\u003e) \u003d 0\u003c/span\u003e, then all \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003et\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e for them will be the same (\u003cspan class\u003d\"tex-span\"\u003e29\u003c/span\u003e is the maximal possible value of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e). Using that you may reduce \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u003c/span\u003e so that it becomes relatively small and obtain the answer using exponentiation by squaring.\u003cbr /\u003e\u003cbr /\u003eThere is another solution used by many contestants. Represent \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u003c/span\u003e as \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e \u003d \u003ci\u003ed\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e0\u003c/sub\u003e + 10\u003ci\u003ed\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e + 10\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e\u003ci\u003ed\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e + ... + 10\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/sup\u003e\u003ci\u003ed\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e, where \u003cspan class\u003d\"tex-span\"\u003e0 ≤ \u003ci\u003ed\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e ≤ 9\u003c/span\u003e (in fact \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ed\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e is the \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e-th digit of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u003c/span\u003e counting from the last). Since \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ex\u003c/i\u003e + \u003ci\u003ey\u003c/i\u003e\u003c/sup\u003e \u003d \u003ci\u003ea\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/sup\u003e· \u003ci\u003ea\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ey\u003c/i\u003e\u003c/sup\u003e\u003c/span\u003e, you know that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003eB\u003c/i\u003e\u003c/sup\u003e \u003d \u003ci\u003eA\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ed\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e0\u003c/sub\u003e\u003c/sup\u003e· \u003ci\u003eA\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e10\u003ci\u003ed\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/sup\u003e· ...· \u003ci\u003eA\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e10\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/sup\u003e\u003ci\u003ed\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/sub\u003e\u003c/sup\u003e\u003c/span\u003e. The values of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eu\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e \u003d \u003ci\u003eA\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e10\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sup\u003e\u003c/sup\u003e\u003c/span\u003e can be obtained by successive exponentiation (that is, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eu\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e \u003d \u003ci\u003eu\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e - 1\u003c/sub\u003e\u003csup class\u003d\"upper-index\"\u003e10\u003c/sup\u003e\u003c/span\u003e); if you have \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e10\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sup\u003e\u003c/sup\u003e\u003c/span\u003e, it\u0027s easy to get \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e10\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sup\u003e\u003ci\u003ed\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/sup\u003e \u003d \u003ci\u003eu\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ed\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/sup\u003e\u003c/span\u003e. The answer is the product above (modulo \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eC\u003c/i\u003e\u003c/span\u003e, of course).\u003cbr /\u003e\u003cbr /\u003e\u003cb\u003eProblem E. Palisection\u003c/b\u003e\u003cbr /\u003e\u003cb\u003e\u003cbr /\u003e\u003c/b\u003eThe first thing to do is to find all subpalindromes in the given string. For this you may use a beautiful algorithm described for example \u003ca href\u003d\"http://www.akalin.cx/2007/11/28/finding-the-longest-palindromic-substring-in-linear-time/\"\u003ehere\u003c/a\u003e. In short, this algorithm find the maximal length of a subpalindrome with its center either at position \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e of the string or between positions \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e + 1\u003c/span\u003e for each possible placement of the center.\u003cbr /\u003eFor example, suppose that the maximal subpalindrome length with center at position \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e is \u003cspan class\u003d\"tex-span\"\u003e5\u003c/span\u003e; it means that there are three subpalindromes with center at \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e, with lengths \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e (\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e..\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e), \u003cspan class\u003d\"tex-span\"\u003e3\u003c/span\u003e (\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e - 1..\u003ci\u003ei\u003c/i\u003e + 1\u003c/span\u003e) and \u003cspan class\u003d\"tex-span\"\u003e5\u003c/span\u003e (\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e - 2..\u003ci\u003ei\u003c/i\u003e + 2\u003c/span\u003e). In general, all starting and finishing positions of subpalindromes with a fixed center lie on some interval of positions, which is pretty easy to find.\u003cbr /\u003eLet\u0027s find for each position \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e the value of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003estart\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e, which is equal to the number of subpalindromes starting at position \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e. All these values can be found in linear time. Let\u0027s create an auxiliary array \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e. If after processing a position in the string some new pack of subpalindromes was found and they start at positions \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e..\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e, then increase the value of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e by \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e, and decrease the value of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e + 1\u003c/sub\u003e\u003c/span\u003e by \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e. Now \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/23/ec/23ec285f3e30936d1fcf0eb3ff9676d195cb739f.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. Proving this fact is left as an exercise to the reader :)\u003cbr /\u003eIn a similar way it\u0027s possible to calculate \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003efinish\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e, which is equal to the number of subpalindromes finishing at position \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e.\u003cbr /\u003eSince it\u0027s easy to count the total number of subpalindromes, let\u0027s find the number of \u003cb\u003enon\u003c/b\u003e-intersecting pairs of subpalindromes and subtract this number from the total number of pairs to obtain the answer. Note that if two subpalindromes don\u0027t intersect then one of them lies strictly to the left of the other one in the string. Then, the number of non-intersecting pairs of subpalindromes is equal to: \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/c3/1d/c31d2a8686d4b87a84801744c9001bd3a41c0ff4.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003cbr /\u003eThis can be calculated in linear time if the value of \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/38/65/386508d0ed7bdb3e1b2f4846ae1dd7399e5318d2.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e is recalculated by addition of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003efinish\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e before moving from position \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e to position \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e + 1\u003c/span\u003e.\u003cbr /\u003eThe overall complexity of the algorithm is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e)\u003c/span\u003e.\u003c/div\u003e","tags":["beta round #17","codeforces","contest"]}}