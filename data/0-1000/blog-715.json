{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1286020299,"rating":22,"authorHandle":"stoundmire","modificationTimeSeconds":1286020399,"id":715,"title":"Beta Round 32","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003eProblem A is quite straight-forward. You can simply enumerate all pairs using two for loops since N is not greater than 1000. Or you can sort the list and for every Ai, find the first Aj such that Aj-Ai\u0026gt;d in the range [i+1,N] using binary search.\u003cbr /\u003e\u003cbr /\u003eProblem B doesn\u0027t need an array at all. You can consume a single character at a time using getchar and then output a \u00270\u0027 if the character is \u0027.\u0027 or consume another character to determine whether to output \u00271\u0027 or \u00272\u0027 otherwise.\u003cbr /\u003e\u003cbr /\u003eProblem D requires you to scan the map multiple times with increasing radii.\u003cbr /\u003e\u003cbr /\u003eProblem C is a little tricky. Two cells are reachable from each other if and only if their horizontal or vertical distance is exactly S if they are on the same row or column, which is identical to the property that their indexes of one dimension is the same while those of the other are congruent modulo S. So you are to count the number of remainders modulo S whose occurrence is more frequent than others, which equals N%S when S divides N or N when not for rows. The number of such occurrences is the ceiling of N/S, the smallest integer no smaller than N/S. Multiplying the product of these two numbers for rows and that of the other two for columns together gives the answer.\u003cbr /\u003eI failed the test of this problem for a silly typing error.\u003cbr /\u003e\u003cbr /\u003eI will write solutions for Problem E after I solve it. My knowledge and skills of computing geometry was poor, so I didn\u0027t have enough time coding during the contest.\u003cbr /\u003e\u003cbr /\u003eThis is the first time I participated in the contest, for previous contests were always at midnight.\u003cbr /\u003eReally enjoy it.\u003c/div\u003e","tags":["analyse","codeforces format","contest"]}}