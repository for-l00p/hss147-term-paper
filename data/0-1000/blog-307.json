{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1271357514,"rating":0,"authorHandle":"vdmedragon","modificationTimeSeconds":1271371069,"id":307,"title":"CF10","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e1. Easy but need to careful.\u003cbr /\u003e\u003cbr /\u003e2. One can easily stuck with the question the algorithm O(N*K*K*K) is TLE, so i think about bruto-force solution \u0026amp; some tricks to reduce a factor K: filling the table and using accumulative sum, it helps reduce the complexity to O(N*K*K) and AC.\u003cbr /\u003e\u003cbr /\u003e3. Ok, they require to calculate the number of (A,B,C) with 1\u0026lt;\u003dA,B,C\u0026lt;\u003dN \u0026amp;\u0026amp; A!\u003dB*C \u0026amp;\u0026amp; d(A)\u003dd(d(B)*d(C)).\u003cbr /\u003e\u003cbr /\u003eso for each number A from 1 to N, i calculate the number of pairs (B,C) which d(d(B)*d(C))\u003dd(A); and minus the number of divisors of A.\u003cbr /\u003e\u003cbr /\u003eHowever, wrong initialization leads to WA. It needs to correct one line of the code.  After correct it, it passes in 80mss.\u003cbr /\u003e\u003cbr /\u003eBut a bruto-force to calculate the numbers of divisor of a number x  (go from 1 to y\u003dsqrt(x)) can leads to TLE? I check with N\u003d1000000 and it runs about 2,3s or more in my computer (dual core T2300). SO i use \u003cb\u003e\u0026quot;multiplicative property\u0026quot;\u003c/b\u003e to calculate these numbers but it is needed or not?\u003cbr /\u003e \u003cbr /\u003e4,5. Have not read the statements because it must be harder than C.\u003cbr /\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003eSolution for E: http://graal.ens-lyon.fr/~yrobert/algo/coins2.ps\u003cbr /\u003e\u003c/div\u003e\u003c/div\u003e","tags":["cf10","codeforces","contest"]}}