{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":false,"creationTimeSeconds":1274555078,"rating":3,"authorHandle":"MikeMirzayanov","modificationTimeSeconds":1274555446,"id":390,"title":"Google Code Jam 2010 Round 1B","locale":"ru","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eНадо сказать, что участвуя в прошлом году в TopCoder Open и Google Code Jam, я чувствовал себя значительно более уверенно, чем в этом. Дело в том, что последний год я совсем мало решал задач и участвовал в каких-либо контестах. Это разумеется отразилось и на результатах. Но как бы то ни было я собираюсь участвовать этих соревнованиях этого года и буду бороться до последнего (надеюсь, раунда).\u003cbr /\u003e\u003c/p\u003e  \u003cp\u003eТолько что закончился \u003cspan style\u003d\"\"\u003eGoogle\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan style\u003d\"\"\u003eCode\u003c/span\u003e\u003cspan\u003e \u003c/span\u003e\u003cspan style\u003d\"\"\u003eJam\u003c/span\u003e 2010 \u003cspan style\u003d\"\"\u003eRound\u003c/span\u003e 1\u003cspan style\u003d\"\"\u003eB\u003c/span\u003e, который я слил препозорнейшим образом, о чем сейчас и поведаю. Сразу отмечу, что задачи мне очень понравились, отличный отборочный раунд.\u003cbr /\u003e\u003c/p\u003e\u003ch3\u003eРезультаты \u003cfont color\u003d\"#000000\"\u003e\u003ca href\u003d\"http://code.google.com/codejam/contest/scoreboard?c\u003d635101\"\u003eздесь\u003c/a\u003e\u003c/font\u003e\u003cbr /\u003e\u003c/h3\u003e\u003ch3\u003e\u003cbr /\u003e\u003c/h3\u003e\u003cdiv\u003eА вот и разборы задач.\u003c/div\u003e  \u003ch2\u003eA. File Fix-it\u003cbr /\u003e\u003c/h2\u003e  \u003cp\u003eЯ решал эту задачу явно строя дерево директорий. Для этого я каждый путь превратил в vector\u0026lt;string\u0026gt;, разделяя его символом слэш. Вот такая функция добавляла в дерево путь \u003cspan style\u003d\"\"\u003ed\u003c/span\u003e[\u003cspan style\u003d\"\"\u003eidx\u003c/span\u003e]-\u0026gt;\u003cspan style\u003d\"\"\u003ed\u003c/span\u003e[\u003cspan style\u003d\"\"\u003eidx\u003c/span\u003e + 1]-\u0026gt;…-\u0026gt;\u003cspan style\u003d\"\"\u003ed\u003c/span\u003e[\u003cspan style\u003d\"\"\u003ed\u003c/span\u003e.\u003cspan style\u003d\"\"\u003esize\u003c/span\u003e()-1] из вершины \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003etree\u003c/i\u003e\u003c/span\u003e дерева. Так же она увеличивает глобальный счетчик \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ez\u003c/i\u003e\u003c/span\u003e созданных узлов.\u003c/p\u003e\u003cp\u003e\u003c/p\u003e\u003cpre class\u003d\"prettyprint\"\u003evoid put(const vector\u0026amp; d, int idx, int tree)\n{\n\tif (idx \u0026gt;\u003d d.size())\n    \treturn;\n\n    if (f[tree].inner.count(d[idx]) \u003d\u003d 0)\n    {\n\t    z++;\n    \tf[tree].inner[d[idx]] \u003d p++;\n    }\n\n    put(d, idx + 1, f[tree].inner[d[idx]]);\n}\n\u003c/pre\u003e\u003cp\u003eТогда задача сводиться к добавлению в дерево всех существующих путей, а затем (после \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ez\u003c/i\u003e:  \u003d 0\u003c/span\u003e) добавлению тех директорий, которые надо создать. Значение \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ez\u003c/i\u003e\u003c/span\u003e после этого (т.е. количество созданных узлов на второй фазе) будет равно ответу на задачу.\u003cbr /\u003e\u003c/p\u003e  \u003ch2\u003eB. Picking Up Chicks\u003cbr /\u003e\u003c/h2\u003e  \u003cp\u003eЭта задача меня подвела. В первом абзаце я как-то умудрился прочесть, что при обгоне обгоняющая курочка скидывает с беговой дорожке обгоняемую, но продолжает двигаться со скоростью второй. Не спрашивайте меня как я это прочел…\u003c/p\u003e  \u003cp\u003eПосле того как я понял условие правильно, то решил задачу следующим образом. Для каждой курочки я определил добежит ли она до финиша за время \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003et\u003c/i\u003e\u003c/span\u003e если ей никто не будет мешать. Если таких курочек меньше \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e, то ответ IMPOSSIBLE. Если таких курочек равно 0, то ответ 0. А вот если таких курочек больше или равно \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e и \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e положительно, то выбираем \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e ближайших к финишу курочек и будем именно их использовать для составления ответа. Пусть это множество \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003c/span\u003e. Для каждой из этих курочек посмотрим на такие, которые находятся правее ее, но не являются выбранными. Такие курочки не успевают добежать до финиша (так как не выбраны), и поэтому в них нельзя упираться. Значит всех их надо проскочить. Таким образом, ответ это сумма для каждого \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/span\u003e из \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003c/span\u003e количества курочек впереди \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/span\u003e, но не принадлежащих \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003c/span\u003e.\u003cbr /\u003e\u003c/p\u003e  \u003ch2\u003eC. Your Rank is Pure\u003cbr /\u003e\u003c/h2\u003e  \u003cp\u003eЗадачу я решал методом динамического программирования. Пусть \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ez\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e][\u003ci\u003ej\u003c/i\u003e]\u003c/span\u003e \u003d количеству подмножеств {2,3,…,\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e} которые являются хорошими (в терминах задачи) и число \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e\u003cspan\u003e \u003c/span\u003eв них имеет ранг \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e. Тогда число \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e тоже принадлежит подмножеству и может иметь любой ранг от 2 до \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e - 1\u003c/span\u003e. Допустим его ранг равен \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003et\u003c/i\u003e\u003c/span\u003e. Тогда на участке от \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e + 1\u003c/span\u003e до \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e - 1\u003c/span\u003e (включительно) нужно выбрать любое подмножество из \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e - \u003ci\u003et\u003c/i\u003e - 1 элементов, чтобы заполнить пропуск нумерации. Получаем, такую формулу:\u003cspan style\u003d\"\"\u003e\u003c/span\u003e\u003c/p\u003e  \u003cp\u003e\u003c/p\u003e\u003ccenter class\u003d\"tex-equation\"\u003e\u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/5c/c0/5cc094b1860f0f82c9b74ad17eaff8d06731fc01.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/center\u003e.  \u003cp\u003eРазумеется, все вычисления надо производить по модулю 100003 и предпосчитать таблицу биномиальных коэффициентов.\u003cspan style\u003d\"\"\u003e\u003c/span\u003e\u003c/p\u003e\u003c/div\u003e","tags":["code jam","round 1b"]}}