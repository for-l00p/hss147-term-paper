{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":false,"creationTimeSeconds":1274023565,"rating":18,"authorHandle":"izbyshev","modificationTimeSeconds":1274146306,"id":381,"title":"План описания работы команды","locale":"ru","content":"\u003cdiv class\u003d\"ttypography\"\u003eВ школьных командах постоянно возникают проблемы, связанные с организацией работы в команде и общей стратегией. Часто контест проходит \u0026quot;как получится\u0026quot;, решения принимаются неосознанно и т.д. Конечно, если это восьмиклассники, это не сильно удивительно, но обучать их всё-таки надо. \u003cbr /\u003e\u003ca href\u003d\"http://www.topcoder.com/tc?module\u003dMemberProfile\u0026amp;cr\u003d22654707\"\u003eАндрей Акиньшин\u003c/a\u003e и я решили составить заготовку плана, по которому школьники должны продумать и описать работу в своей команде. Я предлагаю вместе обсудить, дополнить и откорректировать эту заготовку, чтобы она превратилась в нечто разумное. Пока это всего лишь некий сборник правил и советов.\u003cbr /\u003eОбращаю особое внимание на то, что в основном план предназначен для не очень опытных команд, составленных из школьников, поэтому, пожалуйста, вспомните то счастливое время, когда будете комментить:)\u003cbr /\u003e \u003cp class\u003d\"header\"\u003eПлан описания работы команды:\u003c/p\u003e \u003cul\u003e  \u003cli\u003eСтратегия   \u003cul\u003e    \u003cli\u003eЧасти контеста     \u003cul\u003e       \u003cli\u003eСтарт контеста\u003cbr /\u003e       Подумать:       \u003cul\u003e        \u003cli\u003eКто пишет заготовку?\u003c/li\u003e        \u003cli\u003eКто читает задачи?\u003c/li\u003e        \u003cli\u003eКто пишет первую задачу?\u003c/li\u003e       \u003c/ul\u003e        Учесть:       \u003cul\u003e        \u003cli\u003eНачало контеста должно быть максимально быстрым\u003c/li\u003e        \u003cli\u003eЖелательно подготовить TaskList\u003c/li\u003e        \u003cli\u003eСледить за монитором: какая задача будет сдана первой\u003c/li\u003e       \u003c/ul\u003e      \u003c/li\u003e       \u003cli\u003eСередина контеста\u003cbr /\u003e       Учесть:       \u003cul\u003e        \u003cli\u003eПо-хорошему решённые задачи должны опережать кодера. Недопустима ситуация, когда кодер закончил всё кодить, а новых задач для него нету.\u003c/li\u003e        \u003cli\u003eОбновляем TaskList. Должна быть составлена более или менее чёткая стратегия на остаток олимпиады.\u003c/li\u003e        \u003cli\u003eПродолжаем следить за монитором. Пытаемся корректировать работу в соответсвии с наиболее популярными задачами.\u003c/li\u003e        \u003c/ul\u003e      \u003c/li\u003e      \u003cli\u003eКонец контеста\u003cbr /\u003e       Подумать:       \u003cul\u003e        \u003cli\u003eЗа сколько времени до конца бросаем все силы на единственную задачу\u003c/li\u003e       \u003c/ul\u003e       Учесть:       \u003cul\u003e         \u003cli\u003eНельзя в самом конце распыляться на несколько задач.\u003c/li\u003e       \u003c/ul\u003e      \u003c/li\u003e     \u003c/ul\u003e    \u003c/li\u003e    \u003cli\u003eРаспределение ролей\u003cbr /\u003e     Для каждой роли расписать всех трёх участников по приоритетам     \u003cul\u003e       \u003cli\u003eКапитан\u003c/li\u003e      \u003cli\u003eКодер\u003c/li\u003e      \u003cli\u003eАлгоритмист\u003c/li\u003e      \u003cli\u003eМатематик\u003c/li\u003e      \u003cli\u003eТестер\u003c/li\u003e      \u003cli\u003eНаблюдатель за кодером\u003c/li\u003e      \u003c/ul\u003e    \u003c/li\u003e    \u003cli\u003eРаспределение специализаций - выделить для каждого вида алгоритмов, кто из участников лучше всех может написать программу\u003cbr /\u003e     Специализации:     \u003cul\u003e      \u003cli\u003eТеория графов\u003c/li\u003e      \u003cli\u003eАлгоритмы на строках\u003c/li\u003e      \u003cli\u003eГеометрия\u003c/li\u003e       \u003cli\u003eМатематика\u003c/li\u003e      \u003cli\u003eДинамика\u003c/li\u003e      \u003cli\u003eТеория игр\u003c/li\u003e      \u003cli\u003eКомбинаторика\u003c/li\u003e      \u003cli\u003eСтруктуры данных\u003c/li\u003e      \u003cli\u003eДлинная арифметика\u003c/li\u003e      \u003c/ul\u003e    \u003c/li\u003e    \u003cli\u003eПорядок тестирования - определить основные виды тестов, составить таблицу - в какой ситуации какие тесты нужно использовать\u003cbr /\u003e     Группы тестов:     \u003cul\u003e      \u003cli\u003eМинимальные тесты\u003c/li\u003e      \u003cli\u003eВырожденные случаи\u003c/li\u003e      \u003cli\u003eМаксимальные тесты (в крайнем случае для них пишется генерилка)\u003c/li\u003e       \u003cli\u003eГраничные\u003c/li\u003e      \u003cli\u003eРандомные\u003c/li\u003e           \u003cli\u003eТесты, проверяющие конкретные случаи в задаче\u003c/li\u003e          \u003c/ul\u003e     Группы тестов для задач на графы:     \u003cul\u003e      \u003cli\u003eГраф из нуля вершин\u003c/li\u003e      \u003cli\u003eГраф из одной вершины\u003c/li\u003e       \u003cli\u003eГраф из двух вершин\u003c/li\u003e      \u003cli\u003eПолный граф\u003c/li\u003e      \u003cli\u003eПустой граф\u003c/li\u003e      \u003cli\u003eПолный граф без одного ребра\u003c/li\u003e      \u003cli\u003eГраф с одним ребром\u003c/li\u003e      \u003cli\u003eГраф, в котором все вершины выстроены в цепочку\u003c/li\u003e       \u003cli\u003eГраф, в котором вершины замкнуты в кольцо\u003c/li\u003e      \u003cli\u003eРандомный граф\u003c/li\u003e      \u003cli\u003eГраф, состоящий из нескольких компонент связности\u003c/li\u003e     \u003c/ul\u003e     Группы тестов для задач, в которых есть двумерные массивы:     \u003cul\u003e      \u003cli\u003eНеквадратный двумерный массив (n \u0026lt;\u0026gt; m)\u003c/li\u003e       \u003cli\u003eМассив, состоящий из одинаковых элементов\u003c/li\u003e      \u003cli\u003eМассив, состоящий из разных элементов\u003c/li\u003e     \u003c/ul\u003e    \u003c/li\u003e    \u003cli\u003eДействия в типовых ситуациях - подробное описание действий каждого из участников, последовательность действий.\u003cbr /\u003e     \u003cul\u003e      \u003cli\u003eПридумывать больше нечего, а компьютер занят.       \u003cul\u003e        \u003cli\u003e Продумать основную логику следующих для решения задач на бумажке\u003c/li\u003e       \u003cli\u003e Составить тесты\u003c/li\u003e       \u003cli\u003e Ещё пописать тесты\u003c/li\u003e       \u003c/ul\u003e      \u003c/li\u003e      \u003cli\u003eОтосланное решение упало на первом тесте. Что надо делать?       \u003cul\u003e        \u003cli\u003eПроверить, что при отправке задача была выбрана правильно\u003c/li\u003e        \u003cli\u003eПроверить, что входные и выходные файлы в решении названы правильно\u003c/li\u003e        \u003cli\u003eВнимательно проверить формат вывода - возможно, где-то не хватает пробела или перевода строки\u003c/li\u003e        \u003c/ul\u003e      \u003c/li\u003e      \u003cli\u003eПолучили Wrong Answer. Что надо делать?       \u003cul\u003e        \u003cli\u003eБыстро просмотреть код\u003c/li\u003e        \u003cli\u003eПрогнать программу на тупых тестах\u003c/li\u003e         \u003cli\u003eЕсли с ходу не понятно в чём ошибка - распечатать решение, отдать компьютер под другую задачу\u003c/li\u003e       \u003c/ul\u003e      \u003c/li\u003e      \u003cli\u003eПолучили Time Limit. Что надо проверить?\u003c/li\u003e       \u003cul\u003e        \u003cli\u003eНе зависают ли циклы\u003c/li\u003e        \u003cli\u003eНедостаточно оптимизированный алгоритм\u003c/li\u003e         \u003cli\u003eНеверный алгоритм, нужно более оптимальное решение\u003c/li\u003e       \u003c/ul\u003e      \u003cli\u003eПолучили Presentation Error. Что надо проверить?\u003c/li\u003e       \u003cul\u003e        \u003cli\u003eФормат вывода\u003c/li\u003e       \u003c/ul\u003e      \u003cli\u003eПолучили Runtime Error. Что надо проверить?\u003c/li\u003e        \u003cul\u003e        \u003cli\u003eВыход за границы массива\u003c/li\u003e        \u003cli\u003eДеление на ноль\u003c/li\u003e        \u003cli\u003eКорень из отрицательного числа\u003c/li\u003e        \u003cli\u003eТригонометрические функции, взятые от некорректных значений\u003c/li\u003e               \u003cli\u003eБесконечная рекурсия\u003c/li\u003e        \u003cli\u003eКривое чтение\u003c/li\u003e        \u003c/ul\u003e      \u003cli\u003eПолучили Output Limit. Что надо проверить?\u003c/li\u003e      \u003cli\u003eПолучили Memory Limit. Что надо проверить?       \u003cul\u003e        \u003cli\u003eПроверить выделение памяти под массивы\u003c/li\u003e        \u003cli\u003eПроверить рекурсию\u003c/li\u003e              \u003c/ul\u003e       \u003c/li\u003e      \u003cli\u003eНикак не можем найти ошибку. Что надо проверить?\u003c/li\u003e       \u003cul\u003e        \u003cli\u003eПроверить типы данных\u003c/li\u003e        \u003cli\u003eЗануление переменных\u003c/li\u003e        \u003cli\u003eПравильность индексов при обращении к массивам\u003c/li\u003e         \u003cli\u003eОбратить внимание на Warning\u0027и\u003c/li\u003e        \u003cli\u003eПроверить чтение и вывод данных\u003c/li\u003e               \u003cli\u003eГраницы массивов и соблюдение этих границ в программе\u003c/li\u003e        \u003cli\u003eПрочитать условие задачи ещё раз. Возможно, это имеет смысл сделать человку, не участвовавшему в решении\u003c/li\u003e        \u003cli\u003eРассказать ключевые моменты решения остальным членам команды\u003c/li\u003e       \u003c/ul\u003e           \u003c/ul\u003e    \u003c/li\u003e   \u003c/ul\u003e   \u003c/li\u003e  \u003cli\u003eОписание существующих проблем    \u003cul\u003e    \u003cli\u003eПроблемы, связанные со знанием алгоритмов \u003c/li\u003e    \u003cli\u003eПроблемы, связанные со стратегией \u003c/li\u003e   \u003c/ul\u003e  \u003c/li\u003e  \u003cli\u003eСтандарт стиля кода    \u003cul\u003e     \u003cli\u003eОтступы\u003c/li\u003e    \u003cli\u003eCтандартные названия для процедур и функций\u003c/li\u003e    \u003cli\u003eCтандартные названия для переменных     \u003cul\u003e      \u003cli\u003eНазвания для массивов в зависимости от назначения\u003c/li\u003e      \u003cli\u003eНазвания для переменных некоторого конкретного назначения\u003c/li\u003e     \u003c/ul\u003e     \u003c/li\u003e    \u003cli\u003eСтиль для объединения в названии нескольких слов     \u003cul\u003e      \u003cli\u003eУпотребление подчёркиваний\u003c/li\u003e      \u003cli\u003eУпотребление заглавных букв\u003c/li\u003e          \u003c/ul\u003e     Хорошие примеры:     \u003cul\u003e      \u003cli\u003estackSize\u003c/li\u003e       \u003cli\u003estack_size\u003c/li\u003e      \u003cli\u003eStackSize\u003c/li\u003e          \u003c/ul\u003e     Плохие примеры:     \u003cul\u003e      \u003cli\u003estacksize\u003c/li\u003e      \u003cli\u003eSTACKSIZE\u003c/li\u003e      \u003cli\u003estackSIZE\u003c/li\u003e       \u003cli\u003estsz\u003c/li\u003e      \u003cli\u003esizeofmygoodstack\u003c/li\u003e     \u003c/ul\u003e    \u003c/li\u003e    \u003cli\u003eCтандартные кодерские фичи\u003c/li\u003e    \u003c/ul\u003e  \u003c/li\u003e  \u003cli\u003eРасписание тренировок   \u003cul\u003e     \u003cli\u003eРасписание тренировок на неделю\u003c/li\u003e    \u003cli\u003eТематические тренировки\u003c/li\u003e    \u003cli\u003eНаборы задач для тренировок\u003c/li\u003e      \u003c/ul\u003e  \u003c/li\u003e \u003c/ul\u003e\u003c/div\u003e","tags":["командная работа","стратегия"]}}