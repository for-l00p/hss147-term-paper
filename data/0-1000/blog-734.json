{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":false,"creationTimeSeconds":1286480971,"rating":-9,"authorHandle":"XTY","modificationTimeSeconds":1286480971,"id":734,"title":"Codeforces Beta Round #33. Разбор B","locale":"ru","content":"\u003cdiv class\u003d\"ttypography\"\u003eРешение сложностью O(length(string) * Z), где Z \u003d 26. Для решения данной задачи, необходимо было знать алгоритм Дэйсктры, а лучше всего Флойда, т. к. Z \u003d 26, то предпроцессинг за O(Z^3) - не сильно усложнит время выполнения нашей программы. Итак, после чтения строк необходимо сравнить длины строк, и если они не равны, то можно смело выводить -1, т.к. существовать не может. Далее во время считывания символом на которые можно производить замены, ставим в соответствие дугу соответствующей длины, ясно что если при чтении используются только маленькие латинские буквы, то количество вершин в нашем графе будет \u0026lt;\u003d 26 (количество маленьких букв в латинице). После того как мы считали наши переходы следует запустить Флойда(алгоритм поиска кратчайшего пути из одной вершины в другую). После того как мы знаем минимальные стоимости наших замен, то смело пробегаем строкам и ищем на какой символов нам выгоднее всего заменить, его стоимость прибавляем к нашему ответу, при этом изменяя содержимое наших строк. Но если же данной замены не существует, то тоже выводим -1 и прекращаем выполнение нашей программы. Вот в принципе и все.\u003c/div\u003e","tags":["codeforces round 33"]}}