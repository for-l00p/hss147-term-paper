{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":false,"creationTimeSeconds":1266875416,"rating":0,"authorHandle":"OSt","modificationTimeSeconds":1267087911,"id":92,"title":"One interesting solution to one interesting problem","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003eLast weekends didn’t promise anything   unusual. By an old tradition I won the programming competition among   the students of the Vologda State Pedagogical University. \u003cbr /\u003e   \u003cbr /\u003e  When I came back home, I soon discovered a list of problems,   sent over by the coach to be solved by the end of the week. I decided   to start immediately, and about midnight I sat down to the problems. \u003cbr /\u003e   \u003cbr /\u003e  By 4 o’clock I was done with 2 of them, and went to bed,   pleased. \u003cbr /\u003e   \u003cbr /\u003e  Next day I decided to go on with the problems, and there it   started… \u003cbr /\u003e   \u003cbr /\u003e  By some miracle in 1 day I was through with 6 problems out of   7. I didn’t expect such vim from myself. The coach was a bit   shocked as well. But the evening stuck in my memory because of the   problem “ \u003ca href\u003d\"http://acm.timus.ru/problem.aspx?space\u003d1\u0026amp;num\u003d1095\"\u003eNikifor\u003c/a\u003e”   from the \u003ca href\u003d\"http://acm.timus.ru/\"\u003eTimus Online Judge\u003c/a\u003e. \u003cbr /\u003e   \u003cbr /\u003e  Brute-force method was discarded at the very outset as having   no prospects. Just for fun I decided to try the following: \u003cbr /\u003e   \u003cbr /\u003e  it’s obvious that each 7th number is divisible by 7.   Thus, the probability to get the result divisible by 7 by a random   permutation of digits with truncation of initially incorrect variants   was about 1 to 7. \u003cbr /\u003e   \u003cbr /\u003e  As a result, I wrote a program that chooses at random which   digit from this number to insert into the current position. \u003cbr /\u003e   \u003cbr /\u003e  At first I got WA a couple of times. Introduced some changes   and immediately got AC with the total time about 0.5 seconds (Java). \u003cbr /\u003e   \u003cbr /\u003e  PS: the coach said it was silly to rely on this and I should   never return to the practice of applying brute-force search to   problems by means of “black art”. \u003cbr /\u003e   \u003cstrong\u003e     \u003cbr /\u003eAnd I have a question to you, as more experienced and     successful   participants of programming contests, what is your     opinion about this   approach (probability) to problem-solving, if     in principle one can do   without it there. Has it ever helped you?     Is there any point thinking   over such solutions? \u003cbr /\u003e     \u003cbr /\u003e\u003c/strong\u003e   \u003cp\u003e     \u003cstrong\u003eUPD: I’ll be grateful if someone counts more       accurately     – how many attempts at a potentially correct       answer does this     program need to give the really right answer?\u003c/strong\u003e\u003c/p\u003e   \u003cp\u003e     \u003cstrong\u003e--------\u003cbr /\u003e\u003c/strong\u003e\u003c/p\u003e   Great thanks to Julia for help in translation my original russian text.\u003c/div\u003e","tags":["dark art","probability","problem"]}}