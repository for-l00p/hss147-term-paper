{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":false,"creationTimeSeconds":1271311327,"rating":0,"authorHandle":"_ph_","modificationTimeSeconds":1271311327,"id":301,"title":"Тестирование своих решений","locale":"ru","content":"\u003cdiv class\u003d\"ttypography\"\u003eДобрый день!\u003cbr /\u003e\u003cbr /\u003eХотелось бы обменяться опытом, какие подходы (средства) Вы используете при тестировании своих решений до сдачи? Раньше (a long-long time ago), когда писал на С++, использовал самописный \u0026quot;testing framework\u0026quot; на .bat файлах, основанный на команде fc (построчное сравнение 2-х файлов). Однако, если задача допускала неоднозначное решение, приходилось писать свой индивидуальный checker.\u003cbr /\u003e\u003cbr /\u003eТеперь, когда на онлайн-соревнованиях можно использовать домашние заготовки, prewritten code, даже тестирующие плагины (topCoder), тестирование стало проще. В Java, С# или Python (на котором в последнее время пишу :)) достаточно несложно задействовать UnitTesting, поскольку инфраструктура xUnit практически стала стандартной.\u003cbr /\u003e\u003cbr /\u003eЛично мне решение задачи через UnitTesting нравится гораздо больше, чем разбираться в логике, используя отладчик или отладочный print. Однако, это опять же не помогает с задачами, где допускается неоднозначное решение.\u003cbr /\u003e\u003cbr /\u003eА какие подходы, инструменты, трюки используете для тестирования Вы?\u003c/div\u003e","tags":["test","testing","unit test"]}}