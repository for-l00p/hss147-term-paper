{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1473853391,"rating":2,"authorHandle":"hiddentesla","modificationTimeSeconds":1473853391,"id":47107,"title":"\u003cp\u003estuck on the problem building fences\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003ehello!, about a while back, i came across a problem called \u0026quot;building fences\u0026quot;, link: \u003ca href\u003d\"https://open.kattis.com/problems/fence2\"\u003ehttps://open.kattis.com/problems/fence2\u003c/a\u003e, back then i cant solve it, and yesterday i remembered about that problem and attemp to solve it again, but still, i could not solve it. im thinking about binary searching the length of the log, to find the the highest log length (ill denote it L) that we can make, but then i noticed that if the log length is divisible by L, the number of cuts to get the logs to size L is log_length/L -1, and if its not divisible by L, the number is log_length/L. so while that binary search may return the largest L, it may not be the minimum cut, right?\u003c/p\u003e\u003cp\u003eso can anyone give me some hints on this problem? could this just be a simple problem and i have ben looking at it the wrong way?\u003c/p\u003e\u003c/div\u003e","tags":["binary search"]}}