{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1493301848,"rating":0,"authorHandle":"hiddentesla","modificationTimeSeconds":1493301848,"id":51754,"title":"\u003cp\u003eHamilton path in grid graph\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003ei have ben thinking about this problem for a few weeks now, here is the problem:\u003c/p\u003e\u003cp\u003egiven a grid of size n x n and T ammount of starting and ending positions in the grid, for each position determine if its possible to start from the starting position, visit all vertex in the grid exactly once, and finish in the finishing position\u003c/p\u003e\u003cp\u003efor example: n\u003d4, t\u003d3 start\u003d(1,1), end\u003d(4,4)\u003c/p\u003e\u003cp\u003estart\u003d(1,1), end\u003d(3,2)\u003c/p\u003e\u003cp\u003estart\u003d(1,2) end\u003d(2,1)\u003c/p\u003e\u003cp\u003eanswer shound be yes,yes,no\u003c/p\u003e\u003cp\u003e(N\u0026lt;\u003d10), (T\u0026lt;\u003d20)\u003c/p\u003e\u003cp\u003ehow to solve this problem? i could only think of pruned recursive backtracking (if the current vertex is pos, next vertex we visit is x, check if the degree of adjacent unvisited vertex (other then x), and reduce them by 1, if any of them is less then 2 (less then 1 for target vertex), then we cannot visit x next).\u003c/p\u003e\u003c/div\u003e","tags":["hamiltonian","graph"]}}