{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1460484674,"rating":3,"authorHandle":"stould","modificationTimeSeconds":1460487611,"id":44323,"title":"\u003cp\u003eWorking on 1-d coordinate.\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHello community. I\u0027ll show the following statement: \u003c/p\u003e\u003cp\u003eGiven N segments [Li, Ri] and Q queries Xi. Each query will ask if the Xi is inside some segment.\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e0 ≤ \u003ci\u003eLi\u003c/i\u003e, \u003ci\u003eRi\u003c/i\u003e ≤ 10\u003csup class\u003d\"upper-index\"\u003e9\u003c/sup\u003e\u003c/span\u003e\u003c/p\u003e\u003cp\u003eWill at most \u003cspan class\u003d\"tex-span\"\u003e10\u003csup class\u003d\"upper-index\"\u003e5\u003c/sup\u003e\u003c/span\u003e segments and at most \u003cspan class\u003d\"tex-span\"\u003e10\u003csup class\u003d\"upper-index\"\u003e5\u003c/sup\u003e\u003c/span\u003e queries.\u003c/p\u003e\u003cp\u003eI have solved this problem sorting the segments, sorting the queries, and finally T(N+Q) processing. I am thinking now, if is it possible to be solved faster?.. But nothing comes to me.\u003c/p\u003e\u003cp\u003eDo you know something faster ?\u003c/p\u003e\u003c/div\u003e","tags":["sorting","binary search tree"]}}