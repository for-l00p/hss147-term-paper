{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1493796876,"rating":6,"authorHandle":"MedoN11","modificationTimeSeconds":1493796978,"id":51812,"title":"\u003cp\u003eCorrectness of Flow Solution\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHello.\u003c/p\u003e\u003cp\u003eRecently I was solving this problem : \u003ca href\u003d\"https://icpcarchive.ecs.baylor.edu/index.php?option\u003dcom_onlinejudge\u0026amp;Itemid\u003d8\u0026amp;page\u003dshow_problem\u0026amp;problem\u003d2103\"\u003ehttps://icpcarchive.ecs.baylor.edu/index.php?option\u003dcom_onlinejudge\u0026amp;Itemid\u003d8\u0026amp;page\u003dshow_problem\u0026amp;problem\u003d2103\u003c/a\u003e\u003c/p\u003e\u003cp\u003eSimply the problem says given 12 * n grid of zeros and ones, find the minimum number of swaps to map it to another 12 * n grid where allowed moves are down, up, left and right.\u003c/p\u003e\u003cp\u003eUpon tracing some samples the solution appeared to be minimum cost bipartite matching between non matched ( should be 0 but is 1 or vice versa) one nodes and zero nodes. ( If they are not equal this is impossible). I couldnâ€™t prove correctness so I ran it against a backtracking solution for many small cases, and all passed. Submitted a flow solution and got AC.\u003c/p\u003e\u003cp\u003eCan any body help with proving correctness?\u003c/p\u003e\u003c/div\u003e","tags":[]}}