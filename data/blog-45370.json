{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1465671644,"rating":-8,"authorHandle":"ebanner","modificationTimeSeconds":1471185313,"id":45370,"title":"\u003cp\u003eProblem 478B\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eThe \u0026quot;minimum\u0026quot; part of this problem was particularly challenging for me. I could see that we need to create \u003ccode\u003em\u003c/code\u003e teams as \u0026quot;uniformly\u0026quot; as possible, but I was having a lot of trouble coming up with how to compute that. Hence this post explains the intuition behind distributing \u003ccode\u003en\u003c/code\u003e participants into \u003ccode\u003em\u003c/code\u003e teams as uniformly as possible.\u003c/p\u003e\u003cp\u003eNote: as a matter of notation, the quantity \u003ccode\u003en / m\u003c/code\u003e denotes integer truncating division throughout.\u003c/p\u003e\u003cp\u003eIn hindsight, the reason this problem gave me so much trouble is because it demands an understanding of \u003ccode\u003en % m\u003c/code\u003e that I did not initially possess. My tried and true understanding of \u003ccode\u003en % m\u003c/code\u003e has always been\u003c/p\u003e \u003cpre\u003e\u003ccode\u003en \u003d (n/m)*m + n%m.\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eIn english, Equation 1 can be read as \u0026quot;starting with \u003ccode\u003en\u003c/code\u003e participants, we can form \u003ccode\u003en / m\u003c/code\u003e teams, each having \u003ccode\u003em\u003c/code\u003e participants, plus some leftover participants.\u0026quot; However, \u003ca href\u003d\"/contest/478/problem/B\" title\u003d\"Codeforces Round 273 (Div. 2)\"\u003e478B - Random Teams\u003c/a\u003e requires a fixed number of teams (i.e. \u003ccode\u003em\u003c/code\u003e), so this interpretation will not do. With this in mind and by a twist of perspective, we can rewrite Equation 1 as\u003c/p\u003e \u003cpre\u003e\u003ccode\u003en \u003d m*(n/m) + n%m.\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eIt may look like we\u0027ve accomplished nothing with this rewrite, but we can now read this in a more useful way! Concretely, Equation 2 can be read as \u0026quot;starting with \u003ccode\u003en\u003c/code\u003e participants, we can form \u003ccode\u003em\u003c/code\u003e teams, each with \u003ccode\u003en / m\u003c/code\u003e participants, plus some leftover participants.\u0026quot;\u003c/p\u003e\u003cp\u003eAs a result, we now have \u003ccode\u003em\u003c/code\u003e teams which are uniform as can be (they all have an equal number of participants!). All that remains is to distribute the leftover participants as uniformly as possible into the \u003ccode\u003em\u003c/code\u003e teams. It is not hard to see that the way to accomplish this is to add each leftover participant to a different team. As a result of this process, we wind up with\u003c/p\u003e \u003cpre\u003e\u003ccode\u003en \u003d (n%m)*(n/m + 1) + (m - n%m)*(n/m).\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThis can be read as \u0026quot;starting with \u003ccode\u003en\u003c/code\u003e participants, we can form \u003ccode\u003em\u003c/code\u003e teams. \u003ccode\u003en % m\u003c/code\u003e of those teams have \u003ccode\u003en/m + 1\u003c/code\u003e participants in them (because there are \u003ccode\u003en % m\u003c/code\u003e leftover participants). \u003ccode\u003em - n%m\u003c/code\u003e of them (i.e. the rest) have \u003ccode\u003en / m\u003c/code\u003e participants in them.\u0026quot;\u003c/p\u003e\u003cp\u003eAs an example, consider \u003ccode\u003en \u003d 8\u003c/code\u003e and \u003ccode\u003em \u003d 3\u003c/code\u003e. Beginning with Equation 2, applying the procedure which follows, and arriving at Equation 3, we have\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e8 \u003d (2 + 2 + 2) + 2 \n  \u003d (2+1 + 2+1 + 2) + 0\n  \u003d 2*(2+1) + 1*2\n  \u003d (8%3)*(8/3 + 1) + (3 - 8%3)*(8/3).\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":[]}}