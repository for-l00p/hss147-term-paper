{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1427267898,"rating":1,"authorHandle":"object_oriented_program","modificationTimeSeconds":1427505172,"id":17110,"title":"\u003cp\u003ehelp regarding c++ implementation of this code [solved]\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eIn the recent codechef contest, I solved the sum \u003ca href\u003d\"http://www.codechef.com/COOK56/problems/DIVGOLD\"\u003eDIVGOLD\u003c/a\u003e using lists in Python.\u003c/p\u003e\u003cp\u003eHere is the code \u003c/p\u003e \u003cpre\u003e\u003ccode\u003efor i in xrange(0,n):\n\t\tfoo\u003dlist(s)\n\t\tk\u003dfoo.pop(i)\n\t\tfor j in xrange(0,n):\n\t\t\tfoo.insert(j,k)\n\t\t\tminm\u003d\u0027\u0027.join(foo)\n\t\t\tans\u003dmin(minm,ans)\n\t\t\tfoo.pop(j)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eI am unable to implement it using \u003ccode\u003elist\u003c/code\u003e in STL. Erasing the element and inserting elements doesnt seem to work. Any solutions ?\u003c/p\u003e\u003cp\u003eEdit: Seems that there was a fault in my looping logic. Implementation using strings seems to be a much better option.\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e\u003cbr /\u003e\t\tstring s,ans,res;\n\t\tcin \u0026gt;\u0026gt; n;\n\t\tcin \u0026gt;\u0026gt; s;\n\t\tans \u003d s;\n\t\tfor(i \u003d 0; i \u0026lt; n; i++)\n\t\t{\n\t\t\tch \u003d s[i];\n\t\t\ts.erase(s.begin()+i,s.begin()+i+1);\n\t\t\tfor(j \u003d 0; j \u0026lt; n; j++)\n\t\t\t{\n\t\t\t\ts.insert(j,1,ch);\n\t\t\t\tans \u003d min(ans,s);\n\t\t\t\ts.erase(s.begin()+j,s.begin()+j+1);\n\t\t\t}\n\t\t\ts.insert(i,1,ch);\n\t\t}\n\t\tcout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; endl;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":["c++","stl","linked lists"]}}