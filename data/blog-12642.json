{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":false,"creationTimeSeconds":1402404518,"rating":458,"authorHandle":"Sammarize","modificationTimeSeconds":1402832463,"id":12642,"title":"\u003cp\u003eWay of problemsetter\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e\u003cem\u003eThe mystery of creating rounds unveiled by author of the 4 of them!\u003cbr /\u003eThe guide for preparing the round without horror-fiction and pastorals!\u003c/em\u003e\u003c/p\u003e\u003cp\u003eThanks for \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/RodionGork\" title\u003d\"Expert RodionGork\"\u003eRodionGork\u003c/a\u003e, who push me to writing this post and thanks for \u003ca class\u003d\"rated-user user-cyan\" href\u003d\"/profile/lucAbalo\" title\u003d\"Specialist lucAbalo\"\u003elucAbalo\u003c/a\u003e, who push \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/RodionGork\" title\u003d\"Expert RodionGork\"\u003eRodionGork\u003c/a\u003e to pushing me to writing this post.\u003c/p\u003e\u003cp\u003eAlso, many thanks to \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/RodionGork\" title\u003d\"Expert RodionGork\"\u003eRodionGork\u003c/a\u003e for the translation of this post to English.\u003c/p\u003e\u003ch2\u003e1. Inventing problems\u003c/h2\u003e\u003cp\u003eIt\u0027s hard to advise anything on this point. There\u0027s no some standard way of creating problems — and if one have existed we\u0027ll have only \u0026quot;complicated algorithmic exercises\u0026quot; instead of \u0026quot;problems\u0026quot;. People who participated in Russian Code Cup do know well the tasks of that sort.\u003c/p\u003e\u003cp\u003eTo cook good and interesting problem there should be some \u003cstrong\u003eidea!\u003c/strong\u003e which came to your mind (and later to minds of participants of the contest). Even the simplest problems of \u003ccode\u003eA\u003c/code\u003e level for the \u003ccode\u003eDiv2\u003c/code\u003e should have some \u003cstrong\u003eidea\u003c/strong\u003e.\u003c/p\u003e\u003cp\u003eSo here is the warning: creative way of thinking is trained from the childhood — and since so, not all people are equally good in inventing problems. Alas! For me the experience of creating problems for \u0026quot;Youth Math School\u0026quot; challenges (held annually in St-Pete\u0027s, Russia) was of great help. Approximately after the year of offering boring and well-known technical exercises (which always failed to pass the jury filter), I have understand that one can\u0027t just \u0026quot;sit down and bring forth a cool problem\u0026quot;. But if for significant period of time you roll the thought inside your head, examining different mathematical models from many points of view — then sooner or later you came up with interesting problem.\u003c/p\u003e\u003cp\u003eIt is just like searching for mushrooms in the forest. You should not expect to go to some spot and pick the mushroom here. If you already know about some mushroom at some definite place — be sure, many people know it too — and obviously it already was picked. Moreover mushroom is not worth being called mushroom if all people know about it. :)\u003c/p\u003e\u003cp\u003eOn contrary you need to wander for some time in unknown places, looking beneath the bushes and fallen leaves. Of course you should not expect to find the mushroom below any leaf. But sometimes you\u0027ll succeed. So \u0026quot;seek and you will find\u0026quot;!\u003c/p\u003e\u003cp\u003eIt is not necessary to be the top-of-the-tops to be able to create problems \u003ccode\u003eE\u003c/code\u003e for \u003ccode\u003eDiv1\u003c/code\u003e. I myself am kicking around the border between yellow and red — nevertheless I created \u003cstrong\u003efour\u003c/strong\u003e full rounds! At one of them no one submit the correct solution for problem \u003ccode\u003eE\u003c/code\u003e — while at another only two of contestants succeeded. And some people are slow thinkers and have no great career in competitive programming at all, but this does not hinder them from inventing and solving extremely complex puzzles when they have enough time.\u003c/p\u003e\u003ch2\u003e2. The set of problems\u003c/h2\u003e\u003cp\u003eHere the goal is clear: you already collected enough problems and you can try to organize them into the problem set for the round. Depending on circumstances it can have \u003ccode\u003e5\u003c/code\u003e or \u003ccode\u003e7\u003c/code\u003e problems (or some other amount in rare cases). The difficulty of problems is not strictly fixed — the most important is to order them by increasing difficulty (while contest could be somewhat more or less difficult overall). Because of this the same problem could become either \u003ccode\u003eC\u003c/code\u003e or \u003ccode\u003eD\u003c/code\u003e level. Also sometimes non-standard \u0026quot;difficulty ladder\u0026quot; is acceptable — but of course not to extreme degree. I doubt anyone will agree to accept contest with 500-500-1000-1500-1500 levels.\u003c/p\u003e\u003cp\u003eWhen assessing the difficulty of the problem it is important to take into account all circumstances which make the solving more troublesome. Complexity of idea, complexity of implementation and exclusiveness of implementation. For example the \u003cstrong\u003eblossom-shrinking\u003c/strong\u003e will create far more troubles to solvers compared with \u003cstrong\u003ecartesian tree\u003c/strong\u003e, though complexity of implementation for these two algorithms is approximately equal. Other factors are difficulty of reading the problem statement (yes!) and amount of attention required for implementation (for example amount and inequality of the special cases if they exist).\u003c/p\u003e\u003ch2\u003e3. Communicate with \u003ca class\u003d\"rated-user user-orange\" href\u003d\"/profile/Gerald\" title\u003d\"Master Gerald\"\u003eGerald\u003c/a\u003e\u003c/h2\u003e\u003cp\u003e\u003ca class\u003d\"rated-user user-orange\" href\u003d\"/profile/Gerald\" title\u003d\"Master Gerald\"\u003eGerald\u003c/a\u003e is not terrible :) He is really cool! When you collected your set of problems you need just write to him by any suitable way (I myself used PM at this site) — after which you\u0027ll be able to choose another channels. I mostly communicated with him in social network while sending larger volumes of text (proofs, descriptions) by e-mail.\u003c/p\u003e\u003cp\u003e\u003ca class\u003d\"rated-user user-orange\" href\u003d\"/profile/Gerald\" title\u003d\"Master Gerald\"\u003eGerald\u003c/a\u003e will study your problems and answer you honestly whether some problems are too obvious / well-known or bad for some other reasons. Or if your assessment of difficulty is incorrect. All these flaws are not critical — problemsetting is the complicated art. You will be able to substitute poor problems or change them according to \u003ca class\u003d\"rated-user user-orange\" href\u003d\"/profile/Gerald\" title\u003d\"Master Gerald\"\u003eGerald\u003c/a\u003e\u0027s advice to reach required difficulty etc. After several \u0026quot;iterations\u0026quot; you will come to agreement. As for me — it usually took 3-4 discussions about 2 hours each.\u003c/p\u003e\u003cp\u003eWell, probably it may happens that you will not come to an agreement. I do not know what is the process in such cases. Probably you will be offered a help of some co-author or some ready problems etc. \u003cstrong\u003eI do not know\u003c/strong\u003e.\u003c/p\u003e \u003chr /\u003e\u003cp\u003e\u003cstrong\u003eAfter the confirmation of your problem set you get to the stage of technical preparations. Each task should be prepared — and here are the steps of this process.\u003c/strong\u003e\u003c/p\u003e\u003ch2\u003e4. Writing problem statements\u003c/h2\u003e\u003cp\u003eProblem statement should be maximally clear and should not have any flaws.\u003c/p\u003e\u003cp\u003eWell, that is all. Of course if the statement grows bit too long it is not great — but it would better to have long and crystal clear statement rather than short and vague. Surely if the picture can help for understanding — draw the picture and add it. By the way remember that the length of statement increases the difficulty, so statement of \u003ccode\u003eA\u003c/code\u003e of \u003ccode\u003eDiv2\u003c/code\u003e should never be extremely long.\u003c/p\u003e\u003cp\u003eAny \u0026quot;features\u0026quot; like belletristic, problem heroes etc — these are encouraged, but not necessarily.\u003c/p\u003e\u003ch2\u003e5. Writing an editorial\u003c/h2\u003e\u003cp\u003eIt is extremely important. Editorial is a half of \u0026quot;educational load\u0026quot; of the contest. But one should not write editorial \u0026quot;as for myself\u0026quot; — even the simplest problem should be explained in very detailed, clear and laconic way. Remember that you know this solution and ones for whom you write an editorial — do not know it. So they could not guess your thoughts.\u003c/p\u003e\u003cp\u003eSince editorial of the problem is usually read by people who did not solve it — it is important to understand they are your target audience. Since so the simpler problem is, the more detailed explanation is needed. My rule is that editorials for all problems should be of roughly equal length.\u003c/p\u003e\u003cp\u003eOnce again about pictures. If the picture can help — add it.\u003c/p\u003e \u003chr /\u003e\u003cp\u003e\u003cstrong\u003eNow here are four most deep-hidden things which no contestant will see, but which have great impact on contest preparation.\u003c/strong\u003e\u003c/p\u003e\u003ch2\u003e6. Writing checkers\u003c/h2\u003e\u003cp\u003eProgramming task supposes that user writes solution and testing system should check it. This process is managed by special programs — we call them \u003cstrong\u003echeckers\u003c/strong\u003e — which run the solution on the set of input samples and then checks that the output is correct.\u003c/p\u003e\u003cp\u003eTrivial cases only require to check that the user\u0027s answer is \u003cstrong\u003ethe same\u003c/strong\u003e as author\u0027s. This could be done by standard checkers — here are checkers for \u0026quot;yes/no\u0026quot;, for a single value, for sequence of values, for strings etc.\u003c/p\u003e\u003cp\u003eIn complicated cases (e.g. when multiple arbitrary answers could be correct) checker should judge the correctness of the answer based on input data. Sometimes it could be very complex task — for example for \u003ca href\u003d\"/contest/333/problem/C\" title\u003d\"Codeforces Round 194 (Div. 1)\"\u003e333C - Lucky Tickets\u003c/a\u003e the checker is 10 times harder than the author\u0027s solution.\u003c/p\u003e\u003cp\u003eLibrary \u003ccode\u003etestlib\u003c/code\u003e is used for writing checkers. It is simple and handy for creating checkers, validators and generators. If you are not acquainted with it — be sure, \u003ca class\u003d\"rated-user user-orange\" href\u003d\"/profile/Gerald\" title\u003d\"Master Gerald\"\u003eGerald\u003c/a\u003e will introduce you :)\u003c/p\u003e\u003cp\u003eI\u0027ll add that checkers are usually quite tolerant to extra trailing spaces, line feeds and other insignificant differences.\u003c/p\u003e\u003ch2\u003e7. Writing validator\u003c/h2\u003e\u003cp\u003eProblem statement tells that input data should be in some specific format. Validator checks the correctness of your input data — that they are exactly such as you described. It is also your task to write validator along with checker.\u003c/p\u003e\u003ch2\u003e8. Writing solutions\u003c/h2\u003e\u003cp\u003eYes, you are to write solutions. More than one :)\u003c/p\u003e\u003cp\u003eOf course there should be author\u0027s solution — which produces correct answers and suits into time/memory restrictions. It is used for producing author\u0027s answers which are used by checkers to compare user\u0027s answers with them.\u003c/p\u003e\u003cp\u003eThere are many reasons to write another solutions.\u003c/p\u003e\u003cp\u003eAt first you need solutions in both \u003ccode\u003eC++\u003c/code\u003e and \u003ccode\u003eJava\u003c/code\u003e.\u003c/p\u003e\u003cp\u003eSecond — if the solution is complicated, you need to write simple solution which may not be efficient on large tests but will work for small input data. It will help you to prove that your complicated solution is correct.\u003c/p\u003e\u003cp\u003eThird — if your problem allows some \u0026quot;less-efficient\u0026quot; solutions which \u003cstrong\u003eshould fail\u003c/strong\u003e by memory or time limit — it is important to write them and make sure they really fail (or produce wrong answer etc.)\u003c/p\u003e\u003cp\u003eFourth — if it the solution assumes some pitfall and you expect to trap some users with it — it is important to write such incorrect version of solution and make sure that it really fails.\u003c/p\u003e\u003cp\u003eFifth — it is important to write alternative solutions (if they exist). Make sure that your hard problem with cool \u003ccode\u003eO(N*log(N))\u003c/code\u003e solution could not be solved by stupid \u003ccode\u003eO(N^2)\u003c/code\u003e approach with bit optimization.\u003c/p\u003e\u003cp\u003eAlternative solutions could affect difficulty of the problem — in both directions. For example if the whimsical trick with \u003ccode\u003e5\u003c/code\u003e lines of code could be substituted with well-known but long algorithm — most of average participants will see it and prefer not to try such problem.\u003c/p\u003e\u003ch2\u003e9. Writing test-cases\u003c/h2\u003e\u003cp\u003eThere are three classes of test-cases.\u003c/p\u003e\u003cp\u003eTests for problem statement are necessary for better explanation. They are small and structurally simple with purpose to show the idea of the problem. There could be \u003ccode\u003e1-3\u003c/code\u003e of them.\u003c/p\u003e\u003cp\u003ePretests are to check that participant is not trying to submit some spam and that he/she understand the solution at all. At average there are about \u003ccode\u003e7\u003c/code\u003e of them. They could include border cases, special cases (rarely — maximal case) etc.\u003c/p\u003e\u003cp\u003eMain body of tests check the correctness of the solution. Here it is important to take in account \u003cstrong\u003eall things\u003c/strong\u003e. Extreme values of all parameters, tests for maximal time and memory consumption (they could be different). Tests for maximal and minimal answer, for overflow. Tests very different by structure. Tests which will reject all your \u0026quot;wrong\u0026quot; solutions. It may happen that inventing or seeking for such tests become a complicated problem itself.\u003c/p\u003e\u003cp\u003eIf the problem allows to propose some unproven hypothesis — write solution based upon it. Then test the correctness of this hypothesis and if it is incorrect — create the test-case which will reject such solution.\u003c/p\u003e\u003cp\u003eIt is important to care of writing tasks and tests in such a way that optimized brute-force will not work.\u003c/p\u003e\u003ch2\u003e10. Writing an announcement\u003c/h2\u003e\u003cp\u003eYou are expected to announcement the time of the round, who are authors and what is proposed problem score. Surely it is \u0026quot;altogether fitting and proper\u0026quot; to thank all people who helped you. All other things are optional — your biography, jokes, story about the problem hero, pictures, recommendation to \u003cstrong\u003eread statements of ALL the problems\u003c/strong\u003e...\u003c/p\u003e\u003ch2\u003e11. Conducting the round\u003c/h2\u003e\u003cp\u003eYou are to choose the time for round yourself, however you need to care of some limitations — no other important contests at the same time — and of course it should be convenient time for administration.\u003c/p\u003e\u003cp\u003eDuring the round itself it is required to be \u003cstrong\u003eon-line\u003c/strong\u003e and help \u003ca class\u003d\"rated-user user-orange\" href\u003d\"/profile/Gerald\" title\u003d\"Master Gerald\"\u003eGerald\u003c/a\u003e watching how the things go, answer to user\u0027s questions. Or, perhaps, update problem statement (very, very bad — but it happens sometimes) or update something different (far more bad — never in my experience).\u003c/p\u003e\u003cp\u003eAfter the contest you are to publish editorial and announce the winners. Surely it would be also good to answer questions in comments to contest announcing post.\u003c/p\u003e\u003ch2\u003eConclusion\u003c/h2\u003e\u003cp\u003e\u003cstrong\u003eI really do hope that my guide will encourage you to create new interesting rounds!\u003c/strong\u003e :)\u003c/p\u003e\u003cp\u003eAll the steps I described are enthralling (except writing validator). If you will succeed in creating problems — write to \u003ca class\u003d\"rated-user user-orange\" href\u003d\"/profile/Gerald\" title\u003d\"Master Gerald\"\u003eGerald\u003c/a\u003e at once. However it should be understood that preparing contest requires significant efforts and costs much toil. As for me — after getting the agreement on problems I usually spent about two weeks.\u003c/p\u003e\u003cp\u003eIt is not that difficult because it is interesting. But it will devour great lot of your time, yes. Nevertheless you\u0027ll get great boost to your karma. The more interesting round — the more boost :)\u003c/p\u003e\u003cp\u003eDuring the whole process \u003ca class\u003d\"rated-user user-orange\" href\u003d\"/profile/Gerald\" title\u003d\"Master Gerald\"\u003eGerald\u003c/a\u003e will help you to get out of troubles (though of course it would be better if you\u0027ll get out yourself) and check that you are moving the right way. So be not afraid — you will not be left alone!\u003c/p\u003e\u003c/div\u003e","tags":["codeforces round","problem setter"]}}