{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1471459899,"rating":2,"authorHandle":"har_vi","modificationTimeSeconds":1471460136,"id":46611,"title":"\u003cp\u003eSPOJ GSS4 (BIT+UFDS) HELP WITH IDEA\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003ch2\u003e\u003cstrong\u003eRange updates or range set with BIT/fenwick tree\u003c/strong\u003e\u003c/h2\u003e\u003cp\u003e\u003ca href\u003d\"http://www.spoj.com/problems/GSS4/\"\u003eSPOJ/GSS4\u003c/a\u003e\u003c/p\u003e \u003col\u003e   \u003cli\u003eHow should I do range updates with BIT using Union Find Data Structure?what would be expected complexity?\u003c/li\u003e   \u003cli\u003eIn this case max updates can be 7.N*logN but what if we set number in range to random number which don\u0027t have such relation with the input.Would it still possible to do it with BIT/fenwick tree or there\u0027s any other approach to set elements in range to a given.\u003c/li\u003e \u003c/ol\u003e\u003cp\u003eThanks!\u003c/p\u003e\u003c/div\u003e","tags":["gss4","fenwick tree","range update","union find"]}}