{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":false,"creationTimeSeconds":1483522200,"rating":44,"authorHandle":"wilcot","modificationTimeSeconds":1484240947,"id":49561,"title":"\u003cp\u003eБелорусская областная олимпиада 2017\u003c/p\u003e","locale":"ru","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eС 9 по 12 января 2017 года будет проходить областная олимпиада по информатике. Первый тур олимпиады состоится 10 января, второй — на следующий день. Постараюсь разместить здесь условия и решения задач как можно скорее, естественно не раньше начала самих туров :) В комментариях предлагаю обсудить задачи, поделиться идеями по поводу их решения, мыслями...\u003c/p\u003e\u003cp\u003e\u003cem\u003eВсем участникам желаю удачи!\u003c/em\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eUPD.\u003c/strong\u003e Первый тур завершен. Ниже можно почитать, как же получить полные баллы по задачам.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eUPD2.\u003c/strong\u003e Второй тур тоже завершен. Можно почитать разбор, кроме последней задачи — я ее не решал, да и решений можно придумать множество.  \u003c/p\u003e\u003ch3\u003eПервый тур\u003c/h3\u003e\u003cp\u003e\u003ca href\u003d\"https://yadi.sk/d/fuyYc0xz38FnHs\"\u003eУсловия задач\u003c/a\u003e\u003c/p\u003e\u003ch4\u003eЗадача 1\u003c/h4\u003e\u003cp\u003eОтсортируем пары \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e, \u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e)\u003c/span\u003e по возрастанию \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e. Возьмем первые \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eK\u003c/i\u003e\u003c/span\u003e подарков. Сложность решения: \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e·\u003ci\u003elog\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e))\u003c/span\u003e.\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://ideone.com/H1oVfx\"\u003eРешение на C++\u003c/a\u003e\u003c/p\u003e\u003ch4\u003eЗадача 2\u003c/h4\u003e\u003cp\u003eКому может быть выгодно заполнить индивидуальную декларацию? Очевидно, что если жителю с доходом \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e выгодно заполнить декларацию, то и жителю с доходом \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ey\u003c/i\u003e \u0026lt; \u003ci\u003ex\u003c/i\u003e\u003c/span\u003e будет выгодно заполнить декларацию. Поэтому отсортируем исходный массив в порядке возрастания. А дальше проверяем, выгодно ли каждому жителю заполнить декларацию. Если жителю невыгодно заполнить декларацию, тогда для этого жителя и всех остальных задаем среднее значение. Выводим ответ. Итоговая сложность \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e·\u003ci\u003elog\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e))\u003c/span\u003e.\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://ideone.com/DLWUiW\"\u003eРешение на C++\u003c/a\u003e\u003c/p\u003e\u003ch4\u003eЗадача 3\u003c/h4\u003e\u003cp\u003e\u003cem\u003eСледующее решение я не доказывал, так что будет интересно почитать доказательство (или опровержение) в комментариях.\u003c/em\u003e\u003c/p\u003e\u003cp\u003eЗаметим, что на самом деле нам достаточно сделать \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003emin\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e, \u003ci\u003ek\u003c/i\u003e)\u003c/span\u003e операций. Теперь реализуем простейший алгоритм: будем заменять самый частый символ на самый редкий. Такое можно реализовать за время \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003emin\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e, \u003ci\u003ek\u003c/i\u003e)·26)\u003c/span\u003e. Но на этом еще не все. Такой алгоритм некорректно сработает на строке \u003ccode\u003eabbbbbb\u003c/code\u003e. В таком случае выгоднее избавиться от символа \u003ccode\u003ea\u003c/code\u003e. Поэтому отсортируем наши символы по количеству вхождений в строку \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eS\u003c/i\u003e\u003c/span\u003e и просто переберем, какие же символы может содержать строка. Ну а дальше находим ответ для каждого случая. Итоговая сложность: \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e + \u003ci\u003emin\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e, \u003ci\u003ek\u003c/i\u003e)·26\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e)\u003c/span\u003e.\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://ideone.com/HLNhbq\"\u003eРешение на C++\u003c/a\u003e\u003c/p\u003e\u003ch4\u003eЗадача 4\u003c/h4\u003e\u003cp\u003eНаучимся находить ответ для определенной вершины. Для этого подвесим дерево за эту вершину. Для каждой смежной вершины посчитаем такую таблицу: \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e][\u003ci\u003ej\u003c/i\u003e]\u003c/span\u003e — количество путей четности \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e и баланса \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e. Под балансом будем понимать сумму \u003cspan class\u003d\"tex-span\"\u003e + 1\u003c/span\u003e и \u003cspan class\u003d\"tex-span\"\u003e - 1\u003c/span\u003e — для вершин с большим номером и вершин с меньшим номером соответственно (по сравнению с номером корня дерева). Такую таблицу можно посчитать одним проходом поиска в ширину.\u003c/p\u003e\u003cp\u003eКак же найти ответ для выбранной вершины? Для этого нужно рассмотреть 2 случая:\u003c/p\u003e \u003col\u003e   \u003cli\u003eВершина является концевой в пути, тогда к ответу прибавим: \u003cspan class\u003d\"tex-span\"\u003e2·\u003ci\u003ef\u003c/i\u003e[0][0]\u003c/span\u003e;\u003c/li\u003e   \u003cli\u003eВершина является промежуточной, тогда к ответу нужно прибавить \u003cspan class\u003d\"tex-span\"\u003e2·\u003ci\u003ef\u003c/i\u003e1[\u003ci\u003ei\u003c/i\u003e][\u003ci\u003ej\u003c/i\u003e]·\u003ci\u003ef\u003c/i\u003e2[\u003ci\u003ei\u003c/i\u003e][ - \u003ci\u003ej\u003c/i\u003e]\u003c/span\u003e, где \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e1\u003c/span\u003e и \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e2\u003c/span\u003e — матрицы \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e\u003c/span\u003e подсчитанные для смежных вершин, через которые проходит путь.\u003c/li\u003e \u003c/ol\u003e\u003cp\u003eЕсли аккуратно объединять ответы для смежных вершин, можно добиться асимптотики \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e)\u003c/span\u003e. Соответственно для \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eN\u003c/i\u003e\u003c/span\u003e вершин итоговая сложность \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e)\u003c/span\u003e.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003ePS.\u003c/strong\u003e На самом деле, можно не хранить четность вершины, так как это показывает баланс.\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://ideone.com/6sUWPu\"\u003eРешение на C++\u003c/a\u003e\u003c/p\u003e\u003ch3\u003eВторой тур\u003c/h3\u003e\u003cp\u003e\u003ca href\u003d\"https://yadi.sk/d/c3pcr0O238TiuV\"\u003eУсловия задач\u003c/a\u003e\u003c/p\u003e\u003ch4\u003eЗадача 1\u003c/h4\u003e\u003cp\u003eНужно отсортировать числа исходного массива в порядке возрастания. Ответ найдем по формуле: \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/78/af/78aff1c37d361b1867f243bb394e496845970495.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. Сложность решения: \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e)\u003c/span\u003e или \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e·\u003ci\u003elog\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e))\u003c/span\u003e.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eChallenge.\u003c/strong\u003e А можете ли вы решить за время \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e)\u003c/span\u003e ?\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://ideone.com/6LGVaX\"\u003eРешение на C++\u003c/a\u003e\u003c/p\u003e\u003ch4\u003eЗадача 2\u003c/h4\u003e\u003cp\u003e\u003cem\u003eНа мой взгляд самая неприятная задача, но не сказал бы что сложная... Можно решить разными способами, но я расскажу вкратце свой способ.\u003c/em\u003e\u003c/p\u003e\u003cp\u003eСуффиксом длины \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e я буду называть младшие \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e бит числа \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eN\u003c/i\u003e\u003c/span\u003e. Воспользуюсь такой динамикой: \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e][\u003ci\u003ej\u003c/i\u003e][\u003ci\u003ek\u003c/i\u003e][\u003ci\u003el\u003c/i\u003e]\u003c/span\u003e — количество вариантов чисел длины \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e, если последние \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e бит равны \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/span\u003e и число меньше суффикса (при \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e \u003d 0\u003c/span\u003e) или больше суффикса (при \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e \u003d 1\u003c/span\u003e). С помощью такой динамики можно найти ответ за время: \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(40\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e·2\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e)\u003c/span\u003e. Рекуррентные формулы я писать не буду, так как они получаются довольно громоздкими (я уже говорил, что эта задача мне показалась не самой приятной), но их можно посмотреть в моем решении, ссылку на которое я оставил ниже. Итоговая сложность: \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(1)\u003c/span\u003e.\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://ideone.com/9bXZHA\"\u003eРешение на C++\u003c/a\u003e\u003c/p\u003e\u003ch4\u003eЗадача 3\u003c/h4\u003e\u003cp\u003eПусть у нас числа \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/span\u003e и \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/span\u003e — элементы массива, дающие оптимальный ответ. Представим их в таком виде: \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e \u003d \u003ci\u003ex\u003c/i\u003e·\u003ci\u003ey\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e \u003d \u003ci\u003ex\u003c/i\u003e·\u003ci\u003ey\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003c/span\u003e. Тогда, если \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003egcd\u003c/i\u003e(\u003ci\u003ey\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e, \u003ci\u003ey\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e) \u003d 1\u003c/span\u003e, то \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003elcm\u003c/i\u003e(\u003ci\u003ea\u003c/i\u003e, \u003ci\u003eb\u003c/i\u003e) \u003d \u003ci\u003ex\u003c/i\u003e·\u003ci\u003ey\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e·\u003ci\u003ey\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003c/span\u003e. Переберем \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e, а в качестве \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ey\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/span\u003e и \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ey\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003c/span\u003e будем брать первых два минимальных частных от деления \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/c8/ff/c8ff7dc7ff43e7fb43f162ec012c3227eb5103da.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. Перебирать все делители можно за \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/f3/d4/f3d49c89f820776c5a0dbfa23cf3319e5a9fb265.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. Получим итоговое решение за время: \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/1e/3a/1e3a6545ac6fa74d326f7ec7f4a841e7d80f7a09.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e.\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://ideone.com/fb1XKb\"\u003eРешение на C++\u003c/a\u003e\u003c/p\u003e\u003ch4\u003eЗадача 4\u003c/h4\u003e\u003cp\u003eЗадача на открытые тесты. Нужно было написать какой-нибудь алгоритм с учетом того, что все веса являются степенями тройки.\u003c/p\u003e\u003ch3\u003eРезультаты\u003c/h3\u003e\u003cp\u003eСпасибо \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/markysha\" title\u003d\"Candidate Master markysha\"\u003emarkysha\u003c/a\u003e и \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/kodek.sh\" title\u003d\"Candidate Master kodek.sh\"\u003ekodek.sh\u003c/a\u003e за то, что поделились результатами областей.\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://yadi.sk/d/BWKbrob638eN9r\"\u003eРезультаты областей\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e","tags":["беларусь","областная олимпиада","2017","все читают разборы"]}}