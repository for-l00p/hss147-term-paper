{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1515175359,"rating":-2,"authorHandle":"sadman.rizwan","modificationTimeSeconds":1515175359,"id":56924,"title":"\u003cp\u003eNumber of digits in the binary representation of an integer\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eI usually find the number of digit in the binary representation of an integer in the following way:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eint digit \u003d 1 + (int)log2(n);\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eI used to think that this way is absolutely correct as I never found any error. But today I got WA in problem number B (Codeforces Round 456) due to finding the number of digits in this way and I understood that this way isn\u0027t 100% correct. An integer n \u003d 288230376151711743 was given in the case in which I got WA verdict.\u003c/p\u003e\u003cp\u003eWhile testing the error, I printed the 2 base log of 288230376151711743 using the log2() function of C++ and it printed 58. According to that 2^58 should be equal to 288230376151711743, but it isn\u0027t. 2^58 is equal to 288230376151711744.\u003c/p\u003e\u003cp\u003eSo I guess, the value of log2(288230376151711743) is 57.99999999... or something like that which is very close to 58 and due to precision issues log2() function returns 58 in this case.\u003c/p\u003e\u003cp\u003eTo avoid such errors I changed the way of finding the number of digits in binary in the following way:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eint digit \u003d 1 + (int)log2(n);\nlong long int x\u003d(long long int)pow(2,d-1);\nif(x\u0026gt;n) d--;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eAfter changing my code in this way I got AC verdict, but I am still not sure about the accuracy of my way.\u003c/p\u003e\u003cp\u003eI want to know how much accurate is this way of finding the number of digits. If it is still not accurate, kindly suggest some other ways of finding the number of digits in the binary form of an integer which are accurate and efficient enough.\u003c/p\u003e\u003c/div\u003e","tags":[]}}