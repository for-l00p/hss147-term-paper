{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1471925418,"rating":14,"authorHandle":"stould","modificationTimeSeconds":1471925418,"id":46733,"title":"\u003cp\u003eworking with polyominoes\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHello Codeforces community!!\u003c/p\u003e\u003cp\u003eI\u0027ll be straight in this topic. I\u0027m trying to solve the problem \u003ca href\u003d\"https://icpcarchive.ecs.baylor.edu/index.php?option\u003donlinejudge\u0026amp;page\u003dshow_problem\u0026amp;problem\u003d2104\"\u003eNurikabe\u003c/a\u003e. But receiving TLE. If helps, the \u003ca href\u003d\"http://pastebin.com/nDNA4qwG\"\u003ecode\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eI\u0027m using a bruteforce solution, first of all, I am generating all fixed Polyominoes from size 1 to 9. So, now for each given grid, I do the following things:\u003c/p\u003e \u003cul\u003e   \u003cli\u003e1) Storing all interesting points (points with numbers on the grid) in a vector\u0026lt;pair\u0026lt;int, int\u0026gt; \u0026gt; p.\u003c/li\u003e   \u003cli\u003e2) Now, I bruteforce with backtracking:\u003c/li\u003e   \u003cli\u003e2.1) If(all interesting points already have a polyminoes assiated) check if the actual grid is valid (according to statement) with a DFS // O(n*m)\u003c/li\u003e   \u003cli\u003e2.2) Te next step, I\u0027ll try to explain with a example:\u003c/li\u003e \u003c/ul\u003e\u003cp\u003esupposing the bellow grid and a polyomino ###:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e.....\n..3..\n.....\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThere are three possible ways to place this polyomino:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e..... ..... .....\n.###. ..### ###..\n..... ..... .....\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eMy algorithm follows the above example, for each polyomino[i] (with size equals to interesting point[i]), I try to place the polyomino fixing a cell.\u003c/p\u003e \u003cul\u003e   \u003cli\u003e2.3) I check if is valid to use this polimino. //O(polyomino size)\u003c/li\u003e   \u003cli\u003e2.4) If is valid, add the polyomino on the grid //O(polyomino size)\u003c/li\u003e   \u003cli\u003e2.5) Try the next interesting point\u003c/li\u003e   \u003cli\u003e2.6) Remove the polymino from the grid. //O(polyomino size)\u003c/li\u003e \u003c/ul\u003e\u003cp\u003eDoes someone know some prunning to do in this backtracking to avoid TLE or is it a wrong approach ? Any help will be very apreciated, thank you.\u003c/p\u003e\u003c/div\u003e","tags":["polyomino","backtracking","bruteforce"]}}