{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":true,"creationTimeSeconds":1506327332,"rating":0,"authorHandle":"elena","modificationTimeSeconds":1506327332,"id":54761,"title":"\u003cp\u003eСППО — часть 1\u003c/p\u003e","locale":"ru","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eПервая группа заданий содержит лабораторные работы по Excel, выложенные в локальной сети. Попробую сформулировать \u0026quot;программистскую альтернативу\u0026quot; (делать таблички в Excel, наверное, полезное, но все же не слишком увлекательное занятие).\u003c/p\u003e\u003cp\u003eНа лекциях мы уже обсуждали процессы, а в ближайшее время будем обсуждать потоки (thread, нить) (которые также называют легковесными процессами). Потоки существуют внутри процессов и обычно разделяют ресурсы процессов. Кроме потоков бывают (но далеко не везде и не всегда) так называемые потоки уровня пользователя (fiber, волокно).\u003c/p\u003e\u003cp\u003eВ любом случае при работе с этими сущностями приходится решать задачу организации их взаимодействия. Исторически первым алгоритмом, позволивший без конфликтов использовать ресурс, был алгоритм Деккера. Потом появились алгоритмы Петерсона, Лампорта. \u003c/p\u003e\u003cp\u003eСовременные языки содержат средства, дающие возможность организовать бесконфликтное взаимодействие: семафоры, мьютексы, критические секции (иногда путем \u0026quot;прямого\u0026quot; обращения к соответствующим примитивам ОС, иногда — предоставляют собственные высокоуровневые классы). Однако представляется небезынтересным попробовать реализовать вышеупомянутые алгоритмы самостоятельно и добавить к ним графический интерфейс в иллюстративных целях. Требований про графическому интерфейсу нет — все зависит от Вашей фантазии:)\u003c/p\u003e\u003cp\u003e\u003cem\u003e(Конечно, в интернете можно найти много разных готовых вариантов, в т.ч. на Java. Конечно, можно ими воспользоваться. Но есть надежда, что необходимость прикручивать какую-то графику приведет к необходимости весьма детально разобраться даже в готовых алгоритмах).\u003c/em\u003e\u003c/p\u003e\u003c/div\u003e","tags":[]}}