{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1456945675,"rating":0,"authorHandle":"SAeed","modificationTimeSeconds":1456945769,"id":43520,"title":"\u003cp\u003eHow does trie tree work in case of more than one test case?\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHello everyone !!\u003c/p\u003e\u003cp\u003eI have this implementation for trie tree :\u003c/p\u003e \u003cpre\u003e\u003ccode\u003econst int MAX_CHAR \u003d 10;\nstruct trie {\n\ttrie* child[MAX_CHAR];\n\tbool isLeaf;\n\n\ttrie() {\n            memset(child, 0, sizeof(child));\n            isLeaf \u003d 0;\n\t}\n\n\tvoid insert(char *str) {\n\t\tif(*str \u003d\u003d \u0027\\0\u0027)\n\t\t\tisLeaf \u003d 1;\n\t\telse {\n\t\t\tint cur \u003d *str - \u00270\u0027;\n\t\t\tif(child[cur] \u003d\u003d 0)\n\t\t\t\tchild[cur] \u003d new trie();\n\t\t\tchild[cur]-\u0026gt;insert(str+1);\n\t\t}\n\t}\n};\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eI was wondering, what will happen in case of more than one test case? I know that C++ doesn\u0027t support garbage collector.\u003c/p\u003e\u003cp\u003eSo, do I need to add the following destructor:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e~trie(){\n            for(int i \u003d 0; i \u0026lt; 10; i++) delete child[i];\n        }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eOr can C++ delete this tree? I know \u003ccode\u003ebool isLeaf\u003c/code\u003e will be deleted at root node, and so is \u003ccode\u003etrie* child[MAX_CHAR];\u003c/code\u003e, but I\u0027m not sure about the remaining part of my trie (the part where child array is pointing to).\u003c/p\u003e\u003cp\u003eOr may be there is another way of deleting this trie?\u003c/p\u003e\u003cp\u003eThe reason I\u0027m asking is because I\u0027m afraid of MLE with big number of test cases. Can any one help?\u003c/p\u003e\u003c/div\u003e","tags":["trie tree"]}}