{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1465316979,"rating":6,"authorHandle":"Safrout","modificationTimeSeconds":1465316979,"id":45295,"title":"\u003cp\u003eTLE in SPOJ D-Query with Java\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHi, \u003c/p\u003e\u003cp\u003eI have wrote 2 solutions for this problem in java (actually the only difference is writing an iterative VS recursive segment tree). But both got me TLE.\u003c/p\u003e\u003cp\u003eI am asking here because I can see that there are 3 people managed to get this problem accepted with java. I am curious to know whether they are doing constant time optimisations or they have better approach than O((n + q)log(n + q)) ?\u003c/p\u003e\u003cp\u003ehere is the link to the problem: \u003ca href\u003d\"http://www.spoj.com/problems/DQUERY/\"\u003ehttp://www.spoj.com/problems/DQUERY/\u003c/a\u003e\u003c/p\u003e\u003cp\u003eHere is the link to my recursive segment tree code: \u003ca href\u003d\"http://ideone.com/itwocf\"\u003ehttp://ideone.com/itwocf\u003c/a\u003e\u003c/p\u003e\u003cp\u003eHere is the link to my iterative segment tree code: \u003ca href\u003d\"http://ideone.com/33m8yZ\"\u003ehttp://ideone.com/33m8yZ\u003c/a\u003e\u003c/p\u003e\u003cp\u003eIf anyone has any way of accepting this problem with java please tell me about it.\u003c/p\u003e\u003c/div\u003e","tags":["segment tree","spoj","java","tle"]}}