{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1523880663,"rating":-25,"authorHandle":"hissain.khan","modificationTimeSeconds":1523880663,"id":58956,"title":"\u003cp\u003eCode review request: Max flow\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eI have written a naive max flow with DFS, could anyone review my below code. What to do to improve the code and what are the worst cases where this wont work fine.\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e#include \u0026lt;stdio.h\u0026gt;\n#include \u0026lt;stdlib.h\u0026gt;\n\n#define SZ 20\n\nint flow[SZ][SZ];\nint residue[SZ][SZ];\nint N, E, u, v, c;\nint Source, Sink;\n\nint visited[SZ];\n\ninline int min(int a, int b){ return a \u0026lt; b ? a : b; }\ninline int abs(int n){ return n \u0026lt; 0 ? -n : n; }\n\nvoid print(int graph[SZ][SZ]){\n\n\tfor (register int i \u003d 0; i \u0026lt; N; i++){\n\t\tfor (register int j \u003d 0; j \u0026lt; N; j++){\n\t\t\tprintf(\u0026quot;%d \u0026quot;, graph[i][j]);\n\t\t}\n\t\tprintf(\u0026quot;\\n\u0026quot;);\n\t}\n\tprintf(\u0026quot;\\n\u0026quot;);\n}\n\nint dfs(int u, int rescap){\n\n\tif (u \u003d\u003d Sink){ return rescap;}\n\n\tvisited[u] \u003d 1;\n\n\tfor (register int v \u003d 0; v \u0026lt; N; v++){\n\n\t\tif (visited[v] \u003d\u003d 0 \u0026amp;\u0026amp; residue[u][v]){\n\n\t\t\tint r \u003d dfs(v, min(residue[u][v], rescap));\n\n\t\t\tif (r) {\n\n\t\t\t\tflow[u][v] +\u003d r;\n\t\t\t\tresidue[u][v] -\u003d r;\n\t\t\t\tresidue[v][u] +\u003d r;\n\n\t\t\t\tif (flow[u][v] \u0026gt; flow[v][u]){\n\t\t\t\t\tflow[u][v] -\u003d flow[v][u];\n\t\t\t\t\tflow[v][u] \u003d 0;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tflow[v][u] -\u003d flow[u][v];\n\t\t\t\t\tflow[u][v] \u003d 0;\n\t\t\t\t}\n\n\t\t\t\tvisited[u] \u003d 0;\n\t\t\t\treturn r;\n\t\t\t}\n\t\t}\n\t}\n\n\tvisited[u] \u003d 0;\n\n\treturn 0;\n}\n\n/*void input(){\n\n\tfreopen(\u0026quot;input.txt\u0026quot;, \u0026quot;wt\u0026quot;, stdout);\n\n\tprintf(\u0026quot;%d %d\\n\u0026quot;, SZ, 5*SZ);\n\n\tfor (register int i \u003d 0; i \u0026lt; 5 * SZ; i++){\n\n\t\tint a \u003d rand() % SZ;\n\t\tint b \u003d rand() % SZ;\n\t\tint c \u003d rand() % SZ;\n\n\t\tprintf(\u0026quot;%d %d %d\\n\u0026quot;, a, b, c);\n\t}\n\n\tfclose(stdout);\n}*/\n\nvoid maxflow(){\n\n\tfreopen(\u0026quot;input.txt\u0026quot;, \u0026quot;rt\u0026quot;, stdin);\n\tscanf(\u0026quot;%d %d\u0026quot;, \u0026amp;N, \u0026amp;E);\n\n\tSource \u003d 0;\n\tSink \u003d N - 1;\n\n\tfor (register int i \u003d 0; i \u0026lt; E; i++){\n\t\tscanf(\u0026quot;%d %d %d\u0026quot;, \u0026amp;u, \u0026amp;v, \u0026amp;c);\n\t\tresidue[u][v] \u003d c;\n\t}\n\n\tint total \u003d 0;\n\tint rescap \u003d 0;\n\twhile (rescap \u003d dfs(Source, 1 \u0026lt;\u0026lt; 30))\n\t\ttotal +\u003d rescap;\n\n\tprintf(\u0026quot;total flow: %d\\n\u0026quot;, total);\n\n\tprint(flow);\n\tprint(residue);\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":["max flow"]}}