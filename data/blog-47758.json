{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1476478460,"rating":26,"authorHandle":"sam721","modificationTimeSeconds":1476478576,"id":47758,"title":"\u003cp\u003eFFT and overflows\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHi everyone! I was recently doing some FFT-related problems, and I found a very interesting one.\u003c/p\u003e\u003cp\u003eIt\u0027s from the CERC 2015 (problem F)\u003c/p\u003e\u003cp\u003eThis problem involves many things from number theory, and one of them is doing some convolutions mod \u003cspan class\u003d\"tex-span\"\u003e10\u003csup class\u003d\"upper-index\"\u003e6\u003c/sup\u003e + 3\u003c/span\u003e. After several WA, I found my error. The FFT algorithm produce many overflows after doing the convolution.\u003c/p\u003e\u003cp\u003eI know that FFT was one of the expected solutions, but how this issues can be handled? Is there a way to apply FFT with modular arithmetic?\u003c/p\u003e\u003cp\u003eThanks!\u003c/p\u003e\u003c/div\u003e","tags":[]}}