{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1411130744,"rating":-4,"authorHandle":"wolfSyntax","modificationTimeSeconds":1411130744,"id":13863,"title":"\u003cp\u003eLowest Common Ancestor\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003ewhere root \u003d 1, Left nodes (L) \u003d 2n and Right nodes (R) \u003d 2n+1. In getting the Common Ancestor, we need to compare the ancestor of Left nodes and Right Nodes until the result is the same or reaches to 1 as their common ancestor.\u003c/p\u003e \u003cpre\u003e(1)\n               /            \\\n              /              \\\n            (2)               (3)\n         /       \\         /       \\\n        /         \\       /         \\\n      (4)         (5)   (6)         (7)\u003c/pre\u003e\u003cp\u003eFor example, The ancestor of :  \u0026gt; 2 and 3 is 1.  \u0026gt; 5 and 6 is 1.  \u0026gt; 4 and 5 is 2.  \u0026gt; 6 and 7 is 3.  \u0026gt; and so on.\u003c/p\u003e\u003cp\u003eWhile(true):  if(L \u0026gt; R) Then:  L \u003d L \u0026lt;\u0026lt; 1;  else if(R \u0026gt; L) Then:  R \u003d R \u0026lt;\u0026lt; 1;  else:  break;\u003c/p\u003e\u003cp\u003eprint(R)\u003c/p\u003e\u003c/div\u003e","tags":[]}}