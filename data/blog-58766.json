{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1523021060,"rating":1,"authorHandle":"Peregrine_Falcon","modificationTimeSeconds":1523103109,"id":58766,"title":"\u003cp\u003eConvert Infix to Postfix and Prefix\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e\u003cstrong\u003eConvert Infix to Postfix Notation\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eInitially we’ve a \u003cem\u003estring\u003c/em\u003e S which represent the expression in infix format. Now we need a character \u003cem\u003estack\u003c/em\u003e.\u003c/p\u003e\u003cp\u003e*We’ll iterate through the \u003cem\u003estring\u003c/em\u003e S, from left to right.\u003c/p\u003e \u003cul\u003e   \u003cli\u003e\u003cp\u003eWhenever we encounter an operand we’ll print it.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eIf we encounter an ‘(‘ we’ll push it to the \u003cem\u003estack\u003c/em\u003e.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eIf we encounter an ‘)’ we’ll take the following actions:\u003c/p\u003e   \u003col\u003e     \u003cli\u003eWe’ll continue to pop top of the \u003cem\u003estack\u003c/em\u003e until we find the ’(‘\u003c/li\u003e     \u003cli\u003eBefore we pop top of the \u003cem\u003estack\u003c/em\u003e, we’ll print every character of top of the \u003cem\u003estack\u003c/em\u003e except ‘)’.\u003c/li\u003e   \u003c/ol\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eIf we encounter an operator, we’ll take the following actions:\u003c/p\u003e   \u003col\u003e     \u003cli\u003eWe’ll continue to pop top of the \u003cem\u003estack\u003c/em\u003e until we find that S[ i ] is greater than the top of the  \u003cem\u003eStack\u003c/em\u003e (by the rules of precedence) Ex: if we found an Multiplication operator on S [ i ]  We’ll continue searching for addition or subtraction operator on top of the \u003cem\u003estack\u003c/em\u003e.  We’ll stop searching until it’s empty or we’ve found one. Before that we’ll pop top of the \u003cem\u003eStack\u003c/em\u003e. And before pop, we’ll print every operators.\u003c/li\u003e   \u003c/ol\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eWhen the traversal will finished, we’ll continue to pop top of the \u003cem\u003estack\u003c/em\u003e until it\u0027s empty, and before pop we’ll print every operators.\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e\u003cp\u003eYou can see my \u003ca href\u003d\"https://ideone.com/QMBklG\"\u003eCode\u003c/a\u003e \u003c/p\u003e\u003cp\u003e\u003cstrong\u003eConvert Infix to Prefix Notation\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eTo convert an infix to Prefix, first we’ve to know how to convert Infix to postfix notation.\u003c/p\u003e\u003cp\u003eInitially we’ve a \u003cem\u003estring\u003c/em\u003e S which represent the expression in infix format. \u003c/p\u003e \u003cul\u003e   \u003cli\u003e\u003cp\u003eReverse the \u003cem\u003estring\u003c/em\u003e S. After reversing A+B*C will become C*B+A. Note while reversing  each ‘(‘ will become ‘)’ and each ‘)’ becomes ‘(‘.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eObtain the postfix expression of the modified \u003cem\u003estring\u003c/em\u003e S. We’ve to handle the ‘(‘ as ‘)’ and ‘)’ as ‘(‘\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eJust reverse the postfix expression we’ve.\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e\u003cp\u003eYou can see my \u003ca href\u003d\"https://ideone.com/Afvgkz\"\u003eCode\u003c/a\u003e\u003c/p\u003e\u003cp\u003eIf you want to know in details about Infix, Postfix and Prefix \u003ca href\u003d\"http://www.cs.man.ac.uk/~pjj/cs212/fix.html\"\u003eThis Link\u003c/a\u003e maybe help you.\u003c/p\u003e\u003cp\u003eHere are some basic practice problems: \u003ca href\u003d\"https://uva.onlinejudge.org/index.php?option\u003dcom_onlinejudge\u0026amp;Itemid\u003d8\u0026amp;category\u003d24\u0026amp;page\u003dshow_problem\u0026amp;problem\u003d308\"\u003eWhatFix Notation\u003c/a\u003e \u003ca href\u003d\"https://uva.onlinejudge.org/index.php?option\u003dcom_onlinejudge\u0026amp;Itemid\u003d8\u0026amp;category\u003d24\u0026amp;page\u003dshow_problem\u0026amp;problem\u003d668\"\u003eEquation\u003c/a\u003e \u003ca href\u003d\"https://www.codechef.com/problems/CDM01\"\u003eConvert the Expression\u003c/a\u003e\u003c/p\u003e\u003cp\u003eThank you for reading. If there anything else, please let me know.\u003c/p\u003e\u003c/div\u003e","tags":[]}}