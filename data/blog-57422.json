{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1517266522,"rating":0,"authorHandle":"AngelOfGrief","modificationTimeSeconds":1517267786,"id":57422,"title":"\u003cp\u003eContest #1 — Editorial\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003ch1\u003eA — Hamada And The Bicycle\u003c/h1\u003e\u003cp\u003eHint : Let \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ed\u003c/i\u003e\u003c/span\u003e is distance between \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ee\u003c/i\u003e\u003c/span\u003e, if Hamada is at point 0 then he wants to reach \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ed\u003c/i\u003e\u003c/span\u003e\u003c/p\u003e\u003cp\u003eHint 2: At time \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003et\u003c/i\u003e\u003c/span\u003e Hamada is at point \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/f3/01/f3010ccfae080191895008d5597ca733dda3e835.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, We want the minimum \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003et\u003c/i\u003e\u003c/span\u003e S.T \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/f3/01/f3010ccfae080191895008d5597ca733dda3e835.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e \u003cspan class\u003d\"tex-span\"\u003e ≥ \u003c/span\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ed\u003c/i\u003e\u003c/span\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://pastebin.com/Gwfj7SCv\"\u003eSolution\u003c/a\u003e\u003c/p\u003e\u003cp\u003eAnalysis : obviously this code run in \u003ccode\u003eO(1)\u003c/code\u003e\u003c/p\u003e\u003ch1\u003eB — Hamada And The Resturant\u003c/h1\u003e\u003cp\u003eHint : We just need to sort the input as explained in the problem statement\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://pastebin.com/zb6SZkB5\"\u003eSolution\u003c/a\u003e\u003c/p\u003e\u003cp\u003eAnalysis : Sorting input take \u003ccode\u003eO(nlog(n) )\u003c/code\u003e using \u003ccode\u003estd::sort\u003c/code\u003e\u003c/p\u003e\u003ch1\u003eC — Hamada The Senpai\u003c/h1\u003e\u003cp\u003eHint : Read numbers in string as number consist of 100 digit\u003c/p\u003e\u003cp\u003eHint 2: Add zeros to the left of one number to make the length of the two strings equal\u003c/p\u003e\u003cp\u003eHint 3: Simulate the addition process using loops\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://pastebin.com/fb2s1C7P\"\u003eSolution\u003c/a\u003e\u003c/p\u003e\u003cp\u003eAnalysis : Complexity is \u003ccode\u003eO(n)\u003c/code\u003e where \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e is the length of the string\u003c/p\u003e\u003ch1\u003eD — Hamada And Shawky\u003c/h1\u003e\u003cp\u003eHint : If \u003ccode\u003ek \u003d 1\u003c/code\u003e there is no answer\u003c/p\u003e\u003cp\u003eHint 2: If you have \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e cola retun the maximum number you can return and change \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e to the cola you can\u0027t reurn and the new cola you got\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://pastebin.com/tAF1H0N8\"\u003eSolution\u003c/a\u003e\u003c/p\u003e\u003cp\u003eAnalysis : For the smallest possible \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e \u003ccode\u003ek \u003d 2\u003c/code\u003e then the maximum number of steps we need to have \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e \u0026lt; \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e is log(n) so complexity is \u003ccode\u003eO(log(n))\u003c/code\u003e\u003c/p\u003e\u003ch1\u003eE — Hamada And Car Factory\u003c/h1\u003e\u003cp\u003eHint : We need a math equation to simulate this problem\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://pastebin.com/J4N672AK\"\u003eSolution\u003c/a\u003e\u003c/p\u003e\u003cp\u003eAnalysis : \u003ccode\u003eO(1)\u003c/code\u003e\u003c/p\u003e\u003ch1\u003eF — Hamada And His Crush\u003c/h1\u003e\u003cp\u003eHint : make 3 booleans for each data structure initally true, at some operation if you are sure the DS is not the answer make its boolean false\u003c/p\u003e\u003cp\u003eHint 2: check 3 booleans at the end to print the proper answer\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://pastebin.com/GaKp1ZfD\"\u003eSolution\u003c/a\u003e\u003c/p\u003e\u003cp\u003eAnalysis : For the stack \u003ccode\u003eO(n)\u003c/code\u003e, For the queue \u003ccode\u003eO(n)\u003c/code\u003e and For the priority-queue \u003ccode\u003eO(nlog(n))\u003c/code\u003e. Overall complexity is \u003ccode\u003eO(nlog(n))\u003c/code\u003e\u003c/p\u003e\u003ch1\u003eG — Hamada in Mexico\u003c/h1\u003e\u003cp\u003eHint : Deque is the proper to simulate this problem\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://pastebin.com/ycDiemKL\"\u003eSolution\u003c/a\u003e\u003c/p\u003e\u003cp\u003eAnalysis : Each opeartion take \u003ccode\u003eO(1)\u003c/code\u003e, Complexity \u003ccode\u003eO(n)\u003c/code\u003e\u003c/p\u003e\u003ch1\u003eH — Hamada And The Little Girl\u003c/h1\u003e\u003cp\u003eHint : Keep array to count the occurence of each character in the array \u003c/p\u003e\u003cp\u003eHint 2: Sort Charchter which appeared in the string by frequency \u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://pastebin.com/urVBWC90\"\u003eSolution\u003c/a\u003e\u003c/p\u003e\u003cp\u003eAnalysis : we need to traverse the string in \u003ccode\u003eO(n)\u003c/code\u003e and the get the median of sorted Characters.\u003c/p\u003e\u003ch1\u003eI — Hamada and the Keys\u003c/h1\u003e\u003cp\u003eHint : keep the value of each character in array and each string loop through it to get its value\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://pastebin.com/ftSwcMEY\"\u003eSolution\u003c/a\u003e\u003c/p\u003e\u003cp\u003eAnalysis : \u003ccode\u003eO(n * l)\u003c/code\u003e where \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e is number of strings and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/span\u003e is maximum length of strings\u003c/p\u003e\u003ch1\u003eJ — Hamada And The Gifts\u003c/h1\u003e\u003cp\u003eHint : Keep variable of the gift to be put, initaly \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e, and loop over the gifts, if gift is present print it and print all gifts you can put and change value of the variable, if not present print \u0026quot;waiting\u0026quot;\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://pastebin.com/Fqkvcs74\"\u003eSolution\u003c/a\u003e\u003c/p\u003e\u003cp\u003eAnalysis : \u003ccode\u003eO(n)\u003c/code\u003e\u003c/p\u003e\u003ch1\u003eK — Hamada And His Naughty Daughter\u003c/h1\u003e\u003cp\u003eHint : Use map to store the occurence of each channel\u003c/p\u003e\u003cp\u003eHint 2: Traverse the map to get the answer, map is always sorted\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://pastebin.com/dcv24E8g\"\u003eSolution\u003c/a\u003e\u003c/p\u003e\u003cp\u003eAnalysis : Complexity is \u003ccode\u003eO(t * nlog(n)\u003c/code\u003e where \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003et\u003c/i\u003e\u003c/span\u003e is number of testcases\u003c/p\u003e\u003ch1\u003eL — Hamada And The Valentine\u003c/h1\u003e\u003cp\u003eHint : Answer is the frequncy of the gift which has the size appeared most\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://pastebin.com/4UGz9vVp\"\u003eSolution\u003c/a\u003e\u003c/p\u003e\u003cp\u003eAnalysis : \u003ccode\u003eO(nlog(n))\u003c/code\u003e as each operation in multiset takes \u003ccode\u003eO(log(n))\u003c/code\u003e\u003c/p\u003e\u003ch1\u003eM — Hamada And Spreadsheets\u003c/h1\u003e\u003cp\u003eHint : Make a boolean function to detrmine if each string is of first or second type\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://pastebin.com/MjZk2fh1\"\u003eSolution\u003c/a\u003e\u003c/p\u003e\u003cp\u003eAnalysis : \u003ccode\u003eO(n * l)\u003c/code\u003e where l is maximum length of a string in input.\u003c/p\u003e\u003ch1\u003eN — Hamada Splitting Text\u003c/h1\u003e\u003cp\u003eHint : let \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e\u003c/span\u003e is the length of string, search \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ey\u003c/i\u003e\u003c/span\u003e S.T \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e \u003d \u003ci\u003ex\u003c/i\u003e * \u003ci\u003ea\u003c/i\u003e + \u003ci\u003ey\u003c/i\u003e * \u003ci\u003em\u003c/i\u003e\u003c/span\u003e\u003c/p\u003e\u003cp\u003eHint 2: For \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e - \u003ci\u003ex\u003c/i\u003e * \u003ci\u003ea\u003c/i\u003e \u003d \u003ci\u003ey\u003c/i\u003e * \u003ci\u003eb\u003c/i\u003e\u003c/span\u003e try all possible values of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e and check if \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ey\u003c/i\u003e\u003c/span\u003e is valid\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://pastebin.com/MvqR83pA\"\u003eSolution\u003c/a\u003e\u003c/p\u003e\u003cp\u003eAnalysis : \u003ccode\u003eO(n)\u003c/code\u003e where n is the length of the string\u003c/p\u003e\u003ch1\u003eO — Hamada And DR Tharwat\u003c/h1\u003e\u003cp\u003eHint : Just print the square of the number\u003c/p\u003e\u003c/div\u003e","tags":["editorial"]}}