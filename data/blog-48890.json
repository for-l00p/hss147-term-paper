{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":false,"creationTimeSeconds":1481110756,"rating":0,"authorHandle":"Slamur","modificationTimeSeconds":1481112583,"id":48890,"title":"\u003cp\u003eБазовые структуры данных. Java. Коллекции. Стек, очереди\u003c/p\u003e","locale":"ru","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eВ данной лекции мы продолжим рассматривать структуры данных в Java: стек и очереди. \u003cbr /\u003e\u003c/p\u003e\u003ch4\u003e2) Cтек, очередь и двунаправленная очередь.\u003c/h4\u003e\u003cp\u003eХотя в Java есть класс Stack, но он оптимизирован для работы в многопоточных приложениях, поэтому лучше использовать двунаправленную очередь для стека.\u003c/p\u003e\u003cp\u003eОсновными интерфейсами для работы с очередьми являются Queue (очередь) и Deque (двунаправленная очередь).\u003c/p\u003e\u003cp\u003eОсновной реализацией стека, очереди и двунаправленной очереди является класс ArrayDeque — дека на массиве.\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e\t// в этом интерфейсе есть и функции стека, и очереди, и двунаправленной очереди\n\tinterface Deque\u0026lt;T\u0026gt; extends Collection\u0026lt;T\u0026gt; {\n\t\t\n\t\t// добавление значения\n\t\tvoid addFirst(T value);\n\t\tvoid addLast(T value);\n\t\tvoid add(T value); // аналогично addLast()\n\t\t\n\t\t// достать значение (удалить)\n\t\tT pollFirst();\n\t\tT pollLast();\n\t\tT poll(); // аналогично pollFirst()\n\t\t\n\t\t// добавить значение в стек\n\t\tvoid push(T value); // аналогично addFirst()\n\t\t\n\t\t// достать значение из стека\n\t\tT pop(); // аналогично pollFirst()\n\t\t\n\t\t// показать значение (не удаляя его)\n\t\tT peekFirst();\n\t\tT peekLast();\n\t\tT peek(); // аналогично peekFirst()\n\t\t\n\t\t// очистить очередь\n\t\tvoid clear();\n\t}\n\u003c/code\u003e\u003c/pre\u003e \u003cpre\u003e\u003ccode\u003e\timport java.util.*;\n\t\n\tDeque\u0026lt;Character\u0026gt; stack \u003d new ArrayDeque\u0026lt;Character\u0026gt;();\n\t\n\tstack.push(\u0027(\u0027);\n\tstack.push(\u0027[\u0027);\n\t\n\tchar last \u003d stack.pop(); // last \u003d\u003d \u0027[\u0027, stack \u003d { \u0027(\u0027 }\n\tchar peekLast \u003d stack.peek(); // peekLast \u003d \u0027(\u0027, stack \u003d { \u0027(\u0027 }\n\t\n\tDeque\u0026lt;Integer\u0026gt; queue \u003d new ArrayDeque\u0026lt;Integer\u0026gt;();\n\t\n\tqueue.add(333);\n\tqueue.add(444);\n\tqueue.add(555);\n\t\n\tint first \u003d queue.peek(); // first \u003d 333, queue \u003d { 333, 444, 555 }\n\tint pollFirst \u003d queue.poll(); // pollFirst \u003d 333, queue \u003d { 444, 555 }\n\t\n\tDeque\u0026lt;String\u0026gt; deque \u003d new ArrayDeque\u0026lt;String\u0026gt;();\n\t\n\tdeque.add(\u0026quot;qwer\u0026quot;); // { qwer }\n\tdeque.addFirst(\u0026quot;rrr\u0026quot;); // { rrr, qwer }\n\tdeque.addLast(\u0026quot;tyuri\u0026quot;); // { rrr, qwer, tyuri }\n\t\n\tString first \u003d deque.peek(); // first \u003d rrr\n\tfirst \u003d deque.peekFirst(); // first \u003d rrr\n\t\n\tString last \u003d deque.peekLast(); // last \u003d tyuri\n\t\n\tString s \u003d deque.poll(); // s \u003d rrr,  { qwer, tyuri }\n\ts \u003d deque.pollLast(); // s \u003d tyuri, { qwer }\n\ts \u003d deque.pollFirst(); // s \u003d qwer, { }\n\t\n\ts \u003d deque.poll(); // s \u003d null - deque пустая\n\ts \u003d deque.peek(); // s \u003d null - и тут тоже пустая\n\u003c/code\u003e\u003c/pre\u003e\u003ch4\u003e3) Очередь с приоритетами.\u003c/h4\u003e\u003cp\u003eОчередь с приоритетами в Java представлена интерфейсом Queue (очередь все-таки), а реализована классом PriorityQueue.\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e\timport java.util.*;\n\t\t\n\tQueue\u0026lt;Integer\u0026gt; pq \u003d new PriorityQueue\u0026lt;Integer\u0026gt;();\n\t\n\tpq.add(4);\n\tpq.add(2);\n\tpq.add(5);\n\tpq.add(1);\n\tpq.add(3);\n\t\n\t// в Java очередь с приоритетами на минимум\n\tint first \u003d pq.peek(); // first \u003d 1\n\t\n\twhile (pq.size() \u0026gt; 0) {\n\t\tprint(pq.poll()); // будет выписано 1 2 3 4 5\n\t}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":["самара","структуры данных","коллекции","java","стек","очередь","очередь с приоритетами"]}}