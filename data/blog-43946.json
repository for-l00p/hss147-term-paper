{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":true,"creationTimeSeconds":1458668024,"rating":9,"authorHandle":"ruslanjan","modificationTimeSeconds":1458668820,"id":43946,"title":"\u003cp\u003eГенератор числа ПИ на С++\u003c/p\u003e","locale":"ru","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eКому интересно. Вот код:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e#include \u0026lt;time.h\u0026gt;\n#include \u0026lt;stdio.h\u0026gt;\n#include \u0026lt;malloc.h\u0026gt;\n#include \u0026lt;math.h\u0026gt;\n\nlong B\u003d10000; \nlong LB\u003d4;   \nlong MaxDiv\u003d450;  \n\nvoid SetToInteger (long n, long *x, long Integer) \n{\n\tlong i;\n\tfor (i\u003d1; i\u0026lt;n; i++) x[i] \u003d 0;\n\tx[0] \u003d Integer;\n}\n\nlong IsZero (long n, long *x) \n{\n\tlong i;\n\tfor (i\u003d0; i\u0026lt;n; i++)  \n    \tif (x[i])   \n    \t\treturn 0;\n        return 1;\n}\n\nvoid Add (long n, long *x, long *y) \n{\n\tlong carry\u003d0, i;\n\tfor (i\u003dn-1; i\u0026gt;\u003d0; i--) \n\t{\n\t    x[i] +\u003d y[i]+carry;\n\t    if (x[i]\u0026lt;B) \n\t    \tcarry \u003d 0;\n\t    else \n\t    {\n    \t\tcarry \u003d 1;\n    \t\tx[i] -\u003d B;\n    \t}\n  \t}  \n}\n\nvoid Sub (long n, long *x, long *y) \n{\n\tlong i;\n\tfor (i\u003dn-1; i\u0026gt;\u003d0; i--) \n\t{\n    \tx[i] -\u003d y[i];\n\t\tif (x[i]\u0026lt;0) \n\t\t{\n\t    \tif(i) \n   \t\t \t{      \n    \t    \tx[i] +\u003d B;\n    \t   \t\tx[i-1]--;\n    \t  \t}\n  \t\t}\n  \t}  \n}\n\nvoid Mul (long n, long *x, long q) \n{\n\tlong carry\u003d0, xi, i;\n\tfor (i\u003dn-1; i\u0026gt;\u003d0; i--) \n\t{\n\t    xi  \u003d x[i]*q;               \n\t    xi +\u003d carry;                \n\t    if (xi\u0026gt;\u003dB) \n\t    {\n      \t\tcarry \u003d xi/B;\n      \t\txi -\u003d (carry*B);\n    \t}\n   \t \telse \n      \t\tcarry \u003d 0;\n    \tx[i] \u003d xi;\n\t}  \n}\n\nvoid Div (long n, long *x, long d, long *y) \n{\n\tlong carry\u003d0, xi, q, i;\n  \tfor (i\u003d0; i\u0026lt;n; i++) \n  \t{\n\t\txi \u003d x[i]+carry*B;\n   \t\tq \u003d xi/d;\n    \tcarry \u003d xi-q*d;   \n    \ty[i] \u003d q;        \n  \t}  \n}\n\nvoid arccot (long p, long n, long *x, long *buf1, long *buf2) \n{\n\tlong p2\u003dp*p, k\u003d3, sign\u003d0;\n\tlong *uk\u003dbuf1, *vk\u003dbuf2;\n\tSetToInteger (n, x, 0);\n  \tSetToInteger (n, uk, 1);    \n  \tDiv (n, uk, p, uk);\n  \tAdd (n, x, uk);              \n  \twhile (!IsZero(n, uk)) \n  \t{\n    \tif (p\u0026lt;MaxDiv)\n      \t\tDiv (n, uk, p2, uk); \n    \telse \n    \t{\n      \t\tDiv (n, uk, p, uk);   \n      \t\tDiv (n, uk, p, uk);  \n    \t}\n    \tDiv (n, uk, k, vk);       \n    \tif (sign) \n    \t\tAdd (n, x, vk); \n    \telse \n    \t\tSub (n, x, vk);      \n    \tk+\u003d2;\n    \tsign \u003d 1-sign;\n  \t}\t\n}\n\nvoid Print (long n, long *x) \n{\n  \tlong i; \n  \tprintf (\u0026quot;%d.\u0026quot;, x[0]);\n  \tfor (i\u003d1; i\u0026lt;n; i++) \n  \t{\n    \tprintf (\u0026quot;%.4d\u0026quot;, x[i]);\n    \tif (i%25\u003d\u003d0) printf (\u0026quot;%8d\\n\u0026quot;, i*4);\n  \t}                          \n  \tprintf (\u0026quot;\\n\u0026quot;);\n}\nint main () {  \n  \tclock_t endclock, startclock; \n  \tlong NbDigits\u003d10000/*вот тут сколько строк будет сгенерировано(Строка длинною 25 символов)*/, NbArctan;\n  \tlong p[10], m[10];\n  \tlong size\u003d1+NbDigits/LB, i;\n  \tlong *Pi \u003d (long *)malloc(size*sizeof(long));\n  \tlong *arctan  \u003d (long *)malloc(size*sizeof(long));\n  \tlong *buffer1 \u003d (long *)malloc(size*sizeof(long));\n  \tlong *buffer2 \u003d (long *)malloc(size*sizeof(long)); \n  \tstartclock \u003d clock();    \n  \tNbArctan \u003d 3;\n  \tm[0] \u003d 12; m[1] \u003d 8;  m[2] \u003d -5;\n  \tp[0] \u003d 18; p[1] \u003d 57; p[2] \u003d 239; \n  \tSetToInteger (size, Pi, 0);\n  \tfor (i\u003d0; i\u0026lt;NbArctan; i++) \n  \t{\n    \tarccot (p[i], size, arctan, buffer1, buffer2);\n    \tMul (size, arctan, abs(m[i]));\n    \tif (m[i]\u0026gt;0) \n    \t\tAdd (size, Pi, arctan);  \n    \telse \n    \t\tSub (size, Pi, arctan);  \n\t}\n  \tMul (size, Pi, 4);\n  \tendclock \u003d clock ();\n  \tPrint (size, Pi); \n  \tprintf (\u0026quot;time: %9.2f seconds\\n\u0026quot;,(float)(endclock-startclock)/(float)CLOCKS_PER_SEC ); \n  \tfree (Pi);\n  \tfree (arctan);\n    free (buffer1);\n    free (buffer2);\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":["c++","pi","generator"]}}