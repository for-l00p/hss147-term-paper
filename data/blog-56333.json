{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1513194684,"rating":-9,"authorHandle":"brdy","modificationTimeSeconds":1513209007,"id":56333,"title":"\u003cp\u003eIs my approach wrong?\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e\u003ca href\u003d\"http://www.usaco.org/index.php?page\u003dviewproblem2\u0026amp;cpid\u003d597\"\u003ehttp://www.usaco.org/index.php?page\u003dviewproblem2\u0026amp;cpid\u003d597\u003c/a\u003e\u003c/p\u003e\u003cp\u003eI wrote multiple solutions for this problem:\u003c/p\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eO(n+nlogn^2) Solution - I wrote this slower solution to compare with my faster one\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"https://hastebin.com/panuwapaza.cpp\"\u003ehttps://hastebin.com/panuwapaza.cpp\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eO(n+logn^3) Solution - My original solution\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003ca href\u003d\"https://hastebin.com/vixilasaxi.cpp\"\u003ehttps://hastebin.com/vixilasaxi.cpp\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003cp\u003eMy approach: - Store values, multiply them by two. This avoid errors in dealing with floating-point values - Precompute prefix and suffix: at every point store the value of radius necessary to destroy all haybales to the left (prefix) and the right (suffix). - Binary Search on Size of initial Radius (of explosion) - Binary Search of location - upper_bound/lower_bound inside to check for location, and then check if possible location using prefix/suffix values\u003c/p\u003e\u003cp\u003eI have tried to debug this for about a week, I asked about 4 people, and I changed my method and I still get WA with binary search.\u003c/p\u003e\u003cp\u003eSome things that I tried: - Wrote slower code for less chance of error; this code produces same output - Changing upper and lower values of binary search to the only possible locations of haybales (I changed it back because this had no effect)\u003c/p\u003e\u003cp\u003eSome things I haven\u0027t tried: - Throw away prefix/suffix and check it in O(n) \u0026lt;-- (now I tried, it worked)\u003c/p\u003e\u003cp\u003eShould I completely changed my approach? I think this approach can go. If it is just another bug (hopefully), does anyone have an idea what the bug is?\u003c/p\u003e\u003cp\u003eEDIT: I solved it thanks to \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/Noam527\" title\u003d\"Candidate Master Noam527\"\u003eNoam527\u003c/a\u003e and \u003ca class\u003d\"rated-user user-cyan\" href\u003d\"/profile/WhaleVomit\" title\u003d\"Specialist WhaleVomit\"\u003eWhaleVomit\u003c/a\u003e â€” wv made me realize my suffix and prefix ignored the case where the optimal simulation does not travel along adjacent hay bales. Also Noam suggested O(n) checking (which worked).\u003c/p\u003e\u003c/div\u003e","tags":["binary search","usaco"]}}