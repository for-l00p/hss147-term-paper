{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1504168756,"rating":5,"authorHandle":"STommydx","modificationTimeSeconds":1504169378,"id":54196,"title":"\u003cp\u003eEditorial of Mini-Competition #3\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003ch3\u003e[problem:101430A]\u003c/h3\u003e\u003cp\u003eBrute force to check if there exists a pair of test cases which has the same input but different output.\u003c/p\u003e\u003cp\u003eComplexity: \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e)\u003c/span\u003e\u003c/p\u003e\u003cp\u003eOfficial solution: [submission:29938196]\u003c/p\u003e\u003ch3\u003e[problem:101430B]\u003c/h3\u003e\u003cp\u003eFor each non-mine cell, count the number of neighbouring cells and check if the number of the grid matches. \u003c/p\u003e\u003cp\u003eComplexity: \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003enm\u003c/i\u003e)\u003c/span\u003e\u003c/p\u003e\u003cp\u003eOfficial solution: [submission:29938204]\u003c/p\u003e\u003ch3\u003e[problem:101430C]\u003c/h3\u003e\u003cp\u003eAssume the answer is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e. There will be at least \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e integers strictly smaller than \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e + 1\u003c/span\u003e. Run a binary search on the answer.\u003c/p\u003e\u003cp\u003eComplexity: \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/ab/b5/abb5da4c52510c77307ecdc393e0871fffa995b0.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003eOfficial solution: [submission:29938214]\u003c/p\u003e\u003ch3\u003e[problem:101430D]\u003c/h3\u003e\u003cp\u003eThe answer is the number of surjective functions that can be formed from \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003c/span\u003e -\u0026gt; \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u003c/span\u003e where \u003cspan class\u003d\"tex-span\"\u003e|\u003ci\u003eA\u003c/i\u003e| \u003d \u003ci\u003en\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e|\u003ci\u003eB\u003c/i\u003e| \u003d \u003ci\u003ek\u003c/i\u003e\u003c/span\u003e. The problem can be solved easily by inclusion-exclusion principle. Alternative solution by dynamic programming exists.\u003c/p\u003e\u003cp\u003eComplexity: \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eqk\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e)\u003c/span\u003e with inclusion-exclusion, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003ci\u003ek\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e)\u003c/span\u003e with dp\u003c/p\u003e\u003cp\u003eOfficial solution: [submission:29938221]\u003c/p\u003e\u003ch3\u003e[problem:101430E]\u003c/h3\u003e\u003cp\u003eThis is a standard maximum bipartite matching problem. The answer is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e - \u003ci\u003emaxFlow\u003c/i\u003e\u003c/span\u003e. However, running Dinic\u0027s algorithm/ Hopcroft–Karp algorithm directly may cause TLE/MLE.\u003c/p\u003e\u003cp\u003eObserve that there are only 12 possible values for the difficulty. Let\u0027s build a flow network that has \u003cspan class\u003d\"tex-span\"\u003e12 + 144 + 2 \u003d 158\u003c/span\u003e nodes — a source, a sink, 12 possible difficulties of the prepared problems and 144 possible combinations of acceptable difficulties. Link the source to the 12 possible difficulties with capacity \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003efreq\u003c/i\u003e(\u003ci\u003ed\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e)\u003c/span\u003e. Link the acceptable combinations to the sink with capacity \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003efreq\u003c/i\u003e(\u003ci\u003ee\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e, \u003ci\u003ef\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e)\u003c/span\u003e. Link the prepared problems to acceptable difficulties combinations with infinite capacity. Running Edmonds–Karp algorithm/ Dinic\u0027s algorithm in the new flow network built should run in the time limit.\u003c/p\u003e\u003cp\u003eComplexity: \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e + \u003ci\u003em\u003c/i\u003e + |\u003ci\u003eV\u003c/i\u003e|\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e|\u003ci\u003eE\u003c/i\u003e|)\u003c/span\u003e\u003c/p\u003e\u003cp\u003eOfficial solution: [submission:29938230]\u003c/p\u003e\u003ch3\u003e[problem:101430F]\u003c/h3\u003e\u003cp\u003eRun DFS(s) for all trees in the forest and update all items (cost \u0026amp; happiness). Then use DP dafa to solve the knapsack.\u003c/p\u003e\u003cp\u003eComplexity: \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003enS\u003c/i\u003e)\u003c/span\u003e\u003c/p\u003e\u003cp\u003eOfficial solution: [submission:29938236]\u003c/p\u003e\u003ch3\u003e[problem:101430G]\u003c/h3\u003e\u003cp\u003eLet\u0027s build a graph with \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e vertexes. For every pair \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003er\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e, \u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e, \u003ci\u003er\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e, \u003ci\u003ej\u003c/i\u003e + 1\u003c/sub\u003e)\u003c/span\u003e, we put an edge between \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003er\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e, \u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e, \u003ci\u003er\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e, \u003ci\u003ej\u003c/i\u003e + 1\u003c/sub\u003e)\u003c/span\u003e with distance of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ed\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003er\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e, \u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e, \u003ci\u003er\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e, \u003ci\u003ej\u003c/i\u003e + 1\u003c/sub\u003e\u003c/sub\u003e\u003c/span\u003e if there does not exist one already. Run a bitmask dp to get the longest path. To implement the dp, update \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edp\u003c/i\u003e[\u003ci\u003ev\u003c/i\u003e][\u003ci\u003emask\u003c/i\u003e|1«\u003ci\u003ev\u003c/i\u003e]\u003c/span\u003e with \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edp\u003c/i\u003e[\u003ci\u003eu\u003c/i\u003e][\u003ci\u003emask\u003c/i\u003e] + \u003ci\u003eg\u003c/i\u003e[\u003ci\u003eu\u003c/i\u003e][\u003ci\u003ev\u003c/i\u003e]\u003c/span\u003e if the \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003eth\u003c/i\u003e\u003c/sup\u003e\u003c/span\u003e bit of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003emask\u003c/i\u003e\u003c/span\u003e is zero.\u003c/p\u003e\u003cp\u003eComplexity: \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e * 2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/sup\u003e)\u003c/span\u003e\u003c/p\u003e\u003cp\u003eOfficial solution: [submission:29938241]\u003c/p\u003e\u003c/div\u003e","tags":[]}}