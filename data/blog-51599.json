{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1492370890,"rating":0,"authorHandle":"Hiasat","modificationTimeSeconds":1492370890,"id":51599,"title":"\u003cp\u003eBinary Search\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003ch1\u003eBinary Search\u003c/h1\u003e\u003cp\u003eBinary search is the process of eliminating half of a range because that range has numbers outside of our interest. Here is little game you can play. \u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.cs.usfca.edu/~galles/visualization/Search.html\"\u003ehttps://www.cs.usfca.edu/~galles/visualization/Search.html\u003c/a\u003e The complexity of finding a number in a range is log (n). This is very fast, in comparison with the naive O(n) solution. Here is an explained code: \u003ca href\u003d\"http://ideone.com/lVV1KE\"\u003ehttp://ideone.com/lVV1KE\u003c/a\u003e\u003c/p\u003e\u003cp\u003eGood luck :)\u003c/p\u003e\u003cp\u003eWritten by Reem Obaid\u003c/p\u003e\u003cp\u003eSolve last problem in Week 2 :D\u003c/p\u003e\u003c/div\u003e","tags":[]}}