{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":true,"creationTimeSeconds":1479237905,"rating":82,"authorHandle":"gepardo","modificationTimeSeconds":1479238223,"id":48397,"title":"\u003cp\u003eTutorial of Codeforces Round #379 (Div. 2)\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eTutorial for the tasks of the contest. If something isn\u0027t clear, you can write in comments :)\u003c/p\u003e \u003cdiv class\u003d\"problemTutorial\" problemcode\u003d\"734A\"\u003eTutorial is loading...\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eCode\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003e#include \u0026lt;iostream\u0026gt;\n#include \u0026lt;string\u0026gt;\n\nusing namespace std;\n\nint main()\n{\n\tint n; cin \u0026gt;\u0026gt; n;\n\tstring s; cin \u0026gt;\u0026gt; s;\n\tint k_a \u003d 0, k_d \u003d 0;\n\tfor (int i \u003d 0; i \u0026lt; n; i++)\n\t\tif (s[i] \u003d\u003d \u0027A\u0027) k_a++; else k_d++;\n\tif (k_a \u0026gt; k_d) cout \u0026lt;\u0026lt; \u0026quot;Anton\u0026quot; \u0026lt;\u0026lt; endl;\n\tif (k_a \u0026lt; k_d) cout \u0026lt;\u0026lt; \u0026quot;Danik\u0026quot; \u0026lt;\u0026lt; endl;\n\tif (k_a \u003d\u003d k_d) cout \u0026lt;\u0026lt; \u0026quot;Friendship\u0026quot; \u0026lt;\u0026lt; endl;\n\treturn 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"problemTutorial\" problemcode\u003d\"734B\"\u003eTutorial is loading...\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eCode\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003e#include \u0026lt;iostream\u0026gt;\n#include \u0026lt;algorithm\u0026gt;\n\nusing namespace std;\n\nint main()\n{\n\tint k2, k3, k5, k6;\n\tcin \u0026gt;\u0026gt; k2 \u0026gt;\u0026gt; k3 \u0026gt;\u0026gt; k5 \u0026gt;\u0026gt; k6;\n\tint n256 \u003d min(k2, min(k5, k6));\n\tint n32 \u003d min(k3, k2 - n256);\n\tcout \u0026lt;\u0026lt; 32 * n32 + 256 * n256 \u0026lt;\u0026lt; endl;\n\treturn 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"problemTutorial\" problemcode\u003d\"734C\"\u003eTutorial is loading...\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eCode\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003e#include \u0026lt;iostream\u0026gt;\n\nusing namespace std;\n\nconst int max_n \u003d 1000000;\n\nint n, m, k;\nint x, s;\nint a[max_n], b[max_n], c[max_n], d[max_n];\n\ninline int max_complete(int money_left)\n{\n\tint l \u003d 0, r \u003d k;\n\twhile (l \u0026lt; r)\n\t{\n\t\tint m \u003d (l + r + 1) / 2;\n\t\tif (d[m] \u0026lt;\u003d money_left) l \u003d m; else r \u003d m-1;\n\t}\n\treturn c[l];\n}\n\nint main()\n{\n    ios_base::sync_with_stdio(false);\n\tcin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; m \u0026gt;\u0026gt; k;\n\tcin \u0026gt;\u0026gt; x \u0026gt;\u0026gt; s;\n\ta[0] \u003d x;\n\tb[0] \u003d 0;\n\tc[0] \u003d 0;\n\td[0] \u003d 0;\n\tfor (int i \u003d 1; i \u0026lt;\u003d m; i++) cin \u0026gt;\u0026gt; a[i];\n\tfor (int i \u003d 1; i \u0026lt;\u003d m; i++) cin \u0026gt;\u0026gt; b[i];\n\tfor (int i \u003d 1; i \u0026lt;\u003d k; i++) cin \u0026gt;\u0026gt; c[i];\n\tfor (int i \u003d 1; i \u0026lt;\u003d k; i++) cin \u0026gt;\u0026gt; d[i];\n\tlong long ans \u003d 1LL * n * x;\n\tfor (int i \u003d 0; i \u0026lt;\u003d m; i++)\n\t{\n\t\tint money_left \u003d s - b[i];\n\t\tif (money_left \u0026lt; 0) continue;\n\t\tans \u003d min(ans, 1LL * (n - max_complete(money_left)) * a[i]);\n\t}\n\tcout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; endl;\n\treturn 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"problemTutorial\" problemcode\u003d\"734D\"\u003eTutorial is loading...\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eCode\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003e#include \u0026lt;cstdio\u0026gt;\n#include \u0026lt;algorithm\u0026gt;\n\nusing namespace std;\n\ninline char in_char()\n{\n\tchar c \u003d \u0027\\0\u0027;\n\twhile (c \u0026lt;\u003d \u0027 \u0027)\n\t\tc \u003d getchar();\n\treturn c;\n}\n\ninline int in_int()\n{\n\tint n;\n\tscanf(\u0026quot;%d\u0026quot;, \u0026amp;n);\n\treturn n;\n}\n\nstruct figurine\n{\n\tchar kind;\n\tint x, y;\n};\n\nint n;\nint x0, y0;\nfigurine nearest[8];\n\ninline int dist(int x1, int y1, int x2, int y2)\n{\n\treturn max(abs(x1 - x2), abs(y1 - y2));\n}\n\ninline void upd_nearest(figurine\u0026amp; was, const figurine\u0026amp; cur)\n{\n\tif (was.kind \u003d\u003d \u0027?\u0027 ||\n\t    dist(x0, y0, cur.x, cur.y) \u0026lt; dist(x0, y0, was.x, was.y))\n\twas \u003d cur;\n}\n\ninline int get_direction(const figurine\u0026amp; cur)\n{\n\t// vertical\n\tif (cur.x \u003d\u003d x0 \u0026amp;\u0026amp; cur.y \u0026lt; y0) return 0;\n\tif (cur.x \u003d\u003d x0 \u0026amp;\u0026amp; cur.y \u0026gt; y0) return 1;\n\t// horizontal\n\tif (cur.y \u003d\u003d y0 \u0026amp;\u0026amp; cur.x \u0026lt; x0) return 2;\n\tif (cur.y \u003d\u003d y0 \u0026amp;\u0026amp; cur.x \u0026gt; x0) return 3;\n\t// diagonal 1\n\tif ((cur.y - y0) \u003d\u003d (cur.x - x0) \u0026amp;\u0026amp; cur.x \u0026lt; x0) return 4;\n\tif ((cur.y - y0) \u003d\u003d (cur.x - x0) \u0026amp;\u0026amp; cur.x \u0026gt; x0) return 5;\n\t// diagonal 2\n\tif ((cur.y - y0) \u003d\u003d (x0 - cur.x) \u0026amp;\u0026amp; cur.y \u0026lt; y0) return 6;\n\tif ((cur.y - y0) \u003d\u003d (x0 - cur.x) \u0026amp;\u0026amp; cur.y \u0026gt; y0) return 7;\n\t// the piece doesn\u0027t lie on any of the eight directions\n\treturn -1;\n}\n\nint main()\n{\n\tn \u003d in_int();\n\tx0 \u003d in_int(); y0 \u003d in_int();\n\tfor (int i \u003d 0; i \u0026lt; 8; i++)\n\t\tnearest[i].kind \u003d \u0027?\u0027;\n\t// read and update nearest\n\tfor (int i \u003d 0; i \u0026lt; n; i++)\n\t{\n\t\tfigurine cur;\n\t\tcur.kind \u003d in_char(); cur.x \u003d in_int(); cur.y \u003d in_int();\n\t\tint dir \u003d get_direction(cur);\n\t\tif (dir \u0026gt;\u003d 0)\n\t\t\tupd_nearest(nearest[dir], cur);\n\t}\n\tbool ans \u003d false;\n\t// check verticals and horizontals\n\tfor (int i \u003d 0; i \u0026lt; 4; i++)\n\t\tif (nearest[i].kind \u003d\u003d \u0027R\u0027 || nearest[i].kind \u003d\u003d \u0027Q\u0027)\n\t\t\tans \u003d true;\n\t// check diagonals\n\tfor (int i \u003d 4; i \u0026lt; 8; i++)\n\t\tif (nearest[i].kind \u003d\u003d \u0027B\u0027 || nearest[i].kind \u003d\u003d \u0027Q\u0027)\n\t\t\tans \u003d true;\n\t// output\n\tputs(ans ? \u0026quot;YES\u0026quot; : \u0026quot;NO\u0026quot;);\n\treturn 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"problemTutorial\" problemcode\u003d\"734E\"\u003eTutorial is loading...\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eCode\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003e#include \u0026lt;iostream\u0026gt;\n#include \u0026lt;vector\u0026gt;\n#include \u0026lt;algorithm\u0026gt;\n\nusing namespace std;\n\nint n;\nvector \u0026lt;int\u0026gt; color;\nvector \u0026lt; vector \u0026lt;int\u0026gt; \u0026gt; g;\nvector \u0026lt;char\u0026gt; used;\nvector \u0026lt;int\u0026gt; comp;\nint n1;\nvector \u0026lt; vector \u0026lt;int\u0026gt; \u0026gt; g1;\nvector \u0026lt;int\u0026gt; dp;\nint ans \u003d 0;\n\nvoid dfs1(int v, int col, int cmp)\n{\n    if (used[v]) return;\n    if (color[v] !\u003d col) return;\n    used[v] \u003d true;\n    comp[v] \u003d cmp;\n    for (int i \u003d 0; i \u0026lt; g[v].size(); i++)\n    {\n        int to \u003d g[v][i];\n        dfs1(to, col, cmp);\n    }\n}\n\nvoid dfs2(int v, int p \u003d -1)\n{\n    int mx1 \u003d 0, mx2 \u003d 0;\n    for (int i \u003d 0; i \u0026lt; g1[v].size(); i++)\n    {\n        int to \u003d g1[v][i];\n        if (to \u003d\u003d p) continue;\n        dfs2(to, v);\n        int val \u003d dp[to] + 1;\n        mx2 \u003d max(mx2, val);\n        if (mx1 \u0026lt; mx2) swap(mx1, mx2);\n    }\n    dp[v] \u003d mx1;\n    ans \u003d max(ans, mx1 + mx2);\n}\n\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin \u0026gt;\u0026gt; n;\n    color.resize(n);\n    g.resize(n);\n    comp.resize(n);\n    used.assign(n, false);\n    for (int i \u003d 0; i \u0026lt; n; i++) cin \u0026gt;\u0026gt; color[i];\n    for (int i \u003d 1; i \u0026lt; n; i++)\n    {\n        int a, b; cin \u0026gt;\u0026gt; a \u0026gt;\u0026gt; b; a--, b--;\n        g[a].push_back(b);\n        g[b].push_back(a);\n    }\n    for (int i \u003d 0; i \u0026lt; n; i++)\n        if (!used[i])\n            dfs1(i, color[i], n1++);\n    g1.resize(n1);\n    dp.resize(n1);\n    for (int i \u003d 0; i \u0026lt; n; i++)\n        for (int j \u003d 0; j \u0026lt; g[i].size(); j++)\n        {\n            int to \u003d g[i][j];\n            if (comp[i] !\u003d comp[to])\n                g1[comp[i]].push_back(comp[to]);\n        }\n    dfs2(0);\n    cout \u0026lt;\u0026lt; (ans + 1) / 2 \u0026lt;\u0026lt; endl;\n    return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"problemTutorial\" problemcode\u003d\"734F\"\u003eTutorial is loading...\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eCode\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003e#include \u0026lt;iostream\u0026gt;\n\nusing namespace std;\n\nconst int max_n \u003d 300000;\n\nint n;\nint b[max_n];\nint c[max_n];\nint a[max_n];\nint d[max_n];\nint b1[max_n];\nint c1[max_n];\nint bits[31][max_n];\nint kbit[31];\n\nint main()\n{\n\t// input\n\tios_base::sync_with_stdio(false);\n\tcin \u0026gt;\u0026gt; n;\n\tfor (int i \u003d 0; i \u0026lt; n; i++) cin \u0026gt;\u0026gt; b[i];\n\tfor (int i \u003d 0; i \u0026lt; n; i++) cin \u0026gt;\u0026gt; c[i];\n\tfor (int i \u003d 0; i \u0026lt; n; i++) d[i] \u003d b[i] + c[i];\n\n\t// searching for answer\n\tlong long sum \u003d 0;\n\tfor (int i \u003d 0; i \u0026lt; n; i++) sum +\u003d d[i];\n\tsum /\u003d (2 * n);\n\n\tfor (int i \u003d 0; i \u0026lt; n; i++) a[i] \u003d (d[i] - sum) / n;\n\n\t// checking the answer\n    for (int i \u003d 0; i \u0026lt; n; i++)\n        if (a[i] \u0026lt; 0)\n        {\n            cout \u0026lt;\u0026lt; -1 \u0026lt;\u0026lt; endl;\n            return 0;\n        }\n\t\n\tfor (int i \u003d 0; i \u0026lt; 31; i++)\n\t\tfor (int j \u003d 0; j \u0026lt; n; j++)\n\t\t\tif ((a[j] \u0026amp; (1LL \u0026lt;\u0026lt; i)) \u003d\u003d 0)\n\t\t\t\tbits[i][j] \u003d 0;\n\t\t\telse\n\t\t\t\tbits[i][j] \u003d 1;\n\tfor (int i \u003d 0; i \u0026lt; 31; i++)\n\t{\n\t\tkbit[i] \u003d 0;\n\t\tfor (int j \u003d 0; j \u0026lt; n; j++)\n\t\t\tkbit[i] +\u003d bits[i][j];\n\t}\n\n\tfor (int i \u003d 0; i \u0026lt; n; i++) b1[i] \u003d 0;\n\tfor (int i \u003d 0; i \u0026lt; n; i++) c1[i] \u003d 0;\n\n\tfor (int i \u003d 0; i \u0026lt; 31; i++)\n\t\tfor (int j \u003d 0; j \u0026lt; n; j++)\n\t\t{\n\t\t\tint bbase \u003d bits[i][j] ? kbit[i] : 0;\n\t\t\tint cbase \u003d bits[i][j] ? n : kbit[i];\n\t\t\tb1[j] +\u003d bbase \u0026lt;\u0026lt; i;\n\t\t\tc1[j] +\u003d cbase \u0026lt;\u0026lt; i;\n\t\t} \n\n\tfor (int i \u003d 0; i \u0026lt; n; i++)\n\t\tif (b1[i] !\u003d b[i] || c1[i] !\u003d c[i])\n\t\t{\n\t\t\tcout \u0026lt;\u0026lt; -1 \u0026lt;\u0026lt; endl;\n\t\t\treturn 0;\n\t\t}\t\n\n\t// output\n\tfor (int i \u003d 0; i \u0026lt; n; i++) cout \u0026lt;\u0026lt; a[i] \u0026lt;\u0026lt; \u0026quot; \u0026quot;;\n\tcout \u0026lt;\u0026lt; endl;\n\treturn 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e","tags":["round 379","tutorial","solution","anton"]}}