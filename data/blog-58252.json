{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1520578472,"rating":0,"authorHandle":"kiiiiii","modificationTimeSeconds":1520578472,"id":58252,"title":"\u003cp\u003eCode of Problem D\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cpre\u003e\u003ccode\u003e#include \u0026lt;cstdio\u0026gt;\n#include \u0026lt;algorithm\u0026gt;\n#include \u0026lt;cstring\u0026gt;\nusing namespace std;\n\ntypedef long long i64;\n\nconst int MAX_N \u003d 100005, LIM \u003d 200000, INF \u003d 0x3f3f3f3f;\nint X[MAX_N], Y[MAX_N], N;\nint mn[MAX_N \u0026lt;\u0026lt; 2], mx[MAX_N \u0026lt;\u0026lt; 2];\nint L_up[MAX_N \u0026lt;\u0026lt; 2], R_up[MAX_N \u0026lt;\u0026lt; 2];\nint L_down[MAX_N \u0026lt;\u0026lt; 2], R_down[MAX_N \u0026lt;\u0026lt; 2];\n\nvoid chmin(int \u0026amp;x, int y) {\n  if (x \u0026gt; y) x \u003d y;\n}\n\nvoid chmax(int \u0026amp;x, int y) {\n  if (x \u0026lt; y) x \u003d y;\n}\n\nint main() {\n  scanf(\u0026quot;%d\u0026quot;, \u0026amp;N);\n  memset(mn, 0x3f, sizeof mn);\n  memset(mx, -0x3f, sizeof mx);\n  int MIN \u003d INF, MAX \u003d -INF;\n  for (int i \u003d 1; i \u0026lt;\u003d N; ++i) {\n    int x, y;\n    scanf(\u0026quot;%d%d\u0026quot;, \u0026amp;x, \u0026amp;y);\n    X[i] \u003d x + y, Y[i] \u003d x - y;\n    mn[X[i] + LIM] \u003d min(mn[X[i] + LIM], Y[i]);\n    mx[X[i] + LIM] \u003d max(mx[X[i] + LIM], Y[i]);\n    MIN \u003d min(MIN, X[i]);\n    MAX \u003d max(MAX, X[i]);\n  }\n  for (int i \u003d 0; i \u0026lt; MAX_N \u0026lt;\u0026lt; 2; ++i) {\n    L_up[i] \u003d L_down[i] \u003d INF;\n    R_up[i] \u003d R_down[i] \u003d -INF;\n  }\n  \n  int mn_odd \u003d INF, mx_odd \u003d -INF;\n  int mn_even \u003d INF, mx_even \u003d -INF;\n\n  for (int i \u003d MIN; i \u0026lt;\u003d MAX; ++i) {\n    int p \u003d i + LIM;\n    if (i % 2 \u003d\u003d 0) {\n      chmin(L_down[p], mn_odd);\n      chmax(R_down[p], mx_odd);\n      chmin(mn_even, mn[p]);\n      chmax(mx_even, mx[p]);\n    } else {\n      chmin(L_down[p], mn_even);\n      chmax(R_down[p], mx_even);\n      chmin(mn_odd, mn[p]);\n      chmax(mx_odd, mx[p]);\n    }\n  }\n  \n  mn_odd \u003d INF, mx_odd \u003d -INF;\n  mn_even \u003d INF, mx_even \u003d -INF;\n  \n  for (int i \u003d MAX; i \u0026gt;\u003d MIN; --i) {\n    int p \u003d i + LIM;\n    if (i % 2 \u003d\u003d 0) {\n      chmin(L_up[p], mn_odd);\n      chmax(R_up[p], mx_odd);\n      chmin(mn_even, mn[p]);\n      chmax(mx_even, mx[p]);      \n    } else {\n      chmin(L_up[p], mn_even);\n      chmax(R_up[p], mx_even);\n      chmin(mn_odd, mn[p]);\n      chmax(mx_odd, mx[p]);      \n    }\n  }\n\n  i64 result \u003d 0;\n  for (int i \u003d MIN; i \u0026lt;\u003d MAX; ++i) {\n    int p \u003d i + LIM;\n    int l \u003d max(L_down[p], L_up[p]);\n    int r \u003d min(R_down[p], R_up[p]);\n    // printf(\u0026quot;%d %d\\n\u0026quot;, l, r);\n    if (r \u0026gt; l)\n      result \u003d (result + (r - l) / 2);\n  }\n\n  printf(\u0026quot;%lld\\n\u0026quot;, result);\n  return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":[]}}