{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1432048319,"rating":0,"authorHandle":"justHusam","modificationTimeSeconds":1432505595,"id":17975,"title":"\u003cp\u003e2 shortest paths ( disjoint paths )\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eGiven a weighted, undirected graph. How I can find 2 paths from S to T, such that they don\u0027t share any edge (but may share some nodes), and sum of their lengths must be minimal possible ??\u003c/p\u003e\u003cp\u003eEdit: The problem has been solved using Minimum-cost flow. Thanks for \u003ca class\u003d\"rated-user user-cyan\" href\u003d\"/profile/Govikhuu\" title\u003d\"Specialist Govikhuu\"\u003eGovikhuu\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e","tags":["graph","flows","shortest path"]}}