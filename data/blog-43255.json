{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1456050286,"rating":1,"authorHandle":"Hasan0540","modificationTimeSeconds":1456159948,"id":43255,"title":"\u003cp\u003eDay #5\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHello Everyone,\u003c/p\u003e\u003ch2\u003eDFS Numbering\u003c/h2\u003e\u003cp\u003eWe solved problem Matching Names from Contest #4.25 in two ways, one of them by using DFS Numbering and inserting the nodes into a set of pair\u0026lt;DFSNumber,index\u0026gt;, we didn\u0027t implement this solution, so please try to write it.\u003c/p\u003e\u003cp\u003eThe other way to solve this problem was by swapping the larger vector with the smaller one, then moving the data from the smaller one into the larger. The function is short and easy to write, make sure you understand why this works in O(nlogn). Here is the code we wrote: \u003ca href\u003d\"http://ideone.com/tAXZg5\"\u003ehttp://ideone.com/tAXZg5\u003c/a\u003e\u003c/p\u003e\u003cp\u003eWe also talked about Problem A from the ACPC2015, it can be solved using DFS Numbering and segment tree (to find the LCA).\u003c/p\u003e\u003ch2\u003eSegment Tree\u003c/h2\u003e\u003cp\u003eWe solved two problems on Segment Trees, the first one was \u003ca href\u003d\"//codeforces.com/problemset/problem/628/E\"\u003eE — Zbazi in Zeydabad\u003c/a\u003e, and \u003ca href\u003d\"//codeforces.com/contest/628/submission/16211358\"\u003ehere\u003c/a\u003e you can find my solution.\u003c/p\u003e\u003cp\u003eThe second one was \u003ca href\u003d\"http://www.spoj.com/problems/MULTQ3/\"\u003eMULTQ3\u003c/a\u003e. We solved this one using segment tree with lazy propagation, you can find the code for the lazy propagation here: \u003ca href\u003d\"http://ideone.com/2QqhAj\"\u003ehttp://ideone.com/2QqhAj\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eYou may also solve the LCA problem using Segment Trees, try to solve this problem from JCPC2013: \u003ca href\u003d\"http://a2oj.com/p?ID\u003d79\"\u003ehttp://a2oj.com/p?ID\u003d79\u003c/a\u003e\u003c/p\u003e\u003ch2\u003eLowest Common Ancestor (LCA) — Sparse Table\u003c/h2\u003e\u003cp\u003eHere is the code: \u003ca href\u003d\"http://ideone.com/uk8UPP\"\u003ehttp://ideone.com/uk8UPP\u003c/a\u003e, you can solve the same problem from JCPC2013 (\u003ca\u003ehttp://a2oj.com/p?ID\u003d79)\u003c/a\u003e. We will solve more interesting problems using LCA later.\u003c/p\u003e\u003cp\u003eRemember that this implementation allows us to find the Kth parent (ancestor) for a node.\u003c/p\u003e\u003ch2\u003eHashing\u003c/h2\u003e\u003cp\u003eCounting palindromes: Problem (\u003ca href\u003d\"http://www.spoj.com/problems/NUMOFPAL\"\u003eNUMOFPAL\u003c/a\u003e), and here is the code for building the hash value for each substring [i..j]: \u003ca href\u003d\"http://ideone.com/3naN7w\"\u003ehttp://ideone.com/3naN7w\u003c/a\u003e\u003c/p\u003e\u003cp\u003eProblem Petr# is included in Day #5 contest, please try to implement it.\u003c/p\u003e\u003ch2\u003eTernary Search\u003c/h2\u003e\u003cp\u003eCode: \u003ca href\u003d\"http://ideone.com/JlbP8w\"\u003ehttp://ideone.com/JlbP8w\u003c/a\u003e\u003c/p\u003e\u003cp\u003eProblems: \u003ca href\u003d\"http://www.spoj.com/problems/KOPC12A\"\u003eKOPC12A\u003c/a\u003e, and \u003ca href\u003d\"http://www.spoj.com/problems/HAMSTER1/\"\u003eHAMSTER1\u003c/a\u003e\u003c/p\u003e\u003ch2\u003eDynamic Programming — Solving counting in range problems\u003c/h2\u003e\u003cp\u003eGiven two integers L and R, count the number of ... in the range [L, R].\u003c/p\u003e\u003cp\u003eWe talked about how to solve this type of problems using dp[index][less][other parameters as needed], problem D from the Educational Round is included in Day #5 contest and can be solved in the same way.\u003c/p\u003e\u003ch2\u003eDynamic Programming — Printing the Kth solution\u003c/h2\u003e\u003cp\u003eHere is a problem to solve: \u003ca href\u003d\"http://www.spoj.com/problems/PARTIT/\"\u003ePARTIT\u003c/a\u003e [](\u003ca href\u003d\"http://www.spoj.com/problems/PARTIT/\"\u003ehttp://www.spoj.com/problems/PARTIT/\u003c/a\u003e)\u003c/p\u003e\u003cp\u003eI know that there are many problems to solve, and these problems might take more time. Please tell me -in a comment- if you want me to create a contest for you today or tomorrow.\u003c/p\u003e\u003cp\u003eGood luck!\u003c/p\u003e\u003c/div\u003e","tags":[]}}