{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1461261149,"rating":1,"authorHandle":"symonsaroar","modificationTimeSeconds":1461261425,"id":44481,"title":"\u003cp\u003eInclusion-Exclusion implementation.\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e\u003cstrong\u003eProblem:\u003c/strong\u003e \u003cbr /\u003e \u003cbr /\u003e A certain strange mathematician, Rasyak, considers a particular set of prime numbers beautiful. He also calls a composite number beautiful, if it is divisible by at least one prime number in his chosen set of beautiful primes. Given Rasyakâ€™s set of M beautiful primes and an integer N, you have to find the number of beautiful numbers (both primes and composites) between 1 and N. For example, given a set of 2 beautiful primes, {2, 5}, there are 6 beautiful numbers between 1 and 10 (i.e. 2, 4, 5, 6, 8 and 10).\u003cbr /\u003e\u003cbr /\u003e \u003cstrong\u003eInput\u003c/strong\u003e\u003cbr /\u003e The first line of the input gives the number of test cases, T (1 \u0026lt;\u003d T \u0026lt;\u003d 100). T test cases follow. Each will consist of one line containing a single integer M, followed by a line containing M space-separated prime numbers mi, followed by another line containing a single integer N.\u003cbr /\u003e 1 \u0026lt;\u003d M \u0026lt;\u003d 25\u003cbr /\u003e 1 \u0026lt;\u003d mi \u0026lt;\u003d 1000\u003cbr /\u003e 1 \u0026lt;\u003d N \u0026lt;\u003d 2*10^9\u003cbr /\u003e \u003cbr /\u003e \u003cstrong\u003eOutput\u003c/strong\u003e\u003cbr /\u003e For each test case, output one line containing a single integer X, where X is the number of beautiful numbers between 1 and N.\u003cbr /\u003e \u003cem\u003e\u003cstrong\u003eInput\u003c/strong\u003e\u003c/em\u003e\u003cbr /\u003e 3\u003cbr /\u003e 2\u003cbr /\u003e 2 5\u003cbr /\u003e 10\u003cbr /\u003e 3\u003cbr /\u003e 2 5 13\u003cbr /\u003e 100\u003cbr /\u003e 25\u003cbr /\u003e 2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97\u003cbr /\u003e 2000000000\u003cbr /\u003e\u003cbr /\u003e \u003cem\u003e\u003cstrong\u003eOutput\u003c/strong\u003e\u003c/em\u003e\u003cbr /\u003e 6\u003cbr /\u003e 63\u003cbr /\u003e 1759360857\u003cbr /\u003e \u003cbr /\u003e \u003cbr /\u003e I know this can be solved with inclusion-exclusion principle. But,\u003cbr /\u003e How do I implement this.\u003cbr /\u003e please help me with implementing this in C/C++\u003cbr /\u003e It is already in \u003ca href\u003d\"//codeforces.com/blog/entry/21889\"\u003ethis\u003c/a\u003e blog .. but it has only an answer saying about th inclusion-exclusion principle ..\u003c/p\u003e\u003c/div\u003e","tags":["number theory","inclusion-exclusion","prime numbers"]}}