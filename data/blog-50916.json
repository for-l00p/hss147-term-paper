{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1489229339,"rating":11,"authorHandle":"apolyakov","modificationTimeSeconds":1489229339,"id":50916,"title":"\u003cp\u003eKnapsack-like problem? Items multiply their values in certain combinations\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHi guys\u003c/p\u003e\u003cp\u003eThere\u0027s one problem which I knew since my student years, lately I came across it again and started to think about ways to solve it. The problem is this one: \u003ca href\u003d\"http://acm.mipt.ru/judge/problems.pl?problem\u003d014\"\u003ehttp://acm.mipt.ru/judge/problems.pl?problem\u003d014\u003c/a\u003e TLDR; you are given certain alphabet A and certain phrases {a_i} of different lengths. Each phrase add value {f_i} if it appears in the output string. Your goal is to construct a string of given length K with maximum value. Problem here is that phrases can overlap in a sense that they could be contained inside each other or two phrases concatenated might give you a third phrase, for example: if (phrases, value) are (\u0027ab\u0027, 2), (\u0027a\u0027, 1) and (\u0027abc\u0027, 3) then total value of string \u0027abca\u0027 is 2 (\u0027ab\u0027) + 1 (\u0027a\u0027) + 3 (\u0027abc\u0027) + 1 (\u0027a\u0027) \u003d 7\u003c/p\u003e\u003cp\u003eIn my opinion â€” this is what makes this problem different from classical knapsack. If phrases were \u0026quot;orthogonal\u0026quot; in a sense that neither of combinations of two phrases could give you the third one than problem boils down to packing knapsack of capacity K with set of items of \u0026quot;weight\u0026quot; (length) {l_i} and values {f_i} maximising total value. But given that phrases can overlap and combine into each other problem becomes much harder.\u003c/p\u003e\u003cp\u003eCan anyone point me into the right direction? What would be the way to approach the problem? \u003c/p\u003e\u003c/div\u003e","tags":["knapsack"]}}