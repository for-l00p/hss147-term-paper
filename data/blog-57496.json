{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1517560303,"rating":39,"authorHandle":"KokiYmgch","modificationTimeSeconds":1517560303,"id":57496,"title":"\u003cp\u003eEffective way to compute the chromatic number of a graph\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eThis is an article on how to compute the chromatic number of a graph effectively.\u003c/p\u003e\u003cp\u003eThe original article was written in Japanese here.\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://www.learning-algorithms.com/entry/2018/01/27/235959\"\u003ehttp://www.learning-algorithms.com/entry/2018/01/27/235959\u003c/a\u003e\u003c/p\u003e\u003ch4\u003eWhat is \u0026quot;chromatic number?\u0026quot;\u003c/h4\u003e\u003cp\u003eChromatic number is the minimum number of colors to color all the vertices, so that no two adjacent vertices have the same color.\u003c/p\u003e\u003cp\u003eIf you look at a tree, for instance, you can obviously color it in two colors, but not in one color, which means a tree has the chromatic number \u003cspan class\u003d\"tex-span\"\u003e2\u003c/span\u003e.\u003c/p\u003e\u003ch4\u003eChromatic polynomial\u003c/h4\u003e\u003cp\u003eIn order to discuss the chromatic number, I introduce the chromatic polynomial first.\u003c/p\u003e\u003cp\u003eThe chromatic polynomial \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eP\u003c/i\u003e(\u003ci\u003eK\u003c/i\u003e)\u003c/span\u003e, is the number of ways to color a graph within \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eK\u003c/i\u003e\u003c/span\u003e colors. Let\u0027s take a tree with \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e ( ≥ 2)\u003c/span\u003e vertices as an example. First of all, a tree has at least one leaf, so color it first with any color. After that, you can just color the rest with a different color from a previous color in order. This concludes the following chromatic polynomial for a tree.\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eP\u003c/i\u003e(\u003ci\u003eK\u003c/i\u003e) \u003d \u003ci\u003eK\u003c/i\u003e(\u003ci\u003eK\u003c/i\u003e - 1)\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003en\u003c/i\u003e - 1\u003c/sup\u003e\u003c/span\u003e ... (1)\u003c/p\u003e\u003cp\u003eNow, we are ready to calculate the chromatic number.\u003c/p\u003e\u003ch4\u003eCompute the chromatic number\u003c/h4\u003e\u003cp\u003eChromatic number is computed in the following way:\u003c/p\u003e \u003col\u003e   \u003cli\u003eFind the chromatic polynomial \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eP\u003c/i\u003e(\u003ci\u003eK\u003c/i\u003e)\u003c/span\u003e\u003c/li\u003e   \u003cli\u003eEvaluate the polynomial in the ascending order, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eK\u003c/i\u003e \u003d 1, 2, ..., \u003ci\u003en\u003c/i\u003e\u003c/span\u003e\u003c/li\u003e   \u003cli\u003eWhen the value gets larger than 0 for the first time, the value of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eK\u003c/i\u003e\u003c/span\u003e is the chromatic number\u003c/li\u003e \u003c/ol\u003e\u003cp\u003eLet\u0027s compute the chromatic number of a tree again now. Using (1), we can tell \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eP\u003c/i\u003e(1) \u003d 0, \u003ci\u003eP\u003c/i\u003e(2) \u003d 2 \u0026gt; 0\u003c/span\u003e , and thus the chromatic number of a tree is \u003cspan class\u003d\"tex-span\"\u003e2\u003c/span\u003e. \u003c/p\u003e\u003cp\u003eI describe below how to compute the chromatic number of any given simple graph.\u003c/p\u003e\u003cp\u003eAs I mentioned above, we need to know the chromatic polynomial first. If you can divide all the vertices into \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eK\u003c/i\u003e\u003c/span\u003e independent sets, you can color them in \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eK\u003c/i\u003e\u003c/span\u003e colors because no two adjacent vertices share the edge in an independent set.\u003c/p\u003e\u003cp\u003eLet \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eV\u003c/i\u003e\u003c/span\u003e be the set of vertices of a graph. For any subsets \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/58/09/580960c614ce07afd330ddbc09c0ba5328264f84.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, let me define \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eind\u003c/i\u003e(\u003ci\u003eU\u003c/i\u003e)\u003c/span\u003e as \u0027the number of subsets of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eU\u003c/i\u003e\u003c/span\u003e, which compose an independent set.\u0027\u003c/p\u003e\u003cp\u003eThe number of ways to choose \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eK\u003c/i\u003e\u003c/span\u003e sets from \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eind\u003c/i\u003e(\u003ci\u003eU\u003c/i\u003e)\u003c/span\u003e is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eind\u003c/i\u003e(\u003ci\u003eU\u003c/i\u003e)\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003eK\u003c/i\u003e\u003c/sup\u003e\u003c/span\u003e, therefore, Inclusion-exclusion principle allows you to calculate the chromatic number in the following way:\u003c/p\u003e\u003cp\u003e\u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/b8/ca/b8cae09700d96bef2e22e6f2e9d6347c752aeb35.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003eThe implementation is really simple. \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eind\u003c/i\u003e(\u003ci\u003eU\u003c/i\u003e)\u003c/span\u003e can be calculated by \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ebitDP\u003c/i\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eThe time complexity is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/sup\u003e \u003ci\u003en\u003c/i\u003e)\u003c/span\u003e.\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eint ChromaticNumber(const vector\u0026lt;int\u0026gt; \u0026amp;g) {\n        int n \u003d g.size();\n        if (n \u003d\u003d 0) return 0;\n        //randomly choose a large prime\n        const int modulo \u003d 1077563119;\n        int all \u003d 1 \u0026lt;\u0026lt; n;\n        vector\u0026lt;int\u0026gt; ind(all), s(all);\n        for (int i \u003d 0; i \u0026lt; all; i ++) s[i] \u003d ((n - __builtin_popcount(i)) \u0026amp; 1 ? -1 : 1);\n        ind[0] \u003d 1;\n        for (int i \u003d 1; i \u0026lt; all; i ++) {\n                int ctz \u003d __builtin_ctz(i);\n                ind[i] \u003d ind[i - (1 \u0026lt;\u0026lt; ctz)] + ind[(i - (1 \u0026lt;\u0026lt; ctz)) \u0026amp; ~g[ctz]];\n                if (ind[i] \u0026gt;\u003d modulo) ind[i] -\u003d modulo;\n        }\n        //compute the chromatic number (\u003d \\sum (-1)^{n - |i|} * ind(i)^k)\n        for (int k \u003d 1; k \u0026lt; n; k ++) {\n                long long sum \u003d 0;\n                for (int i \u003d 0; i \u0026lt; all; i ++) {\n                        long long cur \u003d ((s[i] * (long long) ind[i]) % modulo);\n                        s[i] \u003d cur;\n                        sum +\u003d cur;\n                }\n                if (sum % modulo !\u003d 0) return k;\n        }\n        return n;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThat\u0027s it! Thank you for reading.\u003c/p\u003e\u003c/div\u003e","tags":["#graph","chromatic number"]}}