{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1498108783,"rating":-3,"authorHandle":"Amiri","modificationTimeSeconds":1498113313,"id":52817,"title":"\u003cp\u003eCan be MDOLLS on Spoj solved using LIS tecnique?\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eI saw \u003ca href\u003d\"http://www.spoj.com/problems/MDOLLS/\"\u003eMDOLLS\u003c/a\u003e problem in \u003ca href\u003d\"//codeforces.com/blog/entry/325\"\u003ethis list\u003c/a\u003e was in LIS part and I was wondered how it can solved using LIS?\u003c/p\u003e\u003cp\u003eThe question is:\u003c/p\u003e \u003cblockquote\u003e   \u003cblockquote\u003e\u003cp\u003eDilworth is the world\u0027s most prominent collector of Russian nested dolls: he literally has thousands of them! You know, the wooden hollow dolls of different sizes of which the smallest doll is contained in the second smallest, and this doll is in turn contained in the next one and so forth. One day he wonders if there is another way of nesting them so he will end up with fewer nested dolls? After all, that would make his collection even more magnificent! He unpacks each nested doll and measures the width and height of each contained doll. A doll with width w1 and height h1 will fit in another doll of width w2 and height h\u003d if and only if w1 \u0026lt; w2 and h1 \u0026lt; h2. Can you help him calculate the smallest number of nested dolls possible to assemble from his massive list of measurements? \u003c/p\u003e   \u003c/blockquote\u003e \u003c/blockquote\u003e\u003cp\u003eI know this problem can be solved by maximum bipartite matching tecnique but I want to know is there any way to solve using LIS?\u003c/p\u003e\u003cp\u003eIf we have \u003ccode\u003ew1 \u0026lt;\u003d w2\u003c/code\u003e and \u003ccode\u003eh1 \u0026lt;\u003d h2\u003c/code\u003e instead of \u003ccode\u003ew1 \u0026lt; w2\u003c/code\u003e and \u003ccode\u003eh1 \u0026lt; h2\u003c/code\u003e I have an \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e\u003ci\u003elogn\u003c/i\u003e)\u003c/span\u003e solution using LIS as follow:\u003c/p\u003e\u003cp\u003eInitially we sort dolls by their \u003ccode\u003ew\u003c/code\u003e values (and \u003ccode\u003eh\u003c/code\u003e In the next priority) and then try to remove LIS from new order of dolls. number of times we can remove LIS from our dolls is the answer.\u003c/p\u003e\u003cp\u003eBut it\u0027s obvious that my solution shouldn\u0027t work for original version of MDOLLS with \u003ccode\u003ew1 \u0026lt; w2\u003c/code\u003e and \u003ccode\u003eh1 \u0026lt; h2\u003c/code\u003e conditions.\u003c/p\u003e\u003cp\u003ePlease help me to know is there a solution using LIS for MDOLLS?\u003c/p\u003e\u003c/div\u003e","tags":["dynamic programming"]}}