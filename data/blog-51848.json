{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1493970704,"rating":4,"authorHandle":"smelly_cat","modificationTimeSeconds":1493970726,"id":51848,"title":"\u003cp\u003eAny ideas why unordered_map is slower than map?\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eFor this problem: \u003ca href\u003d\"//codeforces.com/contest/776/problem/C\"\u003ehttp://codeforces.com/contest/776/problem/C\u003c/a\u003e\u003c/p\u003e\u003cp\u003eI have compared 2 solutions: 1) Tutorial\u0027s answer code 2) Tutorial\u0027s answer code except change the last map to unordered_map\u003c/p\u003e\u003cp\u003eThen I tested the testcase of 100000 2 536870912 536870912 536870912 ....\u003c/p\u003e\u003cp\u003eOn my macbook air, these 2 solutions run times are: 2.5s, 2s\u003c/p\u003e\u003cp\u003eWhen I submitted using C++, the run times are: 389ms, Exceed 2.5s\u003c/p\u003e\u003cp\u003eCan anyone tell me why using unordered_map to store key of 536870912, 536870912*2, 536870912*3, ... 536870912*100000, it caused run time performance of unordered_map so bad? Is it a bug? \u003c/p\u003e\u003c/div\u003e","tags":[]}}