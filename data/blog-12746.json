{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1403266056,"rating":3,"authorHandle":"FCBLOK","modificationTimeSeconds":1403266056,"id":12746,"title":"\u003cp\u003earticulation points and bridges — graph theory — competitive programming book \u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003erecently i have been studying graph theory from competitive programming book ,in applications of DFS there was articulation points and bridges . He defines other than visited array a another one here is the statement.\u003c/p\u003e\u003cp\u003e[This algorithm maintains two numbers: dfs_num(u) and dfs_low(u). Here, dfs_num(u) stores the iteration counter when the vertex u is visited for the first time and not just for distinguishing DFS_WHITE versus DFS_GRAY/DFS_BLACK. The other number dfs_low(u) stores the lowest dfs_num reachable from DFS spanning sub tree of u. Initially dfs_low(u) \u003d dfs_num(u) when vertex u is first visited. Then, dfs_low(u) can only be made smaller if there is a cycle (some back edges exist). Note that we do not update dfs_low(u) with back edge (u, v) if v is a direct parent of u. ]\u003c/p\u003e\u003cp\u003eplease anyone give an explanation for this part.\u003c/p\u003e\u003c/div\u003e","tags":["graph","dfs","articulation point"]}}