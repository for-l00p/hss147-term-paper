{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1485462801,"rating":131,"authorHandle":"krismaz","modificationTimeSeconds":1485462801,"id":50036,"title":"\u003cp\u003eAn interesting way to solve 739E\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHi everyone!\u003c/p\u003e\u003cp\u003eI\u0027ve just solved \u003ca href\u003d\"/contest/739/problem/E\" title\u003d\"Codeforces Round 381 (Div. 1)\"\u003e739E - Gosha is hunting\u003c/a\u003e in an easy but interesting way. However, it\u0027s quite different from what\u0027s described in the editorial, and I couldn\u0027t find any accepted codes that use this approach. That\u0027s why I\u0027m curious if anyone solved this problem like me, and if this is a well-known trick :)\u003c/p\u003e\u003cp\u003eFirst, there\u0027s an easy \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e3\u003c/sup\u003e)\u003c/span\u003e DP solution to the problem: for each \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ei\u003c/i\u003e, \u003ci\u003ex\u003c/i\u003e, \u003ci\u003ey\u003c/i\u003e)\u003c/span\u003e compute the best score using \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e PokeBalls and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ey\u003c/i\u003e\u003c/span\u003e UltraBalls on \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e first Pokemon.\u003c/p\u003e\u003cp\u003eHow to improve it? Let\u0027s randomly shuffle all Pokemon. If we looked at the first \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e of them, then we\u0027d expect to use around \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/df/a4/dfa4687476301d9ceb725336aa886a292be76bfa.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e PokeBalls, and \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/5c/73/5c73fa790424fae5471d9eabd76bdcba841afe3c.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e UltraBalls there (\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/span\u003e are the total amount of balls of each type), because the places where we used them in the optimal solution are now randomly distributed... even though positions where we use PokeBalls are not independent from positions where we use UltraBalls.\u003c/p\u003e\u003cp\u003eNow, using some random walk properties we can (I hope!) say, that it\u0027s really unlikely that we\u0027ll deviate from those expected values by more than \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/32/91/32913ddf691f31b4d68f1a13d186d75779229920.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. So we can just do the brutal DP, but constrain ourselves to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ey\u003c/i\u003e\u003c/span\u003e from a specific range of size \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/32/91/32913ddf691f31b4d68f1a13d186d75779229920.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. After that the solution is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e)\u003c/span\u003e and get\u0027s accepted: \u003ca href\u003d\"/contest/739/submission/24153740\" title\u003d\"Submission 24153740 by krismaz\"\u003e24153740\u003c/a\u003e\u003c/p\u003e\u003cp\u003eAll opinions are welcome. Thanks :)\u003c/p\u003e\u003c/div\u003e","tags":["round 381","dp","random_shuffle"]}}