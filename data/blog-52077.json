{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1495230420,"rating":25,"authorHandle":"Maxon5","modificationTimeSeconds":1495255337,"id":52077,"title":"\u003cp\u003eHow does Dinic\u0027s Max Flow compute the blocking flow in O(NM) complexity ? \u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eI\u0027ve been trying to understand Dinic\u0027s Max Flow algorithm. I think I\u0027ve fairly understood how the algorithm works. \u003c/p\u003e\u003cp\u003eIn each iteration, you create a level graph using BFS and then find blocking flow in that level graph. You would need \u003cstrong\u003eO(N)\u003c/strong\u003e iterations and in each iteration, blocking flow can be found in \u003cem\u003e\u003cstrong\u003eO(NM)\u003c/strong\u003e\u003c/em\u003e complexity. This is the place where I\u0027m stuck. I\u0027ve seen some implementations like \u003ca href\u003d\"https://github.com/jaehyunp/stanfordacm/blob/master/code/Dinic.cc\"\u003e Stanford Notebook Dinic implementation \u003c/a\u003e. But it seems to me that in the worst case you might need \u003cem\u003e\u003cstrong\u003eO(M^2)\u003c/strong\u003e\u003c/em\u003e complexity to find the blocking flow if you implement the code this way. Can anyone help me to understand why the complexity is \u003cem\u003e\u003cstrong\u003eO(NM)\u003c/strong\u003e\u003c/em\u003e for finding blocking flow ? \u003c/p\u003e\u003c/div\u003e","tags":[]}}