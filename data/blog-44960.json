{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1463658513,"rating":9,"authorHandle":"sandeep.gprs","modificationTimeSeconds":1463658688,"id":44960,"title":"\u003cp\u003eHow to solve this question ?\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003ch1\u003ePrinting all the ways to transform S to T.\u003c/h1\u003e\u003cp\u003eRecently in a Technical Interview,I was asked this question.. Given a String S and another string T,You have to change S to T using following steps only - You can push a character from S to the stack and pop an element from the stack...\u003c/p\u003e\u003cp\u003eNow if a push operation is denoted by 0 and pop is denoted by 1, generate all possible valid strings that can transform S to T.\u003c/p\u003e\u003cp\u003eGiven that transformation will always be possible and |S| \u003d |T| \u0026lt;\u003d 15.\u003c/p\u003e\u003cp\u003eFor Ex -  S \u003d \u0026quot;MADAM\u0026quot;  T \u003d \u0026quot;ADAMM\u0026quot;  The steps to convert will be - push M (0) push A (0) pop A (1) push D (0) pop D (1) push A (0) pop A (1) push M (0) pop M (1) pop M (1)\u003c/p\u003e\u003cp\u003eSo \u0026quot;0010101011\u0026quot; is a valid string,I need to generate all the valid strings.. All i can come up with was this code,which was able to generate a single valid string..Can anyone help me out in how to generate each valid string. (Note: Bitmasking approach is not allowed)\u003c/p\u003e \u003cpre\u003e\u003ccode\u003ePrinting all the ways to transform S to T.\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nRecently in an Interview,I was asked this question..\nGiven a String S and another string T,You have to change S to T using following steps only -\nYou can push a character from S to the stack and pop an element from the stack...\n\nNow if a push operation is denoted by 0 and pop is denoted by 1,\ngenerate all possible valid strings that can transform S to T.\n\nGiven that transformation will always be possible and |S| \u003d |T| \u0026lt;\u003d 15.\n\nFor Ex -\n S \u003d \u0026quot;MADAM\u0026quot;\n T \u003d \u0026quot;ADAMM\u0026quot;\n The steps to convert will be -\npush M (0)\npush A (0)\npop A  (1)\npush D  (0)\npop D   (1)\npush A  (0)\npop A    (1)\npush M   (0)\npop M   (1)\npop M   (1)\n\nSo \u0026quot;0010101011\u0026quot; is a valid string,I need to generate all the valid strings..\nAll i can come up with was this code,which was able to generate a single valid string..Can anyone help me out in how to generate each valid string.\n(Note: Bitmasking approach is not allowed)\n\n#include\u0026lt;bits/stdc++.h\u0026gt;\nusing namespace std;\n// i -\u0026gt; upto what position in S we are done\n// j -\u0026gt; upto what position in T we have completed\n// o for push\n//1 for pop\nbool temp[32] \u003d {0};\nstack\u0026lt;char\u0026gt; st;\nint l \u003d 0,k \u003d 0;\n\nvoid solve(string\u0026amp; S,string\u0026amp; T,int i,int j)\n{\n\tif(k \u003d\u003d 2*l - 1)\n\t{\n\t\tfor(int i \u003d 0;i \u0026lt;\u003d k;i++)\n\t\t\tcout \u0026lt;\u0026lt; temp[i] \u0026lt;\u0026lt; \u0026quot; \u0026quot;;\n\t\tcout \u0026lt;\u0026lt; endl;\n\t\treturn ;\n\t}\n\n\tif(i \u0026lt; 0\t||\tj \u0026lt; 0\t||\ti \u0026gt; l ||\tj \u0026gt; l)\n\t\treturn;\n\tif(st.size())\n\tif(T[j] \u003d\u003d st.top())\n\t{\n\t\tst.pop();\n\t\ttemp[k++] \u003d 1;\n\t\tsolve(S,T,i,j + 1);\n\t\tk -\u003d 1;\n\t}\n\n\tif(T[j] \u003d\u003d S[i])\t\t\t// Both current charcters matches each other\n\t{\n\t\tst.push(S[i]);\n\t\ttemp[k++] \u003d 0;\n\t\tst.pop();\n\t\ttemp[k++] \u003d 1;\n\t\tsolve(S,T,i+1,j+1);\n\t\tk -\u003d 2;\n\t}\n\t\n\tif(T[j] !\u003d S[i])\n\t{\n\t\t\t// Keep pushing characters from S,and increase i until they do not matches\n\t\t\tst.push(S[i]);\n\t\t\ttemp[k++] \u003d 0;\n\t\t\tsolve(S,T,i+1,j);\n\t\t\tk -\u003d 1;\n\n\t}\n\n\n}\n\nint main()\n{\n\tios_base::sync_with_stdio(0);\n\tstring S,T;\n\tcin \u0026gt;\u0026gt; S;\n\tcin \u0026gt;\u0026gt; T;\n//\tcout \u0026lt;\u0026lt; st.top();\n\tl \u003d S.length();\n\tsolve(S,T,0,0);\n\treturn 0;\n}\n\n\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eI am new to codeforces,sorry if i have done some terrible formatting :|\u003c/p\u003e\u003c/div\u003e","tags":["enumeration","recursion"]}}