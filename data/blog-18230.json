{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1432994287,"rating":-8,"authorHandle":"int_max","modificationTimeSeconds":1432994287,"id":18230,"title":"\u003cp\u003eWhy am I getting a SIGABRT error in SPOJ: BYTESE1 (Dijkstra\u0027s problem)\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eI can not find a reason as to why I am getting a SIGABRT error in this code. The constraints are n,m\u0026lt;\u003d100. Can someone please help?\u003c/p\u003e\u003cp\u003eLucius Dungeon \u003ca href\u003d\"http://www.spoj.com/problems/BYTESE1/\"\u003ehttp://www.spoj.com/problems/BYTESE1/\u003c/a\u003e\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e\u003cbr /\u003e#include \u0026lt;bits/stdc++.h\u0026gt;\n\nusing namespace std;\n\n#define pb push_back\ntypedef pair\u0026lt;int,int\u0026gt; ii;\n\nvector\u0026lt;ii\u0026gt; graph[10005];\nint C[105][105];\nint D[10005];\nint n,m;\n\nset\u0026lt;ii\u0026gt; S;\n\nvoid dijkstra(int st)\n{\n    S.insert(ii(C[0][0],st));\n    \n    ii top;\n    int u,v,c,i;\n    D[st]\u003dC[0][0];\n    \n    while(!S.empty())\n    {\n        top \u003d *S.begin();\n        S.erase(S.begin());\n        c \u003d top.f;\n        u \u003d top.s;\n        \n        for(i\u003d0;i\u0026lt;graph[u].size();i++)\n        {\n            ii x \u003d graph[u][i];\n            v \u003d x.f;\n            \n            if(D[v]\u0026gt;\u003dD[u]+x.s)\n            {\n                if(D[v]!\u003d1e7)\n                    S.erase(S.find(ii(D[v],v)));\n                D[v]\u003dD[u]+x.s;\n                S.insert(ii(D[v],v));\n            }\n        }\n    }\n    \n}\n\n\n\nint main(int argc, const char * argv[])\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    \n    int i,j,t,u,k,l,a,b,T,d;\n    \n    cin\u0026gt;\u0026gt;t;\n    \n    while(t--)\n    {\n        cin\u0026gt;\u0026gt;n\u0026gt;\u0026gt;m;\n        for(i\u003d0;i\u0026lt;n;i++)\n            for(j\u003d0;j\u0026lt;m;j++)\n                cin\u0026gt;\u0026gt;C[i][j];\n        \n        cin\u0026gt;\u0026gt;a\u0026gt;\u0026gt;b\u0026gt;\u0026gt;T;\n        \n        a--;\n        b--;\n        \n        for(i\u003d0;i\u0026lt;m*n+1;i++)\n        {\n            graph[i].clear();\n            D[i]\u003d1e7;\n        }\n        \n        for(i\u003d0;i\u0026lt;n;i++)\n        {\n            for(j\u003d0;j\u0026lt;m;j++)\n            {\n                u \u003d i*m + j;\n                \n                for(k\u003dmax(i-1,0);k\u0026lt;\u003dmin(i+1,n-1);k++)\n                {\n\n                    if(k\u003d\u003di)\n                        continue;\n                    graph[u].pb(ii(k*m+j,C[k][j]));\n                    \n                }\n                \n                for(l\u003dmax(j-1,0);l\u0026lt;\u003dmin(j+1,m-1);l++)\n                {\n                    if(l\u003d\u003dj)\n                        continue;\n                    graph[u].pb(ii(i*m+l,C[i][l]));\n                }\n\n            }\n        }\n        \n        dijkstra(0);\n        \n        d \u003d D[a*m + b];\n        \n        if(d\u0026lt;\u003dT)\n        {\n            cout\u0026lt;\u0026lt;\u0026quot;YES\\n\u0026quot;;\n            cout\u0026lt;\u0026lt;T-d\u0026lt;\u0026lt;\u0026quot;\\n\u0026quot;;\n        }\n        else\n            cout\u0026lt;\u0026lt;\u0026quot;NO\\n\u0026quot;;\n        \n        \n    }\n    \n    return 0;\n}\n\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":["spoj","dijkstra","sigabrt"]}}