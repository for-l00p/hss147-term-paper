{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":true,"creationTimeSeconds":1519301481,"rating":0,"authorHandle":"Tima","modificationTimeSeconds":1523451222,"id":57970,"title":"\u003cp\u003eНОД Разбор\u003c/p\u003e","locale":"ru","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e[problem:215913F]\u003c/p\u003e\u003cp\u003e\u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/e4/eb/e4eb48d8943b36d5438ddf0211e25b3d5f0aceb8.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. Значит, нам достаточно найти количество троек \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ei\u003c/i\u003e, \u003ci\u003ej\u003c/i\u003e, \u003ci\u003ek\u003c/i\u003e)\u003c/span\u003e таких, что \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/5a/17/5a17471041695aec5d35b8612b527e7a3ca358dc.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e и \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003egcd\u003c/i\u003e(\u003ci\u003ei\u003c/i\u003e, \u003ci\u003ej\u003c/i\u003e, \u003ci\u003ek\u003c/i\u003e) \u003d 1\u003c/span\u003e. Далее вместо \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/91/4b/914b6393eaed6715283ce345ca3f19275ceb7959.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e будем использовать \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eN\u003c/i\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eПосчитаем ответ с помощью формулы включений-исключений. Сначала скажем, что все тройки нам подходят. Таких троек \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eN\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e3\u003c/sup\u003e\u003c/span\u003e. Теперь вычтем тройки с НОД кратным 2, таких троек \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/41/2c/412c166c316afa26e0c59b3d5126331dd0a79fff.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. Далее вычитаем \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/d5/68/d568e5297751735e19a50e8e0a3a0fb511d77bd8.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. Тройки с НОД кратным 4 мы учли вместе с двойкой. Далее вычитаем \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/ea/49/ea49498d727031db26f5a91e1881845fdeaccb4f.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. Теперь заметим, что тройки с НОД кратным 6 мы вычли уже дважды: сначала с двойкой, потом с тройкой, поэтому прибавим количество таких троек \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/d9/f9/d9f9fee7d32a0d81b208dde2553476b4d1c514e7.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. Продолжая этот процесс получаем, что для числа \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ed\u003c/i\u003e\u003c/span\u003e, к ответу нужно прибавить число \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/bd/1c/bd1c95f3132e34c0ec35b3e97dc908e79b8a4b8f.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, где \u003cspan class\u003d\"tex-span\"\u003eμ(\u003ci\u003ed\u003c/i\u003e)\u003c/span\u003e — функция Мёбиуса. Функция Мёбиуса определяется следующим образом:\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003eμ(1) \u003d 1\u003c/span\u003e.\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003eμ(\u003ci\u003ed\u003c/i\u003e) \u003d 0\u003c/span\u003e, если \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ed\u003c/i\u003e\u003c/span\u003e делиться на полный квадрат отличающиеся от 1.\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003eμ(\u003ci\u003ed\u003c/i\u003e) \u003d 1\u003c/span\u003e, если количество простых в разложение числа \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ed\u003c/i\u003e\u003c/span\u003e четно .\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003eμ(\u003ci\u003ed\u003c/i\u003e) \u003d  - 1\u003c/span\u003e, если количество простых в разложение числа \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ed\u003c/i\u003e\u003c/span\u003e нечетно. \u003c/p\u003e\u003cp\u003eЗначит, нам нужно посчитать \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/6c/7d/6c7d9ef98c6124a1dff128c484eca871349177f0.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. Давайте, научимся считать вот такую штуку \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eM\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e) \u003d μ(1) + μ(2) + .. + μ(\u003ci\u003en\u003c/i\u003e)\u003c/span\u003e — называется как функция Мертенса. \u003ca href\u003d\"https://ru.wikipedia.org/wiki/Функция_Мертенса\"\u003eХарактеристическое свойство функции Мертенса\u003c/a\u003e \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/a8/77/a8779cd3edf0f1cd5ca0feb2f7d9961bbd9172f0.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e(Доказывать это я не умею). Отсюда следует, что \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/99/f2/99f23eefdd3f55acc0222f989ed76ee38c4ca7f1.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eFact 1\u003c/strong\u003e. Среди значений \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/e4/b7/e4b7750143c5eb42362bbcddcbd161a0b4b04752.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e существует не более \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/32/91/32913ddf691f31b4d68f1a13d186d75779229920.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e различных значений.\u003c/p\u003e\u003cp\u003e\u003cem\u003eДоказательство\u003c/em\u003e: Если \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/5a/dd/5addb46249a13b5e8dacf12b0378a98c26d78906.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, то \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/18/06/18068e4b9466cf86dca9eed79ca401438e77f1c0.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eFact 2\u003c/strong\u003e. При \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e ≥ 1\u003c/span\u003e количество чисел \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ed\u003c/i\u003e\u003c/span\u003e таких, что \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/25/c8/25c839c71348b3ba732695f07083b359141a377b.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e будет \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/6d/53/6d53aab9e0f3778efe5ad0db9084c59aea881818.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e.\u003c/p\u003e\u003cp\u003eЗаранее посчитаем значение \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eM\u003c/i\u003e(\u003ci\u003ed\u003c/i\u003e)\u003c/span\u003e для \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ed\u003c/i\u003e ≤ 10\u003csup class\u003d\"upper-index\"\u003e7\u003c/sup\u003e\u003c/span\u003e. Затем воспользуемся равенством \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/99/f2/99f23eefdd3f55acc0222f989ed76ee38c4ca7f1.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e и рекурсивно можем посчитать значение \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eM\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e)\u003c/span\u003e. Для более подробного понимая, посмотрите код. Асимптотика вычисление \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eM\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e)\u003c/span\u003e будет примерно \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/14/e7/14e77072409139a62fc0c967bc104bd1f965fa87.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e.\u003c/p\u003e\u003cp\u003eИз \u003cstrong\u003eFact 1\u003c/strong\u003e и \u003cstrong\u003eFact 2\u003c/strong\u003e следует, что \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/d0/9e/d09eb2e134f1bbe98908ddb7f82118a056bdab83.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, где \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e принимает все возможные значение \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/b3/be/b3be899131c3f83b56074aa295c8959e04206a90.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e.\u003c/p\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eКод\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003e#include \u0026lt;iostream\u0026gt;\n#include \u0026lt;cstdio\u0026gt;\n#include \u0026lt;algorithm\u0026gt;\n#include \u0026lt;cmath\u0026gt;\n#include \u0026lt;string\u0026gt;\n#include \u0026lt;vector\u0026gt;\n#include \u0026lt;stack\u0026gt;\n#include \u0026lt;queue\u0026gt;\n#include \u0026lt;set\u0026gt;\n#include \u0026lt;cstring\u0026gt;\n#include \u0026lt;map\u0026gt;\n#include \u0026lt;cstdlib\u0026gt;\n#include \u0026lt;ctime\u0026gt;\n#include \u0026lt;cassert\u0026gt;\n#include \u0026lt;bitset\u0026gt;\n#define f first\n#define s second\n#define ll long long\n#define ull unsigned long long\n#define mp make_pair\n#define pb push_back\n#define vi vector \u0026lt;int\u0026gt;\n#define ld long double\n#define pii pair\u0026lt;int, int\u0026gt;\nusing namespace std;\n\nconst int N \u003d int(1e7), mod \u003d int(1e9) + 7;\nint lp[N+5];\nint mu[N+5];\nint s[N+5];\nll n,k,d;\n\nmap \u0026lt;ll,ll\u0026gt; ma;\nint sqr;\nll l,r,j;\n\nll M(ll x);\n\nll calc1(ll n,ll x){\n\tll r \u003d n / x;\n\tll l \u003d n / (x + 1); \n\tll v \u003d (r - l) % mod; \n\treturn v * M(x) % mod;\n}\n\nll M(ll n) {\n\tif(n \u0026lt;\u003d N) return s[n];\n\tif(ma.count(n)) return ma[n];\n\tll res \u003d 1;\n\tfor(int i\u003d2;1ll*i*i\u0026lt;\u003dn;i++){\n\t\tres \u003d (res - calc1(n,i) + mod);\n\t\tif(res \u0026gt;\u003d mod) res -\u003d mod;\n\t\tif(n /i !\u003d i){\n\t\t\tres \u003d (res - calc1(n,n/i) + mod);\n\t\t\tif(res \u0026gt;\u003d mod) res -\u003d mod;\n\t\t}\n\n\t}\n\tres \u003d res - calc1(n,1) + mod;\n\tif(res \u0026gt;\u003d mod) res -\u003d mod;\n\treturn ma[n] \u003d res;\n}\n\nll calc(ll x){\n\tll v \u003d x % mod; \n\tll res \u003d (v * v % mod) * v % mod;\n\tll r \u003d n / x;\n\tll l \u003d n / (x + 1);\n\treturn (M(r) - M(l) + mod + mod) * res % mod; \n}\n\nll f(ll n){\n\tll res \u003d 0;\n\tfor(int i\u003d1;1ll*i*i\u0026lt;\u003dn;i++){\n\t\tres +\u003d calc(i);\n\t\tif(res \u0026gt;\u003d mod) res -\u003d mod;\n\t\tif(n /i !\u003d i) {\n\t\t\tres +\u003d calc(n/i);\n\t\t\tif(res \u0026gt;\u003d mod) res -\u003d mod;\n\t\t}\n\t}\n\treturn res;\n}\n        \nint main () {\n\tfreopen(\u0026quot;gcd.in\u0026quot;,\u0026quot;r\u0026quot;,stdin);\n\tfreopen(\u0026quot;gcd.out\u0026quot;,\u0026quot;w\u0026quot;,stdout);\t\n\tcin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; d;\n\tif(n \u0026lt; d){\n\t\tcout \u0026lt;\u0026lt; 0;\n\t\treturn 0;\n\t}\n\tn /\u003d d;\n\tk \u003d 3;\n\tfor(int i\u003d2;i\u0026lt;\u003dN;i+\u003d2) lp[i] \u003d 2;\n     int K \u003d int(sqrt(N + 0.0));\n     for(int i\u003d3;i\u0026lt;\u003dK;i+\u003d2){\n     \tif(!lp[i]){\n     \t\tfor(int j\u003di*i;j\u0026lt;\u003dN;j+\u003d(i+i)) lp[j] \u003d i;\n     \t}\n     }\n\n     int m,p;\n     s[1] \u003d 1;\n     mu[1] \u003d 1;\n     for(int i\u003d2;i\u0026lt;\u003dN;i++){\n     \tp \u003d lp[i];\n     \tif(!p) p \u003d i;\n     \tm \u003d i / p;\n     \tif(m % p \u003d\u003d0) mu[i] \u003d 0;\n     \telse mu[i] \u003d -mu[m];\n     \ts[i] \u003d s[i-1] + mu[i];\n     }\n     M(n);\n     cout \u0026lt;\u0026lt; f(n);\nreturn 0;\n}\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e","tags":[]}}