{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":false,"creationTimeSeconds":1497027661,"rating":0,"authorHandle":"TonySnark","modificationTimeSeconds":1497162984,"id":52496,"title":"\u003cp\u003eРазбор задач 10.06.2017\u003c/p\u003e","locale":"ru","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e[problem:214003A]\u003c/p\u003e\u003cp\u003eТак как в игре не появляются новые монеты и монеты никуда не исчезают, общее количество монет в игре остается неизменным. Поэтому общее количество монет должно быть равно \u003cspan class\u003d\"tex-span\"\u003e5\u003ci\u003eb\u003c/i\u003e\u003c/span\u003e. Значит, сумма чисел во входных данных должна делиться на \u003cspan class\u003d\"tex-span\"\u003e5\u003c/span\u003e, иначе ответ равен \u003cspan class\u003d\"tex-span\"\u003e\u0026quot; - 1\u0026quot;\u003c/span\u003e. Если эта сумма делится на \u003cspan class\u003d\"tex-span\"\u003e5\u003c/span\u003e, нужно разделить ее на \u003cspan class\u003d\"tex-span\"\u003e5\u003c/span\u003e, чтобы получить ответ. Также нужно не забыть, что количество монет должно получиться ненулевым, иначе ответ равен \u003cspan class\u003d\"tex-span\"\u003e\u0026quot; - 1\u0026quot;\u003c/span\u003e.\u003c/p\u003e\u003cp\u003e[problem:214003B]\u003c/p\u003e\u003cp\u003eВ этой задаче нужно было рассмотреть несколько вариантов итогового выражения и выбрать среди них то, значение которого наибольшее. В принципе по правилам задачи можно составить 12 выражений: \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e + \u003ci\u003eb\u003c/i\u003e + \u003ci\u003ec\u003c/i\u003e; \u003ci\u003ea\u003c/i\u003e + \u003ci\u003eb\u003c/i\u003e·\u003ci\u003ec\u003c/i\u003e; \u003ci\u003ea\u003c/i\u003e·\u003ci\u003eb\u003c/i\u003e + \u003ci\u003ec\u003c/i\u003e; \u003ci\u003ea\u003c/i\u003e·\u003ci\u003eb\u003c/i\u003e·\u003ci\u003ec\u003c/i\u003e; (\u003ci\u003ea\u003c/i\u003e + \u003ci\u003eb\u003c/i\u003e) + \u003ci\u003ec\u003c/i\u003e; (\u003ci\u003ea\u003c/i\u003e + \u003ci\u003eb\u003c/i\u003e)·\u003ci\u003ec\u003c/i\u003e; (\u003ci\u003ea\u003c/i\u003e·\u003ci\u003eb\u003c/i\u003e) + \u003ci\u003ec\u003c/i\u003e; (\u003ci\u003ea\u003c/i\u003e·\u003ci\u003eb\u003c/i\u003e)·\u003ci\u003ec\u003c/i\u003e; \u003ci\u003ea\u003c/i\u003e + (\u003ci\u003eb\u003c/i\u003e + \u003ci\u003ec\u003c/i\u003e); \u003ci\u003ea\u003c/i\u003e + (\u003ci\u003eb\u003c/i\u003e·\u003ci\u003ec\u003c/i\u003e); \u003ci\u003ea\u003c/i\u003e·(\u003ci\u003eb\u003c/i\u003e + \u003ci\u003ec\u003c/i\u003e); \u003ci\u003ea\u003c/i\u003e·(\u003ci\u003eb\u003c/i\u003e·\u003ci\u003ec\u003c/i\u003e)\u003c/span\u003e. Если выбросить выражения, в которых скобки не меняют результата вычислений, останется шесть вариантов: \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e + \u003ci\u003eb\u003c/i\u003e + \u003ci\u003ec\u003c/i\u003e; \u003ci\u003ea\u003c/i\u003e + \u003ci\u003eb\u003c/i\u003e·\u003ci\u003ec\u003c/i\u003e; \u003ci\u003ea\u003c/i\u003e·\u003ci\u003eb\u003c/i\u003e + \u003ci\u003ec\u003c/i\u003e; \u003ci\u003ea\u003c/i\u003e·\u003ci\u003eb\u003c/i\u003e·\u003ci\u003ec\u003c/i\u003e; (\u003ci\u003ea\u003c/i\u003e + \u003ci\u003eb\u003c/i\u003e)·\u003ci\u003ec\u003c/i\u003e; \u003ci\u003ea\u003c/i\u003e·(\u003ci\u003eb\u003c/i\u003e + \u003ci\u003ec\u003c/i\u003e)\u003c/span\u003e. Также можно заметить, что всегда верны неравенства \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e + \u003ci\u003eb\u003c/i\u003e·\u003ci\u003ec\u003c/i\u003e ≤ (\u003ci\u003ea\u003c/i\u003e + \u003ci\u003eb\u003c/i\u003e)·\u003ci\u003ec\u003c/i\u003e\u003c/span\u003e и \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e·\u003ci\u003eb\u003c/i\u003e + \u003ci\u003ec\u003c/i\u003e ≤ \u003ci\u003ea\u003c/i\u003e·(\u003ci\u003eb\u003c/i\u003e + \u003ci\u003ec\u003c/i\u003e)\u003c/span\u003e, поэтому достаточно искать ответ среди четырех выражений: \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e + \u003ci\u003eb\u003c/i\u003e + \u003ci\u003ec\u003c/i\u003e; \u003ci\u003ea\u003c/i\u003e·\u003ci\u003eb\u003c/i\u003e·\u003ci\u003ec\u003c/i\u003e; (\u003ci\u003ea\u003c/i\u003e + \u003ci\u003eb\u003c/i\u003e)·\u003ci\u003ec\u003c/i\u003e; \u003ci\u003ea\u003c/i\u003e·(\u003ci\u003eb\u003c/i\u003e + \u003ci\u003ec\u003c/i\u003e)\u003c/span\u003e.\u003c/p\u003e\u003cp\u003e[problem:214003C]\u003c/p\u003e\u003cp\u003eДалее для краткости города, в которых есть склад муки, будем называть белыми, а города, в которых склада нет, будем называть черными. На любом пути из белого города в черный обязательно есть дорога, один из концов которой — белый город, а другой конец — черный город. Понятно, что длина этой дороги не больше, чем длина целого пути, поэтому нем выгодно рассматривать только пути, состоящие из одной дороги. Сохраним в булевом массиве для каждого из городов, является ли он белым. Далее пройдем по списку дорог, и если города на ее концах имеют разный цвет, то мы можем попробовать обновить ответ длиной этой дороги.\u003c/p\u003e\u003cp\u003e[problem:214003D]\u003c/p\u003e\u003cp\u003eЗадача состоит в том, чтобы быстро найти сумму на всех подотрезках массива длины \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e. Быстро пересчитать сумму при переходе от отрезка \u003cspan class\u003d\"tex-span\"\u003e[\u003ci\u003el\u003c/i\u003e; \u003ci\u003er\u003c/i\u003e]\u003c/span\u003e к отрезку \u003cspan class\u003d\"tex-span\"\u003e[\u003ci\u003el\u003c/i\u003e + 1; \u003ci\u003er\u003c/i\u003e + 1]\u003c/span\u003e можно, вычтя из суммы значение \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eh\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e и прибавив к ней значение \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eh\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003er\u003c/i\u003e + 1\u003c/sub\u003e\u003c/span\u003e. Таким образом, сумму для отрезка \u003cspan class\u003d\"tex-span\"\u003e[1; \u003ci\u003ek\u003c/i\u003e]\u003c/span\u003e можно посчитать по-честному, а остальные суммы с помощью таких переходов.\u003c/p\u003e\u003cp\u003e[problem:214003E]\u003c/p\u003e\u003cp\u003eВ задаче не требуется уменьшать длину пройденного пути, поэтому робот может ездить следующим образом: от компьютера \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e к компьютеру \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e, потом от компьютера \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e к компьютеру \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e, потом снова от компьютера \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e к компьютеру \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e, и так далее. Так как гарантируется, что существует хотя бы одна последовательность действий робота, позволяющая собрать все \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e частей информации, во время каждого проезда будет собрана хотя бы одна часть информации, поэтому всего потребуется не более \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e проездов. Это значит, что можно просто симулировать действия робота.\u003c/p\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eБонус\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eЕсли значение \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e может достигать \u003cspan class\u003d\"tex-span\"\u003e10\u003csup class\u003d\"upper-index\"\u003e5\u003c/sup\u003e\u003c/span\u003e, описанное решение будет работать очень медленно. Есть ли решение, которое работает быстрее?\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003cp\u003e[problem:214003F]\u003c/p\u003e\u003cp\u003eСначала предположим, что все товары куплены после периода скидок. В этом случае потраченная сумма составит \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e + \u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e + ... + \u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e. Теперь нам нужно выбрать от \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e до \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e товаров таким образом, чтобы их покупка в период скидок позволила нам сэкономить больше всего денег. Если \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e-й товар купить не после периода скидок, а во время скидок, выгода составит \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e - \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e (если эта величина меньше нуля, мы потратим еще больше денег). Отсортируем все товары в порядке убывания выгоды. Если товаров с положительной выгодой не меньше \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e, то нам выгодно купить все товары с положительной выгодой, чтобы максимально уменьшить общую сумму покупок. Иначе мы должны взять \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e товаров с наибольшими выгодами.\u003c/p\u003e\u003c/div\u003e","tags":["разбор задач"]}}