{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1486009944,"rating":6,"authorHandle":"dustbite","modificationTimeSeconds":1486010708,"id":50185,"title":"\u003cp\u003e2d array trick\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eWhile solving problem F of 394 div 2 I needed to solve the problem, fill rectangle (a,b) to (c,d) with value V. There are Q queries of this form.\u003c/p\u003e\u003cp\u003eI need to find for each cell, the total value of it i.e. F[i][j] where F is the final array after all the updates are performed.\u003c/p\u003e\u003cp\u003eI extended the simple 1d method. to update range [l, r] set F[l] \u003d F[l] + 1, F[r + 1] \u003d F[r + 1] â€” 1, and taking cumulative sum.\u003c/p\u003e\u003cp\u003eIn 2d, I took two 2d arrays, start[i][j], finish[i][j]\u003c/p\u003e\u003cp\u003ewhenever i see a rectangle (a,b) to (c,d), updates are\u003c/p\u003e\u003cp\u003estart[a][b]++\u003c/p\u003e\u003cp\u003efinish[a][d]++\u003c/p\u003e\u003cp\u003estart[c + 1][b]--\u003c/p\u003e\u003cp\u003efinish[c + 1][d]--\u003c/p\u003e\u003cp\u003eThink of this method as when a segment from column b to d starts i.e. at a and when the segment should be removed i.e. at c + 1\u003c/p\u003e\u003cp\u003eNow for each row, I take cumulative sum as in 1d which is take cumulative sum of start[i][j] and subtract finish[i][j] when leaving the cell, also push start[i][j] and finish[i][j] down\u003c/p\u003e\u003cp\u003eThis method works, but I have seen other methods while using just one 2d array.\u003c/p\u003e\u003cp\u003eCan anyone explain the method? \u003c/p\u003e\u003c/div\u003e","tags":["2d","array","trick"]}}