{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1440502678,"rating":0,"authorHandle":"xrisk","modificationTimeSeconds":1440502678,"id":19971,"title":"\u003cp\u003eHint to solve \u0026quot;Sorting a Three-Valued Sequence” from IOI 96\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHere is a description of the problem:\u003c/p\u003e\u003cp\u003eSorting a Three-Valued Sequence IOI\u002796 — Day 2 \u003c/p\u003e\u003cp\u003eSorting is one of the most frequently performed computational tasks. Consider the special sorting problem in which the records to be sorted have at most three different key values. This happens for instance when we sort medalists of a competition according to medal value, that is, gold medalists come first, followed by silver, and bronze medalists come last.\u003c/p\u003e\u003cp\u003eIn this task the possible key values are the integers 1, 2 and 3. The required sorting order is non-decreasing. However, sorting has to be accomplished by a sequence of exchange operations. An exchange operation, defined by two position numbers p and q, exchanges the elements in positions p and q. \u003c/p\u003e\u003cp\u003eYou are given a sequence of key values. Write a program that computes the minimal number of exchange operations that are necessary to make the sequence sorted.\u003c/p\u003e\u003cp\u003eA small hint would be appreciated! I want to solve the problem myself, not have someone else solve it for me :D\u003c/p\u003e\u003c/div\u003e","tags":[]}}