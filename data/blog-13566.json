{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1409073780,"rating":-6,"authorHandle":"naved","modificationTimeSeconds":1409073858,"id":13566,"title":"\u003cp\u003eCan you help me Solve this problem ?\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eI have a problem for which I am not getting optimal answer from last 3 days Problem is as Below \u003cstrong\u003eGiven a graph G find the shortest distance between Source to Destination node but you MUST PASS THROUGH ALL THE NODES before going to destination BECAUSE THEY ALL are MUST_PASS nodes.\u003c/strong\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eAdditional info:\u003c/strong\u003e - -you can pass any node more than once if required to get optimal answer - -max number of nodes is 22 including source \u0026amp; destination\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eWhat I tried so far\u003c/strong\u003e - brute-force : simple permutation will give you the answer for small n , but since upper bound is 20, it is not practical 20! duhh :(\u003c/p\u003e \u003cul\u003e   \u003cli\u003e\u003cp\u003eTSP with DP: problem with this is I Start from Source visit all nodes except destination \u0026amp; comes back to start, now if I go back to last node which I visited and from their if I go to destination one might think that this will give me optimal result, but the result is sub-optimal and not optimal ...:(\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003esuppose each must_pass node is named as C, Start as S, destination as D, then one might thing f(S,D) \u003d min(S,C1) + min(C1,C2) + min(C2,Ck) + min(Ck,D) but this is also sub-optimal and optimal for small graph with fewer MUST_VISIT nodes \u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e\u003cp\u003e\u003cstrong\u003eMax Must_Visit nodes are 20\u003c/strong\u003e\u003c/p\u003e\u003c/div\u003e","tags":["problem d","algorithms","interview"]}}