{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":true,"creationTimeSeconds":1495206986,"rating":0,"authorHandle":"TonySnark","modificationTimeSeconds":1495270901,"id":52073,"title":"\u003cp\u003eРазбор задач 20.05.2017\u003c/p\u003e","locale":"ru","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e[problem:213660A]\u003c/p\u003e\u003cp\u003eВ данной задаче нужно было просто реализовать то, что описано в условии. Для этого можно использовать два вложенных цикла, которые перебирают соответственно строку и столбец картинки. Внутри циклов с помощью условий можно определить, какой символ должен быть сейчас изображен.\u003c/p\u003e\u003cp\u003e[problem:213660B]\u003c/p\u003e\u003cp\u003eТак как скорости Тома и Бутча равны, первым добежит до Джерри тот из них, кто находится ближе. Соответственно, мы должны сравнить расстояния от Тома и Бутча до Джерри. Если расстояния равны, то выводим \u0026quot;Jerry\u0026quot;, если Том ближе, то выводим \u0026quot;Tom\u0026quot;, иначе выводим \u0026quot;Butch\u0026quot;. Расстояние между точками \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e и \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ey\u003c/i\u003e\u003c/span\u003e определяется по формуле \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edist\u003c/i\u003e \u003d |\u003ci\u003ex\u003c/i\u003e - \u003ci\u003ey\u003c/i\u003e|\u003c/span\u003e.\u003c/p\u003e\u003cp\u003e[problem:213660C]\u003c/p\u003e\u003cp\u003eЗаведем переменные для текущих значений рекорда (\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003emx\u003c/i\u003e\u003c/span\u003e) и антирекорда (\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003emn\u003c/i\u003e\u003c/span\u003e), а также переменные, обозначающие, сколько раз был побит рекорд (\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eansMx\u003c/i\u003e\u003c/span\u003e) и антирекорд (\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eansMn\u003c/i\u003e\u003c/span\u003e). Изначально \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003emx\u003c/i\u003e \u003d \u003ci\u003es\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003emn\u003c/i\u003e \u003d \u003ci\u003es\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eansMx\u003c/i\u003e \u003d 0\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eansMn\u003c/i\u003e \u003d 0\u003c/span\u003e. Пройдем циклом по всем элементам массива \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e\u003c/span\u003e, начиная со второго. Если текущий элемент \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e больше, чем \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003emx\u003c/i\u003e\u003c/span\u003e, то Петя обновил рекорд, поэтому нужно сделать присваивания \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003emx\u003c/i\u003e \u003d \u003ci\u003es\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eansMx\u003c/i\u003e \u003d \u003ci\u003eansMx\u003c/i\u003e + 1\u003c/span\u003e. Аналогичным образом рассматривается обновление антирекорда.\u003c/p\u003e\u003cp\u003e[problem:213660D]\u003c/p\u003e\u003cp\u003eДля удобства присвоим \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e0\u003c/sub\u003e \u003d 10\u003csup class\u003d\"upper-index\"\u003e9\u003c/sup\u003e + 1\u003c/span\u003e (максимально возможное число баллов + \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e) и \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003em\u003c/i\u003e + 1\u003c/sub\u003e \u003d 0\u003c/span\u003e (минимально возможное число баллов). Так как количество баллов у Гены не уменьшается, то место, которое он занимает, может только уменьшаться. Пусть \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eplace\u003c/i\u003e\u003c/span\u003e — это текущее место Гены, а \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003esum\u003c/i\u003e\u003c/span\u003e — текущее количество баллов у него. \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eplace\u003c/i\u003e\u003c/span\u003e может уменьшиться на \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e, если \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eplace\u003c/i\u003e\u003c/sub\u003e ≤ \u003ci\u003esum\u003c/i\u003e\u003c/span\u003e. Мы можем делать этот сдвиг до тех пор, пока условие выполняется.\u003c/p\u003e\u003cp\u003eСначала присвоим \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eplace\u003c/i\u003e \u003d \u003ci\u003em\u003c/i\u003e + 1\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003esum\u003c/i\u003e \u003d 0\u003c/span\u003e. Далее выполним описанный сдвиг. В результате получится место Гены до сдачи первой задачи. Если прибавить к \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003esum\u003c/i\u003e\u003c/span\u003e стоимость первой задачи и снова выполнить указанный сдвиг (при этом \u003cb\u003eне нужно\u003c/b\u003e заново делать присвоение \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eplace\u003c/i\u003e \u003d \u003ci\u003em\u003c/i\u003e + 1\u003c/span\u003e), то получится место Гены после сдачи одной задачи. Аналогичным образом можно найти место Гены после сдачи каждой из последующих задач.\u003c/p\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eЧто делать, если мы не ищем легких путей?\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eКоличество участников с большим количеством баллов (а это по сути место Гены, уменьшенное на единицу) также можно искать бинарным поиском по массиву \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/span\u003e. Но при этом асимптотика решения будет хуже (\u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/e6/ba/e6bafeacb4d743a750b88cd93bde2cb587773cb8.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e вместо \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003em\u003c/i\u003e)\u003c/span\u003e).\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003cp\u003e[problem:213660E]\u003c/p\u003e\u003cp\u003eНайдем ответ, спустившись от последовательности под номером \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e к последовательности под номером \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e. Чтобы сделать переход от последовательности \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e к последовательности \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e - 1\u003c/span\u003e, сначала прибавим к ответу текущий номер элемента \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e. Если этот элемент лежит в первой половине последовательности, его порядковый номер при переходе не изменится, иначе из номера нужно вычесть \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003elen\u003c/i\u003e / 2\u003c/span\u003e, где \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003elen\u003c/i\u003e\u003c/span\u003e — это длина последовательности номер \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e. Нетрудно доказать (или заметить в ограничениях на входные данные), что длина последовательности под номером \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e равна \u003cspan class\u003d\"tex-span\"\u003e2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ei\u003c/i\u003e - 1\u003c/sup\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003e[problem:213660F]\u003c/p\u003e\u003cp\u003eВсе кенгуру приземлятся в одной точке, если какой-либо кенгуру встретится с каждым из остальных в одно и то же время (причем это должен быть целочисленный момент времени). Возможны два варианта: у всех кенгуру одинаковая длина прыжка или есть два кенгуру с различными длинами прыжков.\u003c/p\u003e\u003cp\u003eПервый случай проверяется просто: ответ \u0026quot;Yes\u0026quot; будет только в том случае, когда все кенгуру изначально находились в одной точке. Тогда они встретятся в начальный момент времени и будут встречаться после каждого прыжка.\u003c/p\u003e\u003cp\u003eВо втором случае, так как есть два кенгуру с различными длинами прыжков, все кенгуру смогут собраться в одной точке не более одного раза. Чтобы найти время встречи, найдем двух кенгуру с разными длинами прыжка (например, можно взять кенгуру с минимальной и максимальной длиной прыжка). Момент встречи вычисляется по формуле \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/c6/ab/c6ab47cc0fa91e68748b069092277a0c4040c353.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. Из-за больших значений \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e и \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e вычисления в double могут оказаться с погрешностью, поэтому расчет нужно проводить в целых числах: сначала проверяем, что остаток от деления \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e - \u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003c/span\u003e на \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e - \u003ci\u003ev\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/span\u003e равен нулю (если нет, то ответ сразу равен \u0026quot;No\u0026quot;), а потом нацело делим \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e - \u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003c/span\u003e на \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e - \u003ci\u003ev\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eТеперь, когда известен момент встречи, выберем любого кенгуру и проверим, что он может встретиться с каждым из остальных кенгуру в этот момент времени. Если у рассматриваемой пары кенгуру длины прыжков равны, то должны быть равны и начальные позиции, иначе эти два кенгуру никогда не встретятся. В противном случае можно посчитать момент встречи этих двух кенгуру, как описано в предыдущем абзаце, и сравнить его с известным.\u003c/p\u003e\u003c/div\u003e","tags":["разбор задач"]}}