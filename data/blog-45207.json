{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":true,"creationTimeSeconds":1464955396,"rating":0,"authorHandle":"Algiz","modificationTimeSeconds":1464955440,"id":45207,"title":"\u003cp\u003eБла бла бла\u003c/p\u003e","locale":"ru","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eАльтернативное решение задачи про строку\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e#include \u0026lt;stdio.h\u0026gt;\n#include \u0026lt;stdlib.h\u0026gt;\n#include \u0026lt;string.h\u0026gt;\n#include \u0026lt;algorithm\u0026gt;\n#include \u0026lt;bits/stdc++.h\u0026gt;\nusing namespace std;\nconst int MAXN \u003d 200000 + 10, MOD \u003d 1e9 + 7;\n\nstruct Entry {\n  int s, t, l;\n  bool operator \u0026lt; (const Entry \u0026amp;rhs) const {\n    return l \u0026gt; rhs.l;\n  }\n} E[MAXN], F[MAXN \u0026lt;\u0026lt; 2], tp[MAXN \u0026lt;\u0026lt; 2];\n\nint dsu[MAXN], n, m;\n\nint get(int x) {\n  if (x !\u003d dsu[x]) dsu[x] \u003d get(dsu[x]);\n  return dsu[x];\n}\n\nint reduce(Entry E[], int sz, int len) {\n  static int ok[MAXN], cnt;\n  if (sz \u003d\u003d 0) return 0;\n  for (int i \u003d 0; i \u0026lt; n; ++ i) dsu[i] \u003d i;\n  for (int i \u003d cnt \u003d 0; i \u0026lt; sz; ++ i) {\n    int u \u003d get(E[i].s), v \u003d get(E[i].t);\n    if (u !\u003d v) {\n      ok[cnt ++] \u003d i \u0026lt;\u0026lt; 1;\n      dsu[u] \u003d v;\n    }\n    u \u003d get(E[i].s + E[i].l \u0026amp;mdash; len);\n    v \u003d get(E[i].t + E[i].l \u0026amp;mdash; len);\n    if (u !\u003d v) {\n      ok[cnt ++] \u003d i \u0026lt;\u0026lt; 1 | 1;\n      dsu[u] \u003d v;\n    }\n  }\n  for (int i \u003d 0; i \u0026lt; cnt; ++ i) {\n    tp[i] \u003d E[ok[i] \u0026gt;\u0026gt; 1];\n    if (ok[i] \u0026amp; 1) {\n      tp[i].s +\u003d tp[i].l \u0026amp;mdash; len;\n      tp[i].t +\u003d tp[i].l \u0026amp;mdash; len;\n    }\n    tp[i].l \u003d len;\n  }\n  memcpy(E, tp, sizeof(Entry) * cnt);\n  return cnt;\n}\n\nint main() {\n  while (scanf(\u0026quot;%d%d\u0026quot;, \u0026amp;n, \u0026amp;m) \u003d\u003d 2) {\n    for (int i \u003d 0; i \u0026lt; m; ++ i) {\n      scanf(\u0026quot;%d%d%d\u0026quot;, \u0026amp;E[i].s, \u0026amp;E[i].t, \u0026amp;E[i].l);\n      E[i].s --; E[i].t --;\n    }\n    sort(E, E + m);\n    int len \u003d 1, tot \u003d 0;\n    while (len \u0026lt; n) len \u0026lt;\u0026lt;\u003d 1;\n    for (int i \u003d 0; len \u0026gt;\u003d 1; len \u0026gt;\u0026gt;\u003d 1) {\n      while (i \u0026lt; m \u0026amp;\u0026amp; E[i].l \u0026gt;\u003d len) {\n        F[tot ++] \u003d E[i ++]; \n      }\n      tot \u003d reduce(F, tot, len);\n    }\n    for (int i \u003d 0; i \u0026lt; n; ++ i) dsu[i] \u003d i;\n    for (int i \u003d 0; i \u0026lt; tot; ++ i) {\n      int u \u003d get(F[i].s), v \u003d get(F[i].t);\n      if (u !\u003d v) dsu[u] \u003d v;\n    }\n    int ret(1);\n    for (int i \u003d 0; i \u0026lt; n; ++ i) {\n      if (get(i) \u003d\u003d i) ret \u003d ret * 26ll % MOD;\n    }\n    printf(\u0026quot;%d\\n\u0026quot;, ret);\n  }\n  return 0;\n}\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":[]}}