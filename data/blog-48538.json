{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1479815961,"rating":-11,"authorHandle":"the_death_eater","modificationTimeSeconds":1479815961,"id":48538,"title":"\u003cp\u003eSasha And Array\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eI am trying to solve \u003ca href\u003d\"//codeforces.com/problemset/problem/718/C\"\u003ethis problem\u003c/a\u003e I have understood the method of getting the Nth Fibonacci number â€” raise a 2D matrix to the Nth power. My approach takes O(logn) time as I raise the matrix to the power of N/2 and then multiply the resultant matrix to itself. If N is odd, then I multiply it by the matrix raised to the power 1.\u003c/p\u003e\u003cp\u003eHowever I am getting a time-limit exceeded error on Test case 8 in this method. I next tried to keep all the fibonacci values seen till now in a hash map. Still the time exceeds message persisted. I then kept all the matrix powers seen till now also in another hash table. Still the time limit exceeds did not go.\u003c/p\u003e\u003cp\u003eMy analysis is that in test 8 since the first number itself is very large (approx 10^7), my method is taking time since even the hash values have no seed. I can try and store the 10^6th fibonacci number of so, but that would be kind of cheating. \u003c/p\u003e\u003cp\u003eIs there any other way I can reduce the time complexity of my algorithm?\u003c/p\u003e\u003c/div\u003e","tags":["fibonacci","hash table","#timelimit"]}}