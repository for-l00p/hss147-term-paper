{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1412020885,"rating":143,"authorHandle":"Rubanenko","modificationTimeSeconds":1412021862,"id":14051,"title":"\u003cp\u003eMy Sad Cool Story About CF#270\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eIf you think you\u0027re a looser, you should read this story and calm down :) It probably won\u0027t be interesting for all the other people.\u003c/p\u003e\u003cp\u003eYou probably remember \u003ca href\u003d\"/contest/472/problem/D\" title\u003d\"Codeforces Round 270\"\u003e472D - Design Tutorial: Inverse the Problem\u003c/a\u003e from the 270th round. \u003c/p\u003e\u003cp\u003eIt took me about twenty minutes to solve ABC. It wasn\u0027t fast, but enough to still have chances to do well. After reading and several minutes drawing I invented MST-based solution(most people seem to have the same) which was pretty easy to prove. I wanted to build MST and check whether I get the same distance matrix as given one. \u0026quot;One more step to beating \u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/Petr\" title\u003d\"International Grandmaster Petr\"\u003ePetr\u003c/a\u003e\u0026quot; I thought, and immediately started coding. I used Kruskal\u0027s algorithm to prove my solution, so it was quite natural to implement it. Constructing distance matrix was implemented by calling \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edfs\u003c/i\u003e()\u003c/span\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eN\u003c/i\u003e\u003c/span\u003e times. Here the shit goes. I don\u0027t know why, but I accidentally implemented \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edfs\u003c/i\u003e()\u003c/span\u003e for dense graphs, i.e. the one that works \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e)\u003c/span\u003e, not \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eM\u003c/i\u003e)\u003c/span\u003e. So total complexity was \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e3\u003c/sup\u003e)\u003c/span\u003e which obviously should get TLE. \u003c/p\u003e\u003cp\u003eI submitted my solution and got(surprise!!!) TLE. Do you think, this bug was easy to fix? Yeah, maybe... but not for me on that day! \u003c/p\u003e \u003col\u003e   \u003cli\u003e\u0026quot;Hmmm... This Java... I was told not to use it for the contests million times. Hmm.. Creating and sorting 2000000 objects is probably too much. It would pass in c++...damn-damn...I could start thinking on E this moment... Ok, let\u0027s do minor optimizations and give it a try. It should be pretty close to get AC\u0026quot;\u003c/li\u003e \u003c/ol\u003e\u003cp\u003e...doing minor optimizations...\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e. \u0026quot;Damn!%^\u0026amp;*^ Ok, calm down... Switching to Java 7 can help(it really helps sometimes! :)\u0026quot;\u003c/p\u003e\u003cp\u003e...submitting \u0026amp; getting \u0026quot;unexpected\u0026quot; TLE...\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e2\u003c/span\u003e. \u0026quot;Ok...-150 points are not a big deal. There is still a lot of time... Probably they don\u0027t want \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e * \u003ci\u003elog\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e))\u003c/span\u003e solution to pass. Ok, it will definitely pass in c++.\u0026quot;\u003c/p\u003e\u003cp\u003e...rewriting solution to c++...\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e3\u003c/span\u003e. \u0026quot;ARE YOU KIDDING ME!??! I should have stay at home... Hm..wait, I can prove the same solution with Prim\u0027s algo. It will bring me straight to easy \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e)\u003c/span\u003e code, girls, money and fame.\u0026quot;\u003c/p\u003e\u003cp\u003e...thinking of implementation details...\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e4\u003c/span\u003e. \u0026quot;I better write it in lovely Intellij Idea + CHelper rather than in CodeBlocks. It shouldn\u0027t cause TLE, because they definitely have \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e)\u003c/span\u003e Java solution with at least two times margin.\u0026quot;\u003c/p\u003e\u003cp\u003e...coding...\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e5\u003c/span\u003e. \u0026quot;FUUUUCK!!! Is it even possible?!?! Ok, no time, just rewrite it to c++ and forget this task.\u0026quot;\u003c/p\u003e\u003cp\u003e...coding...\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e6\u003c/span\u003e. \u0026quot;Pretests Passed(yeah, I managed to make cubicle solution to pass pretests in 1965 ms).\u0026quot; \u003c/p\u003e\u003cp\u003eWell, I wasn\u0027t really happy about it. It was 99.9% it will fail during system testing. And here, you know, the moment when something dawns on you and you see THE BUG. I implemented the last and right solution in Java and submitted it. Of course, I couldn\u0027t do it without a silly typo in implementing linked list and loosing even more time. \u003c/p\u003e\u003cp\u003eAfterwards I was emotionally exhausted and could do nothing but implement \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eN\u003c/i\u003e * \u003ci\u003eM\u003c/i\u003e / 64\u003c/span\u003e solution for the last problem. Of course, I wasn\u0027t as successful in it as in making cubicle solution to pass pretests for problem D. \u003c/p\u003e\u003cp\u003eThank you for your attention, be attentive and think about your mistakes first rather than \u0026quot;something wrong with this Java again!!!\u0026quot;. \u003c/p\u003e\u003cp\u003eBye!\u003c/p\u003e\u003c/div\u003e","tags":["success","victory","zban_privet","lida_privet"]}}