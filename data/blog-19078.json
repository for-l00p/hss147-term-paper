{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":true,"creationTimeSeconds":1436036976,"rating":68,"authorHandle":"agul","modificationTimeSeconds":1436037261,"id":19078,"title":"\u003cp\u003eNumber of ways between two vertices\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHi!\u003c/p\u003e\u003cp\u003eToday I faced this problem: \u003ca href\u003d\"https://www.hackerearth.com/codex-6-0/algorithm/dummy-4-1/\"\u003ehttps://www.hackerearth.com/codex-6-0/algorithm/dummy-4-1/\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eProblem statement in short: there are ones and zeroes in two-dimensional array \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eN\u003c/i\u003e × \u003ci\u003eN\u003c/i\u003e\u003c/span\u003e. How many ways do exist between top-left corner and bottom-right corner, if you can travel in horizontal or vertical directions only (not only down/right but in any direction) and you cannot visit any cell twice? \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eN\u003c/i\u003e ≤ 100\u003c/span\u003e \u003c/p\u003e\u003cp\u003eAll accepted solutions are simple bruteforce, that gets TL on array 100x100 with all zeroes in it.\u003c/p\u003e\u003cp\u003eWhat is the approach to solve this problem?\u003c/p\u003e\u003c/div\u003e","tags":["number of ways"]}}