{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1477691850,"rating":0,"authorHandle":"rsFalse","modificationTimeSeconds":1477691985,"id":48067,"title":"\u003cp\u003ehelp with random permutations problem\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHello,\u003cbr /\u003e I had a problem: make sequence of random permutations which elements do not occur in same positions. E.g. I have list (\u0027a\u0027, \u0027b\u0027, \u0027c\u0027, \u0027d\u0027). I randomly generate permutation, say \u0027a d b c\u0027, then next permutation, say \u0027d c a b, then next permutation can not start with \u0027a\u0027 and \u0027d\u0027, because these elements occurs in first or second sequence on same position.\u003cbr /\u003e My algorithm is slow: I repeat to generate random (with \u003ca href\u003d\"https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle\"\u003eFisher-Yates shuffle\u003c/a\u003e) permutation and check each element if it not occur in previous sequences (I used 2D array). How to determine what is the complexity of my algorithm? \u003cbr /\u003e How to solve problem faster?\u003c/p\u003e\u003c/div\u003e","tags":["permutation"]}}