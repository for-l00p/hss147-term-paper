{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1516742012,"rating":0,"authorHandle":"Hasan0540","modificationTimeSeconds":1516742012,"id":57306,"title":"\u003cp\u003eWeek #4\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHello everyone,\u003c/p\u003e\u003cp\u003eHere is the content of the session:\u003c/p\u003e\u003ch4\u003eCounting (and Coloring) Components (in a 2D grid)\u003c/h4\u003e\u003cp\u003eThe code we wrote to visualize the Breadth-First Search (BFS) algorithm: \u003ca href\u003d\"https://ideone.com/P6ZgA7\"\u003ehttps://ideone.com/P6ZgA7\u003c/a\u003e, ignore the OpenCV library code and focus on the algorithm itself.\u003c/p\u003e\u003ch4\u003eFinding the number of components and their sizes (in a graph): \u003ca href\u003d\"https://ideone.com/57ZVIU\"\u003ehttps://ideone.com/57ZVIU\u003c/a\u003e\u003c/h4\u003e\u003ch4\u003eCounting components â€” Depth-First Search (DFS): \u003ca href\u003d\"https://ideone.com/QR8PFi\"\u003ehttps://ideone.com/QR8PFi\u003c/a\u003e\u003c/h4\u003e\u003ch4\u003eCycle detection (undirected graph): \u003ca href\u003d\"https://ideone.com/3hVJdI\"\u003ehttps://ideone.com/3hVJdI\u003c/a\u003e\u003c/h4\u003e\u003ch4\u003eCycle detection (directed graph): \u003ca href\u003d\"https://ideone.com/Tk4CKT\"\u003ehttps://ideone.com/Tk4CKT\u003c/a\u003e\u003c/h4\u003e\u003ch4\u003eLongest path in a tree (method #1): \u003ca href\u003d\"https://ideone.com/AQYurd\"\u003ehttps://ideone.com/AQYurd\u003c/a\u003e\u003c/h4\u003e\u003ch4\u003eLongest path in a tree (method #2): \u003ca href\u003d\"https://ideone.com/EoJ5i0\"\u003ehttps://ideone.com/EoJ5i0\u003c/a\u003e\u003c/h4\u003e\u003cp\u003eProblem: \u003ca href\u003d\"http://www.spoj.com/problems/PT07Z/\"\u003ehttp://www.spoj.com/problems/PT07Z/\u003c/a\u003e\u003c/p\u003e\u003ch4\u003eFinding Shortest Path: \u003ca href\u003d\"https://ideone.com/5rB4b6\"\u003ehttps://ideone.com/5rB4b6\u003c/a\u003e\u003c/h4\u003e\u003cp\u003eAnother problem that can be solved using DFS: \u003ca href\u003d\"http://www.spoj.com/problems/PT07X/\"\u003ehttp://www.spoj.com/problems/PT07X/\u003c/a\u003e\u003c/p\u003e\u003cp\u003eTree problem: \u003ca href\u003d\"https://csacademy.com/contest/round-65/task/crossing-tree/\"\u003ehttps://csacademy.com/contest/round-65/task/crossing-tree/\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eResources:\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eConnected Components: \u003ca\u003ehttps://en.wikipedia.org/wiki/Connected_component_(graph_theory\u003c/a\u003e)\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.topcoder.com/community/data-science/data-science-tutorials/introduction-to-graphs-and-their-data-structures-section-1/\"\u003eIntroduction to Graphs and Their Data Structures: Section 1\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.topcoder.com/community/data-science/data-science-tutorials/introduction-to-graphs-and-their-data-structures-section-2/\"\u003eIntroduction to Graphs and Their Data Structures: Section 2\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://en.wikipedia.org/wiki/Breadth-first_search\"\u003eBreath-First Search\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://en.wikipedia.org/wiki/Depth-first_search\"\u003eDepth-First Search\u003c/a\u003e\u003c/p\u003e\u003cp\u003eGood luck!\u003c/p\u003e\u003c/div\u003e","tags":[]}}