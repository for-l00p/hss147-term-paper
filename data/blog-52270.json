{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1496154295,"rating":3,"authorHandle":"-synx-","modificationTimeSeconds":1496163215,"id":52270,"title":"\u003cp\u003eGaussian Elimination on Modulo 2 Matrices\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e\u003ca href\u003d\"https://e-maxx-eng.appspot.com/linear_algebra/linear-system-gauss.html\"\u003ee-maxx\u003c/a\u003e\u003cbr /\u003eThis link mentions that we can speed up conventional Gaussian elimination by using \u003cstrong\u003ebitset\u003c/strong\u003e\u003cbr /\u003eto achieve \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e3\u003c/sup\u003e / 32)\u003c/span\u003e using bitwise operations.\u003cbr /\u003eI have 3 questions:\u003cbr /\u003e1. Do they mean mod 2 inverses (\u003cspan class\u003d\"tex-span\"\u003e1 + 1 \u003d 0, 0 + 0 \u003d 0, 0 + 1 \u003d 1 + 0 \u003d 1\u003c/span\u003e)?\u003cbr /\u003e2. For mod 2 inverse to exist, does this imply \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edet\u003c/i\u003e(\u003ci\u003eA\u003c/i\u003e) \u003ci\u003emod\u003c/i\u003e 2 ≠ 0\u003c/span\u003e?\u003cbr /\u003e3. Can someone please help correct the following implementation? \u003c/p\u003e \u003cpre\u003e\u003ccode\u003evector\u0026lt;bitset\u0026lt;N\u0026gt;\u0026gt;gaussModTwo(vector\u0026lt;bitset\u0026lt;N\u0026gt;\u0026gt;a,vector\u0026lt;bitset\u0026lt;N\u0026gt;\u0026gt;b){\n\tint n\u003da.size(), i, j;\n\tfor(i\u003d0;i\u0026lt;n;++i){\n\t\tfor(j\u003di;j\u0026lt;n;++j) if(a[j][i]){\n\t\t\tswap(a[j],a[i]);\n\t\t\tswap(b[j],b[i]);\n\t\t\tbreak;\n\t\t}\n\t\tfor(j\u003d0;j\u0026lt;n;++j) if(j!\u003di) {\n\t\t\ta[j]^\u003da[i];\n\t\t\tb[j]^\u003db[i];\n\t\t}\n\t}\n\treturn b;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":["gaussian elimination","matrices"]}}