{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1477582872,"rating":0,"authorHandle":"rsampaths16","modificationTimeSeconds":1477582872,"id":48031,"title":"\u003cp\u003eBi-directional (or) Un-directional Edges in Max-Flow\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eGenerally while modeling \u003cstrong\u003eMax-Flow\u003c/strong\u003e problems to solve through \u003cstrong\u003eFord Fulkerson\u003c/strong\u003e we consider edges to be directional. When we consider an edge \u003ccode\u003e(A,B)\u003c/code\u003e, we consider it to be a flow-edge from \u003ccode\u003eA\u003c/code\u003e -\u0026gt; \u003ccode\u003eB\u003c/code\u003e. We have to observe that the case of having two directional flow-edges \u003ccode\u003e(A,B)\u003c/code\u003e and \u003ccode\u003e(B,A)\u003c/code\u003e is different from have one Bidirectional edge \u003ccode\u003e(A,B)\u003c/code\u003e.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eCase (i)\u003c/strong\u003e We have two Directional edge \u003ccode\u003e(A,B)\u003c/code\u003e and \u003ccode\u003e(B,A)\u003c/code\u003e. Them being two separate edges they have their own capacities \u003ccode\u003eC[A][B]\u003c/code\u003e and \u003ccode\u003eC[B][A]\u003c/code\u003e. As the flow through one edge does not affect capacity of the other, we can model the graph by spliting either of the edges using a third vertex , say \u003ccode\u003eC\u003c/code\u003e. The edges \u003ccode\u003e(A,B)\u003c/code\u003e and \u003ccode\u003e(B,A)\u003c/code\u003e can be transformed into \u003ccode\u003e(A,B)\u003c/code\u003e , \u003ccode\u003e(B,C)\u003c/code\u003e and \u003ccode\u003e(C,A)\u003c/code\u003e where the maximum capacities of \u003ccode\u003e(B,C)\u003c/code\u003e and \u003ccode\u003e(C,A)\u003c/code\u003e is the same as that of \u003ccode\u003e(B,A)\u003c/code\u003e. In the implementation we show both the Flow and Residue in the same Adjacency Matrix, and Capacities in another Matrix.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eCase (ii)\u003c/strong\u003e We have an Bidirectional edge \u003ccode\u003e(A,B)\u003c/code\u003e and through symmetry we would also have the edge \u003ccode\u003e(B,A)\u003c/code\u003e. The problem arises when we take their capacities into consideration. The capacities of \u003ccode\u003e(A,B)\u003c/code\u003e and \u003ccode\u003e(B,A)\u003c/code\u003e are always equal ,i.e, they have the same capacity caps (or) flow through one direction obstructs the flow through the other. For these types of edges we can model them as conditionally directed. We can have three separate Matrices in this case, Flow-Matrix : \u003ccode\u003eflow\u003c/code\u003e, Residue-Matrix : \u003ccode\u003eresi\u003c/code\u003e, and Capacity-Matrix : \u003ccode\u003ecapa\u003c/code\u003e. Here we set the condition that the direction of the edge is always opposite to that of the Positive Residue. There are two conditions while modeling it this way.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eCase (A)\u003c/strong\u003e When there is no flow through edge \u003ccode\u003e(A,B)\u003c/code\u003e initially , i.e \u003ccode\u003eflow(A,B) \u003d flow(B,A) \u003d resi(A,B) \u003d resi(B,A) \u003d 0\u003c/code\u003e and \u003ccode\u003ecapa(A,B) \u003d capa(B,A) \u003d max_capa(A,B)\u003c/code\u003e. Considering positive flow in the direction \u003ccode\u003eA -\u0026gt; B\u003c/code\u003e , \u003ccode\u003eflow(A,B)\u003c/code\u003e and \u003ccode\u003eresi(B,A)\u003c/code\u003e increase while both \u003ccode\u003ecapa(A,B) and capa(B,A)\u003c/code\u003e decreases.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eCase (B)\u003c/strong\u003e When there is a flow in one direction \u003ccode\u003e(A,B)\u003c/code\u003e initially (say \u003ccode\u003eA -\u0026gt; B\u003c/code\u003e), i.e \u003ccode\u003eflow(A,B) \u003d resi(B,A) \u003d +Z\u003c/code\u003e , \u003ccode\u003eflow(B,A) \u003d resi(A,B) \u003d 0\u003c/code\u003e and \u003ccode\u003ecapa(A,B) \u003d capa(B,A) \u003d max_capa(A,B) - flow(A,B)\u003c/code\u003e. Here there is already an established direction \u003ccode\u003eA -\u0026gt; B\u003c/code\u003e, and we can observe that the \u003cstrong\u003eResidue\u003c/strong\u003e is in the opposite direction. \u003cstrong\u003eResidue\u003c/strong\u003e in the same direction \u003ccode\u003eresi(A,B)\u003c/code\u003e is \u003ccode\u003e0\u003c/code\u003e. From these observations we can tell the direction of the edge that is in consideration. Forward when there is Residue in the backward direction, and Backward when there is forward residue.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eCondition to check while trying to add flow in\u003c/strong\u003e \u003ccode\u003eA -\u0026gt; B\u003c/code\u003e \u003cstrong\u003edirection\u003c/strong\u003e\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eAugment(A,B):\n    if capa[A][B]\u0026gt;0 and resi[A][B]\u003d\u003d0 : Edge direction is A -\u0026gt; B or there is no direction yet\n        Decrease capacity in both directions : capa[A][B]--,capa[B][A]--\n        Increase flow in same direction : flow[A][B]++\n        Increase residue in reverse direction : resi[B][A]++\n\n\n    if capa[A][B]\u0026gt;0 and resi[A][B]\u0026gt;0 : Edge direction is B -\u0026gt; A\n        Increase capacity in both directions : capa[A][B]++,capa[B][A]++\n        Decrease flow in reverse direction : flow[B][A]--\n        Decrease residue in same direction : resi[A][B]--\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThank You.\u003c/p\u003e\u003cp\u003eP.S : This is a solution I thought about while solving the problem \u003ca href\u003d\"http://www.spoj.com/problems/MTOTALF/\"\u003eTotal Flow\u003c/a\u003e from \u003ca href\u003d\"http://www.spoj.com/\"\u003eSpoj\u003c/a\u003e. I would appreciate other approaches to these type of cases.\u003c/p\u003e\u003c/div\u003e","tags":["maxflow","ford fulkerson","augmenting path","flow direction"]}}