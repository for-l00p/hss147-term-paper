{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1434298420,"rating":0,"authorHandle":"dustbite","modificationTimeSeconds":1434298420,"id":18567,"title":"\u003cp\u003enumber theory in a graph\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eWe have two groups of nodes, group A consisting of N items, group B consisting of M items. There is an edge connecting node a of group A and node b of group B, where\u003c/p\u003e\u003cp\u003ea \u003d i mod N\u003c/p\u003e\u003cp\u003eb \u003d i mod M\u003c/p\u003e\u003cp\u003ewhere i is an integer.\u003c/p\u003e\u003cp\u003eImage description of the problem (\u003ca href\u003d\"//codeforces.com/predownloaded/5a/b5/5ab5c142069cd987264c765383e682f622a7f0bf.png\"\u003ehttp://codeforces.com/predownloaded/5a/b5/5ab5c142069cd987264c765383e682f622a7f0bf.png\u003c/a\u003e)\u003c/p\u003e\u003cp\u003eWe need to find for each node if there is a path connecting to another node in the graph.\u003c/p\u003e\u003cp\u003eTo create the adjacency matrix, I iterated from i from 0 to LCM(N,M) â€” 1, since after that, we would get same edge pairs. Now, discarding this approach, how can one find mathematically, if two nodes of the graph are connected by a path or not? This is actually my trimmed version of this problem (\u003ca href\u003d\"//codeforces.com/problemset/problem/515/B\"\u003ehttp://codeforces.com/problemset/problem/515/B\u003c/a\u003e)\u003c/p\u003e\u003cp\u003eThe tutorial doesnot explain the GCD method to get O(N + M) complexity. I tried myself but couldnot go far. Any help regarding how it was derived will be immensely helpful.\u003c/p\u003e\u003c/div\u003e","tags":["number theory"]}}