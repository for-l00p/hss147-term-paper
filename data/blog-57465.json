{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1517423981,"rating":11,"authorHandle":"Pleto","modificationTimeSeconds":1517423981,"id":57465,"title":"\u003cp\u003eWhat is the (average) complexity of the following code?\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eI know this is an extremely easy question, but I feel that something\u0027s odd.\u003c/p\u003e\u003cp\u003eI have the following code:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003ewhile p \u0026lt; len(my_list) and my_list[p]%2 !\u003d 0:\n    p \u003d p + 1\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003ewhere len is the length of my_list.\u003c/p\u003e\u003cp\u003eThe worst case scenario is clearly O(N). The average complexity formula is the following: \u003cimg alt\u003d\" \" src\u003d\"/predownloaded/2a/92/2a9210e6f3e205712dbcc8e4b9dd0c5589d0e139.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e where \u0027k\u0027 is the number of operations and P(k) is the probability of having \u0027k\u0027 as input data.\u003c/p\u003e\u003cp\u003eUsing the above formula, I get that the average time complexity is \u003cimg alt\u003d\" \" src\u003d\"/predownloaded/ca/81/ca810b0838132f69273afb458f704a5f74e9219d.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e which is clearly a convergent sum and tends to a constant value. Thus, the \u003cstrong\u003eaverage\u003c/strong\u003e time complexity is a constant (O(1)).\u003c/p\u003e\u003cp\u003eMy teacher said that the \u003cstrong\u003eaverage\u003c/strong\u003e time complexity is O(N)\u003c/p\u003e\u003c/div\u003e","tags":["time complexity"]}}