{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1508351535,"rating":28,"authorHandle":"c___a_","modificationTimeSeconds":1508410194,"id":55270,"title":"\u003cp\u003eGreat Problem on Dijkstra\u0027s Algorithm: Shortest Path Queries between 2 Constant Nodes in the Absence of an Edge\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eWe are given 2 nodes \u003cem\u003es\u003c/em\u003e and \u003cem\u003et\u003c/em\u003e, and M queries that have one edge that needs to be deleted [only for this query], and for each query you need to output the shortest path between \u003cem\u003es\u003c/em\u003e and \u003cem\u003et\u003c/em\u003e. Note that \u003cem\u003es\u003c/em\u003e and \u003cem\u003et\u003c/em\u003e do not change. \u003c/p\u003e\u003cp\u003e1 ≤ Number of Nodes ≤ 7000\u003c/p\u003e\u003cp\u003e1 ≤ Number of edges ≤ 50000 \u003c/p\u003e\u003cp\u003e1 ≤ Number of queries ≤ 10000\u003c/p\u003e\u003cp\u003eI couldn\u0027t find anything over the internet. I was thinking of something along the walks of pre-computation on a Dijkstra tree/Shortest path tree but couldn\u0027t think of anything. Can someone please provide hints or an approach to this problem? \u003c/p\u003e\u003c/div\u003e","tags":["dijkstra","#graph","shortest path"]}}