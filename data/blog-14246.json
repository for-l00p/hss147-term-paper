{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1413132818,"rating":-23,"authorHandle":"Kino","modificationTimeSeconds":1413254438,"id":14246,"title":"\u003cp\u003e2937 — Palindrome Counting\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eproblem link ----\u0026gt; \u003ca href\u003d\"http://coj.uci.cu/24h/problem.xhtml?pid\u003d2937\"\u003ehere\u003c/a\u003e\u003c/p\u003e\u003cp\u003ethis is my solution, i can´t find something better\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e#include \u0026lt;cstdio\u0026gt;\n#include \u0026lt;iostream\u0026gt;\n#include \u0026lt;algorithm\u0026gt;\n#include \u0026lt;vector\u0026gt;\n#include \u0026lt;cstring\u0026gt;\n\nusing namespace std;\n\n#define sf scanf\n#define pf printf\n#define ll long long\n#define MAXN 10002\n\nint d1[MAXN];\nint d2[MAXN];\nint manager(char *s, int n){\n    int cant\u003d0;\n    int l,l2,r,r2,k,i;\n    l\u003dl2\u003d0; r\u003dr2\u003d-1;\n    for(i\u003d0;i\u0026lt;n;i++){\n        k \u003d (i\u0026gt;r ? 0 : min(d1[l+r-i],r-i)) + 1;\n        while(i+k\u0026lt;n \u0026amp;\u0026amp; i-k\u0026gt;\u003d0 \u0026amp;\u0026amp; s[i-k]\u003d\u003ds[i+k]) k++;\n        d1[i]\u003d--k;\n        if(i+k\u0026gt;r) l\u003di-k, r\u003di+k;\n        k \u003d (i\u0026gt;r2 ? 0 : min(d2[l2+r2-i+1],r2-i+1)) + 1;\n        while( (i+k-1)\u0026lt;n \u0026amp;\u0026amp; (i-k)\u0026gt;\u003d0 \u0026amp;\u0026amp; s[i+k-1]\u003d\u003ds[i-k] ) ++k;\n        d2[i]\u003d--k;\n        if( (i+k-1)\u0026gt;r2 ) l2\u003di-k, r2\u003di+k-1;\n        cant+\u003d(d1[i]+d2[i]);\n    }\n    return cant;\n}\n\nint K;\nbool isP(int i,int j){\n    int x \u003d i + ((j-i+1)/2);\n    return ((j-i+1)%2\u003d\u003d0 ? (x-d2[x] \u0026lt;\u003d i) : (x-d1[x] \u0026lt;\u003d i) );\n}\n\ntypedef pair\u0026lt;vector\u0026lt;int\u0026gt;,int\u0026gt; par;\n\npar prefix_function(string s){\n\tint n \u003d (int)s.length();\n\tvector\u0026lt;int\u0026gt; pi(n);\n\tint maxpi \u003d 0;\n\tfor(int i\u003d1;i\u0026lt;n;i++){\n\t\tint j \u003d pi[i-1];\n\t\twhile(j\u0026gt;0 \u0026amp;\u0026amp; s[i] !\u003d s[j])\n            j \u003d pi[j-1];\n\t\tif(s[i] \u003d\u003d s[j]) j++;\n\t\tpi[i] \u003d j;\n\t\tmaxpi \u003d max(maxpi,pi[i]);\n\t}\n\treturn {pi,maxpi};\n}\n\nint solve(char *s, int n){//O(n^2)\n    int ans \u003d 0, maxpi \u003d 0;\n    vector\u0026lt;int\u0026gt; pi;\n    string ss \u003d \u0026quot;\u0026quot;;\n    for(int i \u003d 0; i \u0026lt; n; i++){\n        ss \u003d s[i] + ss;\n\n        par kmp \u003d prefix_function(ss);//O(n)\n        pi \u003d kmp.first;\n        maxpi \u003d kmp.second;\n\n        int aux \u003d max(K-1,maxpi);\n        aux++;\n        //O(n)\n        for(int j \u003d i-aux+1, ind \u003d aux-1 ; j\u0026gt;\u003d0; j--,ind++){\n            int yy \u003d (ind+1) - pi[ind];//compresion_line\n            if(isP(j,i) \u0026amp;\u0026amp; yy \u0026lt; (ind+1))\n                if( (yy \u003d\u003d 1 \u0026amp;\u0026amp; ind+1 \u0026gt;\u003d 4) ||\n                    ((ind+1) % yy \u003d\u003d 0 \u0026amp;\u0026amp; isP(i-yy+1,i)) )\n                        ans++;\n        }\n    }\n    return ans;\n}\n\n\nchar w[MAXN];\nint main(){\n    sf(\u0026quot;%d%s\u0026quot;,\u0026amp;K,w);\n    int n \u003d strlen(w);\n    manager(w,n);\n    pf(\u0026quot;%d\\n\u0026quot;,solve(w,n));\n\n    return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":["strings"]}}