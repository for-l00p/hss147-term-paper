{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1492529242,"rating":6,"authorHandle":"Unlimited_Time","modificationTimeSeconds":1492529242,"id":51621,"title":"\u003cp\u003eSolutions to Codeforces Beta Round #36, A, B(Kronecker Product), D\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eA. Extra-terrestrial Intelligence\u003c/p\u003e\u003cp\u003eAs the size n is no larger than 100, we can adopt a \u0026quot;vector\u0026quot; to record the indices of \u0026quot;1\u0026quot; which appear in the given sequence. Then, we calculate the difference between every two neighbouring indices, and if they are the same, the answer is \u0026quot;YES\u0026quot;; otherwise is \u0026quot;NO\u0026quot;.\u003c/p\u003e\u003cp\u003eB. Fractal\u003c/p\u003e\u003cp\u003eThis problem reminds me of Kronecker Product, which is often mentioned in the theory of matrix. In fact, this problem just asks to simulate the operation of Kronecker Product as far as I consider. For the first provided example, if we replace \u0027.\u0027 with integer \u0026quot;1\u0026quot; while \u0027*\u0027 with integer \u0026quot;0\u0026quot;, we will obtain a matrix [1 0 ; 1 1]. If you are familiar with Matlab, you can use the function \u0026quot;kron\u0026quot; to calculate the finla matrix, and by mapping \u0026quot;1\u0026quot; and \u0026quot;0\u0026quot; back to \u0027.\u0027 and \u0027*\u0027, you will find that it is just the answer!! This conclusion holds for all values of n and k.\u003c/p\u003e\u003cp\u003eD. New Game with a Chess Piece\u003c/p\u003e\u003cp\u003eThis is a rather complicated problem...\u003c/p\u003e\u003cp\u003eWe might need do some pen and paper work to find out some principles hidden behind the game. We can start from the right bottom point, and consider the result if one should start moving from this point. For simplicity, we use \u0027L\u0027 and \u0027W\u0027 to denote that one loses and wins, respectively, if he starts from some point, and we use an array R[n][m] to record the results. \u003c/p\u003e\u003cp\u003eAt first, we consider the case where k\u0026gt;1. Obviously, R[n-1][m-1]\u003d\u0027L\u0027, and R[n-1][m-2]\u003d\u0027W\u0027,R[n-1][m-3]\u003d\u0027L\u0027. This means that for the (n-1)-th row, \u0027L\u0027 and \u0027W\u0027 appear alternatively, and similarly one will find that for the (m-1)-th column, \u0027L\u0027 and \u0027W\u0027 appear alternatively as well. Then, we consider what happens in the (n-2)-th row. One will find that R[n-2][m-2]\u003d\u0027L\u0027 since only R[n-1][m-2]\u003dR[n-2][m-1]\u003d\u0027W\u0027 can be reached from this point, i.e., the next person who moves will win. By some careful deduction, one will find that \u0027L\u0027 and \u0027W\u0027 appear alternatively for the (n-2)-th row and (m-2)-th column. In fact, this holds from the (n-1)-th row to the (n-k)-th row. For the (n-k-1)-th row, we can find that it is always \u0027W\u0027 from R[n-k-1][0] to R[n-k-1][m-k-1]. From the (n-k-2)-th row to the (n-(2*k+2))-th row, \u0027L\u0027 and \u0027W\u0027 appear alternatively again. In fact, we will find that from the (n-(2*k+2+1))-th row, the same pattern as that starts from the (n-1)-th row repeats. Therefore, we can calculate min(n,m)%(2*k+2) and find out which row between the (n-1)-th one and the (n-(2*k+2))-th it belongs to, and select \u0027L\u0027 or \u0027W\u0027 according to whether |n-m| is even or odd.\u003c/p\u003e\u003cp\u003eThen, we consider the case that k\u003d1, which is quite similar to k\u0026gt;1. We also start from the (n-1)-th row and find out the corresponding pattern, and then move up to the upper row until we find that the same pattern starts to repeat.\u003c/p\u003e\u003c/div\u003e","tags":["kronekcer product"]}}