{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1405262158,"rating":2,"authorHandle":"damn_me","modificationTimeSeconds":1405262158,"id":13034,"title":"\u003cp\u003eSpoj problem FREQUENT\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eCan someone provide me the code for solving this spoj problem spo.com/problems/FREQUENT . What I am basically trying to do is :\u003c/p\u003e\u003cp\u003eUsing segment trees, declare the tree as such pair\u0026lt;int,int\u0026gt; tree[4*max][3] where tree[node][0] \u003d (maximum occuring element, count of its occurence in the range\u0027s left part) tree[node][2] \u003d (maximum occuring element, count of its occurence in the range\u0027s right part) tree[node][1] \u003d (maximum occurencing element, count of its ocuurence in the whole range comparing it with left and right parts)\u003c/p\u003e\u003cp\u003eThe leaf nodes will have [(0,0), (a[i],1), (0,0)] where i is the case where l\u003d\u003dr in the construct function of the segment tree. For the rest, tree[node][1] can be easily found. For tree[node][1], we\u0027ll compare tree[2*node][1] and tree[2*node+1][0] and similarly for tree[node][2] we\u0027ll compare tree[2*node+1][1] and tree[2*node][2].\u003c/p\u003e\u003cp\u003eI have just started solving problems based on segment trees but unable to code this. However, i coded but that seems to be a bad one. Can someone please help!!!\u003c/p\u003e\u003cp\u003eStuck on this!! Please..\u003c/p\u003e\u003c/div\u003e","tags":["data structures","segment tree","range query"]}}