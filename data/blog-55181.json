{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":true,"creationTimeSeconds":1507976206,"rating":0,"authorHandle":"Coder_404","modificationTimeSeconds":1507976206,"id":55181,"title":"\u003cp\u003eSegment tree â€” update (l,r)\u003c/p\u003e","locale":"ru","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cpre\u003e\u003ccode\u003e#define N 1111111\n\nint t[N * 4];\nint a[N * 4];\nint n;\nvoid update(int l, int r, int delta, int v \u003d 1, int tl \u003d 1, int tr \u003d n) {\n\tif (l \u0026gt; tr || tl \u0026gt; r) return;\n\tif (l \u0026lt;\u003d tl\u0026amp;\u0026amp;tr \u0026lt;\u003d r) { t[v] +\u003d delta; return; }\n\tint tm \u003d (tl + tr) \u0026gt;\u0026gt; 1;\n\tupdate(l, r, delta, v + v, tl, tm);\n\tupdate(l, r, delta, v + v + 1, tm + 1, tr);\n}\nint get(int pos, int v \u003d 1, int tl \u003d 1, int tr \u003d n) {\n\tif (tl \u003d\u003d tr) return t[v];\n\telse {\n\t\tint tm \u003d (tl + tr) \u0026gt;\u0026gt; 1;\n\t\tif (pos \u0026lt;\u003d tm) return t[v] + get(pos, v + v, tl, tm);\n\t\telse return t[v] + get(pos, v + v + 1, tm + 1, tr);\n\t}\n}\n\nvoid solve()\n{\n\tcin \u0026gt;\u0026gt; n;\n\tint l, r;\n\tchar key;\n\tint pos;\n\tint delta;\n\twhile (true)\n\t{\n\t\tcin \u0026gt;\u0026gt; key;\n\t\tif (key \u003d\u003d \u0027+\u0027) {\n\t\t\tcin \u0026gt;\u0026gt; l \u0026gt;\u0026gt; r \u0026gt;\u0026gt; delta;\n\t\t\tupdate(l, r, delta); \n\t\t}\n\t\telse {\n\t\t\tcin \u0026gt;\u0026gt; pos;\n\t\t\tcout \u0026lt;\u0026lt; get(pos) \u0026lt;\u0026lt; endl; \n\t\t}\n\t}\n\n\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":[]}}