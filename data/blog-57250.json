{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1516487388,"rating":84,"authorHandle":"Superty","modificationTimeSeconds":1516517191,"id":57250,"title":"\u003cp\u003eCodeCraft-18 and Codeforces Round #458 (Div. 1 + Div. 2, combined) Editorial\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cdiv class\u003d\"problemTutorial\" problemcode\u003d\"914A\"\u003eTutorial is loading...\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eAuthor:\u003c/strong\u003e \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/crvineeth97\" title\u003d\"Expert crvineeth97\"\u003ecrvineeth97\u003c/a\u003e\u003cbr /\u003e\u003cstrong\u003eTesters:\u003c/strong\u003e \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/deepanshugarg\" title\u003d\"Expert deepanshugarg\"\u003edeepanshugarg\u003c/a\u003e, \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/nir123\" title\u003d\"Candidate Master nir123\"\u003enir123\u003c/a\u003e\u003c/p\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eAuthor\u0027s code\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003e#include \u0026lt;bits/stdc++.h\u0026gt;\nusing namespace std;\n\nint main()\n{\n  long long ans\u003dLLONG_MIN, n, x;\n  cin\u0026gt;\u0026gt;n;\n  for (long long i \u003d 0; i \u0026lt; n; i++)\n  {\n    cin\u0026gt;\u0026gt;x;\n    for (long long j \u003d 0; j*j\u0026lt;\u003dx; j++)\n    if (j*j \u003d\u003d x)\n      x \u003d LLONG_MIN;\n    ans \u003d max(ans, x);\n  }\n  cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; endl;\n  return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"problemTutorial\" problemcode\u003d\"914B\"\u003eTutorial is loading...\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eAuthor:\u003c/strong\u003e \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/RohanRTiwari\" title\u003d\"Expert RohanRTiwari\"\u003eRohanRTiwari\u003c/a\u003e\u003cbr /\u003e\u003cstrong\u003eTester:\u003c/strong\u003e \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/Superty\" title\u003d\"Candidate Master Superty\"\u003eSuperty\u003c/a\u003e\u003c/p\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eAuthor\u0027s code\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003e#include \u0026lt;bits/stdc++.h\u0026gt;\nusing namespace std;\nusing ll \u003d long long;\n\nint cnt[100005];\n\nint main() {\n  ios::sync_with_stdio(false);\n\n  int n;\n  cin \u0026gt;\u0026gt; n;\n  while(n--) {\n    int x;\n    cin \u0026gt;\u0026gt; x;\n    cnt[x]++;\n  }\n\n  for (int i \u003d 1; i \u0026lt;\u003d 1e5; i++) {\n    if (cnt[i] % 2 \u003d\u003d 1) {\n      cout \u0026lt;\u0026lt; \u0026quot;Conan\\n\u0026quot;;\n      return 0;\n    }\n  }\n  cout \u0026lt;\u0026lt; \u0026quot;Agasa\\n\u0026quot;;\n  return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"problemTutorial\" problemcode\u003d\"914C\"\u003eTutorial is loading...\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eAuthor:\u003c/strong\u003e \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/aman_shahi2\" title\u003d\"Expert aman_shahi2\"\u003eaman_shahi2\u003c/a\u003e\u003cbr /\u003e\u003cstrong\u003eTester:\u003c/strong\u003e \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/mprocks\" title\u003d\"Expert mprocks\"\u003emprocks\u003c/a\u003e\u003c/p\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eAuthor\u0027s code\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003e#include \u0026lt;bits/stdc++.h\u0026gt;\nusing namespace std;\n\n\n#define MOD 1000000007\n\nint dp[1004];\nlong long ncr[1004][1004];\n\nint ones(int n)\n{\n  int cnt \u003d 0;\n  while(n)\n  {\n    if(n%2 \u003d\u003d 1)\n    {\n      cnt++;\n    }\n    n /\u003d 2;\n  }\n  return cnt;\n}\n\nvoid calcncr()\n{\n  for(int i \u003d 0; i \u0026lt;\u003d 1000; i++)\n  {\n    ncr[i][0] \u003d 1;\n  }\n  for(int i \u003d 1; i \u0026lt;\u003d 1000; i++)\n  {\n    for(int j \u003d 1; j \u0026lt;\u003d 1000; j++)\n    {\n      ncr[i][j] \u003d (ncr[i-1][j-1] + ncr[i-1][j])%MOD;\n    }\n  }\n}\n\nint main()\n{\n  string n;\n  int k;\n  calcncr();\n\n  dp[1] \u003d 0;\n  for(int i \u003d 2; i \u0026lt;\u003d 1000; i++)\n  {\n    dp[i] \u003d dp[ones(i)] + 1;\n  }\n\n  cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; k;\n\n  if(k \u003d\u003d 0)\n  {\n    cout \u0026lt;\u0026lt; \u0026quot;1\\n\u0026quot;;\n    return 0;\n  }\n\n  long long nones \u003d 0, ans \u003d 0;\n  for(int i \u003d 0; i \u0026lt; n.size(); i++)\n  {\n    if(n[i] \u003d\u003d \u00270\u0027)\n    {\n      continue;\n    }\n    for(int j \u003d max(nones, 1LL); j \u0026lt; 1000; j++)\n    {\n      if(dp[j] \u003d\u003d k-1)\n      {\n        ans \u003d (ans + ncr[n.size()-i-1][j-nones])%MOD;\n        if(i \u003d\u003d 0 \u0026amp;\u0026amp; k \u003d\u003d 1)\n        {\n          ans \u003d (ans+MOD-1)%MOD;\n        }\n      }\n    }\n    nones++;\n  }\n\n  int cnt \u003d 0;\n  for(int i \u003d 0; i \u0026lt; n.size(); i++)\n  {\n    if(n[i] \u003d\u003d \u00271\u0027)\n    {\n      cnt++;\n    }\n  }\n  if(dp[cnt] \u003d\u003d k-1)\n  {\n    ans \u003d (ans + 1)%MOD;\n  }\n  cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; endl;\n\n  return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"problemTutorial\" problemcode\u003d\"914D\"\u003eTutorial is loading...\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eAuthor:\u003c/strong\u003e \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/RohanRTiwari\" title\u003d\"Expert RohanRTiwari\"\u003eRohanRTiwari\u003c/a\u003e\u003cbr /\u003e\u003cstrong\u003eTesters:\u003c/strong\u003e \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/codelegend\" title\u003d\"Candidate Master codelegend\"\u003ecodelegend\u003c/a\u003e, \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/Superty\" title\u003d\"Candidate Master Superty\"\u003eSuperty\u003c/a\u003e\u003c/p\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eAuthor\u0027s code\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003e#include \u0026lt;bits/stdc++.h\u0026gt;\nusing namespace std;\nusing ll \u003d long long;\n\nint tree[2000000];\nint trstp \u003d 1;\n\nint gcd(int x, int y) {\n  return y \u003d\u003d 0 ? x : gcd(y, x % y);\n}\n\nvoid query(int root, int u, int v, int x, int s, int e, int\u0026amp; ans) {\n  if (e \u0026lt; s || v \u0026lt; u || e \u0026lt; u || v \u0026lt; s) {\n    return;\n  } else if (u \u0026lt;\u003d s \u0026amp;\u0026amp; e \u0026lt;\u003d v) {\n    if (tree[root] % x \u003d\u003d 0) {\n      return;\n    } else {\n      while (root \u0026lt; trstp) {\n        if (tree[2*root] % x !\u003d 0) {\n          if (tree[2*root + 1] % x !\u003d 0) {\n            ans +\u003d 2;\n            return;\n          }\n          root \u003d 2*root;\n        } else {\n          root \u003d 2*root + 1;\n        }\n      }\n      ans++;\n      return;\n    }\n  }\n  int mid \u003d (s + e)/2;\n  query(2*root, u, v, x, s, mid, ans);\n  if (ans \u0026gt; 1) {\n    return;\n  }\n  query(2*root + 1, u, v, x, mid + 1, e, ans);\n}\n\nvoid update(int p, int x) {\n  p +\u003d trstp - 1;\n  tree[p] \u003d x;\n\n  p /\u003d 2;\n  while (p \u0026gt; 0) {\n    tree[p] \u003d gcd(tree[2*p], tree[2*p + 1]);\n    p /\u003d 2;\n  }\n}\n\nint main() {\n  ios::sync_with_stdio(false);\n   cin.tie(NULL);\n\n  int n;\n  cin \u0026gt;\u0026gt; n;\n  while (trstp \u0026lt; n) {\n    trstp *\u003d 2;\n  }\n\n  for (int i \u003d trstp; i \u0026lt; trstp + n; i++) {\n    cin \u0026gt;\u0026gt; tree[i];\n  }\n  for (int i \u003d trstp - 1; i \u0026gt;\u003d 1; i--) {\n    tree[i] \u003d gcd(tree[2*i], tree[2*i + 1]);\n  }\n\n  int q;\n  cin \u0026gt;\u0026gt; q;\n  while (q--) {\n    int t;\n    cin \u0026gt;\u0026gt; t;\n    if (t \u003d\u003d 1) {\n      int l, r;\n      int x;\n      cin \u0026gt;\u0026gt; l \u0026gt;\u0026gt; r \u0026gt;\u0026gt; x;\n      int ans \u003d 0;\n      query(1, l, r, x, 1, trstp, ans);\n      cout \u0026lt;\u0026lt; (ans \u0026lt;\u003d 1 ? \u0026quot;YES\\n\u0026quot; : \u0026quot;NO\\n\u0026quot;);\n    } else {\n      int i;\n      int y;\n      cin \u0026gt;\u0026gt; i \u0026gt;\u0026gt; y;\n      update(i, y);\n    }\n  }\n\n  return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"problemTutorial\" problemcode\u003d\"914E\"\u003eTutorial is loading...\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eAuthor:\u003c/strong\u003e \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/born2rule\" title\u003d\"Candidate Master born2rule\"\u003eborn2rule\u003c/a\u003e\u003cbr /\u003e\u003cstrong\u003eTesters:\u003c/strong\u003e \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/devanshg27\" title\u003d\"Candidate Master devanshg27\"\u003edevanshg27\u003c/a\u003e, \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/FundamentalEq\" title\u003d\"Candidate Master FundamentalEq\"\u003eFundamentalEq\u003c/a\u003e\u003c/p\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eAuthor\u0027s code\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003e#include \u0026lt;bits/stdc++.h\u0026gt;\n#include \u0026lt;ext/pb_ds/assoc_container.hpp\u0026gt;\n#include \u0026lt;ext/pb_ds/tree_policy.hpp\u0026gt;\nusing namespace std;\nusing namespace __gnu_pbds;\n\n#define ll long long\n#define db long double\n#define ii pair\u0026lt;int,int\u0026gt;\n#define vi vector\u0026lt;int\u0026gt;\n#define fi first\n#define se second\n#define sz(a) (int)(a).size()\n#define all(a) (a).begin(),(a).end()\n#define pb emplace_back\n#define mp make_pair\n#define FN(i, n) for (int i \u003d 0; i \u0026lt; (int)(n); ++i)\n#define FEN(i,n) for (int i \u003d 1;i \u0026lt;\u003d (int)(n); ++i)\n#define rep(i,a,b) for(int i\u003da;i\u0026lt;b;i++)\n#define repv(i,a,b) for(int i\u003db-1;i\u0026gt;\u003da;i--)\n#define SET(A, val) memset(A, val, sizeof(A))\ntypedef tree\u0026lt;int ,null_type,less\u0026lt;int\u0026gt;,rb_tree_tag,tree_order_statistics_node_update\u0026gt;ordered_set ;\n// order_of_key (val): returns the no. of values less than val\n// find_by_order (k): returns the kth largest element.(0-based)\n#define TRACE\n#ifdef TRACE\n#define trace(...) __f(#__VA_ARGS__, __VA_ARGS__)\ntemplate \u0026lt;typename Arg1\u0026gt;\nvoid __f(const char* name, Arg1\u0026amp;\u0026amp; arg1){\n  cerr \u0026lt;\u0026lt; name \u0026lt;\u0026lt; \u0026quot; : \u0026quot; \u0026lt;\u0026lt; arg1 \u0026lt;\u0026lt; std::endl;\n}\ntemplate \u0026lt;typename Arg1, typename... Args\u0026gt;\nvoid __f(const char* names, Arg1\u0026amp;\u0026amp; arg1, Args\u0026amp;\u0026amp;... args){\n  const char* comma \u003d strchr(names + 1, \u0027,\u0027); cerr.write(names, comma - names) \u0026lt;\u0026lt; \u0026quot; : \u0026quot; \u0026lt;\u0026lt; arg1\u0026lt;\u0026lt;\u0026quot; | \u0026quot;;__f(comma+1, args...);\n}\n#else\n#define trace(...)\n#endif\nconst int L\u003d200005,N\u003d(1\u0026lt;\u0026lt;20);\n//call dfsMCT,change solve and dfs1\nvi vpart[L],ad[L]; bool vis[L];//par:parent in cent|H:depth\nint SZ[L],par[L],part[L],H[L],cpart;//cpart:no of parts in cent\nll ans[L],dp[L];\nstring s;\nint dfsSZ(int u,int p\u003d-1)\n{\n  SZ[u]\u003d1;//vpart[i]:nodes in part i\n  for(int v:ad[u])\n    if(!vis[v] \u0026amp;\u0026amp; v!\u003dp)\n      SZ[u]+\u003ddfsSZ(v,u);\n  return SZ[u];\n}\nint dfsFC(int u,int r,int p\u003d-1)\n{\n  for(int v:ad[u])\n    if(!vis[v] \u0026amp;\u0026amp; v!\u003dp)\n      {\n  if(SZ[v]\u0026gt;SZ[r]/2)\n    return dfsFC(v,r,u);\n      }\n  return u;\n}\nint cnt[N],val[L],tmp[N];\nvoid dfs1(int u,int r,int p\u003d-1)\n{\n  dp[u]\u003d0;\n  if(p\u003d\u003dr)\n    {\n      part[u]\u003d++cpart;\n      vpart[cpart].clear();\n    }\n  else if(p!\u003d-1) part[u]\u003dpart[p];\n  if(p!\u003d-1) vpart[cpart].pb(u);\n  for(int v1:ad[u])\n    if(!vis[v1]\u0026amp;\u0026amp;v1!\u003dp)\n      {\n  H[v1]\u003dH[u]+1;\n  val[v1]\u003d(val[u]^(1\u0026lt;\u0026lt;(s[v1-1]-\u0027a\u0027)));\n  dfs1(v1,r,u);\n      }\n}\nvoid dfs2(int u,int r,int par\u003d-1)\n{\n  dp[u]\u003dcnt[val[u]];\n  rep(i,0,20)\n    dp[u]+\u003dcnt[val[u]^(1\u0026lt;\u0026lt;i)];\n  for(int v1:ad[u])\n    {\n      if(vis[v1] || v1\u003d\u003dpar) continue;\n      dfs2(v1,r,u);\n      dp[u]+\u003ddp[v1];\n    }\n  ans[u]+\u003ddp[u];\n}\nvoid solve(int r,int szr)\n{\n  H[r]\u003dcpart\u003d0;\n  val[r]\u003d(1\u0026lt;\u0026lt;(s[r-1]-\u0027a\u0027));\n  dfs1(r,r);\n  rep(i,1,cpart+1)\n    for(int v1:vpart[i])\n      cnt[val[v1]]++;\n  cnt[val[r]]++;\n  rep(i,1,cpart+1)\n    {\n      for(int v1:vpart[i])\n  {\n    cnt[val[v1]]--;\n    val[v1]^\u003d(1\u0026lt;\u0026lt;(s[r-1]-\u0027a\u0027));\n    tmp[val[v1]]++;\n  }\n      for(int v1:vpart[i])\n  {\n    if(tmp[val[v1]])\n      {\n        dp[r]+\u003d(ll)tmp[val[v1]]*cnt[val[v1]];\n        rep(j,0,20)\n    dp[r]+\u003d(ll)tmp[val[v1]]*cnt[val[v1]^(1\u0026lt;\u0026lt;j)];\n        tmp[val[v1]]\u003d0;\n      }\n  }\n      dfs2(vpart[i][0],r,r);\n      for(int v1:vpart[i])\n  {\n    val[v1]^\u003d(1\u0026lt;\u0026lt;(s[r-1]-\u0027a\u0027));\n    cnt[val[v1]]++;\n  }\n    }\n  cnt[val[r]]--;\n  dp[r]+\u003dcnt[0];\n  rep(i,0,20)\n    dp[r]+\u003dcnt[(1\u0026lt;\u0026lt;i)];\n  ans[r]+\u003ddp[r]/2;\n  rep(i,1,cpart+1)\n    for(int v1:vpart[i]) cnt[val[v1]]--;\n}\nvoid dfsMCT(int u,int p\u003d-1)\n{\n  dfsSZ(u);\n  int r\u003ddfsFC(u,u);\n  par[r]\u003dp; solve(r,SZ[u]); vis[r]\u003dtrue;\n  for(int v:ad[r])\n    if(!vis[v]) dfsMCT(v,r);\n}\nint main()\n{\n  std::ios::sync_with_stdio(false);\n  cin.tie(NULL) ; cout.tie(NULL) ;\n  int n,x,y;\n  cin\u0026gt;\u0026gt;n;\n  rep(i,1,n)\n    {\n      cin\u0026gt;\u0026gt;x\u0026gt;\u0026gt;y;\n      ad[x].pb(y); ad[y].pb(x);\n    }\n  cin\u0026gt;\u0026gt;s;\n  dfsMCT(1);\n  rep(i,1,n+1) cout\u0026lt;\u0026lt;ans[i]+1\u0026lt;\u0026lt;\u0026quot; \u0026quot;;\n  cout\u0026lt;\u0026lt;endl;\n  return 0 ;\n}\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"problemTutorial\" problemcode\u003d\"914F\"\u003eTutorial is loading...\u003c/div\u003e\u003cp\u003eThere was an unexpected solution that involved bitset that runs in complexity \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e / 32)\u003c/span\u003e. Have a look at \u003ca class\u003d\"rated-user user-legendary\" href\u003d\"/profile/Syloviaely\" title\u003d\"Legendary grandmaster Syloviaely\"\u003e\u003cspan class\u003d\"legendary-user-first-letter\"\u003eS\u003c/span\u003eyloviaely\u003c/a\u003e \u0027s code: \u003ca href\u003d\"/contest/914/submission/34364964\" title\u003d\"Submission 34364964 by Syloviaely\"\u003e34364964\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eAuthor:\u003c/strong\u003e \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/RohanRTiwari\" title\u003d\"Expert RohanRTiwari\"\u003eRohanRTiwari\u003c/a\u003e\u003cbr /\u003e\u003cstrong\u003eTesters:\u003c/strong\u003e \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/born2rule\" title\u003d\"Candidate Master born2rule\"\u003eborn2rule\u003c/a\u003e, \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/devanshg27\" title\u003d\"Candidate Master devanshg27\"\u003edevanshg27\u003c/a\u003e, \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/additya1998\" title\u003d\"Candidate Master additya1998\"\u003eadditya1998\u003c/a\u003e, \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/virus_1010\" title\u003d\"Expert virus_1010\"\u003evirus_1010\u003c/a\u003e, \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/nir123\" title\u003d\"Candidate Master nir123\"\u003enir123\u003c/a\u003e\u003c/p\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eAuthor\u0027s code\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003e#include \u0026lt;bits/stdc++.h\u0026gt;\n#define fr(x) scanf(\u0026quot;%d\u0026quot;, \u0026amp;x)\n#define SQRN 150\nusing namespace std;\n\nconst int sa \u003d 2 * SQRN + 10;\nconst int LEN \u003d 100010;\nchar s[LEN], sq[LEN], zstring[2*LEN];\nint z[2*LEN];\nstring temps;\n\nstruct SuffixAutomaton {\n  int edges[26][sa], link[sa], length[sa], isTerminal[sa], dp1[sa], last;\n  int sz;\n  SuffixAutomaton() {\n    last \u003d 0;\n    sz \u003d 0;\n  }\n\n  void set(int k) {\n    for(int i \u003d 0; i \u0026lt; 26; ++i) edges[i][k] \u003d -1;\n  } \n\n  void build(string \u0026amp;s) { \n    link[0] \u003d -1;\n    length[0] \u003d 0;\n    last \u003d 0;\n    sz \u003d 1;\n    set(0);\n\n    for(int i\u003d0;i\u0026lt;s.size();i++) {\n      set(sz);\n      length[sz] \u003d i+1;\n      link[sz] \u003d 0;\n      int r \u003d sz;\n      ++sz;\n\n      int p \u003d last;\n      while(p \u0026gt;\u003d 0 \u0026amp;\u0026amp; edges[s[i]-\u0027a\u0027][p] \u003d\u003d -1) {\n        edges[s[i] - \u0027a\u0027][p] \u003d r;\n        p \u003d link[p];\n      }\n      if(p !\u003d -1) {\n        int q \u003d edges[s[i] - \u0027a\u0027][p];\n        if(length[p] + 1 \u003d\u003d length[q]) {\n          link[r] \u003d q;\n        } else {\n          for(int i \u003d 0; i \u0026lt; 26; ++i) {\n            edges[i][sz] \u003d edges[i][q];\n          }\n          length[sz] \u003d length[p] + 1;\n          link[sz] \u003d link[q];\n          int qq \u003d sz;\n          ++sz;\n          link[q] \u003d qq;\n          link[r] \u003d qq;\n          while(p \u0026gt;\u003d 0 \u0026amp;\u0026amp; edges[s[i] - \u0027a\u0027][p] \u003d\u003d q) {\n            edges[s[i] - \u0027a\u0027][p] \u003d qq;\n            p \u003d link[p];\n          }\n        }\n      }\n      last \u003d r;\n    }\n    for(int i \u003d 0; i \u0026lt; sz; ++i) isTerminal[i] \u003d 0, dp1[i] \u003d -1; \n    int p \u003d last;\n    while(p \u0026gt; 0) {\n      isTerminal[p] \u003d 1;\n      p \u003d link[p];\n    }\n  }\n\n  int solve(int pos) {\n    if(dp1[pos] !\u003d -1) return dp1[pos];\n    dp1[pos] \u003d isTerminal[pos];\n    for(int i\u003d0; i\u0026lt;26; ++i){\n      if(edges[i][pos] !\u003d -1) dp1[pos] +\u003d solve(edges[i][pos]);\n    }\n    return dp1[pos];\n  }\n\n  int run() {\n    int cur \u003d 0;\n    for(int i\u003d1; sq[i] !\u003d \u0027\\0\u0027; ++i) {\n      auto it \u003d edges[sq[i] - \u0027a\u0027][cur];\n      if(it \u003d\u003d -1) return 0;\n      else cur \u003d it;\n    }\n    return solve(cur);\n  }\n} SA[800];\n\nvoid computeZ() {\n  int l, r;\n  z[0] \u003d 0;\n  l \u003d r \u003d -1;\n  for(int i\u003d1; zstring[i] !\u003d \u0027\\0\u0027; ++i) {\n    z[i]\u003d0;\n    if(r\u0026gt;i) {\n      z[i]\u003dmin(z[i-l], r-i+1);\n    }\n    while(zstring[i+z[i]] \u003d\u003d zstring[z[i]]) ++z[i];\n    if(i+z[i]-1 \u0026gt; r) {\n      r \u003d i+z[i]-1;\n      l \u003d i;\n    }\n  }\n}\n\nint computeBrute(int l, int r, int sqlen) {\n  int zslen \u003d 0, ans \u003d 0;\n  for(int i\u003d1; i\u0026lt;\u003dsqlen; ++i) {\n    zstring[zslen++] \u003d sq[i];\n  }\n  zstring[zslen++] \u003d \u0027$\u0027;\n  for(int i\u003dl; i\u0026lt;\u003dr; ++i) {\n    zstring[zslen++] \u003d s[i];\n  }\n  zstring[zslen] \u003d \u0027\\0\u0027;\n  computeZ();\n  for(int i\u003d1; i\u0026lt;zslen; ++i) {\n    if(z[i] \u0026gt;\u003d sqlen) {\n      ++ans;\n    }\n  }\n  return ans;\n}\n\nint main() {\n  int q, typ, l, r, slen;\n  char ch;\n  scanf(\u0026quot; %s\u0026quot;, \u0026amp;s[1]);\n  slen \u003d strlen(\u0026amp;s[1]);\n  fr(q);\n  for(int i\u003d0; i\u0026lt;\u003dslen; i+\u003dSQRN) {\n    temps \u003d \u0026quot;\u0026quot;;\n    int tempr \u003d min(i+SQRN-1, slen);\n    for(int j\u003dmax(1, i); j\u0026lt;\u003dtempr; ++j) {\n      temps +\u003d s[j];\n    }\n    SA[i/SQRN].build(temps);\n  }\n  while(q--) {\n    fr(typ);\n    if(typ \u003d\u003d 1) {\n      scanf(\u0026quot;%d %c\u0026quot;, \u0026amp;l, \u0026amp;ch);\n      s[l] \u003d ch;\n      temps \u003d \u0026quot;\u0026quot;;\n      int bkt \u003d l/SQRN;\n      int tempr \u003d min(slen, (bkt+1)*SQRN-1);\n      for(int i\u003dmax(1,bkt*SQRN); i\u0026lt;\u003dtempr; ++i) {\n        temps +\u003d s[i];\n      }\n      SA[bkt].build(temps);\n    }\n    else {\n      scanf(\u0026quot;%d %d %s\u0026quot;, \u0026amp;l, \u0026amp;r, \u0026amp;sq[1]);\n      int sqlen \u003d strlen(\u0026amp;sq[1]);\n      if(sqlen \u0026gt;\u003d SQRN || r-l \u0026lt;\u003d 2*SQRN) {\n        printf(\u0026quot;%d\\n\u0026quot;, computeBrute(l, r, sqlen));\n      }\n      else {\n        int lbkt \u003d l/SQRN, rbkt \u003d r/SQRN, ans \u003d 0;\n        for(int i\u003dlbkt+1; i\u0026lt;rbkt; ++i) {\n          ans +\u003d SA[i].run();\n        }\n        ans +\u003d computeBrute(l, (lbkt+1)*SQRN-1, sqlen);\n        ans +\u003d computeBrute(rbkt*SQRN, r, sqlen);\n        for(int i\u003dlbkt+1; i\u0026lt;\u003drbkt; ++i) {\n          ans +\u003d computeBrute(max(l, i*SQRN - sqlen + 1), min(r, i*SQRN + sqlen - 2), sqlen);\n        }\n        printf(\u0026quot;%d\\n\u0026quot;, ans);\n      }\n    }\n  }\n  return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"problemTutorial\" problemcode\u003d\"914G\"\u003eTutorial is loading...\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eAuthor:\u003c/strong\u003e \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/FundamentalEq\" title\u003d\"Candidate Master FundamentalEq\"\u003eFundamentalEq\u003c/a\u003e\u003cbr /\u003e\u003cstrong\u003eTester:\u003c/strong\u003e \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/born2rule\" title\u003d\"Candidate Master born2rule\"\u003eborn2rule\u003c/a\u003e\u003c/p\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eAuthor\u0027s code\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003e#include \u0026lt;bits/stdc++.h\u0026gt;\n#include \u0026lt;ext/pb_ds/assoc_container.hpp\u0026gt;\n#include \u0026lt;ext/pb_ds/tree_policy.hpp\u0026gt;\nusing namespace std;\nusing namespace __gnu_pbds;\n\n#define ll long long\n#define db long double\n#define ii pair\u0026lt;int,int\u0026gt;\n#define vi vector\u0026lt;int\u0026gt;\n#define fi first\n#define se second\n#define sz(a) (int)(a).size()\n#define all(a) (a).begin(),(a).end()\n#define pb push_back\n#define mp make_pair\n#define FN(i, n) for (int i \u003d 0; i \u0026lt; (int)(n); ++i)\n#define FEN(i,n) for (int i \u003d 1;i \u0026lt;\u003d (int)(n); ++i)\n#define rep(i,a,b) for(int i\u003da;i\u0026lt;b;i++)\n#define repv(i,a,b) for(int i\u003db-1;i\u0026gt;\u003da;i--)\n#define SET(A, val) memset(A, val, sizeof(A))\ntypedef tree\u0026lt;int ,null_type,less\u0026lt;int\u0026gt;,rb_tree_tag,tree_order_statistics_node_update\u0026gt;ordered_set ;\n// order_of_key (val): returns the no. of values less than val\n// find_by_order (k): returns the kth largest element.(0-based)\n#define TRACE\n#ifdef TRACE\n#define trace(...) __f(#__VA_ARGS__, __VA_ARGS__)\n  template \u0026lt;typename Arg1\u0026gt;\n  void __f(const char* name, Arg1\u0026amp;\u0026amp; arg1){\n    cerr \u0026lt;\u0026lt; name \u0026lt;\u0026lt; \u0026quot; : \u0026quot; \u0026lt;\u0026lt; arg1 \u0026lt;\u0026lt; std::endl;\n  }\n  template \u0026lt;typename Arg1, typename... Args\u0026gt;\n  void __f(const char* names, Arg1\u0026amp;\u0026amp; arg1, Args\u0026amp;\u0026amp;... args){\n    const char* comma \u003d strchr(names + 1, \u0027,\u0027); cerr.write(names, comma - names) \u0026lt;\u0026lt; \u0026quot; : \u0026quot; \u0026lt;\u0026lt; arg1\u0026lt;\u0026lt;\u0026quot; | \u0026quot;;__f(comma+1, args...);\n  }\n#else\n#define trace(...)\n#endif\nconst int L \u003d 17 ;\nconst int L2 \u003d 1\u0026lt;\u0026lt;L ;\nconst int mod \u003d 1e9+7 ;\nint sbits[L2] ;\nvi oddbits ;\ninline int add(int x,int y)\n{\n  x+\u003dy;\n  if(x\u0026gt;\u003dmod) x-\u003dmod;\n  if(x\u0026lt;0) x+\u003dmod;\n  return x;\n}\ninline int mult(int x,int y)\n{\n  ll tmp\u003d(ll)x*y;\n  if(tmp\u0026gt;\u003dmod) tmp%\u003dmod;\n  return tmp;\n}\ninline int pwmod(int x,int y)\n{\n  int ans\u003d1;\n  while(y){if(y\u0026amp;1)ans\u003dmult(ans,x);y\u0026gt;\u0026gt;\u003d1;x\u003dmult(x,x);}\n  return ans;\n}\nvector\u0026lt;ii\u0026gt; nus[L] ;\nvoid zeta(int A[L2])\n{\n  FN(i,L)\n  {\n    for(ii m:nus[i]) A[m.fi]\u003dadd(A[m.fi],A[m.se]) ;\n  }\n}\n\nvoid meu(int A[L2])\n{\n    for(int i:oddbits) A[i] \u003d mod - A[i] ;\n    zeta(A) ;\n  for(int i:oddbits) A[i] \u003d mod - A[i] ;\n}\nvoid conv(int A[L2],int B[L2])\n{\n     zeta(A), zeta(B);//return\n     FN(i,L2) A[i]\u003dmult(A[i],B[i]);\n     meu(A);\n}\nint t[L+1][L2],t1[L2] ;\nvoid subsetconv(int A[L2],int ans[L2])\n{\n  FN(i,L2) t[sbits[i]][i] \u003d A[i] ;\n  FN(i,L+1) zeta(t[i]) ;\n  FN(c,L+1) FN(a,c+1)\n    {\n    int *t2 \u003d t[a], *t3 \u003d t[c-a] ;\n    FN(i,L2) t1[i]\u003dmult(t2[i],t3[i]) ;\n    meu(t1) ;\n        FN(i,L2) if(sbits[i] \u003d\u003d c) ans[i]\u003dadd(ans[i],t1[i]) ;\n    }\n}\nvector\u0026lt;ii\u0026gt; su[L] ;\n\nvoid transform(int p[L2],bool inv\u003dfalse){ int u,v;\nfor(int len\u003d1,l\u003d2;l\u0026lt;\u003dL2;len\u0026lt;\u0026lt;\u003d1,l\u0026lt;\u0026lt;\u003d1)for(int\ni\u003d0;i\u0026lt;L2;i+\u003dl) FN(j,len){\nu\u003dp[i+j],v\u003dp[i+j+len] ;\nif(inv) {p[i+j]\u003dadd(u,v),p[i+j+len]\u003dadd(u,-v);}\nelse {p[i+j]\u003dadd(u,v),p[i+j+len]\u003dadd(u,-v);}}\nif(inv){int d\u003dpwmod(L2,mod-2);FN(i,L2)p[i]\u003dmult(p[i],d);} }\n\nint cnt[L2],fib[L2],A[L2],B[L2],C[L2],a[L2],b[L2],c[L2] ;\n\nint main()\n{\n  std::ios::sync_with_stdio(false);\n  cin.tie(NULL) ; cout.tie(NULL) ;\n  FN(i,L2)\n  {\n    sbits[i] \u003d __builtin_popcount(i) ;\n    if(sbits[i] \u0026amp; 1) oddbits.emplace_back(i) ;\n    FN(j,L)\n    {\n      if(i\u0026amp;(1\u0026lt;\u0026lt;j)) nus[j].emplace_back(mp(i,i^(1\u0026lt;\u0026lt;j))) ;\n      if((i\u0026amp;(1\u0026lt;\u0026lt;j)) \u003d\u003d 0) su[j].emplace_back(mp(i,i^(1\u0026lt;\u0026lt;j))) ;\n    }\n  }\n  FN(i,L) reverse(all(su[i])) ;\n  fib[1] \u003d 1 ; rep(i,2,L2) fib[i] \u003d add(fib[i-1],fib[i-2]) ;\n\n  int N,x ; cin\u0026gt;\u0026gt;N ;\n  FN(i,N)\n  {\n    cin\u0026gt;\u0026gt;x, ++cnt[x] ;\n  }\n\n  subsetconv(cnt,A) ;\n  FN(i,L2) A[i]\u003dmult(A[i],fib[i]) ;\n\n  FN(i,L2) B[i]\u003dmult(cnt[i],fib[i]);\n  FN(i,L2) C[i]\u003dcnt[i] ;\n  transform(C) ;\n  FN(i,L2) C[i]\u003dmult(C[i],C[i]) ;\n  transform(C,1) ;\n  FN(i,L2) C[i]\u003dmult(C[i],fib[i]) ;\n  int ans \u003d 0 ;\n  FN(p,L)\n  {\n    FN(i,L2) a[i]\u003db[i]\u003dc[i]\u003d0 ;\n    for(ii m:nus[p]) a[m.se]\u003dA[m.fi],b[m.se]\u003dB[m.fi],c[m.se]\u003dC[m.fi] ;\n    FN(i,L)\n    {\n      for(ii m:su[i])\n      {\n        a[m.fi]\u003dadd(a[m.fi],a[m.se]) ;\n        b[m.fi]\u003dadd(b[m.fi],b[m.se]) ;\n        c[m.fi]\u003dadd(c[m.fi],c[m.se]) ;\n      }\n    }\n    FN(i,L2) a[i]\u003dmult(a[i],mult(b[i],c[i])) ;\n    meu(a) ;\n    ans \u003d add(ans,a[(1\u0026lt;\u0026lt;L)-1]) ;\n  }\n  ans \u003d ans \u003d\u003d 0 ? 0 : mod - ans ;\n  cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026quot;\\n\u0026quot; ;\n  return 0 ;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"problemTutorial\" problemcode\u003d\"914H\"\u003eTutorial is loading...\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eAuthor:\u003c/strong\u003e \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/Superty\" title\u003d\"Candidate Master Superty\"\u003eSuperty\u003c/a\u003e\u003cbr /\u003e\u003cstrong\u003eTester:\u003c/strong\u003e \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/codelegend\" title\u003d\"Candidate Master codelegend\"\u003ecodelegend\u003c/a\u003e\u003c/p\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eAuthor\u0027s code\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003e#include \u0026lt;bits/stdc++.h\u0026gt;\nusing namespace std;\nusing ll \u003d long long;\n\nll mod;\nconst int maxn \u003d 2e2 + 2;\nll tree[maxn][maxn][maxn];\nll c[maxn][maxn];\n\nint main() {\n  ios::sync_with_stdio(false);\n\n  int n, d;\n  cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; d \u0026gt;\u0026gt; mod;\n\n  c[0][0] \u003d 1;\n  for (int i \u003d 1; i \u0026lt;\u003d n; i++) {\n    c[i][0] \u003d 1;\n    for (int j \u003d 1; j \u0026lt;\u003d i; j++) {\n      c[i][j] \u003d (c[i - 1][j] + c[i - 1][j - 1]) % mod;\n    }\n  }\n\n  tree[1][1][0] \u003d 1;\n\n  for (int i \u003d 1; i \u0026lt; n; i++) { // adding trees of size i\n    for (int j \u003d 1; j \u0026lt;\u003d n; j++) {\n      for (int k \u003d 0; k \u0026lt;\u003d d; k++) {\n        tree[i + 1][j][k] \u003d tree[i][j][k];\n      }\n    }\n    ll tree_i \u003d 0;\n    for (int j \u003d 0; j \u0026lt; d; j++) {\n      tree_i \u003d (tree_i + tree[i][i][j]) % mod;\n    }\n\n    ll ways \u003d 1;\n    for (int j \u003d 1; i*j \u0026lt;\u003d n \u0026amp;\u0026amp; j \u0026lt;\u003d d; j++) { // adding j such trees\n      ways \u003d (ways * c[i*j - 1][i - 1]) % mod; // ((ij)! tree[i]^(j-1))/(i!^j j!)\n      for (int k \u003d 1; k + i*j \u0026lt;\u003d n; k++) { // adding to trees of size k\n        ll cc \u003d (ways * c[k + i*j - 1][k - 1]) % mod;\n        for (int deg \u003d 0; deg + j \u0026lt;\u003d d; deg++) {\n          tree[i + 1][k + i*j][deg + j] \u003d (tree[i + 1][k + i*j][deg + j] + cc*((tree[i][k][deg]*tree_i) % mod)) % mod;\n        }\n      }\n      ways \u003d (ways * tree_i) % mod;\n    }\n  }\n\n  ll total_trees \u003d 0;\n  for (int i \u003d 0; i \u0026lt;\u003d n - 1; i++) { // there are i vertices lying on paths increasing from the root\n    for (int j \u003d 0; j \u0026lt;\u003d d; j++) {\n      for (int k \u003d 0; j + k \u0026lt;\u003d d; k++) {\n        if (k \u003d\u003d 1) {\n          continue;\n        }\n        total_trees \u003d (total_trees + ((tree[n][i + 1][j]*tree[n][n - i][k]) % mod)) % mod;\n      }\n    }\n  }\n\n  cout \u0026lt;\u0026lt; (2*((n*(n-1)) % mod)*total_trees) % mod \u0026lt;\u0026lt; \u0027\\n\u0027;\n\n  return 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e","tags":["codecraft","round","458","editorial","div1 + div2","felicity"]}}