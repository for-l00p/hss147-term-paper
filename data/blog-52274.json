{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1496165342,"rating":0,"authorHandle":"rishi_07","modificationTimeSeconds":1496165342,"id":52274,"title":"\u003cp\u003e[Help] A small variation in the question Palindromic Transformation\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eThis is the original question: \u003ca href\u003d\"//codeforces.com/problemset/problem/486/C\"\u003ehttp://codeforces.com/problemset/problem/486/C\u003c/a\u003e\u003c/p\u003e\u003cp\u003eThis question uses four keys (up, down, left and right) and can be easily solved by greedy approach in linear time. My question is what if there were only three keys (left, right and up) then how to solve it? Previously, when we found a mismatch between two positions like in (i)th position we have \u0027b\u0027 and in (n-i)th position we have \u0027c\u0027, both of them could be made same using just 1 operation irrespective of the index ((i)th or (n-i)th) where we are performing the operation. But now, \u0027b\u0027 to \u0027c\u0027 will take only 1 operation but \u0027c\u0027 to \u0027b\u0027 will take 25 operations. I think now the question can be solved using DP. But, I am unable to formulate it. Any idea?\u003c/p\u003e\u003c/div\u003e","tags":["doubt","round #277","variation","dynamic programming"]}}