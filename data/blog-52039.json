{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1495007466,"rating":79,"authorHandle":"satylogin","modificationTimeSeconds":1497258120,"id":52039,"title":"\u003cp\u003eDaily Diary (Competitive Coding in Summers)\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eI realised that there is only one way improve one\u0027s skill, and that is through practice. So I decided to practice more topics and more problems on codeforces and different judges. This is simply a daily record for what I did through my vacation. \u003c/p\u003e\u003cp\u003eI also want to tell you about \u003cstrong\u003estopstalk.com\u003c/strong\u003e . It is a good site to make and keep you daily coding record.\u003c/p\u003e\u003ch2\u003e\u003cstrong\u003e16 MAY 2017\u003c/strong\u003e\u003c/h2\u003e\u003ch5\u003e\u003cstrong\u003eProblems Solved\u003c/strong\u003e -\u003c/h5\u003e\u003ch6\u003e1. \u003ca href\u003d\"//codeforces.com/problemset/problem/535/D\"\u003ehttp://codeforces.com/problemset/problem/535/D\u003c/a\u003e\u003c/h6\u003e \u003cpre\u003eThis was a simple problem and it used Z function for prefix length calculation\u003c/pre\u003e\u003ch6\u003e\u003cstrong\u003esolution link\u003c/strong\u003e — \u003ca href\u003d\"//codeforces.com/contest/535/submission/27152004\"\u003ehttp://codeforces.com/contest/535/submission/27152004\u003c/a\u003e\u003c/h6\u003e\u003ch6\u003e2. \u003ca href\u003d\"//codeforces.com/problemset/problem/551/B\"\u003ehttp://codeforces.com/problemset/problem/551/B\u003c/a\u003e\u003c/h6\u003e \u003cpre\u003eAlthough the problem was simple, I had some trouble in understanding the language of the problem. It took time more than required.\u003c/pre\u003e\u003ch6\u003e\u003cstrong\u003esolution link\u003c/strong\u003e — \u003ca href\u003d\"//codeforces.com/contest/551/submission/27160921\"\u003ehttp://codeforces.com/contest/551/submission/27160921\u003c/a\u003e\u003c/h6\u003e\u003cp\u003e\u003cbr /\u003e\u003c/p\u003e\u003ch5\u003e\u003cstrong\u003eParticipated Contest\u003c/strong\u003e -\u003c/h5\u003e\u003cp\u003eI participated in a virtual contest ( \u003cstrong\u003eRound 308 DIV 2\u003c/strong\u003e ). I was able to solve all the problems, but then last problem was accepted just 2 min before the contest ended. \u003c/p\u003e\u003ch6\u003eA. \u003ca href\u003d\"//codeforces.com/problemset/problem/552/A\"\u003ehttp://codeforces.com/problemset/problem/552/A\u003c/a\u003e\u003c/h6\u003e \u003cpre\u003eThe problem was fairly simple, but then rather than simply adding the area, I made a 2-D hash map. Guess I have to practice a little more for problem A.\u003c/pre\u003e\u003ch6\u003e\u003cstrong\u003esolution link\u003c/strong\u003e — \u003ca href\u003d\"//codeforces.com/contest/552/submission/27165795\"\u003ehttp://codeforces.com/contest/552/submission/27165795\u003c/a\u003e\u003c/h6\u003e\u003ch6\u003eB. \u003ca href\u003d\"//codeforces.com/problemset/problem/552/B\"\u003ehttp://codeforces.com/problemset/problem/552/B\u003c/a\u003e\u003c/h6\u003e \u003cpre\u003eThe problem was mathematical. I solved it by forming a series. Got one WA for not using long long.\u003c/pre\u003e\u003ch6\u003e\u003cstrong\u003esolution link\u003c/strong\u003e — \u003ca href\u003d\"//codeforces.com/contest/552/submission/27165912\"\u003ehttp://codeforces.com/contest/552/submission/27165912\u003c/a\u003e\u003c/h6\u003e\u003ch6\u003eC. \u003ca href\u003d\"//codeforces.com/problemset/problem/552/C\"\u003ehttp://codeforces.com/problemset/problem/552/C\u003c/a\u003e\u003c/h6\u003e \u003cpre\u003eI solved the problem using meet in middle. But the editorial talked about an another wonderful way to solve that. Do watch the editorial solution. It is an excellent concept in itself.\u003c/pre\u003e\u003ch6\u003e\u003cstrong\u003esolution link\u003c/strong\u003e — \u003ca href\u003d\"//codeforces.com/contest/552/submission/27166275\"\u003ehttp://codeforces.com/contest/552/submission/27166275\u003c/a\u003e\u003c/h6\u003e\u003ch6\u003eD. \u003ca href\u003d\"//codeforces.com/problemset/problem/552/D\"\u003ehttp://codeforces.com/problemset/problem/552/D\u003c/a\u003e\u003c/h6\u003e \u003cpre\u003eThis was another interesting problem to solve. I used concept of slopes to generate triangle. Got 4 WA. Was not taking care of slope sign and was not handling 0 slope and inf slope cases.\u003c/pre\u003e\u003ch6\u003e\u003cstrong\u003esolution link\u003c/strong\u003e — \u003ca href\u003d\"//codeforces.com/contest/552/submission/27166893\"\u003ehttp://codeforces.com/contest/552/submission/27166893\u003c/a\u003e\u003c/h6\u003e\u003ch6\u003eE. \u003ca href\u003d\"//codeforces.com/problemset/problem/552/E\"\u003ehttp://codeforces.com/problemset/problem/552/E\u003c/a\u003e\u003c/h6\u003e \u003cpre\u003ePretty interesting problem to solve both by greedy and by DP. I used the later N*N approach. Initially thought of using multiplication as boundaries, but then didn\u0027t wanted to take risk. Got 4 WA because of simple mistakes in the loops. Got accepted just before 2 min from end.\u003c/pre\u003e\u003ch6\u003e\u003cstrong\u003esolution link\u003c/strong\u003e — \u003ca href\u003d\"//codeforces.com/contest/552/submission/27167519\"\u003ehttp://codeforces.com/contest/552/submission/27167519\u003c/a\u003e\u003c/h6\u003e\u003ch2\u003e17 MAY 2017\u003c/h2\u003e\u003cp\u003eSolved very few problems. Found a lot of problems hard to solve.\u003c/p\u003e\u003ch5\u003eProblems Solved -\u003c/h5\u003e\u003ch6\u003e1. \u003ca href\u003d\"//codeforces.com/problemset/problem/551/C\"\u003ehttp://codeforces.com/problemset/problem/551/C\u003c/a\u003e\u003c/h6\u003e \u003cpre\u003eIt was a good problem of binary search. Although I found it a little hard for problem C Div 2. Guess I have practice still more. It used an standard NlogN solution using binary search where we have to binary search over the completion time of the task and then check the users required. Good problem for practice.\u003c/pre\u003e\u003ch6\u003esolution link — \u003ca href\u003d\"//codeforces.com/contest/551/submission/27175198\"\u003ehttp://codeforces.com/contest/551/submission/27175198\u003c/a\u003e\u003c/h6\u003e\u003ch6\u003e2. \u003ca href\u003d\"//codeforces.com/problemset/problem/549/A\"\u003ehttp://codeforces.com/problemset/problem/549/A\u003c/a\u003e\u003c/h6\u003e \u003cpre\u003eFairly easy problem. Requires direct implementation\u003c/pre\u003e\u003ch6\u003esolution link — \u003ca href\u003d\"//codeforces.com/contest/549/submission/27181042\"\u003ehttp://codeforces.com/contest/549/submission/27181042\u003c/a\u003e\u003c/h6\u003e\u003ch6\u003e3. \u003ca href\u003d\"//codeforces.com/problemset/problem/534/E\"\u003ehttp://codeforces.com/problemset/problem/534/E\u003c/a\u003e\u003c/h6\u003e \u003cpre\u003every good problem for practice. I was missing a lot of corner cases while solving. Had to search for a method to find mismatch in logN time in the array. I think this problem was worth solving.\u003c/pre\u003e\u003ch6\u003esolution link — \u003ca href\u003d\"//codeforces.com/contest/534/submission/27184116\"\u003ehttp://codeforces.com/contest/534/submission/27184116\u003c/a\u003e\u003c/h6\u003e\u003ch5\u003eProblems Unsolved -\u003c/h5\u003e\u003ch6\u003e1. \u003ca href\u003d\"//codeforces.com/problemset/problem/534/F\"\u003ehttp://codeforces.com/problemset/problem/534/F\u003c/a\u003e\u003c/h6\u003e\u003ch6\u003e2. \u003ca href\u003d\"//codeforces.com/contest/549/problem/H\"\u003ehttp://codeforces.com/contest/549/problem/H\u003c/a\u003e\u003c/h6\u003e\u003ch6\u003eIt would be a great help if someone could help me with the unsolved problems.\u003c/h6\u003e\u003ch2\u003e18 MAY 2017\u003c/h2\u003e\u003ch5\u003eProblems Solved -\u003c/h5\u003e\u003cp\u003eI solved some simple problems on hackerearth and URI. One problem that I liked was from URI — \u003c/p\u003e\u003ch6\u003e1. \u003ca href\u003d\"https://www.urionlinejudge.com.br/judge/en/problems/view/1469\"\u003ehttps://www.urionlinejudge.com.br/judge/en/problems/view/1469\u003c/a\u003e\u003c/h6\u003e \u003cpre\u003eThis was a good problem where we had to swap nodes. I used map for mapping and index function and an inverse index function for getting position of a node and getting value at any position. for swapping, I swapped those two.\u003c/pre\u003e\u003ch6\u003esolution link — \u003ca href\u003d\"https://code.hackerearth.com/a4c9b2Y\"\u003ehttps://code.hackerearth.com/a4c9b2Y\u003c/a\u003e\u003c/h6\u003e\u003cp\u003eThen some problems on codeforces \u003cbr /\u003e\u003c/p\u003e\u003ch6\u003e1. \u003ca href\u003d\"//codeforces.com/problemset/problem/549/H\"\u003ehttp://codeforces.com/problemset/problem/549/H\u003c/a\u003e\u003c/h6\u003e \u003cpre\u003eFinally solved the matrix problem. Used binary search for reducing the size of squares.\u003c/pre\u003e\u003ch6\u003esolution link — \u003ca href\u003d\"//codeforces.com/contest/549/submission/27189164\"\u003ehttp://codeforces.com/contest/549/submission/27189164\u003c/a\u003e\u003c/h6\u003e\u003ch6\u003e2. \u003ca href\u003d\"//codeforces.com/problemset/problem/519/A\"\u003ehttp://codeforces.com/problemset/problem/519/A\u003c/a\u003e\u003c/h6\u003e \u003cpre\u003eDirect implementation\u003c/pre\u003e\u003ch6\u003esolution link — \u003ca href\u003d\"//codeforces.com/contest/519/submission/27193319\"\u003ehttp://codeforces.com/contest/519/submission/27193319\u003c/a\u003e\u003c/h6\u003e\u003ch6\u003e3. \u003ca href\u003d\"//codeforces.com/problemset/problem/519/B\"\u003ehttp://codeforces.com/problemset/problem/519/B\u003c/a\u003e\u003c/h6\u003e \u003cpre\u003eDirect implementation\u003c/pre\u003e\u003ch6\u003esolution link — \u003ca href\u003d\"//codeforces.com/contest/519/submission/27201264\"\u003ehttp://codeforces.com/contest/519/submission/27201264\u003c/a\u003e\u003c/h6\u003e\u003ch6\u003e4. \u003ca href\u003d\"//codeforces.com/problemset/problem/519/C\"\u003ehttp://codeforces.com/problemset/problem/519/C\u003c/a\u003e\u003c/h6\u003e \u003cpre\u003eTurned out to be easy for problem C. Just travel over one possible value, then find the value of other and then maximise the sum.\u003c/pre\u003e\u003ch6\u003esolution link — \u003ca href\u003d\"//codeforces.com/contest/519/submission/27201384\"\u003ehttp://codeforces.com/contest/519/submission/27201384\u003c/a\u003e\u003c/h6\u003e\u003ch6\u003e5. \u003ca href\u003d\"//codeforces.com/problemset/problem/519/D\"\u003ehttp://codeforces.com/problemset/problem/519/D\u003c/a\u003e\u003c/h6\u003e \u003cpre\u003eHad fun while solving this. Used map to store pairs of character and prefix sum values. Then used a linear algorithm to add values for all location while deleting previously occurred nodes. Did in NlogN.\u003c/pre\u003e\u003ch6\u003esolution link — \u003ca href\u003d\"//codeforces.com/contest/519/submission/27202224\"\u003ehttp://codeforces.com/contest/519/submission/27202224\u003c/a\u003e\u003c/h6\u003e\u003ch5\u003eProblems unsolved -\u003c/h5\u003e\u003ch6\u003e1. \u003ca href\u003d\"//codeforces.com/problemset/problem/519/E\"\u003ehttp://codeforces.com/problemset/problem/519/E\u003c/a\u003e\u003c/h6\u003e\u003ch2\u003e19 MAY 2017\u003c/h2\u003e\u003cp\u003eI only participated in a virtual contest on URI. Few of the good problems were — \u003c/p\u003e\u003ch6\u003e1. \u003ca href\u003d\"https://www.urionlinejudge.com.br/judge/en/problems/view/2049\"\u003ehttps://www.urionlinejudge.com.br/judge/en/problems/view/2049\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eThe problem was fairly easy but the statement was bit confusing.\u003c/p\u003e\u003ch6\u003esolution link — \u003ca href\u003d\"https://code.hackerearth.com/1144e5D\"\u003ehttps://code.hackerearth.com/1144e5D\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch6\u003e2. \u003ca href\u003d\"https://www.urionlinejudge.com.br/judge/en/problems/view/1923\"\u003ehttps://www.urionlinejudge.com.br/judge/en/problems/view/1923\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eAgain the main problem was decoding the statement. The only place that mentioned that the graph was undirected was when the statement said the relation is mutual. But while reading the problem you will feel like the graph is directed.\u003c/p\u003e\u003ch6\u003esolution link — \u003ca href\u003d\"https://code.hackerearth.com/c2f17dC\"\u003ehttps://code.hackerearth.com/c2f17dC\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch6\u003e3. \u003ca href\u003d\"https://www.urionlinejudge.com.br/judge/en/problems/view/1580\"\u003ehttps://www.urionlinejudge.com.br/judge/en/problems/view/1580\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eIt was a basic mathematics problem that used mod inverse and factorial. \u003c/p\u003e\u003ch6\u003esolution link — \u003ca href\u003d\"https://code.hackerearth.com/eddc17Y\"\u003ehttps://code.hackerearth.com/eddc17Y\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch2\u003e20 MAY 2017\u003c/h2\u003e\u003cp\u003eToday I solved problems on snackdown qualifiers and hackerearth circuits. In night, I participated in round 415 DIV 2. The results were not very good. Was only able to solve 3 problems. I feel like I have difficulty with interactive problems. Will have to practice more.\u003c/p\u003e\u003cp\u003eApart from the contests, I solved an extra problem on hackerrank.\u003c/p\u003e \u003col\u003e   \u003cli\u003e\u003ca href\u003d\"https://www.hackerrank.com/challenges/kth-ancestor\"\u003ehttps://www.hackerrank.com/challenges/kth-ancestor\u003c/a\u003e\u003c/li\u003e \u003c/ol\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eThe problem required to find the kth ancestor with dynamic insertion and deletion. I used an array to keep track of active elements. Then, for insertion and deletion, I used dp on that particular node. It only required logN steps. Finding the solution was then easy. For insertion in beginning, I used level order traversal to insure that the parent are inserted before the child. Good problem to practice.\u003c/p\u003e\u003ch6\u003esolution link — \u003ca href\u003d\"https://code.hackerearth.com/3332f9b\"\u003ehttps://code.hackerearth.com/3332f9b\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch2\u003e21 MAY 2017\u003c/h2\u003e\u003cp\u003eToday I practise some problems on codeforces and spoj.\u003c/p\u003e\u003ch6\u003e1. \u003ca href\u003d\"http://www.spoj.com/problems/LCA/\"\u003ehttp://www.spoj.com/problems/LCA/\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eIt was a simple problem of finding the LCA of a given pair of nodes. I used dp to solve the problem. Another possible way is to do an euler tour of the tree and then use RMQ to find the LCA. sparse tree can answer RMQ in constant time, so that will be faster.\u003c/p\u003e\u003ch6\u003esolution link — \u003ca href\u003d\"http://paste.ubuntu.com/24622053/\"\u003ehttp://paste.ubuntu.com/24622053/\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch6\u003e2. \u003ca href\u003d\"//codeforces.com/problemset/problem/192/E\"\u003ehttp://codeforces.com/problemset/problem/192/E\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eFirst increase the count of the nodes that are given to you. The decrease the count of their LCA by 2. The thing is, we are going up level by level. At any given level at a time. We see how many fools can go up a level. That is equal to fool that came to that level minus the fool that stay at that level node. The number of fool staying was done by subtracting at LCA as they want to meet at a path of minimum distance.\u003c/p\u003e\u003ch6\u003esolution link — \u003ca href\u003d\"//codeforces.com/contest/192/submission/27263078\"\u003ehttp://codeforces.com/contest/192/submission/27263078\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch6\u003e3. \u003ca href\u003d\"//codeforces.com/problemset/problem/556/A\"\u003ehttp://codeforces.com/problemset/problem/556/A\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eIt requires simple counting of one and zero. Giving it some time will directly lead to this conclusion\u003c/p\u003e\u003ch6\u003esolution link — \u003ca href\u003d\"//codeforces.com/contest/556/submission/27264409\"\u003ehttp://codeforces.com/contest/556/submission/27264409\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch6\u003e4. \u003ca href\u003d\"//codeforces.com/problemset/problem/556/B\"\u003ehttp://codeforces.com/problemset/problem/556/B\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eThe problem was really simple. It only required implementation. One can easily come up with an N*N solution. As soon as one come up with an N*N solution, One can easily reduce it to an O(N) solution. link for both solution — \u003c/p\u003e\u003ch6\u003elink1 — \u003ca href\u003d\"//codeforces.com/contest/556/submission/27266299\"\u003ehttp://codeforces.com/contest/556/submission/27266299\u003c/a\u003e\u003c/h6\u003e\u003ch6\u003elink2 — \u003ca href\u003d\"//codeforces.com/contest/556/submission/27266356\"\u003ehttp://codeforces.com/contest/556/submission/27266356\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch6\u003e5. \u003ca href\u003d\"//codeforces.com/problemset/problem/556/C\"\u003ehttp://codeforces.com/problemset/problem/556/C\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eIt was among the most confusing problem statement that I can across in my life. Even after reading it 4 — 5 time, I was unable to understand what actually was going on. So here is a simple problem statement. One can remove one doll at a time and that too only the uppermost. It means that the only chain that we don\u0027t have to break is the chain 1, 2, 3, 4 ... k. and then break every other doll and the n assemble over the k length chain.\u003c/p\u003e\u003ch6\u003esolution link — \u003ca href\u003d\"//codeforces.com/contest/556/submission/27266874\"\u003ehttp://codeforces.com/contest/556/submission/27266874\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch6\u003e6. \u003ca href\u003d\"//codeforces.com/problemset/problem/556/D\"\u003ehttp://codeforces.com/problemset/problem/556/D\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eIt was an amazingly good problem of greedy using binary search as a sub routine. It took some time to come up with the solution. I made an array that had distance (max distance b/w boundaries, min distance b/w boundaries). Then sorted them according to the max distance. Then while traversing, I gave the shortest possible length of bridge to the required gap. If it was not possible, then answer was no.\u003c/p\u003e\u003ch6\u003esolution link — \u003ca href\u003d\"//codeforces.com/contest/556/submission/27270654\"\u003ehttp://codeforces.com/contest/556/submission/27270654\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch2\u003e22 MAY 2017\u003c/h2\u003e\u003cp\u003eToday was an extremely bad day for me. I participated in a virtual contest and was able to solve only 2 problems. Realised how bad I am at geometry. So tomorrow is going to be an extensive practice session. I also solved one problem on hackerearth circuits. A bad day :(\u003c/p\u003e\u003ch2\u003e23 MAY 2017\u003c/h2\u003e\u003cp\u003eToday I solved a few problems and participated in a virtual contest. Guess something went wrong with CF. In the middle of virtual contest, It dumped me out of the contest, and when 45 min were left, It again brought back me in. I solved One problem on hackerearth circuits. \u003c/p\u003e\u003ch5\u003esolved problems\u003c/h5\u003e\u003ch6\u003e1. \u003ca href\u003d\"//codeforces.com/problemset/problem/471/A\"\u003ehttp://codeforces.com/problemset/problem/471/A\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eThe problem was easy, But I took a lot of time to code. Just had to check whether there we some points greater equal 4. If not then alien, otherwise can be checked for bear and elephant.\u003c/p\u003e\u003ch6\u003esolution link — \u003ca href\u003d\"//codeforces.com/contest/471/submission/27301710\"\u003ehttp://codeforces.com/contest/471/submission/27301710\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch6\u003e2. \u003ca href\u003d\"//codeforces.com/problemset/problem/471/B\"\u003ehttp://codeforces.com/problemset/problem/471/B\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eAgain an easy problem with more coding at least for me. Direct implementation.\u003c/p\u003e\u003ch6\u003esolution link — \u003ca href\u003d\"//codeforces.com/contest/471/submission/27301694\"\u003ehttp://codeforces.com/contest/471/submission/27301694\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch6\u003e3. \u003ca href\u003d\"//codeforces.com/problemset/problem/471/C\"\u003ehttp://codeforces.com/problemset/problem/471/C\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eAn easy problem with observation. Just found out the minimum card required for any height and then checked whether other cards can be arranged accordingly. Easy for C.\u003c/p\u003e\u003ch6\u003esolution link — \u003ca href\u003d\"//codeforces.com/contest/471/submission/27301680\"\u003ehttp://codeforces.com/contest/471/submission/27301680\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch6\u003e4. \u003ca href\u003d\"//www.codeforces.com/problemset/problem/471/D\"\u003ehttp://www.codeforces.com/problemset/problem/471/D\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eThe D problem was easier than C. Can be solved using string matching. Instead of matching the strings, just match the steps. Solution will be clearer.\u003c/p\u003e\u003ch6\u003esolution link — \u003ca href\u003d\"//codeforces.com/contest/471/submission/27301654\"\u003ehttp://codeforces.com/contest/471/submission/27301654\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch6\u003e5. \u003ca href\u003d\"//codeforces.com/problemset/problem/208/E\"\u003ehttp://codeforces.com/problemset/problem/208/E\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eAn easy problem for E. Can be solved just with dfs and binary search. I have two solutions\u003c/p\u003e\u003ch6\u003esolution1 — \u003ca href\u003d\"//codeforces.com/contest/208/submission/27306354\"\u003ehttp://codeforces.com/contest/208/submission/27306354\u003c/a\u003e\u003c/h6\u003e\u003ch6\u003esolution2 — \u003ca href\u003d\"//codeforces.com/contest/208/submission/24803199\"\u003ehttp://codeforces.com/contest/208/submission/24803199\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch6\u003e6. \u003ca href\u003d\"https://www.hackerrank.com/challenges/inverse-rmq\"\u003ehttps://www.hackerrank.com/challenges/inverse-rmq\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eThe best problem I solved in day. Try to put minimum number node in as early index as possible. That is it.\u003c/p\u003e\u003ch6\u003esolution link — \u003ca href\u003d\"http://paste.ubuntu.com/24640971/\"\u003ehttp://paste.ubuntu.com/24640971/\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch2\u003e24 MAY 2017\u003c/h2\u003e\u003cp\u003eStill doing hackerearth circuits. Unable to do consecutive remainder. Still have to practice more maths. \u003c/p\u003e\u003ch2\u003e25 MAY 2017\u003c/h2\u003e\u003cp\u003ePracticed some easy problems on hackerearth and codeforces. The problems that I practiced on hackerearth were very easy. I cannot say the same for codeforces. Today\u0027s question were a bit harder.\u003c/p\u003e\u003ch6\u003e1. \u003ca href\u003d\"//codeforces.com/problemset/problem/609/E\"\u003ehttp://codeforces.com/problemset/problem/609/E\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eThe problem was of finding mst including a particular edge. The problem required finding the maximum length path joining the the two vertices. Let us say the edge weight cam out to be x, and the weight of the included edge is y, The cost of mst is z. Then ans is z — x + y.\u003c/p\u003e\u003ch6\u003esolution — \u003ca href\u003d\"//codeforces.com/contest/609/submission/27330146\"\u003ehttp://codeforces.com/contest/609/submission/27330146\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch6\u003e2. \u003ca href\u003d\"//codeforces.com/problemset/problem/519/E\"\u003ehttp://codeforces.com/problemset/problem/519/E\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eComing up with a solution is an easy task. The hard part lies only in the implementation. Just need to find an equidistance path from both nodes and then count all node reachable from the node such that we do not go in the path of the given two vertices.\u003c/p\u003e\u003ch6\u003esolution — \u003ca href\u003d\"//codeforces.com/contest/519/submission/27330636\"\u003ehttp://codeforces.com/contest/519/submission/27330636\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch6\u003e3. \u003ca href\u003d\"//codeforces.com/problemset/problem/560/C\"\u003ehttp://codeforces.com/problemset/problem/560/C\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eThe problem was of geometry and we just had to convert the hexagon in a triangle by drawing triangle on any three alternate edges.\u003c/p\u003e\u003ch6\u003esolution link — \u003ca href\u003d\"//codeforces.com/contest/560/submission/27331484\"\u003ehttp://codeforces.com/contest/560/submission/27331484\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch6\u003e4. \u003ca href\u003d\"//codeforces.com/problemset/problem/560/D\"\u003ehttp://codeforces.com/problemset/problem/560/D\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eJust needed to convert both the string into lexicographical smallest. Then compare whether the given two string are equal.\u003c/p\u003e\u003ch6\u003esolution link — \u003ca href\u003d\"//codeforces.com/contest/560/submission/27333242\"\u003ehttp://codeforces.com/contest/560/submission/27333242\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch6\u003e5. \u003ca href\u003d\"//codeforces.com/problemset/problem/560/E\"\u003ehttp://codeforces.com/problemset/problem/560/E\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eThe problem was of combinatorics. Just needed to find the ways of going to a particular point without going on any other point that lies before it. the ans was C(x+y, x);\u003c/p\u003e\u003ch6\u003esolution — \u003ca href\u003d\"//codeforces.com/contest/560/submission/27340300\"\u003ehttp://codeforces.com/contest/560/submission/27340300\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch2\u003e26 MAY 2017\u003c/h2\u003e\u003ch6\u003e1. \u003ca href\u003d\"https://www.hackerearth.com/practice/algorithms/greedy/basics-of-greedy-algorithms/practice-problems/algorithm/little-monks-interviews/\"\u003ehttps://www.hackerearth.com/practice/algorithms/greedy/basics-of-greedy-algorithms/practice-problems/algorithm/little-monks-interviews/\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eSimple Maximum spanning tree.\u003c/p\u003e\u003ch6\u003esolution — \u003ca href\u003d\"http://paste.ubuntu.com/24675192/\"\u003ehttp://paste.ubuntu.com/24675192/\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch6\u003e2. \u003ca href\u003d\"https://www.hackerearth.com/practice/algorithms/greedy/basics-of-greedy-algorithms/practice-problems/algorithm/rjit-need-leaves/\"\u003ehttps://www.hackerearth.com/practice/algorithms/greedy/basics-of-greedy-algorithms/practice-problems/algorithm/rjit-need-leaves/\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eWe just have to traverse in reverse direction. If we get x+1 for any x, we replace that x by x+1 in the multiset.\u003c/p\u003e\u003ch6\u003esolution — \u003ca href\u003d\"http://paste.ubuntu.com/24675209/\"\u003ehttp://paste.ubuntu.com/24675209/\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch6\u003e3. \u003ca href\u003d\"https://www.codechef.com/problems/COOK82D\"\u003ehttps://www.codechef.com/problems/COOK82D\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eCan make a hash for every node using some random value. then check whether the hash value of r and l-1 are same.\u003c/p\u003e\u003ch6\u003esolution — \u003ca href\u003d\"http://paste.ubuntu.com/24675224/\"\u003ehttp://paste.ubuntu.com/24675224/\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch2\u003e27 MAY 2017\u003c/h2\u003e\u003ch6\u003e1. \u003ca href\u003d\"//codeforces.com/problemset/problem/811/B\"\u003ehttp://codeforces.com/problemset/problem/811/B\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eDirect implementation\u003c/p\u003e\u003ch6\u003esolution — \u003ca href\u003d\"//codeforces.com/contest/811/submission/27392467\"\u003ehttp://codeforces.com/contest/811/submission/27392467\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch6\u003e2. \u003ca href\u003d\"//codeforces.com/problemset/problem/558/B\"\u003ehttp://codeforces.com/problemset/problem/558/B\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eCan be solved by storing frequency, first occurrence and last occurrence.\u003c/p\u003e\u003ch6\u003esolution — \u003ca href\u003d\"//codeforces.com/contest/558/submission/27391836\"\u003ehttp://codeforces.com/contest/558/submission/27391836\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch6\u003e3. \u003ca href\u003d\"//codeforces.com/problemset/problem/557/A\"\u003ehttp://codeforces.com/problemset/problem/557/A\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003esimple greedy.\u003c/p\u003e\u003ch6\u003esolution — \u003ca href\u003d\"//codeforces.com/contest/557/submission/27367632\"\u003ehttp://codeforces.com/contest/557/submission/27367632\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch6\u003e4. \u003ca href\u003d\"//codeforces.com/problemset/problem/557/B\"\u003ehttp://codeforces.com/problemset/problem/557/B\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003ejust sort the array. find minimum size for both boys and girls. Using this we can find the amount x. Then print minimum of 3*x or w.\u003c/p\u003e\u003ch6\u003esolution — \u003ca href\u003d\"//codeforces.com/contest/557/submission/27367886\"\u003ehttp://codeforces.com/contest/557/submission/27367886\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch6\u003e5. \u003ca href\u003d\"//codeforces.com/problemset/problem/557/C\"\u003ehttp://codeforces.com/problemset/problem/557/C\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eCan be solved using simple brute force. Find total sum, and for every length find the maximum sum that you can save.\u003c/p\u003e\u003ch6\u003esolution — \u003ca href\u003d\"//codeforces.com/contest/557/submission/27389540\"\u003ehttp://codeforces.com/contest/557/submission/27389540\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch6\u003e6. \u003ca href\u003d\"//codeforces.com/problemset/problem/811/A\"\u003ehttp://codeforces.com/problemset/problem/811/A\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eDirect brute force.\u003c/p\u003e\u003ch6\u003esolution — \u003ca href\u003d\"//codeforces.com/contest/811/submission/27371224\"\u003ehttp://codeforces.com/contest/811/submission/27371224\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch6\u003e7. \u003ca href\u003d\"//codeforces.com/problemset/problem/811/C\"\u003ehttp://codeforces.com/problemset/problem/811/C\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003ehad to come up with a linear state to save memory limit exceed. N*N complexity. For every possible end, search for the corresponding start.\u003c/p\u003e\u003ch6\u003esolution — \u003ca href\u003d\"//codeforces.com/contest/811/submission/27385042\"\u003ehttp://codeforces.com/contest/811/submission/27385042\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch2\u003e28 MAY 2017\u003c/h2\u003e\u003ch6\u003e1. \u003ca href\u003d\"https://www.codechef.com/problems/DIVGAME\"\u003ehttps://www.codechef.com/problems/DIVGAME\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eThe best hint for this question would be to first try for upto 100000 and then try to find the pattern. Also there are few diversions from regular pattern at few places. \u003c/p\u003e\u003ch6\u003esolution — \u003ca href\u003d\"http://paste.ubuntu.com/24703147/\"\u003ehttp://paste.ubuntu.com/24703147/\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch6\u003e2. \u003ca href\u003d\"https://www.hackerearth.com/practice/algorithms/greedy/basics-of-greedy-algorithms/practice-problems/algorithm/little-monk-and-his-toy-story/\"\u003ehttps://www.hackerearth.com/practice/algorithms/greedy/basics-of-greedy-algorithms/practice-problems/algorithm/little-monk-and-his-toy-story/\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eDirect brute force\u003c/p\u003e\u003ch6\u003esolution — \u003ca href\u003d\"http://paste.ubuntu.com/24703165/\"\u003ehttp://paste.ubuntu.com/24703165/\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch6\u003e3. \u003ca href\u003d\"https://www.hackerearth.com/problem/algorithm/even-sum/\"\u003ehttps://www.hackerearth.com/problem/algorithm/even-sum/\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eIt is actually a dp problem. Try to find the number of even sequence starting and ending at a particular point.\u003c/p\u003e\u003ch6\u003esolution — \u003ca href\u003d\"http://paste.ubuntu.com/24703194/\"\u003ehttp://paste.ubuntu.com/24703194/\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch6\u003e4. \u003ca href\u003d\"https://www.hackerearth.com/practice/algorithms/greedy/basics-of-greedy-algorithms/practice-problems/algorithm/little-monk-and-library/\"\u003ehttps://www.hackerearth.com/practice/algorithms/greedy/basics-of-greedy-algorithms/practice-problems/algorithm/little-monk-and-library/\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eJust Greedily allocate first to first.\u003c/p\u003e\u003ch6\u003esolution — \u003ca href\u003d\"http://paste.ubuntu.com/24703210/\"\u003ehttp://paste.ubuntu.com/24703210/\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch2\u003e29 MAY 2017\u003c/h2\u003e\u003ch6\u003e1. \u003ca href\u003d\"https://www.hackerearth.com/practice/algorithms/string-algorithm/basics-of-string-manipulation/practice-problems/algorithm/sorted-string/\"\u003ehttps://www.hackerearth.com/practice/algorithms/string-algorithm/basics-of-string-manipulation/practice-problems/algorithm/sorted-string/\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eJust store the frequency in a pair then sort and print.\u003c/p\u003e\u003ch6\u003esolution — \u003ca href\u003d\"http://paste.ubuntu.com/24717004/\"\u003ehttp://paste.ubuntu.com/24717004/\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch6\u003e2. \u003ca href\u003d\"https://www.hackerearth.com/practice/algorithms/string-algorithm/basics-of-string-manipulation/practice-problems/algorithm/caesars-cipher-1/\"\u003ehttps://www.hackerearth.com/practice/algorithms/string-algorithm/basics-of-string-manipulation/practice-problems/algorithm/caesars-cipher-1/\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eJust direct Implementation\u003c/p\u003e\u003ch6\u003esolution — \u003ca href\u003d\"http://paste.ubuntu.com/24717024/\"\u003ehttp://paste.ubuntu.com/24717024/\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch6\u003e3. \u003ca href\u003d\"https://www.hackerearth.com/practice/algorithms/string-algorithm/basics-of-string-manipulation/practice-problems/algorithm/marut-and-strings-4/\"\u003ehttps://www.hackerearth.com/practice/algorithms/string-algorithm/basics-of-string-manipulation/practice-problems/algorithm/marut-and-strings-4/\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eThe question was fun to try due to some unusual constraints.\u003c/p\u003e\u003ch6\u003esolution — \u003ca href\u003d\"http://paste.ubuntu.com/24717043/\"\u003ehttp://paste.ubuntu.com/24717043/\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch6\u003e4. \u003ca href\u003d\"https://www.hackerearth.com/practice/algorithms/string-algorithm/basics-of-string-manipulation/practice-problems/algorithm/secret-messages/\"\u003ehttps://www.hackerearth.com/practice/algorithms/string-algorithm/basics-of-string-manipulation/practice-problems/algorithm/secret-messages/\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eDirect implemetation\u003c/p\u003e\u003ch6\u003e# solution — \u003ca href\u003d\"http://paste.ubuntu.com/24717066/\"\u003ehttp://paste.ubuntu.com/24717066/\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch6\u003e5. \u003ca href\u003d\"https://www.hackerearth.com/practice/algorithms/string-algorithm/basics-of-string-manipulation/practice-problems/algorithm/remove-duplicates-3/\"\u003ehttps://www.hackerearth.com/practice/algorithms/string-algorithm/basics-of-string-manipulation/practice-problems/algorithm/remove-duplicates-3/\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eDirect Implementation\u003c/p\u003e\u003ch6\u003esolution — \u003ca href\u003d\"http://paste.ubuntu.com/24717079/\"\u003ehttp://paste.ubuntu.com/24717079/\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch6\u003e6. \u003ca href\u003d\"https://www.hackerearth.com/practice/algorithms/string-algorithm/basics-of-string-manipulation/practice-problems/algorithm/lexical-analyzer-3/\"\u003ehttps://www.hackerearth.com/practice/algorithms/string-algorithm/basics-of-string-manipulation/practice-problems/algorithm/lexical-analyzer-3/\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eMake sure that the variables are not always space separated from \u003d sign.\u003c/p\u003e\u003ch6\u003esolution — \u003ca href\u003d\"http://paste.ubuntu.com/24717087/\"\u003ehttp://paste.ubuntu.com/24717087/\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch6\u003e7. \u003ca href\u003d\"https://www.hackerearth.com/practice/algorithms/string-algorithm/basics-of-string-manipulation/practice-problems/algorithm/ashish-and-binary-matrix-1/\"\u003ehttps://www.hackerearth.com/practice/algorithms/string-algorithm/basics-of-string-manipulation/practice-problems/algorithm/ashish-and-binary-matrix-1/\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eThis problem has wrong solution. Just check whether the string don\u0027t match.\u003c/p\u003e\u003ch6\u003esolution — \u003ca href\u003d\"http://paste.ubuntu.com/24717093/\"\u003ehttp://paste.ubuntu.com/24717093/\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch6\u003e8. \u003ca href\u003d\"https://www.hackerearth.com/practice/algorithms/string-algorithm/basics-of-string-manipulation/practice-problems/algorithm/palindromes-3/\"\u003ehttps://www.hackerearth.com/practice/algorithms/string-algorithm/basics-of-string-manipulation/practice-problems/algorithm/palindromes-3/\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eIf the string don\u0027t match at a particular pair position, then one can add any number of possible and equal characters on either side.\u003c/p\u003e\u003ch6\u003esolution — \u003ca href\u003d\"http://paste.ubuntu.com/24717104/\"\u003ehttp://paste.ubuntu.com/24717104/\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch6\u003e9. \u003ca href\u003d\"https://www.hackerearth.com/practice/algorithms/string-algorithm/basics-of-string-manipulation/practice-problems/algorithm/xenny-and-partially-sorted-strings-7/\"\u003ehttps://www.hackerearth.com/practice/algorithms/string-algorithm/basics-of-string-manipulation/practice-problems/algorithm/xenny-and-partially-sorted-strings-7/\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003ejust store the first m characters and the index in a pair and then sort.\u003c/p\u003e\u003ch6\u003esolution — \u003ca href\u003d\"http://paste.ubuntu.com/24717116/\"\u003ehttp://paste.ubuntu.com/24717116/\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch2\u003e30 MAY 2017\u003c/h2\u003e\u003ch6\u003e1. \u003ca href\u003d\"https://www.hackerearth.com/practice/algorithms/string-algorithm/basics-of-string-manipulation/practice-problems/algorithm/find-the-substrings/\"\u003ehttps://www.hackerearth.com/practice/algorithms/string-algorithm/basics-of-string-manipulation/practice-problems/algorithm/find-the-substrings/\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eThe idea is to use two pointer and then keep updating the answer on the go.\u003c/p\u003e\u003ch6\u003esolution — \u003ca href\u003d\"http://paste.ubuntu.com/24728003/\"\u003ehttp://paste.ubuntu.com/24728003/\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch6\u003e2. \u003ca href\u003d\"https://www.hackerearth.com/problem/algorithm/benny-and-her-school-reports/\"\u003ehttps://www.hackerearth.com/problem/algorithm/benny-and-her-school-reports/\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eDirect Implementation\u003c/p\u003e\u003ch6\u003esolution — \u003ca href\u003d\"http://paste.ubuntu.com/24728021/\"\u003ehttp://paste.ubuntu.com/24728021/\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch6\u003e3. \u003ca href\u003d\"//codeforces.com/problemset/problem/558/C\"\u003ehttp://codeforces.com/problemset/problem/558/C\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHInt\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eThe idea is to do the bfs over all values\u003c/p\u003e\u003ch6\u003esolution — \u003ca href\u003d\"//codeforces.com/contest/558/submission/27440146\"\u003ehttp://codeforces.com/contest/558/submission/27440146\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch6\u003e4. \u003ca href\u003d\"//codeforces.com/problemset/problem/558/D\"\u003ehttp://codeforces.com/problemset/problem/558/D\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eThe idea was to convert every level to leaf level and then sort and combine the range accordingly. Then check over all possible feasible combination.\u003c/p\u003e\u003ch6\u003esolution — \u003ca href\u003d\"//codeforces.com/contest/558/submission/27450439\"\u003ehttp://codeforces.com/contest/558/submission/27450439\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch2\u003e31 MAY 2017\u003c/h2\u003e\u003ch6\u003e1. \u003ca href\u003d\"//codeforces.com/problemset/problem/558/E\"\u003ehttp://codeforces.com/problemset/problem/558/E\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eJust make 26 segment tree, one for each letter. And then use lazy update for sorting.\u003c/p\u003e\u003ch6\u003esolution — \u003ca href\u003d\"//codeforces.com/contest/558/submission/27458416\"\u003ehttp://codeforces.com/contest/558/submission/27458416\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch6\u003e2. \u003ca href\u003d\"//codeforces.com/problemset/problem/567/A\"\u003ehttp://codeforces.com/problemset/problem/567/A\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eDirect implementation\u003c/p\u003e\u003ch6\u003esolution — \u003ca href\u003d\"//codeforces.com/contest/567/submission/27471653\"\u003ehttp://codeforces.com/contest/567/submission/27471653\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch6\u003e3. \u003ca href\u003d\"//codeforces.com/problemset/problem/567/B\"\u003ehttp://codeforces.com/problemset/problem/567/B\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eDirect Implementation \u003c/p\u003e\u003ch6\u003esolution — \u003ca href\u003d\"//codeforces.com/contest/567/submission/27471986\"\u003ehttp://codeforces.com/contest/567/submission/27471986\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch6\u003e4. \u003ca href\u003d\"//codeforces.com/problemset/problem/567/C\"\u003ehttp://codeforces.com/problemset/problem/567/C\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eBasic dp problem\u003c/p\u003e\u003ch6\u003esolution — \u003ca href\u003d\"//codeforces.com/contest/567/submission/27472315\"\u003ehttp://codeforces.com/contest/567/submission/27472315\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch2\u003e1 JUNE 2017\u003c/h2\u003e\u003cp\u003eJust gave the contest on codeforces\u003c/p\u003e\u003ch2\u003e2 JUNE 2017\u003c/h2\u003e\u003ch6\u003e1. \u003ca href\u003d\"//codeforces.com/problemset/problem/577/C\"\u003ehttp://codeforces.com/problemset/problem/577/C\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eJust find all prime powers and that will be enough.\u003c/p\u003e\u003ch6\u003esolution — \u003ca href\u003d\"//codeforces.com/contest/577/submission/27526007\"\u003ehttp://codeforces.com/contest/577/submission/27526007\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch6\u003e2. \u003ca href\u003d\"//codeforces.com/problemset/problem/577/B\"\u003ehttp://codeforces.com/problemset/problem/577/B\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eBy pegion hole principle, Whenever n \u0026gt;\u003d m, and is yes. Or you can do an exhaustive search using set.\u003c/p\u003e\u003ch6\u003esolution — \u003ca href\u003d\"//codeforces.com/contest/577/submission/27525462\"\u003ehttp://codeforces.com/contest/577/submission/27525462\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch6\u003e3. \u003ca href\u003d\"//codeforces.com/problemset/problem/577/A\"\u003ehttp://codeforces.com/problemset/problem/577/A\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eJust for all i check whether j is in range\u003c/p\u003e\u003ch6\u003esolution — \u003ca href\u003d\"//codeforces.com/contest/577/submission/27524959\"\u003ehttp://codeforces.com/contest/577/submission/27524959\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch6\u003e4. \u003ca href\u003d\"//codeforces.com/problemset/problem/567/E\"\u003ehttp://codeforces.com/problemset/problem/567/E\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eCan be solved using bridge. Make a separate graph that contains only shortest path vertices, and make it undirected. now find all bridges. Since there can be multiple loops, instead of direct checking parent, check whether index matches or not.\u003c/p\u003e\u003ch6\u003esolution — \u003ca href\u003d\"//codeforces.com/contest/567/submission/27524686\"\u003ehttp://codeforces.com/contest/567/submission/27524686\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch2\u003e3 JUNE 2017\u003c/h2\u003e\u003cp\u003eDoing Codechef Long Challange\u003c/p\u003e\u003ch2\u003e4 JUNE 2017\u003c/h2\u003e\u003ch6\u003e1. \u003ca href\u003d\"https://www.hackerearth.com/practice/algorithms/string-algorithm/basics-of-string-manipulation/practice-problems/algorithm/missing-alphabets-1/\"\u003ehttps://www.hackerearth.com/practice/algorithms/string-algorithm/basics-of-string-manipulation/practice-problems/algorithm/missing-alphabets-1/\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eDirect Implementation\u003c/p\u003e\u003ch6\u003esolution — \u003ca href\u003d\"http://paste.ubuntu.com/24791044/\"\u003ehttp://paste.ubuntu.com/24791044/\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch6\u003e2. \u003ca href\u003d\"https://www.hackerearth.com/practice/algorithms/string-algorithm/basics-of-string-manipulation/practice-problems/algorithm/change-string/\"\u003ehttps://www.hackerearth.com/practice/algorithms/string-algorithm/basics-of-string-manipulation/practice-problems/algorithm/change-string/\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eDirect Implementation\u003c/p\u003e\u003ch6\u003esolution — \u003ca href\u003d\"http://paste.ubuntu.com/24791048/\"\u003ehttp://paste.ubuntu.com/24791048/\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch2\u003e5 JUNE 2017\u003c/h2\u003e\u003cp\u003eDid codechef long and participated in education codeforces round\u003c/p\u003e\u003ch2\u003e6 JUNE 2017\u003c/h2\u003e\u003ch6\u003e1. \u003ca href\u003d\"//codeforces.com/problemset/problem/570/A\"\u003ehttp://codeforces.com/problemset/problem/570/A\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eDirect Implementation\u003c/p\u003e\u003ch6\u003esolution — \u003ca href\u003d\"//codeforces.com/contest/570/submission/27613674\"\u003ehttp://codeforces.com/contest/570/submission/27613674\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch6\u003e2. \u003ca href\u003d\"//codeforces.com/problemset/problem/221/B\"\u003ehttp://codeforces.com/problemset/problem/221/B\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eDirect Implementation\u003c/p\u003e\u003ch6\u003esolution — \u003ca href\u003d\"//codeforces.com/contest/221/submission/27613838\"\u003ehttp://codeforces.com/contest/221/submission/27613838\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch6\u003e3. \u003ca href\u003d\"//codeforces.com/problemset/problem/121/A\"\u003ehttp://codeforces.com/problemset/problem/121/A\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eJust generate all numbers and then for every range, add the required number.\u003c/p\u003e\u003ch6\u003esolution — \u003ca href\u003d\"//codeforces.com/contest/121/submission/27614195\"\u003ehttp://codeforces.com/contest/121/submission/27614195\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch2\u003e7 JUNE 2017\u003c/h2\u003e\u003cp\u003eDid contest on codeforces\u003c/p\u003e\u003ch2\u003e8 JUNE 2017\u003c/h2\u003e\u003ch6\u003e1. \u003ca href\u003d\"//codeforces.com/problemset/problem/570/C\"\u003ehttp://codeforces.com/problemset/problem/570/C\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eCreate all possible range, then according to every query, update the ranges and ans accordingly.\u003c/p\u003e\u003ch6\u003esolution — \u003ca href\u003d\"//codeforces.com/contest/570/submission/27665459\"\u003ehttp://codeforces.com/contest/570/submission/27665459\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch6\u003e2. \u003ca href\u003d\"//codeforces.com/problemset/problem/456/D\"\u003ehttp://codeforces.com/problemset/problem/456/D\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eDirect implementation of trie. Make loose and win accordingly and then decide for the answer.\u003c/p\u003e\u003ch6\u003esolution — \u003ca href\u003d\"//codeforces.com/contest/456/submission/27677006\"\u003ehttp://codeforces.com/contest/456/submission/27677006\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch2\u003e9 JUNE 2017\u003c/h2\u003e\u003ch6\u003e1. \u003ca href\u003d\"//codeforces.com/problemset/problem/13/E\"\u003ehttp://codeforces.com/problemset/problem/13/E\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eStandard problem of square root decomposition. Just divide the array in block of size sqrt(n) and solve for each block. Then combine the ans for each query.\u003c/p\u003e\u003ch6\u003esolution — \u003ca href\u003d\"//codeforces.com/contest/13/submission/27678054\"\u003ehttp://codeforces.com/contest/13/submission/27678054\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch6\u003e2. \u003ca href\u003d\"//codeforces.com/problemset/problem/404/A\"\u003ehttp://codeforces.com/problemset/problem/404/A\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003edirect implementation\u003c/p\u003e\u003ch6\u003esolution — \u003ca href\u003d\"//codeforces.com/contest/404/submission/27686991\"\u003ehttp://codeforces.com/contest/404/submission/27686991\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003ch2\u003e10 JUNE 2017\u003c/h2\u003e\u003cp\u003ePractised some simple problems on CF.\u003c/p\u003e\u003ch2\u003e11 JUNE 2017\u003c/h2\u003e\u003cp\u003eSolved MKTHNUM on spoj.\u003c/p\u003e\u003ch6\u003e1. \u003ca href\u003d\"//codeforces.com/problemset/problem/579/C\"\u003ehttp://codeforces.com/problemset/problem/579/C\u003c/a\u003e\u003c/h6\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eBinary search over the max possible length, Then try to break that triangle in smaller part again using binary search\u003c/p\u003e\u003ch6\u003esolution — \u003ca href\u003d\"//codeforces.com/contest/579/submission/27710780\"\u003ehttp://codeforces.com/contest/579/submission/27710780\u003c/a\u003e\u003c/h6\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e","tags":[]}}