{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1511316553,"rating":8,"authorHandle":"Lance_HAOH","modificationTimeSeconds":1511318577,"id":55942,"title":"\u003cp\u003eSort a list of integers by prime factorization\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHi. I am trying to solve this \u003ca href\u003d\"https://dunjudge.me/analysis/problems/245/\"\u003eproblem\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eFor convenience, I have replicated the problem statement below:\u003c/p\u003e\u003cp\u003eGiven a list of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eN\u003c/i\u003e\u003c/span\u003e integers (non-distinct) where \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/b2/22/b22243c10afe562dd9a204dba143bcabf6463b3d.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e and each integer \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/7b/f6/7bf6cffa51e93f5e2cd63a06a5b9a37728f2d5db.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, sort the integers based on the lexicographical order of their prime factorization.\u003c/p\u003e\u003cp\u003eExample (the first number is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eN\u003c/i\u003e\u003c/span\u003e):\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e5\n2 3 4 5 6\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eExpected Output:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e2\n4\n6\n3\n5\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eExplanation:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e2 \u003d 2\n3 \u003d 3\n4 \u003d 2 * 2\n5 \u003d 5\n6 \u003d 2 * 3\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eTime limit is \u003cspan class\u003d\"tex-span\"\u003e2\u003ci\u003es\u003c/i\u003e\u003c/span\u003e and memory limit is \u003cspan class\u003d\"tex-span\"\u003e32\u003ci\u003eMB\u003c/i\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eMy attempt:\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eI used a fast factorization method to factor each integer into its prime factors and store them into a 2D matrix, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eM\u003c/i\u003e\u003c/span\u003e. \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eM\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e][\u003ci\u003ej\u003c/i\u003e]\u003c/span\u003e represents the \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003eth\u003c/i\u003e\u003c/sup\u003e\u003c/span\u003e prime factor of the \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003eth\u003c/i\u003e\u003c/sup\u003e\u003c/span\u003e integer in the list such that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eM\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e][\u003ci\u003ej\u003c/i\u003e] ≤ \u003ci\u003eM\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e][\u003ci\u003ej\u003c/i\u003e + 1]\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eNow, I use a custom sort method to sort the list. Let\u0027s say we want to compare integers at position \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eu\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e\u003c/span\u003e in the list.The sort function will compare \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eM\u003c/i\u003e[\u003ci\u003eu\u003c/i\u003e]\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eM\u003c/i\u003e[\u003ci\u003ev\u003c/i\u003e]\u003c/span\u003e using lexicographical comparison.\u003c/p\u003e\u003cp\u003eMy \u003ca href\u003d\"https://ideone.com/OjlO5i\"\u003ecode\u003c/a\u003e.\u003c/p\u003e \u003chr /\u003e\u003cp\u003eThis method is correct but it will get MLE (not TLE surprisingly). I tried asking this problem on stackoverflow but could not obtain a satisfactory answer. Could someone please advise me on a better way to solve this problem?\u003c/p\u003e\u003cp\u003ep.s. not sure if this info would be helpful — this problem is tagged with dfs in the source.\u003c/p\u003e\u003c/div\u003e","tags":["#sorting","#primes","#dfs"]}}