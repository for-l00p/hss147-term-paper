{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1506699323,"rating":32,"authorHandle":"Vendetta.","modificationTimeSeconds":1520952373,"id":54840,"title":"\u003cp\u003e[Gym] 2017 JUST Programming Contest 4.0 — editorial\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003ch3\u003eA. Subarrays Beauty\u003c/h3\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint 1\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eConsider each bit on its own since the AND operation is bit-wise.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint 2\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eFor each bit, notice that any sub-array that has a zero bit will add nothing to the answer.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint 3\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eFor each bit, A sub-array of only ones of length \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eX\u003c/i\u003e\u003c/span\u003e has \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/25/f5/25f575cf6d83ffa3f38f0a1239a502c831d47884.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e sub-array of only ones, and each of them will add \u003cspan class\u003d\"tex-span\"\u003e2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003eW\u003c/i\u003e\u003c/sup\u003e\u003c/span\u003e where \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eW\u003c/i\u003e\u003c/span\u003e is the Weight of the bit to the answer.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003cp\u003e\u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/justHusam\" title\u003d\"Кандидат в мастера justHusam\"\u003ejustHusam\u003c/a\u003e solution: \u003ca href\u003d\"https://ideone.com/PL7s1U\"\u003ehttps://ideone.com/PL7s1U\u003c/a\u003e \u003cbr /\u003e \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/Vendetta.\" title\u003d\"Кандидат в мастера Vendetta.\"\u003eVendetta.\u003c/a\u003e solution: \u003ca href\u003d\"https://ideone.com/23iukT\"\u003ehttps://ideone.com/23iukT\u003c/a\u003e \u003cbr /\u003e \u003cstrong\u003eComplexity:\u003c/strong\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eNlog\u003c/i\u003e(\u003ci\u003eMax\u003c/i\u003e(\u003ci\u003eA\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e)))\u003c/span\u003e.\u003c/p\u003e\u003ch3\u003eB. Array Reconstructing\u003c/h3\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint 1\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eYou can construct the array from only one known element.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003cp\u003e\u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/justHusam\" title\u003d\"Кандидат в мастера justHusam\"\u003ejustHusam\u003c/a\u003e solution: \u003ca href\u003d\"https://ideone.com/IDqwCe\"\u003ehttps://ideone.com/IDqwCe\u003c/a\u003e \u003cbr /\u003e \u003cstrong\u003eComplexity:\u003c/strong\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e)\u003c/span\u003e.\u003c/p\u003e\u003ch3\u003eC. Large Summation\u003c/h3\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint 1\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eAll numbers are less than \u003cspan class\u003d\"tex-span\"\u003e10\u003csup class\u003d\"upper-index\"\u003e9\u003c/sup\u003e + 7\u003c/span\u003e, so the summation of any 2 numbers is either less than \u003cspan class\u003d\"tex-span\"\u003e10\u003csup class\u003d\"upper-index\"\u003e9\u003c/sup\u003e + 7\u003c/span\u003e or less than \u003cspan class\u003d\"tex-span\"\u003e2 × (10\u003csup class\u003d\"upper-index\"\u003e9\u003c/sup\u003e + 7)\u003c/span\u003e.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint 2\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eSort the elements and for each element use binary search to handle each of the cases above to find the best answer.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003cp\u003e\u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/justHusam\" title\u003d\"Кандидат в мастера justHusam\"\u003ejustHusam\u003c/a\u003e solution: \u003ca href\u003d\"https://ideone.com/1mSW7q\"\u003ehttps://ideone.com/1mSW7q\u003c/a\u003e \u003cbr /\u003e \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/Vendetta.\" title\u003d\"Кандидат в мастера Vendetta.\"\u003eVendetta.\u003c/a\u003e solution: \u003ca href\u003d\"https://ideone.com/V2wqJT\"\u003ehttps://ideone.com/V2wqJT\u003c/a\u003e \u003cbr /\u003e \u003cstrong\u003eComplexity:\u003c/strong\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eNLog\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e))\u003c/span\u003e.\u003c/p\u003e\u003ch3\u003eD. Counting Test\u003c/h3\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint 1\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eTo make things easier, use the following concept: Let\u0027s make a function \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eF\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e)\u003c/span\u003e that finds the answer of range \u003cspan class\u003d\"tex-span\"\u003e[0, \u003ci\u003eN\u003c/i\u003e]\u003c/span\u003e, then the answer of range \u003cspan class\u003d\"tex-span\"\u003e[\u003ci\u003eL\u003c/i\u003e, \u003ci\u003eR\u003c/i\u003e]\u003c/span\u003e would be: \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eF\u003c/i\u003e(\u003ci\u003eR\u003c/i\u003e) - \u003ci\u003eF\u003c/i\u003e(\u003ci\u003eL\u003c/i\u003e - 1)\u003c/span\u003e.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint 2\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eMake a frequency array of the original string then find how many times the string was repeated from \u003cspan class\u003d\"tex-span\"\u003e0\u003c/span\u003e to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eN\u003c/i\u003e\u003c/span\u003e, the number of times is \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/e4/ba/e4bace130e35f030a5575e69b224aa7ed3fa0e95.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e where \u003cspan class\u003d\"tex-span\"\u003e|\u003ci\u003eS\u003c/i\u003e|\u003c/span\u003e is the length of the original string.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint 3\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eIf \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/36/b7/36b7961d75121cbc799566e18d11358cb0216029.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e is not zero then we have \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/36/b7/36b7961d75121cbc799566e18d11358cb0216029.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e extra characters that doesn\u0027t make a full string, we can make 26 frequency arrays for each letter in alphabet and do a prefix sum to get the number of times a specific letter was repeated in the first \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/36/b7/36b7961d75121cbc799566e18d11358cb0216029.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e letters of the original string. \u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003cp\u003e\u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/justHusam\" title\u003d\"Кандидат в мастера justHusam\"\u003ejustHusam\u003c/a\u003e solution: \u003ca href\u003d\"https://ideone.com/BbGc7w\"\u003ehttps://ideone.com/BbGc7w\u003c/a\u003e \u003cbr /\u003e \u003cstrong\u003eComplexity:\u003c/strong\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(26\u003ci\u003eN\u003c/i\u003e + \u003ci\u003eQ\u003c/i\u003e)\u003c/span\u003e.\u003c/p\u003e\u003ch3\u003eE. Game of Dice\u003c/h3\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint 1\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eMeet in the middle, divide the dice into 2 groups of equal sizes and brute force each part on it\u0027s own and store the \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/38/f4/38f45f9766e43bfce8d6f19fd113dce424fd7f76.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e in 2 vectors \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eV\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eV\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003c/span\u003e.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint 2\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eFor each element in \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eV\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/span\u003e, we must find how many elements in \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eV\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003c/span\u003e satisfies the equality: \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/41/83/4183d99277c196c92eb763cd96d7a533ab539c98.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint 3\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eLet\u0027s call the element from \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eV\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/span\u003e as \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003c/span\u003e and the element from \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eV\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003c/span\u003e as \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u003c/span\u003e and we want to find the value of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u003c/span\u003e: \u003cbr /\u003e \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/a8/04/a804097d02f44aa7a14fa6d0c1813f4ccdc12de9.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. \u003cbr /\u003e multiply both sides by \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/70/f9/70f952a62514c61d3e321a6a720ed0e560128b1d.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e: \u003cbr /\u003e \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/75/d1/75d11593b3d44d6f94af405deae9bf158a7cd433.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. \u003cbr /\u003e where \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/70/f9/70f952a62514c61d3e321a6a720ed0e560128b1d.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e is the inverse of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003c/span\u003e respective to the mod \u003cspan class\u003d\"tex-span\"\u003e10\u003csup class\u003d\"upper-index\"\u003e9\u003c/sup\u003e + 7\u003c/span\u003e. \u003cbr /\u003e Since all values of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eV\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003c/span\u003e are below \u003cspan class\u003d\"tex-span\"\u003e10\u003csup class\u003d\"upper-index\"\u003e9\u003c/sup\u003e + 7\u003c/span\u003e, then there\u0027s only one value for \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u003c/span\u003e in \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eV\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003c/span\u003e that satisfies the equality (because all values \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e + \u003ci\u003eK\u003c/i\u003e(10\u003csup class\u003d\"upper-index\"\u003e9\u003c/sup\u003e + 7)\u003c/span\u003e satisfies the equality for any natural number \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eK\u003c/i\u003e\u003c/span\u003e). \u003cbr /\u003e So we will calculate the value of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u003c/span\u003e and check how many times was it repeated in \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eV\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003c/span\u003e.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003cp\u003e\u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/justHusam\" title\u003d\"Кандидат в мастера justHusam\"\u003ejustHusam\u003c/a\u003e solution: \u003ca href\u003d\"https://ideone.com/pFtGym\"\u003ehttps://ideone.com/pFtGym\u003c/a\u003e \u003cbr /\u003e \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/Vendetta.\" title\u003d\"Кандидат в мастера Vendetta.\"\u003eVendetta.\u003c/a\u003e solution: \u003ca href\u003d\"https://ideone.com/udraup\"\u003ehttps://ideone.com/udraup\u003c/a\u003e \u003cbr /\u003e \u003cstrong\u003eComplexity:\u003c/strong\u003e \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/6f/ee/6feed6df28a0ef0a42d83ef71775ce4f934148ca.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. \u003cbr /\u003e \u003cstrong\u003eNote:\u003c/strong\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(6\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003eN\u003c/i\u003e\u003c/sup\u003e)\u003c/span\u003e gives TLE because \u003cspan class\u003d\"tex-span\"\u003e6\u003csup class\u003d\"upper-index\"\u003e14\u003c/sup\u003e\u003c/span\u003e is approximately \u003cspan class\u003d\"tex-span\"\u003e78 × 10\u003csup class\u003d\"upper-index\"\u003e9\u003c/sup\u003e\u003c/span\u003e.\u003c/p\u003e\u003ch3\u003eF. Strings and Queries\u003c/h3\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint 1\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eFind the number of palindrome sub-strings for each string, using an algorithm that runs worse than \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eL\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e)\u003c/span\u003e gives TLE where \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eL\u003c/i\u003e\u003c/span\u003e is the length of the string.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint 2\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eThe problem is now reduces to RMQ (Range Max Query), we can now use data structures like Sparse Table, Segment Tree ... but Sparse Table is preferred as it runs faster than Segment Tree.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint 3\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eWe still have a problem that the queries are given as strings not indices, to solve this we can map the strings to their indices, but using a map of strings will give TLE as the factor for comparing strings isn\u0027t small, to solve this was can use Hashing or Trie to get the index of the string fast. \u003cbr /\u003e Hashing will take \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eL\u003c/i\u003e + \u003ci\u003elog\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e))\u003c/span\u003e per query to hash and look for the hash value in a map of hash values. \u003cbr /\u003e Trie will take only \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eL\u003c/i\u003e)\u003c/span\u003e per query to track the string in the Trie, but Trie needs pre-construction of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eLN\u003c/i\u003e)\u003c/span\u003e.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003cp\u003eSparse Table with Hashing solution: \u003ca href\u003d\"https://ideone.com/iVZNHd\"\u003ehttps://ideone.com/iVZNHd\u003c/a\u003e (Running Time: 1621 ms) \u003cbr /\u003e Segment Tree with Hashing solution: \u003ca href\u003d\"https://ideone.com/UPsA6o\"\u003ehttps://ideone.com/UPsA6o\u003c/a\u003e (Running Time: 2042 ms) \u003cbr /\u003e \u003cstrong\u003eComplexity:\u003c/strong\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eNL\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e + \u003ci\u003eNLog\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e) + \u003ci\u003eQ\u003c/i\u003e(\u003ci\u003eL\u003c/i\u003e + \u003ci\u003eLog\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e)))\u003c/span\u003e. \u003cbr /\u003e Sparse Table with Trie solution: \u003ca href\u003d\"https://ideone.com/pn4haB\"\u003ehttps://ideone.com/pn4haB\u003c/a\u003e (Running Time: 1716 ms) \u003cbr /\u003e \u003cstrong\u003eComplexity:\u003c/strong\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eNL\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e + \u003ci\u003eNLog\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e) + \u003ci\u003eNL\u003c/i\u003e + \u003ci\u003eQL\u003c/i\u003e)\u003c/span\u003e. \u003cbr /\u003e \u003cstrong\u003eNote:\u003c/strong\u003e You don\u0027t need to worry about collision in hashing since you don\u0027t need to use \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/4c/4b/4c4b6db881a112d8bec778b0cf02fce95bce6bc1.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e at all, the max hash value will be \u003cspan class\u003d\"tex-span\"\u003e4\u003csup class\u003d\"upper-index\"\u003e30\u003c/sup\u003e\u003c/span\u003e which is approximately \u003cspan class\u003d\"tex-span\"\u003e10\u003csup class\u003d\"upper-index\"\u003e18\u003c/sup\u003e\u003c/span\u003e which fits into \u003ccode\u003elong long\u003c/code\u003e.\u003c/p\u003e\u003ch3\u003eG. Magical Indices\u003c/h3\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint 1\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eConstruct 2 arrays, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eMX\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eMN\u003c/i\u003e\u003c/span\u003e where \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eMX\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e is the maximum value in the range \u003cspan class\u003d\"tex-span\"\u003e[1, \u003ci\u003ei\u003c/i\u003e]\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eMN\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e is the minimum value in range \u003cspan class\u003d\"tex-span\"\u003e[\u003ci\u003ei\u003c/i\u003e, \u003ci\u003eN\u003c/i\u003e]\u003c/span\u003e.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint 2\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eFor each element \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eX\u003c/i\u003e\u003c/span\u003e, if the max value before it is less than \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eX\u003c/i\u003e\u003c/span\u003e and the min value after it is more than \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eX\u003c/i\u003e\u003c/span\u003e then add one to the answer.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003cp\u003e\u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/justHusam\" title\u003d\"Кандидат в мастера justHusam\"\u003ejustHusam\u003c/a\u003e solution: \u003ca href\u003d\"https://ideone.com/9SzqJb\"\u003ehttps://ideone.com/9SzqJb\u003c/a\u003e \u003cbr /\u003e \u003cstrong\u003eComplexity:\u003c/strong\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e)\u003c/span\u003e.\u003c/p\u003e\u003ch3\u003eH. Corrupted Images\u003c/h3\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint 1\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eCount the number of ones on the border, let\u0027s call it \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eY\u003c/i\u003e\u003c/span\u003e.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint 2\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eThere are total of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eX\u003c/i\u003e \u003d \u003ci\u003eN\u003c/i\u003e + \u003ci\u003eN\u003c/i\u003e + \u003ci\u003eM\u003c/i\u003e + \u003ci\u003eM\u003c/i\u003e - 4\u003c/span\u003e border cells, the answer is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eX\u003c/i\u003e - \u003ci\u003eY\u003c/i\u003e\u003c/span\u003e.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint 3\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eThere is no solution when the total number of ones in the whole image is less than \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eX\u003c/i\u003e\u003c/span\u003e, then we can\u0027t cover the whole border with ones.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003cp\u003e\u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/justHusam\" title\u003d\"Кандидат в мастера justHusam\"\u003ejustHusam\u003c/a\u003e solution: \u003ca href\u003d\"https://ideone.com/wS5TPl\"\u003ehttps://ideone.com/wS5TPl\u003c/a\u003e \u003cbr /\u003e \u003cstrong\u003eComplexity:\u003c/strong\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eNM\u003c/i\u003e)\u003c/span\u003e.\u003c/p\u003e\u003ch3\u003eI. The Crazy Jumper\u003c/h3\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eSolution 1\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eConstruct a graph, add edge from cell \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e to cell \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e + 1\u003c/span\u003e and from cell \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e to cell \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e where cell \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e has same color of cell \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e and there are no cells between \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e that also have the same color.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eSolution 2\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eUsing dynamic programming \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edp\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e \u003d 1 + \u003ci\u003emin\u003c/i\u003e(\u003ci\u003edp\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e + 1\u003c/sub\u003e, \u003ci\u003edp\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003enext\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/sub\u003e)\u003c/span\u003e, try to jump to the next cell or to the first call that has the same color.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003cp\u003e\u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/justHusam\" title\u003d\"Кандидат в мастера justHusam\"\u003ejustHusam\u003c/a\u003e solutions: \u003cbr /\u003e BFS: \u003ca href\u003d\"https://ideone.com/P2yACH\"\u003ehttps://ideone.com/P2yACH\u003c/a\u003e \u003cbr /\u003e DP top-down: \u003ca href\u003d\"https://ideone.com/UnBst5\"\u003ehttps://ideone.com/UnBst5\u003c/a\u003e \u003cbr /\u003e DP buttom-up: \u003ca href\u003d\"https://ideone.com/ysugUh\"\u003ehttps://ideone.com/ysugUh\u003c/a\u003e \u003cbr /\u003e \u003cstrong\u003eComplexity:\u003c/strong\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e)\u003c/span\u003e.\u003c/p\u003e\u003ch3\u003eJ. The Hell Boy\u003c/h3\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eSolution 1\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eTo be able to find this solution, you need to work on a paper, let\u0027s suppose we want to find the answer for 3 numbers, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003c/span\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eC\u003c/i\u003e\u003c/span\u003e. \u003cbr /\u003e The terms of those 3 will be: \u003cbr /\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e + \u003ci\u003eB\u003c/i\u003e + \u003ci\u003eC\u003c/i\u003e + \u003ci\u003eAB\u003c/i\u003e + \u003ci\u003eAC\u003c/i\u003e + \u003ci\u003eBC\u003c/i\u003e + \u003ci\u003eABC\u003c/i\u003e\u003c/span\u003e \u003cbr /\u003e Take \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eC\u003c/i\u003e\u003c/span\u003e as a common factor from the terms that has \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eC\u003c/i\u003e\u003c/span\u003e: \u003cbr /\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e + \u003ci\u003eB\u003c/i\u003e + \u003ci\u003eAB\u003c/i\u003e + \u003ci\u003eC\u003c/i\u003e(1 + \u003ci\u003eA\u003c/i\u003e + \u003ci\u003eB\u003c/i\u003e + \u003ci\u003eAB\u003c/i\u003e)\u003c/span\u003e \u003cbr /\u003e Notice that if \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eX\u003c/i\u003e \u003d \u003ci\u003eA\u003c/i\u003e + \u003ci\u003eB\u003c/i\u003e + \u003ci\u003eAB\u003c/i\u003e\u003c/span\u003e then: \u003cbr /\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eX\u003c/i\u003e + \u003ci\u003eC\u003c/i\u003e(1 + \u003ci\u003eX\u003c/i\u003e)\u003c/span\u003e \u003cbr /\u003e Now take B as a common factor as well: \u003cbr /\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e + \u003ci\u003eB\u003c/i\u003e(1 + \u003ci\u003eA\u003c/i\u003e) + \u003ci\u003eC\u003c/i\u003e(1 + \u003ci\u003eA\u003c/i\u003e + \u003ci\u003eB\u003c/i\u003e(1 + \u003ci\u003eA\u003c/i\u003e))\u003c/span\u003e \u003cbr /\u003e Suppose the answer for the problem is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eX\u003c/i\u003e\u003c/span\u003e, we can notice that if we add a new number \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eY\u003c/i\u003e\u003c/span\u003e, the answer will be \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eX\u003c/i\u003e + \u003ci\u003eY\u003c/i\u003e(1 + \u003ci\u003eX\u003c/i\u003e)\u003c/span\u003e.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eSolution 2\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eUsing dynamic programming, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edp\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e \u003d \u003ci\u003edp\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e + 1\u003c/sub\u003e + \u003ci\u003eA\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e × \u003ci\u003edp\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e + 1\u003c/sub\u003e\u003c/span\u003e, the DP tries to either take the element or not, we will have to subtract 1 from the answer as the DP will consider the empty sub-set as valid sub-set which will add one to the wanted answer.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003cp\u003e\u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/Vendetta.\" title\u003d\"Кандидат в мастера Vendetta.\"\u003eVendetta.\u003c/a\u003e solutions: \u003cbr /\u003e Math: \u003ca href\u003d\"https://ideone.com/rYmHOD\"\u003ehttps://ideone.com/rYmHOD\u003c/a\u003e \u003cbr /\u003e DP: \u003ca href\u003d\"https://ideone.com/IDWlkQ\"\u003ehttps://ideone.com/IDWlkQ\u003c/a\u003e \u003cbr /\u003e \u003cstrong\u003eComplexity:\u003c/strong\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e)\u003c/span\u003e.\u003c/p\u003e\u003ch3\u003eK. Palindromes Building\u003c/h3\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint 1\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eIf there are more than one letter with odd frequency then we can\u0027t make any palindromes.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint 2\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eSince the limits are too small, we can brute force and build all the palindromes, since the first half of the palindrome is the same as the second half but reversed, we can only generate all the palindromes by generating the first half only, make a string containing half of the frequency for each letter in the original string and use \u003ccode\u003enext_permutation\u003c/code\u003e to check how many different permutations you can get.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eHint 3\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003eThere\u0027s also another faster solution if the constraints were bigger, to know how many different ways we form a string using half of the letters to make the first half of the palindrome, the answer will be: \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/dc/9e/dc9e2b132ddd72a80bf66976faf82f510112bebc.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, to eliminate the repeated permutations we divide by the factorial of half of the frequencies for each letter, basic counting math. \u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003cp\u003e\u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/justHusam\" title\u003d\"Кандидат в мастера justHusam\"\u003ejustHusam\u003c/a\u003e \u003ccode\u003enext_permutation\u003c/code\u003e solution: \u003ca href\u003d\"https://ideone.com/zaXvKc\"\u003ehttps://ideone.com/zaXvKc\u003c/a\u003e \u003cbr /\u003e \u003cstrong\u003eComplexity:\u003c/strong\u003e \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/8f/03/8f03d80a2ded36b990d8c38daa001637b0e0f0a4.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. \u003cbr /\u003e \u003cstrong\u003eNote:\u003c/strong\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e!)\u003c/span\u003e gives TLE because \u003cspan class\u003d\"tex-span\"\u003e20!\u003c/span\u003e is approximately \u003cspan class\u003d\"tex-span\"\u003e2.4 × 10\u003csup class\u003d\"upper-index\"\u003e18\u003c/sup\u003e\u003c/span\u003e. \u003cbr /\u003e \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/Vendetta.\" title\u003d\"Кандидат в мастера Vendetta.\"\u003eVendetta.\u003c/a\u003e math solution: \u003ca href\u003d\"https://ideone.com/0BNI2r\"\u003ehttps://ideone.com/0BNI2r\u003c/a\u003e \u003cbr /\u003e \u003cstrong\u003eComplexity:\u003c/strong\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e)\u003c/span\u003e.\u003c/p\u003e\u003c/div\u003e","tags":[]}}