{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":false,"creationTimeSeconds":1404761522,"rating":52,"authorHandle":"natalia","modificationTimeSeconds":1405013373,"id":12971,"title":"\u003cp\u003eПрограмма абитура по информатике\u003c/p\u003e","locale":"ru","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eКак-то решила полюбопытствовать, чему учат в школе в Германии. Думаю, вам тоже будет интересно.\u003c/p\u003e\u003cp\u003eАбитур (Abitur) — это экзамен, который сдают немецкие школьники при окончании гимназии для поступления в университет. Вкратце о системе образования в Германии. После окончания 4-летней начальной школы дети в зависимости от их способностей и желания родителей распределяются по трем типам школ: 9-летней общеобразовательной школой (Hauptschule), 10-летней средней школой (Realschule) и 12-летней гимназией (Gymnasium). Сроки обучения указаны в сумме с начальной школой. Поступать в университет можно только после гимназии. В последние два года обучения в гимназии школьники обладают достаточно большой свободой в выборе предметов, которые будут учить и сдавать. Предметы можно изучать на базовом или продвинутом уровне. Поэтому приведенная ниже программа абитура относится только к наиболее способным школьникам (оказавшимся в гимназии, а не в школе другого типа) и при этом планирующим поступать на специальность, связанную с IT. \u003c/p\u003e\u003cp\u003eТематически обучение в последние два года гимназии уже выходит за рамки нашей школьной программы и скорее соответствует первым курсам вуза. Например, абитур по математике состоит из трех больших блоков: дифференциальное и интегральное исчисление, теория вероятностей и аналитическая геометрия. Насчет информатики судите сами.\u003c/p\u003e\u003cp\u003eАбитур может проходить в разных гимназиях и в разных землях (Bundesländer) Германии по-разному, хотя многие земли проводят централизованный абитур, особенно по основным предметам. Так что скорее всего программа не является единственной существующей.\u003c/p\u003e\u003ch4\u003e\u003cb\u003e Программа абитура \u003c/b\u003e\u003c/h4\u003e\u003cp\u003e\u003cb\u003eI. Объектно-ориентированное программирование\u003c/b\u003e\u003c/p\u003e\u003cp\u003e\u003cb\u003eI1. Концепция объектно-ориентированного программирования\u003c/b\u003e\u003c/p\u003e \u003cul\u003e \u003cli\u003e классы, объекты, атрибуты, методы, инкапсуляция \u003c/li\u003e\u003cli\u003e диаграммы классов (проектирование, имплементация) \u003c/li\u003e\u003cli\u003e отношения между классами: ассоциация, наследование \u003c/li\u003e\u003cli\u003e абстрактные классы, полиморфизм \u003c/li\u003e\u003c/ul\u003e\u003cp\u003e\u003cb\u003eI2. Структуры данных\u003c/b\u003e \u003c/p\u003e \u003cul\u003e  \u003cli\u003e Линейные структуры данных \u003cul\u003e \u003cli\u003e Очередь и стек \u003cul\u003e \u003cli\u003e применение стандартных операций \u003c/li\u003e\u003cli\u003e реализация стандартных операций \u003c/li\u003e\u003c/ul\u003e \u003c/li\u003e\u003cli\u003e Линейные списки \u003cul\u003e \u003cli\u003e применение стандартных операций \u003c/li\u003e\u003c/ul\u003e \u003c/li\u003e\u003cli\u003e Алгоритмы поиска и сортировки \u003cul\u003e \u003cli\u003e рекурсия \u003c/li\u003e\u003cli\u003e поиск \u003c/li\u003e\u003cli\u003e сортировка вставками \u003c/li\u003e\u003cli\u003e \u003cfont color\u003d\"green\"\u003eна продвинутом уровне: QuickSort \u003c/font\u003e \u003c/li\u003e\u003c/ul\u003e \u003c/li\u003e\u003c/ul\u003e \u003c/li\u003e\u003cli\u003e Деревья \u003cul\u003e \u003cli\u003e Бинарное дерево \u003cul\u003e \u003cli\u003e применение стандартных операций \u003c/li\u003e\u003cli\u003e алгоритм обхода \u003c/li\u003e\u003c/ul\u003e \u003c/li\u003e\u003cli\u003e Бинарное дерево поиска \u003cul\u003e \u003cli\u003e применение стандартных операций \u003c/li\u003e\u003cli\u003e алгоритм обхода \u003c/li\u003e\u003cli\u003e \u003cfont color\u003d\"green\"\u003eна продвинутом уровне: реализация методов insert и search \u003c/font\u003e \u003c/li\u003e\u003c/ul\u003e \u003c/li\u003e\u003c/ul\u003e  \u003c/li\u003e\u003cli\u003e \u003cfont color\u003d\"green\"\u003e Только на продвинутом уровне: графы \u003cul\u003e \u003cli\u003e матрица смежности, списки смежности \u003c/li\u003e\u003cli\u003e применение стандартных операций \u003c/li\u003e\u003cli\u003e обход графа в ширину и в глубину \u003c/li\u003e\u003cli\u003e поиск кратчайшего пути между вершинами: перебор, алгоритм Дейкстры \u003c/li\u003e\u003c/ul\u003e \u003c/font\u003e \u003c/li\u003e\u003c/ul\u003e\u003cp\u003e\u003cb\u003e I3. Проектирование сетевых приложений \u003c/b\u003e \u003c/p\u003e\u003cul\u003e \u003cli\u003e сетевые протоколы, TCP/IP \u003c/li\u003e\u003cli\u003e клиентские приложения \u003c/li\u003e\u003cli\u003e клиент-серверные приложения \u003c/li\u003e\u003cli\u003e криптография \u003cul\u003e \u003cli\u003e симметричное шифрование (Цезарь, Виженер) \u003c/li\u003e\u003cli\u003e асимметричное шифрование (RSA) \u003c/li\u003e\u003cli\u003e обмен ключами (Диффи-Хеллман) \u003c/li\u003e\u003c/ul\u003e \u003c/li\u003e\u003c/ul\u003e\u003cp\u003e\u003cb\u003e II. Реляционные базы данных \u003c/b\u003e \u003c/p\u003e\u003cul\u003e \u003cli\u003e моделирование жизненных задач при помощи модели сущность-связь \u003c/li\u003e\u003cli\u003e схемы баз данных \u003c/li\u003e\u003cli\u003e нормализация: приведение баз данных к первой и третьей нормальным формам \u003c/li\u003e\u003cli\u003e реляционная алгебра (выбор, проекция, объединение, разность, декартово произведение, переименование) \u003c/li\u003e\u003cli\u003e SQL-запросы к одной или нескольким таблицам \u003c/li\u003e\u003cli\u003e аспекты защиты данных \u003c/li\u003e\u003c/ul\u003e\u003cp\u003e\u003cb\u003eIII. Конечные автоматы и формальные языки \u003c/b\u003e\u003c/p\u003e \u003cul\u003e \u003cli\u003e моделирование жизненных задач при помощи конечных детерминированных автоматов \u003c/li\u003e\u003cli\u003e представление конечных детерминированных автоматов графами и таблицами \u003c/li\u003e\u003cli\u003e формальные языки: регулярные языки и их грамматики \u003c/li\u003e\u003cli\u003e \u003cfont color\u003d\"green\"\u003e на продвинутом уровне: разработка парсера для одного простого формального языка \u003c/font\u003e \u003c/li\u003e\u003c/ul\u003e\u003cp\u003eЗаранее прошу меня простить за качество перевода. Мое знание немецкого языка, да и (чего там греха таить) некоторых пунктов программы далеко от совершенства. Но вроде бы удалось сохранить смысл. Буду рада исправлениям и уточнениям, вот \u003ca href\u003d\"https://www.standardsicherung.schulministerium.nrw.de/abitur-gost/getfile.php?file\u003d3119\"\u003eоригинал\u003c/a\u003e. Как я поняла из пояснений оттуда, разделы I1 и I2 обязательны, из остальных трех пунктов I3, II и III в школе должны пройти хотя бы два. Наиболее распространенные языки программирования — Delphi и Java.\u003c/p\u003e\u003cp\u003eИ на закуску задача с экзамена. Задача взята вот \u003ca href\u003d\"http://www.erasmus-reinhold-gymnasium.de/inf/aufgaben.html\"\u003eотсюда\u003c/a\u003e. Это немного другой вариант абитура, из другой земли. \u003ca href\u003d\"http://www.erasmus-reinhold-gymnasium.de/inf/abi/inf_lf_2010.pdf\"\u003eПоследняя задача\u003c/a\u003e, продвинутый уровень, одна из сложных.\u003c/p\u003e \u003cul\u003e   \u003cli\u003e\u003cp\u003eВыбирается число \u003cspan class\u003d\"tex-span\"\u003e2 ≤ \u003ci\u003ez\u003c/i\u003e ≤ 6\u003c/span\u003e. Берется некоторая перестановка чисел от 1 до z. Это ключ.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eПерестановка записывается в верхнюю строчку таблицы, слева направо.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eИмеется некоторый текст (строчка из латинских букв). Он записывается слева направо под перестановкой. Когда строка таблицы заканчивается — переходим на следующую.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eЕсли последняя строчка заполнена не до конца — добавляются символы #.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eПосле этого цифры перестановки переставляются в порядке возрастания вместе с соответствующими столбцами.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eВыписывая содержимое таблицы в естественном порядке, получаем зашифрованный текст.\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e\u003cp\u003eДан текст aidsttssegrneeghm#i# и ключ 3 1 4 2. \u003c/p\u003e\u003cp\u003eОпишите алгоритм расшифровки текста. \u003c/p\u003e\u003cp\u003eПриведите расшифрованный текст. \u003c/p\u003e\u003cp\u003eПриведите алгоритм перебора всех перестановок из n элементов для заданного числа \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e ≥ 2\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eНапишите программу, которая делает следующее:\u003c/p\u003e \u003cul\u003e   \u003cli\u003e\u003cp\u003eЧитает текст.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eВыбирает число z, \u003cspan class\u003d\"tex-span\"\u003e2 ≤ \u003ci\u003ez\u003c/i\u003e ≤ 6\u003c/span\u003e, при помощи генератора случайных чисел.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eПеребирает все перестановки чисел от 1 до z.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eВыбирает одну перестановку при помощи генератора случайных чисел.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eШифрует текст.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eВыводит зашифрованный текст.\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e\u003cp\u003eИспользуйте в программе ваш алгоритм для перебора всех перестановок чисел от 1 до n.\u003c/p\u003e\u003cp\u003eНапишите программу, которая делает следующее:\u003c/p\u003e \u003cul\u003e   \u003cli\u003e\u003cp\u003eЧитает зашифрованный текст и соответствующую перестановку.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eДешифрует его.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eВыводит расшифрованный текст.\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e\u003cp\u003eПротестируйте программы друг с другом. Опишите тестирование ваших программ.\u003c/p\u003e\u003cp\u003eОпишите методы разработки, которые вы использовали.\u003c/p\u003e\u003cp\u003eМне в этой задаче весьма нетривиальным кажется перебор всех перестановок. До него не додумаешься, если не проходили хотя бы что-то аналогичное. Хотя задача состоит из нескольких пунктов и легко набрать частичные баллы.\u003c/p\u003e\u003c/div\u003e","tags":["германия","абитур"]}}