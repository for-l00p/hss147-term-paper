{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1425392684,"rating":-6,"authorHandle":"jaswanthi","modificationTimeSeconds":1426574758,"id":16746,"title":"\u003cp\u003eRecursion without using the static and global variables\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eI came up a solution for the following problem.\u003c/p\u003e\u003cp\u003eBut, I want to do it in true recursive way. Can you help with coming up with Pair\u0026lt;int,int\u0026gt; or Object.\u003c/p\u003e\u003cp\u003e\u003cem\u003e\u003cstrong\u003eProblem:\u003c/strong\u003e\u003c/em\u003e\u003c/p\u003e\u003cp\u003eGiven a binary tree, find the maximum path sum. \u003cstrong\u003eIt can contain -ve values\u003c/strong\u003e \u003c/p\u003e\u003cp\u003eThe path may start and end at any node in the tree. For example: Given the below binary tree,\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e\u003cbr /\u003e       1\n      / \\\n     2   3\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eReturn 6.\u003c/p\u003e\u003cp\u003eGiven the below binary tree,\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e       -2\n         \\\n         -1\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eReturn -1.\u003c/p\u003e\u003cp\u003e\u003cem\u003e\u003cstrong\u003eSolution with Global variable way:\u003c/strong\u003e\u003c/em\u003e\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eint max \u003d Integer.MIN_VALUE\npublic int calculateSum(TreeNode root) {\n\tif (root \u003d\u003d null)\n\t\treturn 0;\n\n\tint left \u003d calculateSum(root.left, max);\n\tint right \u003d calculateSum(root.right, max);\n\n\tint current \u003d Math.max(root.val, Math.max(root.val + left, root.val + right));\n\n\tmax \u003d Math.max(max, Math.max(current, left + root.val + right));\n\n\treturn current;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":["recursion","global","pointer"]}}