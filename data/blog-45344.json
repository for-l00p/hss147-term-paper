{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":true,"creationTimeSeconds":1465533381,"rating":0,"authorHandle":"Algiz","modificationTimeSeconds":1465533381,"id":45344,"title":"\u003cp\u003eSolution\u003c/p\u003e","locale":"ru","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cpre\u003e\u003ccode\u003eimport java.io.BufferedReader;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\n\npublic class Solution {\n    final static int MOD \u003d 2017;\n\n    public static void main(String[] args) {\n        new Solution().run();\n    }\n\n    static int[][] binomTable;\n\n    static {\n        binomTable \u003d new int[MOD][MOD];\n        for (int i \u003d 0; i \u0026lt; MOD; ++ i) {\n            binomTable[i][0] \u003d 1;\n            for (int j \u003d 1; j \u0026lt;\u003d i; ++ j) {\n                binomTable[i][j] \u003d (binomTable[i - 1][j - 1] + binomTable[i - 1][j]) % MOD;\n            }\n        }\n    }\n\n    int binom(int n, int k) {\n        if (n \u003d\u003d 0 \u0026amp;\u0026amp; k \u003d\u003d 0) {\n            return 1;\n        }\n        return (int)((long)binom(n / MOD, k / MOD) * binomTable[n % MOD][k % MOD] % MOD);\n    }\n\n\n    public void run() {\n        InputReader reader \u003d new InputReader(System.in);\n        PrintWriter writer \u003d new PrintWriter(System.out);\n        try {\n            int n   \u003d reader.nextInt();\n            int[] a \u003d new int[n + 1];\n            for (int i \u003d 0; i \u0026lt; n; ++ i) {\n                a[i] \u003d reader.nextInt();\n            }\n            a[n] \u003d a[n - 1];\n            for (int i \u003d n - 1; i \u0026gt;\u003d 0; -- i) {\n                a[i] \u003d Math.min(a[i], a[i + 1]);\n            }\n            int[] ways \u003d new int[n + 1];\n            ways[0] \u003d 1;\n            for (int i \u003d 1; i \u0026lt;\u003d n; ++ i) {\n                ways[i] \u003d binom(i + a[i] + 1, i);\n                for (int j \u003d 0; j \u0026lt; i; ++ j) {\n                    if (a[j] \u0026lt;\u003d a[i]) {\n                        ways[i] -\u003d (int)((long)ways[j] * binom(i - j + a[i] - a[j], i - j) % MOD);\n                        if (ways[i] \u0026lt; 0) {\n                            ways[i] +\u003d MOD;\n                        }\n                    }\n                }\n            }\n            writer.println(ways[n]);\n        } catch (IOException e) {\n        } finally {\n            writer.close();\n        }\n    }\n\n    class InputReader {\n        InputReader(InputStream in) {\n            this.reader    \u003d new BufferedReader(new InputStreamReader(in));\n            this.tokenizer \u003d new StringTokenizer(\u0026quot;\u0026quot;);\n        }\n\n        public String nextToken() throws IOException {\n            while (!tokenizer.hasMoreTokens()) {\n                tokenizer \u003d new StringTokenizer(reader.readLine());\n            }\n            return tokenizer.nextToken();\n        }\n\n        public int nextInt() throws IOException {\n            return Integer.parseInt(nextToken());\n        }\n\n        private BufferedReader  reader;\n        private StringTokenizer tokenizer;\n    }\n\n    private void debug(Object...o) {\n        System.err.println(Arrays.deepToString(o));\n    }\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":[]}}