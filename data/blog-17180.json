{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1427598059,"rating":8,"authorHandle":"k790alex","modificationTimeSeconds":1427598059,"id":17180,"title":"\u003cp\u003e[TJU â€” Stupid Problem] is there an alternative solution to suffix tree?\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHello, I\u0027m trying to solve this problem (\u003ca href\u003d\"http://acm.tju.edu.cn/toj/showp4073.html\"\u003elink\u003c/a\u003e).\u003c/p\u003e\u003cp\u003eA brief description:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eGiven two strings (s, t) and Q queries, each query contains an integer K, you should count how many substrings of s can be equal to t with changing exactly K characters of s.\n\nconstrains:\n|s| \u0026lt;\u003d 10^6\n|s| \u0026gt; |t|\nQ \u0026lt;\u003d 10^5\ncharacters can be \u0027x\u0027 or \u0027y\u0027 only\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eI got a solution using suffix tree which runs in linear time but my problem is that it uses too much memory.\u003c/p\u003e\u003cp\u003eI tried to reduce it to suffix array but I couldn\u0027t.\u003c/p\u003e\u003cp\u003eAs the constrains are high I guess I need a linear time solution, can you see how to do it using less memory?\u003c/p\u003e\u003cp\u003eThanks.\u003c/p\u003e\u003c/div\u003e","tags":["suffix tree"]}}