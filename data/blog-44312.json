{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1460412931,"rating":3,"authorHandle":"maximaxi","modificationTimeSeconds":1460413026,"id":44312,"title":"\u003cp\u003eSeasoned problemsetters, how do you come up with problems?\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eDo you have any tips, or would you like to share your process? For example, do you start with a problem you have solved and add to it? Or do original ideas just pop into your head when you concentrate, and you put those together and you have a problem? I\u0027m helping my team prepare a contest on another platform, probably contributing problems of Div2C or Div2D level (it\u0027s the extent my abilities allow).\u003c/p\u003e\u003cp\u003eAlso, do you prefer problems that are based on concepts, or more on thinking and reasoning? Personally I prefer a mix (but mostly thinking problems). These thinking problems are also the hardest to come up with, it seems. Am I right in believing that they can only come from a flash of insight (or discussion with peers)?\u003c/p\u003e\u003cp\u003eFinally, do you have any topics, concepts, theories etc. that you think are underrepresented or would be interesting in the context of a programming problem?\u003c/p\u003e\u003cp\u003eIn terms of general problemsetting advice, what I know is brevity and clarity are well worth the effort.\u003c/p\u003e\u003cp\u003eThanks for spending your time on this open-ended question.\u003c/p\u003e\u003c/div\u003e","tags":["problemsetting","authors"]}}