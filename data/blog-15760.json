{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1421085804,"rating":31,"authorHandle":"Betlista","modificationTimeSeconds":1421388950,"id":15760,"title":"\u003cp\u003eBetlista\u0027s TopCoder SRM 645 editorial\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eI strongly believe, that editorial delivery for SRM is (should be) part of the contest.\u003c/p\u003e\u003cp\u003eThe fact, that TopCoder editorials are delayed (currently unavailable ) is really bad I think. So there are two possibilities — to do not care or do something with that. I selected the later. Here it is:\u003c/p\u003e\u003ch3\u003eDIV2 — easy (250)\u003c/h3\u003e\u003cp\u003e\u003ca href\u003d\"http://community.topcoder.com/stat?c\u003dproblem_statement\u0026amp;pm\u003d13604\u0026amp;rd\u003d16277\"\u003e(link)\u003c/a\u003e\u003c/p\u003e\u003cp\u003eThere nothing really difficult about the logic. One has to modify current array according the rules described in problem statement and check whether new and old arrays are the same. If they are, we are done. Possible mistake is, that one is updating same array (I\u0027ll try find counter example, but no-one in my room did that, so maybe it\u0027s clear from provided test cases).\u003c/p\u003e\u003ch3\u003eDIV2 — medium (500)\u003c/h3\u003e\u003cp\u003e\u003ca href\u003d\"http://community.topcoder.com/stat?c\u003dproblem_statement\u0026amp;pm\u003d13602\u0026amp;rd\u003d16277\"\u003e(link)\u003c/a\u003e\u003c/p\u003e\u003cp\u003eFirst idea I had was binary search. Problem is, that cost function is quadratic (so I didn\u0027t solve the problem during the contest) — it\u0027s easy to see, that if we want to move all cars far to the left/right the value of the function is increasing. Very nice implementation of binary search had user \u003ca href\u003d\"http://community.topcoder.com/tc?module\u003dMemberProfile\u0026amp;cr\u003d22915016\"\u003etorres89\u003c/a\u003e in my room (46). The idea is such, that instead of one middle point, we need two, let say for position i and i+1, according the value in those point we know in which part of the quadratic function we are, so we know which part we can eliminate (and search for minimum in other part).\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e\tdouble EPS \u003d 0.01;\n\n\t// ps is ordered array of pairs - start position f (from) and length l\n\tprivate double ternarySearch(Pair[] ps) {\n\t\tint N \u003d ps.length;\n\t\tdouble left \u003d ps[0].f - 1, right \u003d ps[N-1].f + 1;\n\t\twhile (right - left \u0026gt; EPS) {\n\t\t\tdouble p1 \u003d (left + right) / 2;\n\t\t\tdouble p2 \u003d p1 + EPS;\n\t\t\tdouble c1 \u003d cost(p1, ps);\n\t\t\tdouble c2 \u003d cost(p2, ps);\n\t\t\tif (c1 \u003d\u003d c2) {\n\t\t\t\tleft \u003d p1;\n\t\t\t\tright \u003d p2;\n\t\t\t} else if ( c1 \u0026lt; c2 ) {\n\t\t\t\tright \u003d p1;\n\t\t\t} else {\n\t\t\t\tleft \u003d p2; \n\t\t\t}\n\t\t\t\n\t\t}\n\t\tdouble p \u003d (left + right)/2;\n\t\tdouble fc \u003d cost(p, ps);\n\t\tSystem.out.printf(\u0026quot;p\u003d%f, c\u003d%f%n\u0026quot;, p, fc);\n\t\treturn fc;\n\t}\n\n\tprivate double cost(double p, Pair[] ps) {\n\t\tdouble res \u003d 0;\n\t\tdouble e \u003d p;\n\t\tfor (int i \u003d 0; i \u0026lt; ps.length; i++) {\n\t\t\tres +\u003d Math.abs(ps[i].f - e);\n\t\t\te +\u003d ps[i].l;\n\t\t}\n\t\treturn res;\n\t}\n\u003c/code\u003e\u003c/pre\u003e\u003ch3\u003eDIV2 — hard (1000)\u003c/h3\u003e\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e Sorry guys, I didn\u0027t find how to use latex on CodeForces — I also asked \u003ca href\u003d\"//codeforces.com/blog/entry/2130#comment-206729\"\u003ehere\u003c/a\u003e, when someone helps me, I\u0027ll correct it\u003c/p\u003e\u003cp\u003eThis is inspired by \u003ca href\u003d\"http://community.topcoder.com/tc?module\u003dMemberProfile\u0026amp;cr\u003d23043290\u0026amp;tab\u003dalg\"\u003eamit43\u003c/a\u003e\u0027s solution (linked below).\u003c/p\u003e\u003cp\u003eTo maximize probability that at least one player wins, out strategy is to place the tokes uniformly over the m fields. So we will have on \u003ccode\u003eL\u003c/code\u003e (lower) tokens on \u003ccode\u003eLC\u003c/code\u003e (lower count) fields and \u003ccode\u003eG\u003c/code\u003e (greater) tokens on \u003ccode\u003eGC\u003c/code\u003e fields. The formula is:\u003c/p\u003e\u003cp\u003e\u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/61/4c/614cdb4b203f09df12e8ace45dd2bf7bec6f3cb1.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003ePseudocode without caching is:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eL  \u003d n / m;\nG  \u003d L + 1\nLC \u003d n % m;\nGC \u003d m - LC;\nP(n, k) \u003d LC/m * P(n-L, k-1)\n        + GC/m * P(n-G, k-1)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eTerminating conditions for P are clear — when incomming n is 0, the probability is 0.0, if n \u0026gt; 0 and there are no rounds (k \u003d 0), probability is 1.0.\u003c/p\u003e\u003cp\u003eOna has to add hashing to prevent calculation of already calculated fields. While n is up to 10^12, we cannot use array.\u003c/p\u003e\u003cp\u003eExamples of complete solutions:\u003c/p\u003e \u003cul\u003e   \u003cli\u003e\u003ca href\u003d\"http://community.topcoder.com/stat?c\u003dproblem_solution\u0026amp;rm\u003d324806\u0026amp;rd\u003d16277\u0026amp;pm\u003d13349\u0026amp;cr\u003d23043290\"\u003eamit43\u0027s code (winner of DIV 2)\u003c/a\u003e\u003c/li\u003e   \u003cli\u003e\u003ca href\u003d\"http://community.topcoder.com/stat?c\u003dproblem_solution\u0026amp;rm\u003d324800\u0026amp;rd\u003d16277\u0026amp;pm\u003d13349\u0026amp;cr\u003d22915016\"\u003etorress89\u0027s\u003c/a\u003e\u003c/li\u003e \u003c/ul\u003e\u003ch3\u003eOpened questions:\u003c/h3\u003e \u003col\u003e   \u003cli\u003e\u003cp\u003eI cannot see, why result is long instead of double while in problem statement for medium is written:\u003c/p\u003e   \u003cblockquote\u003e(Note that there is no restriction on the movement of cars or on the final position of the train. Janusz may push the cars in any order, and he may even push some cars by a non-integer number of meters if he wants to.)   \u003c/blockquote\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003ewhen we use \u003ccode\u003emap\u0026lt;pair\u0026lt;long long, int\u0026gt;\u0026gt;\u003c/code\u003e what is the upper bound for number of elements in the map. What I can see is, that while n \u0026lt; m n is decreasing slowly...\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003ethe strategy for hard problem is intuitively correct, some simple idea why it works? For first test case P(3, 2) is 0.75, if we place all 3 to one field, probability decrease to 0.5\u003c/p\u003e\u003c/li\u003e \u003c/ol\u003e\u003ch3\u003eAnswers:\u003c/h3\u003e \u003col\u003e   \u003cli\u003e\u003cp\u003eI implemented ternary search with doubles and EPS \u003d 0.01, so I place cars at point p, that is in distance at most EPS from min. I such solution the best points where the train starts are 5.255 for first test case and 152949945.885 for last test case, but the cost seems to be always integer.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eI checked that experimentally and size of the map for n \u003d \u003cspan class\u003d\"tex-span\"\u003e2\u003csup class\u003d\"upper-index\"\u003e60\u003c/sup\u003e\u003c/span\u003e (a little more that in problem statement \u003cspan class\u003d\"tex-span\"\u003e10\u003csup class\u003d\"upper-index\"\u003e12\u003c/sup\u003e\u003c/span\u003e), m \u003d 50 and k \u003d 50 is 952, probably not max value, for n \u003d \u003cspan class\u003d\"tex-span\"\u003e2\u003csup class\u003d\"upper-index\"\u003e60\u003c/sup\u003e - 1\u003c/span\u003e it is 982 and for n\u003d999999999999908879 the size is 1164\u003c/p\u003e\u003c/li\u003e \u003c/ol\u003e\u003cp\u003eSomeone might be interested in other discussions:\u003c/p\u003e \u003cul\u003e   \u003cli\u003e\u003ca href\u003d\"//codeforces.com/blog/entry/15747\"\u003ehttp://codeforces.com/blog/entry/15747\u003c/a\u003e (currently DIV 1 mainly)\u003c/li\u003e   \u003cli\u003e\u003ca href\u003d\"//codeforces.com/blog/entry/15730\"\u003ehttp://codeforces.com/blog/entry/15730\u003c/a\u003e\u003c/li\u003e   \u003cli\u003e\u003ca href\u003d\"http://apps.topcoder.com/wiki/pages/viewpage.action?pageId\u003d150339621\"\u003eXellos0\u0027s notes on TopCoder\u003c/a\u003e\u003c/li\u003e \u003c/ul\u003e\u003c/div\u003e","tags":["topcoder","srm","645","srm645"]}}