{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1425135588,"rating":99,"authorHandle":"Bekzhan.Kassenov","modificationTimeSeconds":1425406099,"id":16687,"title":"\u003cp\u003eCodeforces Round #294 (Div. 2) Editorial\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003ch2\u003e\u003ca href\u003d\"/contest/519/problem/A\" title\u003d\"Codeforces Round 294 (Div. 2)\"\u003e519A - A and B and Chess\u003c/a\u003e\u003c/h2\u003e\u003cp\u003e\u003cstrong\u003eAuthor:\u003c/strong\u003e \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/Bekzhan.Kassenov\" title\u003d\"Candidate Master Bekzhan.Kassenov\"\u003eBekzhan.Kassenov\u003c/a\u003e\u003c/p\u003e\u003cp\u003eThis problem asked to determine whose chess position is better.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eSolution:\u003c/strong\u003e Iterate over the board and count scores of both player. Then just output the answer.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eComplexity:\u003c/strong\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e)\u003c/span\u003e, where n is the length of the side of the board (8 here)\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eCode:\u003c/strong\u003e \u003ca href\u003d\"/contest/519/submission/10083191\" title\u003d\"Submission 10083191 by Bekzhan.Kassenov\"\u003e10083191\u003c/a\u003e\u003c/p\u003e\u003ch2\u003e\u003ca href\u003d\"/contest/519/problem/B\" title\u003d\"Codeforces Round 294 (Div. 2)\"\u003e519B - A and B and Compilation Errors\u003c/a\u003e\u003c/h2\u003e\u003cp\u003e\u003cstrong\u003eAuthor:\u003c/strong\u003e \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/ADJA\" title\u003d\"Candidate Master ADJA\"\u003eADJA\u003c/a\u003e\u003c/p\u003e\u003cp\u003eIn this problem you were given three arrays. Second array is the same as the first array without one element, third array is the same as second array without first element. You were asked to find deleted elements.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eSolution:\u003c/strong\u003e I\u0027ll describe easiest solution for this problem: Let\u0027s denote \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/span\u003e as sum of all elements of first array, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/span\u003e as sum of all elements of second array and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ec\u003c/i\u003e\u003c/span\u003e as sum of all elements of third array. Then answer is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e - \u003ci\u003eb\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e - \u003ci\u003ec\u003c/i\u003e\u003c/span\u003e\u003c/p\u003e\u003cp\u003eThere are also some other solutions for this problem which use map, xor, etc.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eComplexity:\u003c/strong\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e)\u003c/span\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eCode:\u003c/strong\u003e \u003ca href\u003d\"/contest/519/submission/10083248\" title\u003d\"Submission 10083248 by Bekzhan.Kassenov\"\u003e10083248\u003c/a\u003e\u003c/p\u003e\u003ch2\u003e\u003ca href\u003d\"/contest/519/problem/C\" title\u003d\"Codeforces Round 294 (Div. 2)\"\u003e519C - A and B and Team Training\u003c/a\u003e\u003c/h2\u003e\u003cp\u003e\u003cstrong\u003eAuthor:\u003c/strong\u003e \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/ADJA\" title\u003d\"Candidate Master ADJA\"\u003eADJA\u003c/a\u003e\u003c/p\u003e\u003cp\u003eIn this problem we should split \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e experienced participants and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/span\u003e newbies into teams.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eSolution:\u003c/strong\u003e Let\u0027s denote number teams with 2 experienced partisipants and 1 new participant as \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003etype\u003c/i\u003e1\u003c/span\u003e and teams with 1 experienced participant and 2 new participants as \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003etype\u003c/i\u003e2\u003c/span\u003e. Let\u0027s fix number of teams of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003etype\u003c/i\u003e1\u003c/span\u003e and denote it as \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e. Their amount is not grater than \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/span\u003e. Then number of teams of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003etype\u003c/i\u003e2\u003c/span\u003e is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003emin\u003c/i\u003e(\u003ci\u003em\u003c/i\u003e - 2 * \u003ci\u003ei\u003c/i\u003e, \u003ci\u003en\u003c/i\u003e - \u003ci\u003ei\u003c/i\u003e)\u003c/span\u003e. Check all possible \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e\u0027 and update answer.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eComplexity:\u003c/strong\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e)\u003c/span\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eCode:\u003c/strong\u003e \u003ca href\u003d\"/contest/519/submission/10083265\" title\u003d\"Submission 10083265 by Bekzhan.Kassenov\"\u003e10083265\u003c/a\u003e\u003c/p\u003e\u003ch2\u003e\u003ca href\u003d\"/contest/519/problem/D\" title\u003d\"Codeforces Round 294 (Div. 2)\"\u003e519D - A and B and Interesting Substrings\u003c/a\u003e\u003c/h2\u003e\u003cp\u003e\u003cstrong\u003eAuthor:\u003c/strong\u003e \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/ADJA\" title\u003d\"Candidate Master ADJA\"\u003eADJA\u003c/a\u003e\u003c/p\u003e\u003cp\u003eIn this problem you were asked to find number of substrings of given string, such that each substring starts and finishes with one and the same letter and sum of weight of letters of that substring without first and last letter is zero.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eSolution:\u003c/strong\u003e Let\u0027s denote \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003esum\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e]\u003c/span\u003e as sum of weights of first \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e letters. Create 26 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003emap\u003c/i\u003e \u0026lt; \u003ci\u003elonglong\u003c/i\u003e, \u003ci\u003eint\u003c/i\u003e \u0026gt; \u003c/span\u003e\u0027s, 1 for each letter. Suppose we are on position number \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e and current character\u0027s map is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/span\u003e. Then add \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e[\u003ci\u003esum\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e - 1]]\u003c/span\u003e to the answer and add \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003esum\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e]\u003c/span\u003e to the \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/span\u003e. \u003c/p\u003e\u003cp\u003e\u003cstrong\u003eComplexity:\u003c/strong\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eNlogN\u003c/i\u003e)\u003c/span\u003e, where \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eN\u003c/i\u003e\u003c/span\u003e — the length of input string.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eCode:\u003c/strong\u003e \u003ca href\u003d\"/contest/519/submission/10083293\" title\u003d\"Submission 10083293 by Bekzhan.Kassenov\"\u003e10083293\u003c/a\u003e\u003c/p\u003e\u003ch2\u003e\u003ca href\u003d\"/contest/519/problem/E\" title\u003d\"Codeforces Round 294 (Div. 2)\"\u003e519E - A and B and Lecture Rooms\u003c/a\u003e\u003c/h2\u003e\u003cp\u003e\u003cstrong\u003eAuthor\u003c/strong\u003e: \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/Bekzhan.Kassenov\" title\u003d\"Candidate Master Bekzhan.Kassenov\"\u003eBekzhan.Kassenov\u003c/a\u003e\u003c/p\u003e\u003cp\u003eIn this problem we have to answer to the following queries on tree: for given pairs of vertices your program should output number of eqidistand vertices from them.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eLet\u0027s denote\u003c/strong\u003e:\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edist\u003c/i\u003e(\u003ci\u003ea\u003c/i\u003e, \u003ci\u003eb\u003c/i\u003e)\u003c/span\u003e as distance between vertices \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eLCA\u003c/i\u003e(\u003ci\u003ea\u003c/i\u003e, \u003ci\u003eb\u003c/i\u003e)\u003c/span\u003e as \u003ca href\u003d\"https://en.wikipedia.org/wiki/Lowest_common_ancestor\"\u003elowest common ancestor\u003c/a\u003e of vertices \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edepth\u003c/i\u003e[\u003ci\u003ea\u003c/i\u003e]\u003c/span\u003e as distance between root of the tree and vertex \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003esize\u003c/i\u003e[\u003ci\u003ea\u003c/i\u003e]\u003c/span\u003e as size of subtree of vertex \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eOn each picture green nodes are equidistant nodes, blue nodes — nodes from query.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003ePreprocessing\u003c/strong\u003e: Read edges of tree and build data structure for LCA (it is more convenient to use binary raise, becase we will use it further for other purposes). \u003c/p\u003e\u003cp\u003eComplexity: \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eNlogN\u003c/i\u003e)\u003c/span\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eQueries\u003c/strong\u003e:\u003c/p\u003e\u003cp\u003eWe have to consider several cases for each query:\u003c/p\u003e\u003cp\u003e1) \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e \u003d \u003ci\u003eb\u003c/i\u003e\u003c/span\u003e. In that case answer is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003e2) \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edist\u003c/i\u003e(\u003ci\u003ea\u003c/i\u003e, \u003ci\u003eb\u003c/i\u003e)\u003c/span\u003e is odd. Then answer is \u003cspan class\u003d\"tex-span\"\u003e0\u003c/span\u003e.\u003c/p\u003e\u003cp\u003e3) \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edist\u003c/i\u003e(\u003ci\u003ea\u003c/i\u003e, \u003ci\u003el\u003c/i\u003e) \u003d \u003ci\u003edist\u003c/i\u003e(\u003ci\u003eb\u003c/i\u003e, \u003ci\u003el\u003c/i\u003e)\u003c/span\u003e, where \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e \u003d \u003ci\u003eLCA\u003c/i\u003e(\u003ci\u003ea\u003c/i\u003e, \u003ci\u003eb\u003c/i\u003e)\u003c/span\u003e. \u003c/p\u003e\u003cp\u003e\u003cimg alt\u003d\" \" src\u003d\"/predownloaded/d2/82/d282e5e8b8959d18efcf5733a3d0eca5c22ab504.jpg\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003eFind children of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/span\u003e, which are ancestors of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/span\u003e (let\u0027s denote them as \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eaa\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ebb\u003c/i\u003e\u003c/span\u003e). Answer will be \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e - \u003ci\u003esize\u003c/i\u003e[\u003ci\u003eaa\u003c/i\u003e] - \u003ci\u003esize\u003c/i\u003e[\u003ci\u003ebb\u003c/i\u003e]\u003c/span\u003e.\u003c/p\u003e\u003cp\u003e4) All other cases. \u003c/p\u003e\u003cp\u003e\u003cimg alt\u003d\" \" src\u003d\"/predownloaded/9a/0f/9a0f57a10090a82a3bea8f923dafe9aa3f2f3d9b.jpg\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e \u003cimg alt\u003d\" \" src\u003d\"/predownloaded/f4/a3/f4a3bd7ac67445554e649dfd0e1c49010ba9c153.jpg\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003eAssume that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edepth\u003c/i\u003e[\u003ci\u003ea\u003c/i\u003e] \u0026gt; \u003ci\u003edepth\u003c/i\u003e[\u003ci\u003eb\u003c/i\u003e]\u003c/span\u003e. Then using binary raise find \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edist\u003c/i\u003e(\u003ci\u003ea\u003c/i\u003e, \u003ci\u003eb\u003c/i\u003e) / 2\u003c/span\u003e-th ancestor of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/span\u003e (let\u0027s denote it as \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e1\u003c/span\u003e), \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edist\u003c/i\u003e(\u003ci\u003ea\u003c/i\u003e, \u003ci\u003eb\u003c/i\u003e) / 2 - 1\u003c/span\u003e-th ancestor of vertex \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/span\u003e (denote it as \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e2\u003c/span\u003e). Answer will be \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003esize\u003c/i\u003e[\u003ci\u003ep\u003c/i\u003e1] - \u003ci\u003esize\u003c/i\u003e[\u003ci\u003ep\u003c/i\u003e2]\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eComplexity: \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003elogN\u003c/i\u003e)\u003c/span\u003e for each query, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eMlogN\u003c/i\u003e)\u003c/span\u003e for all queries.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eResulting complexity:\u003c/strong\u003e: \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eMlogN\u003c/i\u003e + \u003ci\u003eNlogN\u003c/i\u003e)\u003c/span\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eCode:\u003c/strong\u003e \u003ca href\u003d\"/contest/519/submission/10083310\" title\u003d\"Submission 10083310 by Bekzhan.Kassenov\"\u003e10083310\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e","tags":["round","294","editorial"]}}