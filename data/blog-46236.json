{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1469300591,"rating":0,"authorHandle":"1am","modificationTimeSeconds":1469300689,"id":46236,"title":"\u003cp\u003eDay 1 (7/23)\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eToday we got rid of some annoying topics that will be necessary for the future. Next week we will be slowing down a bit and going over functions again, talking about arrays and vectors and how to manipulate them, and solving div2 A + B problems. So mostly problem solving next week inshallah.\u003c/p\u003e\u003cp\u003eHere is the link for the google drive folder where i will be putting any external resources that can\u0027t be put on this blog: \u003ca href\u003d\"https://drive.google.com/folderview?id\u003d0B54r2jukjz9wZ2JOcDJiWWdfZnc\u0026amp;usp\u003dsharing\"\u003ehttps://drive.google.com/folderview?id\u003d0B54r2jukjz9wZ2JOcDJiWWdfZnc\u0026amp;usp\u003dsharing\u003c/a\u003e\u003c/p\u003e\u003ch1\u003eComplexity\u003c/h1\u003e\u003cp\u003eThe first thing we did was talk about the complexity of an algorithm, and that to avoid getting a Time Limit Exceeded verdict, if the time limit is two seconds than the complexity of your solution should be less than 10^7, and if it was one second then it should be less than 10^6. Slides 11 to 14 from day 1 powerpoint show some codes and their complexity written in big O() notation. Make sure you understand those. \u003cbr /\u003e \u003cbr /\u003e Slide 6 from complexity powerpoint shows how to convert an integer from decimal to binary in log (n) time. Take a look at that and try to write it at home. But first make sure you know how to store each digit from a decimal number like 196 into an array (arr[0] \u003d 6, arr[1] \u003d9, arr[2] \u003d 1) â€” remember we solved it by taking the number % 10 than dividing by 10 each time.\u003c/p\u003e\u003ch1\u003eInput/ Output\u003c/h1\u003e\u003cp\u003eThen we talked about some basics problems that required a tricky input or output. And how to use stringstream and getline. As an exercise, look at slides 3 to 8 from the day 1 PowerPoint, study their codes and practice writing them yourself quickly. Also practice scanf in C instead of cin, the details can be found on slide 3 from day 1. \u003cbr /\u003e\u003c/p\u003e\u003ch1\u003eFunctions and Recursion\u003c/h1\u003e\u003cp\u003eThe last thing we went over was functions and how if we call a function from inside the function, that would result in an infinite loop. But if we were to put a base case, then we can take advantage of the concept and solve a bigger problem by the use of solving its sub-problem. \u003cbr /\u003e For example: 5! \u003d 5 * 4! -- \u0026gt; factorial (n) \u003d n * factorial (n-1); \u003cbr /\u003e Also: s is a palindrome if the first character is equal to the last and the sub string s[i+1] to s[j-1] is also a palindrome. --\u0026gt; s[i] \u003d\u003d s[j] \u0026amp;\u0026amp; palindrome (i+1, j-1); \u003cbr /\u003e Here is the code for factorial using recursion: \u003ca href\u003d\"http://ideone.com/A9yFfn\"\u003ehttp://ideone.com/A9yFfn\u003c/a\u003e \u003cbr /\u003e Here is the code for finding if a string is a palindrome using recursion: \u003ca href\u003d\"http://ideone.com/A9yFfn\"\u003ehttp://ideone.com/A9yFfn\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003cbr /\u003e don\u0027t focus too much on the recursion and binary string questions, they are only for possible future reference just in case we need them. So work on them last after you make sure that you have the rest of the concepts fully understood and have practiced them, and also solved contest day 1. Question C from contest day 1 will be solved next week, so just read it over and try to think of how it can be solved. All other questions are easy.\u003c/p\u003e\u003cp\u003eIf you have any questions, feel free to email me at \u003ca href\u003d\"mailto:reem_obaid_10@hotmail.com\"\u003ereem_obaid_10@hotmail.com\u003c/a\u003e \u003cbr /\u003e Best of luck to everyone :) take it easy\u003c/p\u003e\u003c/div\u003e","tags":[]}}