{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":true,"creationTimeSeconds":1459962643,"rating":878,"authorHandle":"MikeMirzayanov","modificationTimeSeconds":1459964128,"id":44214,"title":"\u003cp\u003eCodeforces: Rating Is Fixed (bug, go away!)\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHello!\u003c/p\u003e\u003cp\u003eLast weeks I was concerned (and probably, you too) about abnormal rating growth of our leaders. Of course, first of all I\u0027m talking about \u003ca class\u003d\"rated-user user-legendary\" href\u003d\"/profile/tourist\" title\u003d\"Legendary grandmaster tourist\"\u003e\u003cspan class\u003d\"legendary-user-first-letter\"\u003et\u003c/span\u003eourist\u003c/a\u003e, his rating is just rushed into the sky.\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"//codeforces.com/predownloaded/99/59/9959129ab312a0bd0923600541211a1246a5201b.png\"\u003e \u003c/a\u003e\u003c/p\u003e\u003cp\u003eThere were even comments from a series of \u0026quot;I told, and it happened\u0026quot;\u003c/p\u003e\u003cp\u003e\u003cimg alt\u003d\" \" src\u003d\"/predownloaded/a6/16/a616b095c2abfafcf057824ae9da1372d46933e9.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003eAfter the first round of VK Cup 2016, I carefully investigated the reasons of such growth and found a simple and trivial bug in the rating formulas. It\u0027s funny that even after being published, nobody found it. Look at this function:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e    private double getSeed(List\u0026lt;Contestant\u0026gt; contestants, Contestant contestant, int rating) {\n        Contestant extraContestant \u003d new Contestant(null, 0, 0, rating);\n        double result \u003d 1;\n        for (Contestant other : contestants) {\n            result +\u003d getEloWinProbability(other, extraContestant);\n        }\n        return result;\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eRemind, this feature is to calculate the expected participant place, if its rating suddenly became equal to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003erating\u003c/i\u003e\u003c/span\u003e. Of course, it should not take account of the participant itself (to whom we currently assign new hypothetical rating). The correct code must be:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e        for (Contestant other : contestants) {\n            if (other !\u003d contestant) {\n                result +\u003d getEloWinProbability(other, extraContestant);\n            }\n        }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThis bug led to the fact that taking the first place \u003ca class\u003d\"rated-user user-legendary\" href\u003d\"/profile/tourist\" title\u003d\"Legendary grandmaster tourist\"\u003e\u003cspan class\u003d\"legendary-user-first-letter\"\u003et\u003c/span\u003eourist\u003c/a\u003e actually won a very serious opponent. Himself. This led to a significant increase in its rating, even if the first was quite expected.\u003c/p\u003e\u003cp\u003eThe good news is that this bug has a statistically significant effect only in the very rare cases when the winner (or close to the winner) had a very high rating (yes, contrary to \u0026quot;anti-heroes\u0026quot; is also true). If we take an arbitrary round and recalculate the rating formulas corrected, almost all participants will receive exactly (or very close) rating.\u003c/p\u003e\u003cp\u003eAfter consulting with \u003ca class\u003d\"rated-user user-legendary\" href\u003d\"/profile/tourist\" title\u003d\"Legendary grandmaster tourist\"\u003e\u003cspan class\u003d\"legendary-user-first-letter\"\u003et\u003c/span\u003eourist\u003c/a\u003e and \u003ca class\u003d\"rated-user user-legendary\" href\u003d\"/profile/Petr\" title\u003d\"Legendary grandmaster Petr\"\u003e\u003cspan class\u003d\"legendary-user-first-letter\"\u003eP\u003c/span\u003eetr\u003c/a\u003e, I came to the following plan of action:\u003c/p\u003e \u003cul\u003e   \u003cli\u003eToday we had chronologically recalculated all ratings from the revolution of 2015,\u003c/li\u003e   \u003cli\u003eIf difference between the change according to the corrected rating formulas and the historical change (according to formulas with a bug) is no more than 3, the historic change continued to be used,\u003c/li\u003e   \u003cli\u003eIf difference between the change according to the corrected rating formulas and the historical change (according to formulas with a bug) is \u003cstrong\u003emore\u003c/strong\u003e than 3, the change is replaced with the correct rating in history.\u003c/li\u003e \u003c/ul\u003e\u003cp\u003eIt turned out that this bug did not affect practically all users. Bug touched only the top. I apologize to those who had descended from heaven to earth â€” but it was impossible to leave it as is. I wish leaders to get those ratings that were before rating fix.\u003c/p\u003e\u003cp\u003eMike.\u003c/p\u003e\u003c/div\u003e","tags":["codeforces","ratings","fix","bug"]}}