{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":false,"creationTimeSeconds":1415551149,"rating":32,"authorHandle":"Conqueror","modificationTimeSeconds":1433667361,"id":14651,"title":"\u003cp\u003eРазбор задач Интернет-Тура ВКОШП\u003c/p\u003e","locale":"ru","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e\u003cem\u003e\u003cstrong\u003eДоброго времени суток!\u003c/strong\u003e\u003c/em\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eЗадача А.\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eРеализация.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eЗадача B.\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eЛадей можно было расставлять по диагоналям.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eЗадача С.\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eПусть города уже отсортированы по возрастанию пары \u003ccode\u003e(население, цена)\u003c/code\u003e. Для простоты будем считать, что у всех городов разное население (при допуске совпадений к доказательству прибавится лишь немного незначительных подробностей).\u003c/p\u003e \u003cul\u003e   \u003cli\u003eМожно считать, что сперва мы вербуем людей, а потом завоёвываем города. Пусть из \u003cem\u003ei\u003c/em\u003e-того города завербовано \u003cem\u003ex\u003csub\u003ei\u003c/sub\u003e\u003c/em\u003e людей в лучшем ответе.\u003c/li\u003e   \u003cli\u003eГорода лучше всего захватывать в порядке \u003cem\u003ea\u003csub\u003ei\u003c/sub\u003e - x\u003csub\u003ei\u003c/sub\u003e\u003c/em\u003e (очевидно).\u003c/li\u003e   \u003cli\u003eВ одном из лучших ответов города надо захватывать в порядке \u003cem\u003ea\u003csub\u003ei\u003c/sub\u003e\u003c/em\u003e. Пусть это не так. Тогда если мы сперва захватили \u003cem\u003ei\u003c/em\u003e, прямо следуюшим \u003cem\u003ej\u003c/em\u003e и \u003cem\u003ea\u003csub\u003ei\u003c/sub\u003e \u0026gt; a\u003csub\u003ej\u003c/sub\u003e\u003c/em\u003e, то \u003cem\u003ex\u003csub\u003ej\u003c/sub\u003e \u003d 0\u003c/em\u003e (зачем нам кого-то нанимать, если можно весь город захватить бесплатно). \u0026quot;Перекинем\u0026quot; часть закупок из \u003cem\u003ei\u003c/em\u003e-того города в \u003cem\u003ej\u003c/em\u003e-тый. Противоречие. (см. пункт 5))\u003c/li\u003e   \u003cli\u003eПусть теперь в последнем городе мы закупили солдат больше, чем надо для победы (а в каком-то меньше (иначе мы уже потратили не меньше денег, чем в построенном ответе)). Перекинем одного из закупленных солдат в какой-то город, в котором не закупили всех. Тогда мы всё равно присоединим последний город.\u003c/li\u003e   \u003cli\u003eКаждая операция, описанная в решении не увеличивает число потраченных денег и перекидывает покупки в более дешёвые города, то есть проблем с зацикливанием нет.\u003c/li\u003e \u003c/ul\u003e\u003cp\u003e\u003ca href\u003d\"http://pastie.org/9707254\"\u003eРешение\u003c/a\u003e.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eЗадача D.\u003c/strong\u003e\u003c/p\u003e\u003cp\u003e\u003cem\u003eРешение от \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/king_of_hakers\" title\u003d\"Expert king_of_hakers\"\u003eking_of_hakers\u003c/a\u003e.\u003c/em\u003e\u003c/p\u003e\u003cp\u003eБудем обрабатывать запросы в оффлайн. Для каждого участка будем за \u003ccode\u003eO(n)\u003c/code\u003e обновлять его высоту. Если \u003ccode\u003eномер этого участка - начало порыва ветра\u003c/code\u003e чётное число то добавляем соответствующую высоту к этому участку, иначе отнимаем.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eЗадача Е.\u003c/strong\u003e\u003c/p\u003e\u003cp\u003e\u003cem\u003eРешение от \u003ca class\u003d\"rated-user user-cyan\" href\u003d\"/profile/Anuar\" title\u003d\"Specialist Anuar\"\u003eAnuar\u003c/a\u003e.\u003c/em\u003e\u003c/p\u003e\u003cp\u003e\u003cem\u003eОбозначения:\u003c/em\u003e\u003c/p\u003e \u003cul\u003e   \u003cli\u003e\u003ccode\u003eА\u003c/code\u003e — множество столбиков на которые Петя может закинуть кольца\u003c/li\u003e   \u003cli\u003e\u003ccode\u003eB\u003c/code\u003e — множество столбиков на которые Петя может закинуть кольца\u003c/li\u003e   \u003cli\u003e\u003ccode\u003eC\u003c/code\u003e — множество столбиков на которые и Петя и Вася могут закинуть кольца\u003c/li\u003e \u003c/ul\u003e\u003cp\u003e\u003ccode\u003e|x|\u003c/code\u003e -\u0026gt; размер некоторого множества \u003ccode\u003ex\u003c/code\u003e Так как они играют оптимально оба вначале кидают по очереди кольца в множество \u003ccode\u003eС\u003c/code\u003e. После этого они кидают в свои множества (т.е Петя в \u003ccode\u003eА\u003c/code\u003e, Вася в \u003ccode\u003eВ\u003c/code\u003e).\u003c/p\u003e\u003cp\u003eИх очки можно выразить такой формулой:\u003c/p\u003e \u003cul\u003e   \u003cli\u003eОчки Пети: \u003ccode\u003emin( |A| — |C| + ceil(|C| / 2) , ceil(m / 2) )\u003c/code\u003e\u003c/li\u003e   \u003cli\u003eОчки Васи: \u003ccode\u003emin( |B| — |C| + floor(|C| / 2) , floor(m / 2) )\u003c/code\u003e\u003c/li\u003e \u003c/ul\u003e\u003cp\u003e\u003ca href\u003d\"http://ideone.com/QhmB33\"\u003eКод решения\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eЗадача F.\u003c/strong\u003e\u003c/p\u003e\u003cp\u003e\u003cem\u003eРешение от \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/Na2a\" title\u003d\"Candidate Master Na2a\"\u003eNa2a\u003c/a\u003e.\u003c/em\u003e\u003c/p\u003e\u003cp\u003eПеребираем делителей \u003ccode\u003ea * b\u003c/code\u003e и ищем такие \u003ccode\u003ex\u003c/code\u003e, \u003ccode\u003ey\u003c/code\u003e что \u003ccode\u003ex * y \u003d a * b \u0026amp;\u0026amp; gcd(x, y) \u003d\u003d gcd(a, b)\u003c/code\u003e обновляем ответ. Делитель \u003ccode\u003ea * b\u003c/code\u003e \u003d делитель \u003ccode\u003ea\u003c/code\u003e * делитель \u003ccode\u003eb\u003c/code\u003e. Работает за (количество делителей \u003ccode\u003ea\u003c/code\u003e) * (количество делителей \u003ccode\u003eb\u003c/code\u003e). \u003ca href\u003d\"http://pastie.org/9707274\"\u003eРешение\u003c/a\u003e.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eЗадача G.\u003c/strong\u003e\u003c/p\u003e\u003cp\u003e\u003cem\u003eРешение от \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/Zharaskhan\" title\u003d\"Expert Zharaskhan\"\u003eZharaskhan\u003c/a\u003e.\u003c/em\u003e\u003c/p\u003e\u003cp\u003eСначала отсортируем массив. Берем самый максимальный сосуд, переливаем и разбиваем пока средняя арифметическая сумма будет меньше чем максимальный элемент.\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eint ans \u003d 0;\nfor (int i \u003d n; i \u0026gt;\u003d 1; i--) {\n    if (double(sum / double(i)) \u0026gt;\u003d double(a[i])) {\n        break;\n    }\n    ans++;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cstrong\u003eЗадача H.\u003c/strong\u003e\u003c/p\u003e\u003cp\u003e\u003cem\u003eРешение от \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/Zharaskhan\" title\u003d\"Expert Zharaskhan\"\u003eZharaskhan\u003c/a\u003e.\u003c/em\u003e\u003c/p\u003e\u003cp\u003eПосчитаем сколько раз встречается первое и второе слово каждой строки через map Если первое слово встречается больше одного раза тогда это слово Имя, значить упорядочим строку. После этого отсортируем массив.\u003c/p\u003e \u003cpre\u003e\u003ccode\u003epair \u0026lt;string, pair \u0026lt;string, string\u0026gt; \u0026gt; a[n];\nmap \u0026lt;string, int\u0026gt; cnt;\nfor (int i \u003d 1; i \u0026lt;\u003d n; i++) {\n    cin \u0026gt;\u0026gt; a[i].first \u0026gt;\u0026gt; a[i].second.first \u0026gt;\u0026gt; a[i].second.second;\n    cnt[a[i].first]++;\n    cnt[a[i].second.first]++; \n}\nfor (int i \u003d 1; i \u0026lt;\u003d n; i++) {\n    if (cnt[a[i].first] \u0026gt; 1) {\n      swap(a[i].first, a[i].second.second);\n      swap(a[i].second.first, a[i].second.second);\n    }\n}\nsort(a + 1, a + 1 + n);\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cstrong\u003eЗадача I.\u003c/strong\u003e\u003c/p\u003e\u003cp\u003e\u003cem\u003eРешение от \u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/Alex_2oo8\" title\u003d\"Grandmaster Alex_2oo8\"\u003eAlex_2oo8\u003c/a\u003e.\u003c/em\u003e\u003c/p\u003e\u003cp\u003eСведем задачу к кратчайшему пути в графе. Вершинами графа будут состояния (\u003ccode\u003el1\u003c/code\u003e, \u003ccode\u003el2\u003c/code\u003e, \u003ccode\u003edir\u003c/code\u003e), означающие, что мы находимся на перекрестке прямых \u003ccode\u003el1\u003c/code\u003e и \u003ccode\u003el2\u003c/code\u003e и смотрим в данный момент либо по направлению прямой \u003ccode\u003el1\u003c/code\u003e (\u003ccode\u003edir \u003d 0\u003c/code\u003e), либо против него (\u003ccode\u003edir \u003d 1\u003c/code\u003e). Также добавим две вершины — старт и финиш.\u003c/p\u003e\u003cp\u003eРебра будут трех типов:\u003c/p\u003e \u003cul\u003e   \u003cli\u003e\u003cp\u003eМы можем продолжить движение по прямой до следующего перекрестка. То есть из состояния (\u003ccode\u003el1\u003c/code\u003e, \u003ccode\u003el2\u003c/code\u003e, \u003ccode\u003edir\u003c/code\u003e) в (\u003ccode\u003el1\u003c/code\u003e, \u003ccode\u003el3\u003c/code\u003e, \u003ccode\u003edir\u003c/code\u003e), если пересечение прямых \u003ccode\u003el1\u003c/code\u003e и \u003ccode\u003el3\u003c/code\u003e находится в нужном направлении от пересечения \u003ccode\u003el1\u003c/code\u003e и \u003ccode\u003el2\u003c/code\u003e (или они совпадают). Стоимость таких ребер — 0, так как поворачивать нам не нужно\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eЛибо на как-то перекрестке мы можем повернуть — то есть добавляем ребро из (\u003ccode\u003el1\u003c/code\u003e, \u003ccode\u003el2\u003c/code\u003e, \u003ccode\u003edir\u003c/code\u003e) в (\u003ccode\u003el2\u003c/code\u003e, \u003ccode\u003el1\u003c/code\u003e, \u003ccode\u003enew_dir\u003c/code\u003e), стоимость такого ребра — угол между данными векторами.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eИ последний вид ребер — это ребра из старта (достаточно добавить два ребра с ценой 0) и аналогично два ребра в финиш.\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e\u003cp\u003eКак и во всех геометрических задачах, реализация всего этого куда сложнее идеи (по крайней мере для нас). Стоит не забыть, что прямые могут быть параллельными, некоторые из данных точек могут совпадать. Геометрическая составляющая — это нахождение точки пересечения двух прямых и угла между двумя векторами. Для последнего мы использовали скалярное произведение и арккосинус.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eЗадача J.\u003c/strong\u003e\u003c/p\u003e\u003cp\u003e\u003cem\u003eРешение от \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/SEFI\" title\u003d\"Expert SEFI\"\u003eSEFI\u003c/a\u003e.\u003c/em\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://ideone.com/V5Hxub\"\u003eРешение\u003c/a\u003e.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eЗадача K.\u003c/strong\u003e\u003c/p\u003e\u003cp\u003e\u003cem\u003eРешение от \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/Na2a\" title\u003d\"Candidate Master Na2a\"\u003eNa2a\u003c/a\u003e.\u003c/em\u003e\u003c/p\u003e\u003cp\u003eДобавляем по несколько клеток слева, справа, сверху и снизу (я добавил 20 клеток) и отмечаем их \u003ccode\u003e\u0027.\u0027\u003c/code\u003e. Напишем функцию \u003ccode\u003ewin(ch)\u003c/code\u003e \u003d\u0026gt; количество позиций что если в них поставить \u003ccode\u003ech\u003c/code\u003e (\u003ccode\u003eX\u003c/code\u003e или \u003ccode\u003e0\u003c/code\u003e), то можно выиграть.\u003c/p\u003e \u003cul\u003e   \u003cli\u003e\u003cp\u003eЕсли \u003ccode\u003ewin(\u0027X\u0027) \u0026gt; 0\u003c/code\u003e то первый игрок может выиграть сразу, следовательно ответ равен \u003ccode\u003ewin(\u0027X\u0027)\u003c/code\u003e.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eИначе, смотрим \u003ccode\u003ewin(\u00270\u0027)\u003c/code\u003e. Если позиций, где второй игрок выиграет, больше одного, то мы проиграем в любом случае. (Мы закроем одну позицию, но следующий ход он выиграет).\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eЕсли \u003ccode\u003ewin(\u00270\u0027)\u003c/code\u003e равен одному, то мы закрываем эту позицию, а следующий ход второй игрок не может выиграть. Ему будет оптимальнее закрыть один наш выигрышный ход, следовательно ответ \u003ccode\u003ewin(\u0027X\u0027) — 1\u003c/code\u003e.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eИначе, перебираем клетку куда мы ставим \u003ccode\u003e\u0027X\u0027\u003c/code\u003e. Если после того, как мы поставили Х на эту клетку, на поле выигрышных клеток стало больше одного, то увеличиваем ответ.\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e\u003cp\u003eФункию \u003ccode\u003ewin(ch)\u003c/code\u003e надо реализовать не на всем поле, а на каком то подпрямоугольнике. \u003ca href\u003d\"http://pastie.org/9707251\"\u003eРешение\u003c/a\u003e.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eUPD 2.\u003c/strong\u003e Код решения может не совпадать с идеей, так как был взят от другого пользователя.\u003c/p\u003e\u003c/div\u003e","tags":[]}}