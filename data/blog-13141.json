{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1405981785,"rating":508,"authorHandle":"dj3500","modificationTimeSeconds":1405982177,"id":13141,"title":"\u003cp\u003eHightail — automatic tester for programming contests\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHi! In this post I would like to introduce you to an application called \u003ca href\u003d\"http://github.com/dj3500/hightail\"\u003eHightail\u003c/a\u003e.\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://github.com/dj3500/hightail\"\u003eHightail\u003c/a\u003e is an automatic tester for programming contests such as CodeForces rounds. It will parse the problem statement, extract sample test cases (inputs and outputs) from it, and verify the correctness of your program against them. It is built to provide maximum automation and to relieve the contestant as much as possible.\u003c/p\u003e\u003cp\u003eA list of Hightail\u0027s features:\u003c/p\u003e \u003cul\u003e   \u003cli\u003eparsing problem statements\u003c/li\u003e   \u003cli\u003eparsing entire contests (autoloading all problems)\u003c/li\u003e   \u003cli\u003escheduling contest parsing ahead of time\u003c/li\u003e   \u003cli\u003eability to comfortably view, edit and add test cases\u003c/li\u003e   \u003cli\u003ehandling of all verdicts: WA, TLE, RE, even AC\u003c/li\u003e   \u003cli\u003ecustomizable time limits\u003c/li\u003e   \u003cli\u003eability to create in/out files in your working directory\u003c/li\u003e   \u003cli\u003edetection of floating point values (comparing 0.1 vs. 0.10 does not give WA)\u003c/li\u003e   \u003cli\u003eeasy-to-use UI, keyboard shortcuts\u003c/li\u003e   \u003cli\u003eresilient: it is multi-threaded so it will not let your program hang it; it will withstand large amounts of output from your program\u003c/li\u003e   \u003cli\u003esupport for all contest languages (C++, Java, Python, ...)\u003c/li\u003e   \u003cli\u003ewritten in Java and should run on any OS\u003c/li\u003e \u003c/ul\u003e\u003cp\u003eSome screenshots to give you an idea:\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"http://dj3500.webfactional.com/hightail1.png\"\u003e\u003cimg alt\u003d\"Screenshot 1\" src\u003d\"/predownloaded/33/dc/33dcfeac62edab15a292df452a29492389fc858a.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/a\u003e \u003ca href\u003d\"http://dj3500.webfactional.com/hightail2.png\"\u003e\u003cimg alt\u003d\"Screenshot 2\" src\u003d\"/predownloaded/c5/8b/c58b788ee7e6aae662319fb922bdaba23b7bbf94.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/a\u003e\u003c/p\u003e\u003cp\u003eYou will find more information on its \u003ca href\u003d\"http://github.com/dj3500/hightail\"\u003ehomepage\u003c/a\u003e (scroll down to see the readme). And \u003ca href\u003d\"http://github.com/dj3500/hightail/releases\"\u003ehere\u0027s a direct link to downloads\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eHightail started out as a simple program that I wrote for myself quite some time ago, then it became a small open source project when some other people contributed code to it. I think that it is now sufficiently developed that it can be released to the public, i.e. announced publicly here, rather than being hidden somewhere on the net, possible to find only if you already know the name. (It\u0027s probably long overdue, actually.)\u003c/p\u003e\u003cp\u003eIf you see bugs, have feature suggestions etc., please use GitHub to its fullest extent :) And look at the readme — it has a tutorial on how to contribute to Hightail.\u003c/p\u003e\u003cp\u003eI hope it will be useful to you :)\u003c/p\u003e\u003c/div\u003e","tags":["hightail","parser","parser contest","tester"]}}