{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1505980359,"rating":0,"authorHandle":"royappa","modificationTimeSeconds":1505980359,"id":54675,"title":"\u003cp\u003eLinearity of Expectation\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eI solved Topcoder SRM 607 Div. 1 250 using Linearity of Expectation in the practice room.\u003cbr /\u003e \u003ca href\u003d\"https://community.topcoder.com/stat?c\u003dproblem_statement\u0026amp;pm\u003d12964\u0026amp;rd\u003d15840\"\u003ehttps://community.topcoder.com/stat?c\u003dproblem_statement\u0026amp;pm\u003d12964\u0026amp;rd\u003d15840\u003c/a\u003e\u003c/p\u003e\u003cp\u003eI brushed up the rules about Linearity of Expectation (LoE). The proof is easy algebra and using it is also easy.\u003c/p\u003e\u003cp\u003eBut I still don\u0027t understand WHY it works here.\u003c/p\u003e\u003cp\u003eIn this problem, suppose the concatenated input is \u0026quot;??\u0026quot;. It has 3 substrings: the first \u0026quot;?\u0026quot;, second \u0026quot;?\u0026quot; and the whole string \u0026quot;??\u0026quot;. \u003c/p\u003e\u003cp\u003eThe solution just separately generates every substring, finds the probability that it is a palindrome, and adds it all up, so we get 1+1+(1/26) \u003d 2.038. Fine.\u003c/p\u003e\u003cp\u003eBut for \u0026quot;??\u0026quot; to be a palindrome requires the first and second substring \u0026quot;?\u0026quot; to be the same letter chosen for the \u0026quot;??\u0026quot;. I mean, if \u0026quot;??\u0026quot; \u003d \u0026quot;bb\u0026quot; then the first substring also has to be \u0026quot;b\u0026quot; and the last substring also has to be \u0026quot;b\u0026quot;. \u003c/p\u003e\u003cp\u003eSo why can we just add up the palindrome probability of each substring independently without considering its matching with the other substrings?\u003c/p\u003e\u003c/div\u003e","tags":["probability","linearity of expectation","expected value"]}}