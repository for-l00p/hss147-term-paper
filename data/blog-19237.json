{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":false,"creationTimeSeconds":1437002129,"rating":97,"authorHandle":"Sammarize","modificationTimeSeconds":1438255381,"id":19237,"title":"\u003cp\u003eCodeforces Round 313 — Extended editoral\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e\u003ca href\u003d\"/contest/560/problem/A\" title\u003d\"Codeforces Round 313 (Div. 2)\"\u003e560A - Currency System in Geraldion\u003c/a\u003e\u003c/p\u003e\u003cp\u003eIf there is a banlnot of value 1 then one can to express every sum of money. Otherwise one can\u0027t to express 1 and it is minimum unfortunate sum.\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"/contest/560/problem/B\" title\u003d\"Codeforces Round 313 (Div. 2)\"\u003e560B - Gerald is into Art\u003c/a\u003e\u003c/p\u003e\u003cp\u003eIt is easy to see that one can snuggle paintings to each other and to edge of board. For instance one can put one of painting right over other. Then height of two paintings equals to sum of two heights and width of two paintings is equals to maximum of two widths. Now we can just iterate orientation of paintings and board.\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"/contest/559/problem/A\" title\u003d\"Codeforces Round 313 (Div. 1)\"\u003e559A - Gerald\u0027s Hexagon\u003c/a\u003e \u0026amp; \u003ca href\u003d\"/contest/560/problem/C\" title\u003d\"Codeforces Round 313 (Div. 2)\"\u003e560C - Gerald\u0027s Hexagon\u003c/a\u003e\u003c/p\u003e\u003cp\u003eLet\u0027s consider regular triangle with sides of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e Let\u0027s split it to regular triangles with sides of \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e by lines parallel to the sides. Big triange area \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e\u003c/span\u003e times larger then small triangles area and therefore big triangle have splitted by \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e\u003c/span\u003e small triangles.\u003c/p\u003e\u003cp\u003eIf we join regular triangles to sides \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e, \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e3\u003c/sub\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e5\u003c/sub\u003e\u003c/span\u003e of hexagon we get a triangle sides of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e + \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e + \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e3\u003c/sub\u003e\u003c/span\u003e. Then hexagon area is equals to \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e + \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e + \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e3\u003c/sub\u003e)\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e - \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e - \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e3\u003c/sub\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e - \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e5\u003c/sub\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003e\u003cimg alt\u003d\" \" src\u003d\"/predownloaded/78/ba/78ba496fdcbe804843bcbcefcff1389d054ef5f2.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"/contest/559/problem/B\" title\u003d\"Codeforces Round 313 (Div. 1)\"\u003e559B - Equivalent Strings\u003c/a\u003e \u0026amp; \u003ca href\u003d\"/contest/560/problem/D\" title\u003d\"Codeforces Round 313 (Div. 2)\"\u003e560D - Equivalent Strings\u003c/a\u003e\u003c/p\u003e\u003cp\u003eLet us note that \u0026quot;equivalence\u0026quot; described in the statements is actually \u003ca href\u003d\"https://en.wikipedia.org/wiki/Equivalence_relation\"\u003eequivalence relation\u003c/a\u003e, it is reflexively, simmetrically and transitive. It is meant that set of all string is splits to equivalence classes. Let\u0027s find lexicographic minimal strings what is equivalent to first and to second given string. And then check if its are equals.\u003c/p\u003e\u003cp\u003eIt is remain find the lexicographic minimal strings what is equivalent to given. For instance we can do it such a way:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eString smallest(String s) {\n    if (s.length() % 2 \u003d\u003d 1) return s;\n    String s1 \u003d smallest(s.substring(0, s.length()/2));\n    String s2 \u003d smallest(s.substring(s.length()/2), s.length());\n    if (s1 \u0026lt; s2) return s1 + s2;\n    else return s2 + s1;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eEvery recursive call time works is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e)\u003c/span\u003e (where \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e is length of strings) and string splitten by two twice smaller strings. Therefore time of work this function is \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/78/cb/78cbd240f0f43a574eca1a110cf408f9808f17ab.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, where \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e is length of strings.\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"/contest/559/problem/C\" title\u003d\"Codeforces Round 313 (Div. 1)\"\u003e559C - Gerald and Giant Chess\u003c/a\u003e \u0026amp; \u003ca href\u003d\"/contest/560/problem/E\" title\u003d\"Codeforces Round 313 (Div. 2)\"\u003e560E - Gerald and Giant Chess\u003c/a\u003e\u003c/p\u003e\u003cp\u003eLet\u0027s denote black cells ad \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e0\u003c/sub\u003e, \u003ci\u003eA\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e, ..., \u003ci\u003eA\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ek\u003c/i\u003e - 1\u003c/sub\u003e\u003c/span\u003e . First of all, we have to sort black cells in increasing order of (row, column). If cell \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e available from cell \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ey\u003c/i\u003e\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e stands after \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ey\u003c/i\u003e\u003c/span\u003e in this order. Let \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/sub\u003e \u003d (\u003ci\u003eh\u003c/i\u003e, \u003ci\u003ew\u003c/i\u003e)\u003c/span\u003e. Now we have to find number of paths from \u003cspan class\u003d\"tex-span\"\u003e(1, 1)\u003c/span\u003e to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e avoiding \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e0\u003c/sub\u003e, ..., \u003ci\u003eA\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ek\u003c/i\u003e - 1\u003c/sub\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eLet \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eD\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e is number of paths from \u003cspan class\u003d\"tex-span\"\u003e(1, 1)\u003c/span\u003e to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e avoiding \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e0\u003c/sub\u003e, ..., \u003ci\u003eA\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e - 1\u003c/sub\u003e\u003c/span\u003e. It\u0027s easy to see that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eD\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e is answer for the problem. Number of all paths from \u003cspan class\u003d\"tex-span\"\u003e(1, 1)\u003c/span\u003e to \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e, \u003ci\u003ey\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e)\u003c/span\u003e is \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/ed/d5/edd5604a376905ce8cfb03699dbd673c6b5edbd2.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. We should subtract from that value all paths containing at least one of previous black cells. We should enumerate first black cell on the path. It could be one of previous cell that is not below or righter than \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e. For each such cell \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e we have to subtract number of paths from \u003cspan class\u003d\"tex-span\"\u003e(1, 1)\u003c/span\u003e to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e avoiding black cells multiplied by number of all paths from \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eWe have to calculate factorials of numbers from \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e to \u003cspan class\u003d\"tex-span\"\u003e2·10\u003csup class\u003d\"upper-index\"\u003e5\u003c/sup\u003e\u003c/span\u003e and inverse elements of them modulo \u003cspan class\u003d\"tex-span\"\u003e10\u003csup class\u003d\"upper-index\"\u003e9\u003c/sup\u003e + 7\u003c/span\u003e for calculating binomial coefficients.\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"/contest/559/problem/D\" title\u003d\"Codeforces Round 313 (Div. 1)\"\u003e559D - Randomizer\u003c/a\u003e\u003c/p\u003e\u003cp\u003eWe can use \u003ca href\u003d\"https://en.wikipedia.org/wiki/Pick%27s_theorem\"\u003ePick\u0027s theorem\u003c/a\u003e for calculate integer points number in every polygon. Integer points number on the segment between points \u003cspan class\u003d\"tex-span\"\u003e(0, 0)\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ea\u003c/i\u003e, \u003ci\u003eb\u003c/i\u003e)\u003c/span\u003e one can calculate over \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eGCD\u003c/i\u003e(\u003ci\u003ea\u003c/i\u003e, \u003ci\u003eb\u003c/i\u003e)\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eInteger points number in some choosen polynom is integer points number in basic polynom minus integer points number in segmnent of basic polynom separated by every segment of choosen polynom.\u003c/p\u003e\u003cp\u003eLet consider every potencial segment of polygon. We can calculate integer points number in his segment and probability that we will meet it in choosen polygon.\u003c/p\u003e\u003cp\u003eProbability of segment \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003ci\u003eA\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e + \u003ci\u003ek\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e is \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/94/00/9400f350eec5bd0ee769cf6c64a2d0c506859aa4.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. Let use note that we can calculate only segments with \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e \u0026lt; 60\u003c/span\u003e because of other segmnet propapility is too small.\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"/contest/559/problem/E\" title\u003d\"Codeforces Round 313 (Div. 1)\"\u003e559E - Gerald and Path\u003c/a\u003e\u003c/p\u003e\u003cp\u003eLighted part of walking trail is union of ligted intervals. Let\u0027s sort spotlights in increasing order of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e. Consider some lighted interval \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ea\u003c/i\u003e, \u003ci\u003eb\u003c/i\u003e)\u003c/span\u003e. It\u0027s lighted by spotlights with numbers \u003cspan class\u003d\"tex-span\"\u003e{\u003ci\u003el\u003c/i\u003e, \u003ci\u003el\u003c/i\u003e + 1, ..., \u003ci\u003er\u003c/i\u003e}\u003c/span\u003e for some \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003er\u003c/i\u003e\u003c/span\u003e (\u0026quot;substring\u0026quot; of spotlights). Let \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e0\u003c/sub\u003e, ..., \u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e is all possible boundaries of lighted intervals (numbers \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e - \u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e и \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e + \u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e).\u003c/p\u003e\u003cp\u003eImagine, that we know possible lighted intervals of all substrings of spotlights. Let \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eleft\u003c/i\u003e[\u003ci\u003el\u003c/i\u003e][\u003ci\u003er\u003c/i\u003e][\u003ci\u003ej\u003c/i\u003e]\u003c/span\u003e is least possible \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e such that set of spotlights with numbers \u003cspan class\u003d\"tex-span\"\u003e{\u003ci\u003el\u003c/i\u003e, \u003ci\u003el\u003c/i\u003e + 1, ..., \u003ci\u003er\u003c/i\u003e}\u003c/span\u003e lighting \u003cspan class\u003d\"tex-span\"\u003e[\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e, \u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e]\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eWith \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eleft\u003c/i\u003e\u003c/span\u003e we can calculate value \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ebest\u003c/i\u003e[\u003ci\u003eR\u003c/i\u003e][\u003ci\u003ei\u003c/i\u003e]\u003c/span\u003e maximum possible length of walking trail that could be lighted using first \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eL\u003c/i\u003e\u003c/span\u003e spotlights in such way that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e is rightmost lighted point. It\u0027s easy to do in \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e4\u003c/sup\u003e)\u003c/span\u003e because \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/32/5e/325ed8eb7ba12980b40e0ffe88d714c17e81f658.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e.\u003c/p\u003e\u003cp\u003eNow all we have to do is calculate \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eleft\u003c/i\u003e\u003c/span\u003e. Consider some substring of spotlights \u003cspan class\u003d\"tex-span\"\u003e[\u003ci\u003el\u003c/i\u003e, \u003ci\u003er\u003c/i\u003e]\u003c/span\u003e. Let all spotlights in the substring oriented in some way lighting some set of points. We could consider most left (\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e) and most right (\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e) lighted points, and left bound of first lighted interval (\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003et\u003c/i\u003e\u003c/span\u003e). If set of lighted points is interval \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003et\u003c/i\u003e \u003d \u003ci\u003ej\u003c/i\u003e\u003c/span\u003e. Consider how all the values change when we add spotlight \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003er\u003c/i\u003e + 1\u003c/span\u003e and choose its orientation. We have new lighted interval \u003cspan class\u003d\"tex-span\"\u003e[\u003ci\u003ea\u003c/i\u003e, \u003ci\u003eb\u003c/i\u003e]\u003c/span\u003e which is equal to \u003cspan class\u003d\"tex-span\"\u003e[\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e - \u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e, \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e]\u003c/span\u003e or \u003cspan class\u003d\"tex-span\"\u003e[\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e, \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e + \u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e]\u003c/span\u003e. Now most left lighted point is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003emin\u003c/i\u003e(\u003ci\u003ea\u003c/i\u003e, \u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e)\u003c/span\u003e, most right is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003emax\u003c/i\u003e(\u003ci\u003eb\u003c/i\u003e, \u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e)\u003c/span\u003e. Right bound of leftmost lighted interval does not changes if \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e \u0026gt; \u003ci\u003et\u003c/i\u003e\u003c/span\u003e or becomes equal to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/span\u003e, if \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e ≤ \u003ci\u003et\u003c/i\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eNot for each \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eL\u003c/i\u003e\u003c/span\u003e we can calculate \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edp\u003c/i\u003e[\u003ci\u003er\u003c/i\u003e][\u003ci\u003ej\u003c/i\u003e][\u003ci\u003ey\u003c/i\u003e]\u003c/span\u003e least possible \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e that it\u0027s possible to orient spotlights from \u003cspan class\u003d\"tex-span\"\u003e[\u003ci\u003eL\u003c/i\u003e, \u003ci\u003er\u003c/i\u003e]\u003c/span\u003e in such way that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e is most left lighted point \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e is most right one and right bound of leftmost lighted interval is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003et\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e. Thet it\u0027s easy to calculate \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eleft\u003c/i\u003e[\u003ci\u003eL\u003c/i\u003e][][]\u003c/span\u003e. That part is done in \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e4\u003c/sup\u003e)\u003c/span\u003e too.\u003c/p\u003e\u003c/div\u003e","tags":[]}}