{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":true,"creationTimeSeconds":1435686385,"rating":4,"authorHandle":"rus100","modificationTimeSeconds":1435686541,"id":18995,"title":"\u003cp\u003eЗадача A.Раунд 311\u003c/p\u003e","locale":"ru","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eНедавно только я решал раунд 311.Как всегда, ориентируясь на свои силы, я попытался решить задачу A.Решение прошло всего 3 теста, на 4 падало.Я не знал почему, не догадывался.После окончания раунда я посмотрел решения других и некоторые тесты, и тест 4 соответственно.Проверив на своем компьютере, я получил исключение \u0026quot;System.OutOfMemoryException\u0026quot;, что означает переполнение памяти.Пока решал у меня были сомнения, что будет что-то подобное, поскольку три диапазона чисел, следовательно, дерево с тремя уровнями, и три цикла вложенных друг в друга.При малых n-количество дипломов, такое решение даже проходит, но при больших приводит к зависанию.Вот мой код бестолковый.\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\n\nnamespace ConsoleApplication6\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            int n\u003dConvert.ToInt32(Console.ReadLine());\n            string str1 \u003d Console.ReadLine();\n            string str2 \u003d Console.ReadLine();\n            string str3 \u003d Console.ReadLine();\n            string[] strin1 \u003d str1.Split(\u0027 \u0027);\n            string[] strin2 \u003d str2.Split(\u0027 \u0027);\n            string[] strin3 \u003d str3.Split(\u0027 \u0027);\n            long min1 \u003d long.Parse(strin1[0]);\n            long max1 \u003d long.Parse(strin1[1]);\n            long min2 \u003d long.Parse(strin2[0]);\n            long max2 \u003d long.Parse(strin2[1]);\n            long min3 \u003d long.Parse(strin3[0]);\n            long max3 \u003d long.Parse(strin3[1]);\n           \n           \n            \n                long [, ,] mass\u003dnew long[max1-min1+1,max2-min2+1,max3-min3+1];\n            for (long i \u003d max1; i \u0026gt;\u003dmin1; i--) {\n                for (long j \u003d max2; j \u0026gt;\u003d min2; j--) {\n                    for (long k \u003d max3; k \u0026gt;\u003dmin3; k--) {\n                        if (i + j + k \u003d\u003d n)\n                        {\n                            mass[i - min1, j - min2, k - min3] \u003d 1;\n\n                        }\n                        else { mass[i - min1, j - min2, k - min3] \u003d 0; }\n                    }\n                }\n             }\n            string s\u003d\u0026quot;\u0026quot;;\n            for (long k \u003d max3; k \u0026gt;\u003d min3; k--)\n            {    \n                for (long j \u003d max2; j \u0026gt;\u003d min2; j--)\n                {\n                    for (long i \u003d max1; i \u0026gt;\u003d min1; i--)\n                    {\n                      if (mass[i - min1, j - min2, k - min3] \u003d\u003d1){\n                          s\u003di.ToString()+\u0026quot; \u0026quot;+j.ToString()+\u0026quot; \u0026quot;+k.ToString();\n                          break;\n                      }    \n                    }\n                }\n            }\n            Console.WriteLine(s);\n             Console.ReadLine();\n        }\n    }\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":["ошибка века"]}}