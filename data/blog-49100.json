{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":true,"creationTimeSeconds":1481890608,"rating":1,"authorHandle":"egor.okhterov","modificationTimeSeconds":1481968634,"id":49100,"title":"\u003cp\u003eSophisticated knapsack problem\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e\u003cimg alt\u003d\" \" src\u003d\"/predownloaded/1d/4b/1d4b65dfa86d0872be4ff4a063b55028b8afe138.jpg\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003eThere are \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e boxes. Boxes contain marbles.\u003cbr /\u003eBox number \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e contains \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e marble.\u003cbr /\u003eBox number \u003cspan class\u003d\"tex-span\"\u003e2\u003c/span\u003e contains \u003cspan class\u003d\"tex-span\"\u003e2\u003c/span\u003e marbles.\u003cbr /\u003e...\u003cbr /\u003eBox number \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e contains \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e marbles.\u003c/p\u003e\u003cp\u003eWe have to choose exactly \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/span\u003e boxes out of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e original boxes, so that we would have exactly \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003et\u003c/i\u003e\u003c/span\u003e marbles in total. \u003c/p\u003e\u003cp\u003eFor example, if we have a set of boxes \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e \u003d {1, 2, 3, 4, 5}\u003c/span\u003e and we have to choose \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e \u003d 4\u003c/span\u003e boxes to get the total target value \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003et\u003c/i\u003e \u003d 13\u003c/span\u003e, then we should output \u003ccode\u003e1 3 4 5\u003c/code\u003e.\u003c/p\u003e\u003cp\u003eBut if we have the same set of boxes \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e \u003d {1, 2, 3, 4, 5}\u003c/span\u003e and we have to choose \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e \u003d 3\u003c/span\u003e boxes with the same total value of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003et\u003c/i\u003e \u003d 13\u003c/span\u003e, then we have to print \u003ccode\u003eImpossible\u003c/code\u003e.\u003c/p\u003e \u003chr /\u003e\u003cp\u003eI have a simple bruteforce solution, which is working, but for too long. And I have a dynamic programming solution, which is \u003cstrong\u003enot\u003c/strong\u003e correct:\u003c/p\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eBruteforce\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cpre\u003e\u003ccode\u003elong long dp[10000][100];\n\nfor (int v \u003d 1; v \u0026lt;\u003d n; v++) dp[v][1] \u003d 1ll \u0026lt;\u0026lt; v;\n\nfor (int boxes \u003d 2; boxes \u0026lt;\u003d b; boxes++)\n  for (int cur \u003d 1; cur \u0026lt;\u003d t; cur++)\n    for (int v \u003d 1; v \u0026lt;\u003d n; v++)\n      if (cur - v \u0026gt;\u003d 1)\n      {\n        long long flag \u003d dp[cur - v][boxes - 1] \u0026amp; (1ll \u0026lt;\u0026lt; v);\n        long long possible \u003d dp[cur - v][boxes - 1];\n        if (!flag \u0026amp;\u0026amp; possible)\n          dp[cur][boxes] \u003d dp[cur - v][boxes - 1] | (1ll \u0026lt;\u0026lt; v);\n      }\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\u003cp\u003eMy dp solution is not correct, because it remembers only one configuration. For example, to get target value \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003et\u003c/i\u003e \u003d 5\u003c/span\u003e, we can choose \u003cspan class\u003d\"tex-span\"\u003e(1, 4)\u003c/span\u003e or we can choose \u003cspan class\u003d\"tex-span\"\u003e(2, 3)\u003c/span\u003e. My code will remember only one of those 2 choices.\u003c/p\u003e\u003cp\u003eThe task becomes even more complicated when we are given the following constraints:\u003cbr /\u003e\u003cspan class\u003d\"tex-span\"\u003e1 ≤ \u003ci\u003en\u003c/i\u003e ≤ 10\u003csup class\u003d\"upper-index\"\u003e18\u003c/sup\u003e\u003c/span\u003e\u003cbr /\u003e\u003cspan class\u003d\"tex-span\"\u003e1 ≤ \u003ci\u003et\u003c/i\u003e ≤ 10\u003csup class\u003d\"upper-index\"\u003e6\u003c/sup\u003e\u003c/span\u003e\u003cbr /\u003e\u003cspan class\u003d\"tex-span\"\u003e1 ≤ \u003ci\u003eb\u003c/i\u003e ≤ \u003ci\u003en\u003c/i\u003e\u003c/span\u003e\u003c/p\u003e\u003c/div\u003e","tags":["dynamic programming","knapsack"]}}