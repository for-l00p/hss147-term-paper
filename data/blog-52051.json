{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1495094777,"rating":5,"authorHandle":"royappa","modificationTimeSeconds":1495094777,"id":52051,"title":"\u003cp\u003eQuestion about problem statement\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eIn a topcoder problem recently, there was this definition:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eCorrect parentheses sequences can be defined recursively as follows:\n* The empty string \u0026quot;\u0026quot; is a correct sequence.\n* If \u0026quot;X\u0026quot; and \u0026quot;Y\u0026quot; are correct sequences, then \u0026quot;XY\u0026quot; (the concatenation of X and Y) is a correct sequence.\n* If \u0026quot;X\u0026quot; is a correct sequence, then \u0026quot;(X)\u0026quot; is a correct sequence.\n* Each correct parentheses sequence can be derived using the above rules.\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eWhat is the purpose of the last line? \u003c/p\u003e\u003cp\u003eI\u0027ve seen this type of extra condition many times and have to spend time thinking about whether it means something for the solution. Usually I can\u0027t think of something, and so (for me) it wastes time during a contest.\u003c/p\u003e\u003c/div\u003e","tags":["analysis of problem"]}}