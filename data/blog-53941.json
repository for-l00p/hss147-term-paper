{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1503081577,"rating":0,"authorHandle":"tomasf","modificationTimeSeconds":1504032897,"id":53941,"title":"\u003cp\u003e2017 USP-ICMC Editorials\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003ch4\u003e\u003ca href\u003d\"//codeforces.com/gym/101484/problem/A\"\u003eA — Bath Temperature\u003c/a\u003e\u003c/h4\u003e\u003cp\u003e\u003cstrong\u003eProblem author:\u003c/strong\u003e \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/teochaban\" title\u003d\"Expert teochaban\"\u003eteochaban\u003c/a\u003e\u003c/p\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eSolution\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003cstrong\u003eEditorial author:\u003c/strong\u003e \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/tomasf\" title\u003d\"Кандидат в мастера tomasf\"\u003etomasf\u003c/a\u003e\u003c/p\u003e\u003cp\u003eIf any tap has the desired temperature, there is no need to open a second tap, so the answer is 1. \u003c/p\u003e\u003cp\u003eSince the resulting temperature is a weighted mean of the opened taps, all obtainable temperatures are between the minimum and maximum temperature available on the taps. If the desired temperature is outside that range, the answer is -1. Otherwise, we can use the minimum and maximum temperature to obtain the desired temperature, so the answer is 2.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eOverall Complexity:\u003c/strong\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e)\u003c/span\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eCode(\u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/tomasf\" title\u003d\"Кандидат в мастера tomasf\"\u003etomasf\u003c/a\u003e):\u003c/strong\u003e \u003ca href\u003d\"https://pastebin.com/dmSX2L39\"\u003eLink\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003ch4\u003e\u003ca href\u003d\"//codeforces.com/gym/101484/problem/B\"\u003eB — Nicoleta\u0027s Cleaning\u003c/a\u003e\u003c/h4\u003e\u003cp\u003e\u003cstrong\u003eProblem author:\u003c/strong\u003e \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/tomasf\" title\u003d\"Candidate Master tomasf\"\u003etomasf\u003c/a\u003e\u003c/p\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eSolution\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003cstrong\u003eEditorial author:\u003c/strong\u003e \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/tomasf\" title\u003d\"Кандидат в мастера tomasf\"\u003etomasf\u003c/a\u003e\u003c/p\u003e\u003cp\u003eThis problem can be solved with a \u003ca href\u003d\"https://en.wikipedia.org/wiki/Sweep_line_algorithm\"\u003esweep line\u003c/a\u003e approach. \u003c/p\u003e\u003cp\u003eFirst, compress all \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ey\u003c/i\u003e\u003c/span\u003e coordinates, the resulting coordinates shouldn\u0027t be greater than \u003cspan class\u003d\"tex-span\"\u003e3·10\u003csup class\u003d\"upper-index\"\u003e5\u003c/sup\u003e\u003c/span\u003e since this is the maximum number of distinct \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ey\u003c/i\u003e\u003c/span\u003e coordinates given in the input. Then sort all points and vertical lines of the rectangles (events) by the \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e coordinate and process them sequentially. Use a range-update/point-query data structure (like a Fenwick Tree or a Segment Tree) to keep how many rectangles are \u0026quot;active\u0026quot; for every \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ey\u003c/i\u003e\u003c/span\u003e coordinate. For every vertical line event, indicating the start or the end of a rectangle, update the data structure on the related \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ey\u003c/i\u003e\u003c/span\u003e coordinate range. For every point event, query the data structure on the related \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ey\u003c/i\u003e\u003c/span\u003e coordinate and store the answer.\u003c/p\u003e\u003cp\u003eSpecial care must be taken with indexing since the problem asks for the number of rectangles in which the point is \u003cstrong\u003estrictly\u003c/strong\u003e inside. Also, if there are points and vertical lines on the same \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e coordinate, they must be processed in a specific order so that rectangles that have just started or finished are ignored. The order is: Rectangle end event, point event, rectangle start event.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eOverall Complexity:\u003c/strong\u003e \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/5c/df/5cdfd87dfa6e93fb66baa3a7e98b8d2238949c0d.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eCode(\u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/tomasf\" title\u003d\"Кандидат в мастера tomasf\"\u003etomasf\u003c/a\u003e):\u003c/strong\u003e \u003ca href\u003d\"https://pastebin.com/T3MMGHK3\"\u003eLink\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003ch4\u003e\u003ca href\u003d\"//codeforces.com/gym/101484/problem/C\"\u003eC — Leading the Scoreboard\u003c/a\u003e\u003c/h4\u003e\u003cp\u003e\u003cstrong\u003eProblem author:\u003c/strong\u003e \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/tomasf\" title\u003d\"Candidate Master tomasf\"\u003etomasf\u003c/a\u003e\u003c/p\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eSolution\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003cstrong\u003eEditorial author:\u003c/strong\u003e \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/tomasf\" title\u003d\"Кандидат в мастера tomasf\"\u003etomasf\u003c/a\u003e\u003c/p\u003e\u003cp\u003eThis problem can be solved by simulating the scoreboard. One of the easiest ways of implementing that is by processing the submissions sequentially while keeping track of what team is leading the scoreboard, how many problems they solved and their total time (penalty). Special care must be taken to handle the occasions in which multiple teams are leading the scoreboard.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eOverall Complexity:\u003c/strong\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eM\u003c/i\u003e)\u003c/span\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eCode(\u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/nonsequitur\" title\u003d\"Кандидат в мастера nonsequitur\"\u003enonsequitur\u003c/a\u003e):\u003c/strong\u003e \u003ca href\u003d\"https://pastebin.com/jwHUPEBm\"\u003eLink\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003ch4\u003e\u003ca href\u003d\"//codeforces.com/gym/101484/problem/D\"\u003eD — Joaozao, The Digit Maker\u003c/a\u003e\u003c/h4\u003e\u003cp\u003e\u003cstrong\u003eProblem author:\u003c/strong\u003e \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/danft\" title\u003d\"Candidate Master danft\"\u003edanft\u003c/a\u003e\u003c/p\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eSolution\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003cstrong\u003eEditorial author:\u003c/strong\u003e \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/danft\" title\u003d\"Кандидат в мастера danft\"\u003edanft\u003c/a\u003e\u003c/p\u003e\u003cp\u003eLet \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e​\u003c/span\u003e be the sequence of digits ordered non-decreasingly. Also, let\u0027s assume that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e​\u003c/span\u003e is composed of distinct elements. Let \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/66/bb/66bb56bef930e607dcd9be12fc65b8e2afeee232.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e and let \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eG\u003c/i\u003e\u003c/span\u003e be the functional graph of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e\u003c/span\u003e.\u003c/p\u003e\u003ch4\u003eThere is at least one cycle of size 2 in \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eG\u003c/i\u003e\u003c/span\u003e.\u003c/h4\u003e \u003cul\u003e   \u003cli\u003eIf there is a pair \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ed\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e, \u003ci\u003ed\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e)\u003c/span\u003e, such that, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ed\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e + \u003ci\u003ed\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e \u0026lt; \u003ci\u003eB\u003c/i\u003e\u003c/span\u003e. Then it is obvious that if \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e(\u003ci\u003ei\u003c/i\u003e) \u003d \u003ci\u003ek\u003c/i\u003e\u003c/span\u003e, then \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e(\u003ci\u003ek\u003c/i\u003e) \u003d \u003ci\u003ei\u003c/i\u003e\u003c/span\u003e, and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ed\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e + \u003ci\u003ed\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/sub\u003e \u0026lt; \u003ci\u003eB\u003c/i\u003e\u003c/span\u003e, as \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/1d/f1/1df109d65d6fcf2d208f9d325f69a5e841b7c5dc.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, for any \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eh\u003c/i\u003e\u003c/span\u003e.\u003c/li\u003e   \u003cli\u003eOtherwise, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e(2\u003ci\u003en\u003c/i\u003e) \u003d 2\u003ci\u003en\u003c/i\u003e - 1\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e(2\u003ci\u003en\u003c/i\u003e - 1) \u003d 2\u003ci\u003en\u003c/i\u003e\u003c/span\u003e (check it)\u003c/li\u003e \u003c/ul\u003e\u003ch4\u003eSolution\u003c/h4\u003e \u003col\u003e   \u003cli\u003ePick the size-2 cycle with greatest value \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ez\u003c/i\u003e \u003d (\u003ci\u003ez\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e + \u003ci\u003ez\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e)%\u003ci\u003eB\u003c/i\u003e\u003c/span\u003e,\u003c/li\u003e   \u003cli\u003eAdd \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ez\u003c/i\u003e\u003c/span\u003e to the answer\u003c/li\u003e   \u003cli\u003eRemove it from \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003c/span\u003e and rebuild \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eG\u003c/i\u003e\u003c/span\u003e.\u003c/li\u003e   \u003cli\u003eDo this until \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/15/e5/15e5baf635b96e37dc1dc77766e2eb769f07abda.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/li\u003e \u003c/ol\u003e\u003ch4\u003eProof:\u003c/h4\u003e\u003cp\u003eFirst thing to notice is that any other pairing will have value \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ew\u003c/i\u003e ≤ \u003ci\u003ez\u003c/i\u003e\u003c/span\u003e. This implies that the solution we are building is non-increasing. Suppose now that there is an optimal algorithm \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e\u003c/span\u003e that also builds its solution in non-increasing order. Let \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e be the set of available pairings \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e\u003c/span\u003e has available after step \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e, let also \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e be the set of pairings our algorithm (let\u0027s call it \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u003c/span\u003e) has after step \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eWe are going to prove that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003emax\u003c/i\u003e{\u003ci\u003eO\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/sub\u003e} \u003d \u003ci\u003emax\u003c/i\u003e{\u003ci\u003eB\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/sub\u003e}\u003c/span\u003e, for any \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e ≥ 0\u003c/span\u003e\u003c/p\u003e\u003cp\u003eSuppose that after step \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003emax\u003c/i\u003e{\u003ci\u003eO\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/sub\u003e} \u003d \u003ci\u003emax\u003c/i\u003e{\u003ci\u003eB\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/sub\u003e}\u003c/span\u003e. (base case \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e \u003d 0\u003c/span\u003e it is obviously true)\u003c/p\u003e\u003cp\u003eif \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e\u003c/span\u003e picks \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ew\u003c/i\u003e \u0026lt; \u003ci\u003ez\u003c/i\u003e\u003c/span\u003e it\u0027s not optimal, so it can\u0027t be, also by assumption \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ew\u003c/i\u003e \u0026gt; \u003ci\u003ez\u003c/i\u003e\u003c/span\u003e is not possible either.\u003c/p\u003e\u003cp\u003eif \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e\u003c/span\u003e picks \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ew\u003c/i\u003e \u003d \u003ci\u003ez\u003c/i\u003e\u003c/span\u003e it is either the same cycle or a disjoint one (distinct elements assumption), as removing a cycle doesn\u0027t do anything to cycles already in \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eG\u003c/i\u003e\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ew\u003c/i\u003e\u003c/span\u003e will be or has been picked by \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ez\u003c/i\u003e\u003c/span\u003e will be or has been picked by \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eIn either case, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003emax\u003c/i\u003e{\u003ci\u003eO\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ek\u003c/i\u003e + 1\u003c/sub\u003e} \u003d \u003ci\u003emax\u003c/i\u003e{\u003ci\u003eB\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ek\u003c/i\u003e + 1\u003c/sub\u003e}\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eThis is sufficient to prove that our algorithm builds an answer as good as any other algorithm.\u003c/p\u003e\u003ch4\u003eObservations:\u003c/h4\u003e\u003cp\u003eWithout assuming elements are distinct, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e\u003c/span\u003e could remove a pairing which is not a cycle, the proof would need some small adjustments.\u003c/p\u003e\u003cp\u003eTo simplify the implementation, we can remove cycles in any order, as removing one, does not affect others already in \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eG\u003c/i\u003e\u003c/span\u003e. Also to simplify, let \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/3f/58/3f58688747c407afec200617f03717c5ec5546aa.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, if \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e(\u003ci\u003ei\u003c/i\u003e) \u003d \u003ci\u003ej\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ef\u003c/i\u003e(\u003ci\u003ej\u003c/i\u003e) \u003d \u003ci\u003ei\u003c/i\u003e\u003c/span\u003e and \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/7d/64/7d64191d17c823a62e1bba1a2ed14a8541235d26.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, then \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/e9/98/e998bd516d04998a46168677d6e931ff5b96404e.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e.\u003c/p\u003e\u003cp\u003eWith both observations, we can implement a simpler solution which starts from \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e \u003d 2\u003ci\u003en\u003c/i\u003e​\u003c/span\u003e, and if \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/6c/96/6c96b8785950ecc622b010ada5bad100e1156814.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, we skip it, otherwise we add \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ed\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e + \u003ci\u003ed\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ef\u003c/i\u003e(\u003ci\u003ei\u003c/i\u003e)\u003c/sub\u003e\u003c/span\u003e to the answer. After that, we do the same for the elements we had skipped.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eOverall Complexity:\u003c/strong\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003enlogn\u003c/i\u003e)\u003c/span\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eCode(\u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/danft\" title\u003d\"Кандидат в мастера danft\"\u003edanft\u003c/a\u003e):\u003c/strong\u003e \u003ca href\u003d\"https://pastebin.com/zmP1QuAV\"\u003eLink\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003ch4\u003e\u003ca href\u003d\"//codeforces.com/gym/101484/problem/E\"\u003eE — Double Fence\u003c/a\u003e\u003c/h4\u003e\u003cp\u003e\u003cstrong\u003eProblem author:\u003c/strong\u003e \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/tomasf\" title\u003d\"Candidate Master tomasf\"\u003etomasf\u003c/a\u003e\u003c/p\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eSolution\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003cstrong\u003eEditorial author:\u003c/strong\u003e \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/tomasf\" title\u003d\"Кандидат в мастера tomasf\"\u003etomasf\u003c/a\u003e\u003c/p\u003e\u003cp\u003eLet \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eP\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eP\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e\u003c/span\u003e be respectively the set of points of the first polygon and the set of points of the second polygon. Let \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ech\u003c/i\u003e(\u003ci\u003eX\u003c/i\u003e)\u003c/span\u003e be the set of points on the convex hull of the set of points \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eX\u003c/i\u003e\u003c/span\u003e, including colinear points on the edges. A polygon is strictly inside the other if \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/f2/9a/f29af63e678c44c26aeb62a3050d744e3888af67.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e or \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/02/19/02194ed500603790f7da5320015d3d50a44a07c0.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eOverall Complexity:\u003c/strong\u003e \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/5c/df/5cdfd87dfa6e93fb66baa3a7e98b8d2238949c0d.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eCode(\u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/tomasf\" title\u003d\"Кандидат в мастера tomasf\"\u003etomasf\u003c/a\u003e):\u003c/strong\u003e \u003ca href\u003d\"https://pastebin.com/3AcKiawS\"\u003eLink\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003ch4\u003e\u003ca href\u003d\"//codeforces.com/gym/101484/problem/F\"\u003eF — No Link, Cut Tree!\u003c/a\u003e\u003c/h4\u003e\u003cp\u003e\u003cstrong\u003eProblem author:\u003c/strong\u003e \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/teochaban\" title\u003d\"Expert teochaban\"\u003eteochaban\u003c/a\u003e\u003c/p\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eSolution\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003cstrong\u003eEditorial author:\u003c/strong\u003e \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/danft\" title\u003d\"Кандидат в мастера danft\"\u003edanft\u003c/a\u003e\u003c/p\u003e\u003cp\u003eFirst notice that because the binary tree is a complete binary tree, its height will be \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/c0/b6/c0b6d29f59496f17735aa87b710f136572d68d4b.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e (less than 20). \u003c/p\u003e\u003cp\u003eLet\u0027s denote \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ed\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eu\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e as the depth of node \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eu\u003c/i\u003e\u003c/span\u003e (its distance to the root), and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eT\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eu\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e the set of nodes in \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eu\u003c/i\u003e\u003c/span\u003e\u0027s subtree.\u003c/p\u003e\u003cp\u003eNow let\u0027s define \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eS\u003c/i\u003e[\u003ci\u003eu\u003c/i\u003e][\u003ci\u003ed\u003c/i\u003e]\u003c/span\u003e as the sum of shininess of nodes on depth \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ed\u003c/i\u003e\u003c/span\u003e, which are in the subtree of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eu\u003c/i\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eIn other words, \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/7d/9a/7d9a4c00e8ac5a89859433319a6727186e3897bb.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003eGiven a query \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eu\u003c/i\u003e\u003c/span\u003e, the answer will be the depth \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ed\u003c/i\u003e\u003c/span\u003e, such that: \u003c/p\u003e \u003ccenter\u003e\u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/81/55/81554c97da32ce4daccb7513639cf968f43525e1.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/center\u003e\u003cp\u003eAs \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eS\u003c/i\u003e[\u003ci\u003eu\u003c/i\u003e][\u003ci\u003ed\u003c/i\u003e]\u003c/span\u003e can be written in funciton of its children: \u003c/p\u003e \u003ccenter\u003e\u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/c6/c0/c6c0d9a575f0764e1aa17afe376e76878d8d7488.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/center\u003e\u003cp\u003eA simple dfs can then be used to compute it.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eOverall Complexity:\u003c/strong\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eNlog\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e(\u003ci\u003eN\u003c/i\u003e))\u003c/span\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eCode(\u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/teochaban\" title\u003d\"Эксперт teochaban\"\u003eteochaban\u003c/a\u003e):\u003c/strong\u003e \u003ca href\u003d\"https://pastebin.com/SzykUrDw\"\u003eLink\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003ch4\u003e\u003ca href\u003d\"//codeforces.com/gym/101484/problem/G\"\u003eG — Hungry Canadian\u003c/a\u003e\u003c/h4\u003e\u003cp\u003e\u003cstrong\u003eProblem author:\u003c/strong\u003e \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/teochaban\" title\u003d\"Expert teochaban\"\u003eteochaban\u003c/a\u003e\u003c/p\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eSolution\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003cstrong\u003eEditorial author:\u003c/strong\u003e \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/danft\" title\u003d\"Кандидат в мастера danft\"\u003edanft\u003c/a\u003e\u003c/p\u003e\u003ch4\u003eDynamic Programing\u003c/h4\u003e\u003cp\u003eThe simplest solution for this problem uses dynamic programing on the recurrence:\u003c/p\u003e \u003ccenter\u003e\u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/27/b5/27b51daf9ad3829c1505074db107b131178b910e.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/center\u003e \u003ccenter\u003e\u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/36/6c/366c6a175a83a9e509291a136c078d3526f20470.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/center\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edp\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e][\u003ci\u003ej\u003c/i\u003e]\u003c/span\u003e is the minimum cost of completing the string after having added \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e characters to it, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e being the last one.\u003c/p\u003e\u003cp\u003eThe answer will be:\u003c/p\u003e \u003ccenter\u003e\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003emin\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e0 ≤ \u003ci\u003ej\u003c/i\u003e \u0026lt; 26\u003c/sub\u003e{\u003ci\u003edp\u003c/i\u003e[1][\u003ci\u003ej\u003c/i\u003e]}\u003c/span\u003e\u003c/center\u003e\u003ch4\u003eMatrix Exponentiation\u003c/h4\u003e\u003cp\u003eAnother solution uses matrix exponentiation. Let\u0027s define the operator \u003cspan class\u003d\"tex-span\"\u003e × \u003c/span\u003e, which receives two squared matrices \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eB\u003c/i\u003e\u003c/span\u003e and returns a squared matrix \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eC\u003c/i\u003e\u003c/span\u003e with the same dimension \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e:\u003c/p\u003e \u003ccenter\u003e\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eC\u003c/i\u003e \u003d \u003ci\u003eA\u003c/i\u003e × \u003ci\u003eB\u003c/i\u003e\u003c/span\u003e\u003c/center\u003e \u003ccenter\u003e\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eC\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eij\u003c/i\u003e\u003c/sub\u003e \u003d \u003ci\u003emin\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1 ≤ \u003ci\u003ek\u003c/i\u003e ≤ \u003ci\u003en\u003c/i\u003e\u003c/sub\u003e{\u003ci\u003eA\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eik\u003c/i\u003e\u003c/sub\u003e + \u003ci\u003eB\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ekj\u003c/i\u003e\u003c/sub\u003e}\u003c/span\u003e\u003c/center\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eP\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/sup\u003e\u003c/span\u003e (the matrix of costs to the power of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e) \u003d \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eP\u003c/i\u003e × \u003ci\u003eP\u003c/i\u003e × ... × \u003ci\u003eP\u003c/i\u003e\u003c/span\u003e, will have the minimum cost to build a string of size \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e. More specifically \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eP\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eij\u003c/i\u003e\u003c/sub\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/sup\u003e\u003c/span\u003e is the minimum cost of building a string of size \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e starting with character \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e and ending with character \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e.\u003c/p\u003e\u003ch5\u003eProof\u003c/h5\u003e\u003cp\u003eLet\u0027s prove it by induciton on \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eThe base case \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e \u003d 1\u003c/span\u003e is correct by definition.\u003c/p\u003e\u003cp\u003eNow, assuming that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eP\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/sup\u003e\u003c/span\u003e is the matrix of minimum costs of building a string of size \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003eP\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/sup\u003e × \u003ci\u003eP\u003c/i\u003e)\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eij\u003c/i\u003e\u003c/sub\u003e \u003d \u003ci\u003emin\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1 ≤ \u003ci\u003ek\u003c/i\u003e ≤ \u003ci\u003en\u003c/i\u003e\u003c/sub\u003e{\u003ci\u003eP\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eik\u003c/i\u003e\u003c/sub\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/sup\u003e + \u003ci\u003eP\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ekj\u003c/i\u003e\u003c/sub\u003e}\u003c/span\u003e\u003c/p\u003e\u003cp\u003eBecause the string of minimum cost of length \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e + 1\u003c/span\u003e is a string of minimum cost of length \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e, plus one character, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eP\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ek\u003c/i\u003e + 1\u003c/sup\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eij\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e is the minimum cost of building a string of size \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e + 1\u003c/span\u003e starting at \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e and ending at \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e. It can also be proven that \u003cspan class\u003d\"tex-span\"\u003e × \u003c/span\u003e is associative, which allows us to use fast exponentiation algorithm.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eOverall Complexity:\u003c/strong\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eK\u003c/i\u003e)\u003c/span\u003e or \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003elog\u003c/i\u003e(\u003ci\u003eK\u003c/i\u003e))\u003c/span\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eCode(\u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/teochaban\" title\u003d\"Эксперт teochaban\"\u003eteochaban\u003c/a\u003e):\u003c/strong\u003e \u003ca href\u003d\"https://pastebin.com/8LfYuXm1\"\u003eLink\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003ch4\u003e\u003ca href\u003d\"//codeforces.com/gym/101484/problem/H\"\u003eH — Eating Pie\u003c/a\u003e\u003c/h4\u003e\u003cp\u003e\u003cstrong\u003eProblem author:\u003c/strong\u003e \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/bssanches\" title\u003d\"Candidate Master bssanches\"\u003ebssanches\u003c/a\u003e\u003c/p\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eSolution\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003cstrong\u003eEditorial author:\u003c/strong\u003e \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/bssanches\" title\u003d\"Кандидат в мастера bssanches\"\u003ebssanches\u003c/a\u003e\u003c/p\u003e\u003cp\u003eThis is a max flow problem. First, let\u0027s create a graph where every type of pie is a node. Then let\u0027s consider every pair of vertices \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eu\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e\u003c/span\u003e. They\u0027ll have an bi-directional edge if the pie with type \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eu\u003c/i\u003e\u003c/span\u003e appears adjacent to the pie with type \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e\u003c/span\u003e in the array \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eP\u003c/i\u003e\u003c/span\u003e and, the capacity of this edge, will be the sum of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eG\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e in these positions. For example if \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eP\u003c/i\u003e \u003d {1, 3, 1, 2}\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eG\u003c/i\u003e \u003d {1, 2, 4}\u003c/span\u003e then we will have and edge between 1 and 3 with capacity 3 and between 1 and 2 with capacity 4. \u003c/p\u003e\u003cp\u003eSo for every pair of nodes \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eu\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e\u003c/span\u003e connected by an edge with capacity \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eC\u003c/i\u003e\u003c/span\u003e, we know that the amount of candies someone is going to earn if they bought both \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eu\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e\u003c/span\u003e is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eC\u003c/i\u003e\u003c/span\u003e. \u003c/p\u003e\u003cp\u003eNow we are going to add two new nodes, one that is going to be the Joaozao (sink) and the other one the Nicoleta (source). We will assume now that every node that Joaozao reaches are going to be brought by him, the same goes for Nicoleta. Assuming this, we need to garantee that Joaozao reaches the nodes he is obliged to buy (the ones that does not appear in Nicoleta\u0027s list), the same for Nicoleta. So we will create an edge from Joaozao to every type of pie he is obliged to buy, this edge will have capacity \u003cspan class\u003d\"tex-span\"\u003e∞\u003c/span\u003e. We will do the same for Nicoleta.\u003c/p\u003e\u003cp\u003eWith this graph now, every node has only 3 possible states:\u003c/p\u003e \u003col\u003e   \u003cli\u003e\u003cp\u003eThe node cannot be reached by anyone\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eThe node can only be reached by one person\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eThe node can be reached by both Joaozao and Nicoleta.\u003c/p\u003e\u003c/li\u003e \u003c/ol\u003e\u003cp\u003eFor the first case, if the node cannot be reached, it means that the node can be brought by anyone and it is in an isolated component (because the edges are bi-directional). In that case anyone can buy the whole component (so the answer is only to sum all the edges in it).\u003c/p\u003e\u003cp\u003eFor the second case, there\u0027s only one person that can reach the whole component. In that case the person that reaches should buy all the nodes. Which also means to sum all the edges in the answer.\u003c/p\u003e\u003cp\u003eFor the third case, the component can be reached by both of them, so we need to separate it in two components. By doing this we will end up with the second case again. Note that by separating them in two components, we will be cutting some edges and they will not be part of our answer. So we want to cut such edges in a way that the sum of their capacities is minimized. This is a standard mincut/maxflow problem.\u003c/p\u003e\u003cp\u003eTo sum it up, the answer is the sum of all edges given in the input (in other words, the sum of the array \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eG\u003c/i\u003e\u003c/span\u003e) minus the maxflow.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eOverall Complexity:\u003c/strong\u003e Depends on the maxflow implementation, for the Dinic\u0027s algorithm it is:\u003c/p\u003e\u003cp\u003e\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eE\u003c/i\u003e·\u003ci\u003eV\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e)\u003c/span\u003e\u003c/p\u003e\u003cp\u003eNote that in the worst case, the complete graph will have around 40 nodes.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eCode(\u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/bssanches\" title\u003d\"Кандидат в мастера bssanches\"\u003ebssanches\u003c/a\u003e):\u003c/strong\u003e \u003ca href\u003d\"https://pastebin.com/HY1Fmn67\"\u003eLink\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003ch4\u003e\u003ca href\u003d\"//codeforces.com/gym/101484/problem/I\"\u003eI — Matrix Sum\u003c/a\u003e\u003c/h4\u003e\u003cp\u003e\u003cstrong\u003eProblem author:\u003c/strong\u003e \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/bssanches\" title\u003d\"Candidate Master bssanches\"\u003ebssanches\u003c/a\u003e\u003c/p\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eSolution\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003cstrong\u003eEditorial author:\u003c/strong\u003e \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/danft\" title\u003d\"Кандидат в мастера danft\"\u003edanft\u003c/a\u003e\u003c/p\u003e\u003cp\u003eFist thing to notice is that the formula given in the problem statement gives us a clue about where to start. To make things a little bit cleaner let\u0027s define \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eR\u003c/i\u003e\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eM\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eS\u003c/i\u003e\u003c/span\u003e: \u003c/p\u003e \u003ccenter\u003e\u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/d2/86/d286f94a9d009ee39994f608baa5049b4d7a53d4.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/center\u003e \u003ccenter\u003e\u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/85/99/859937662ce083600a8cb08218b5701a37be47ab.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/center\u003e \u003ccenter\u003e\u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/03/54/0354a97416d2bcb3ca7f82cf3d83d5614911fab2.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/center\u003e\u003cp\u003eMoving things around a bit we get:\u003c/p\u003e \u003ccenter\u003e\u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/1a/90/1a908bbdf740ab9f58bb4e28d8cea8a7f35811af.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/center\u003e \u003ccenter\u003e\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eM\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eij\u003c/i\u003e\u003c/sub\u003e \u003d \u003ci\u003eC\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e + \u003ci\u003eR\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e - \u003ci\u003eA\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eij\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e\u003c/center\u003e\u003cp\u003eTo find \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eC\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e, we sum the equation above over \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e.\u003c/p\u003e \u003ccenter\u003e\u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/fb/99/fb996b48599ee2809a4d61d2047053ce134169ac.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/center\u003e \u003ccenter\u003e\u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/1a/30/1a3030ebf1e60a3bf9dfa4bd4358c163a6580b4a.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/center\u003e \u003ccenter\u003e\u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/91/0e/910e10063e5b62313582159b4ecc94f1fdca8313.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/center\u003e \u003ccenter\u003e\u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/67/59/67595e40b735a4ed0a4e1fdf832e15645e075778.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/center\u003e\u003cp\u003eThe same thing can be done to find \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eR\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e. To get \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eS\u003c/i\u003e\u003c/span\u003e we sum over the whole matrix \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eM\u003c/i\u003e\u003c/span\u003e:\u003c/p\u003e \u003ccenter\u003e\u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/6f/56/6f56421e3039d8bf80cb68c3a12fc9beaa3a5149.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/center\u003e \u003ccenter\u003e\u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/ce/91/ce919dbc2738b9215bc2b37f0eb052af42c77835.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/center\u003e \u003ccenter\u003e\u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/4f/43/4f43071fbd068b12927e67609edea442ab546d7a.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/center\u003e \u003ccenter\u003e\u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/c2/16/c216a754ddb9a18cc400c801702c3b43355d650c.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/center\u003e\u003cp\u003eNow we can find \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eM\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003eij\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e using the first equation. Also, when dividing by \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e - 1\u003c/span\u003e we assumed \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e \u0026gt; 1\u003c/span\u003e, so there\u0027s a corner case when \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e \u003d 1\u003c/span\u003e. Also it is obvious that \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/3c/5d/3c5d9982d44a2087ef47cd1718a5f4cf3fbde18c.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e , if and only if \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/b6/29/b62942d2d9bba9b99290b8443cafae962a727525.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eOverall Complexity:\u003c/strong\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e)\u003c/span\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eCode(\u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/danft\" title\u003d\"Кандидат в мастера danft\"\u003edanft\u003c/a\u003e):\u003c/strong\u003e \u003ca href\u003d\"https://pastebin.com/HfyG6tpW\"\u003eLink\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003ch4\u003e\u003ca href\u003d\"//codeforces.com/gym/101484/problem/J\"\u003eJ — Beautiful Triangles\u003c/a\u003e\u003c/h4\u003e\u003cp\u003e\u003cstrong\u003eProblem author:\u003c/strong\u003e \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/bimaoe\" title\u003d\"Candidate Master bimaoe\"\u003ebimaoe\u003c/a\u003e\u003c/p\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eSolution\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003cstrong\u003eEditorial author:\u003c/strong\u003e \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/tomasf\" title\u003d\"Кандидат в мастера tomasf\"\u003etomasf\u003c/a\u003e\u003c/p\u003e\u003cp\u003eLet \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003emin\u003c/i\u003e\u003c/sub\u003e \u003d \u003ci\u003emin\u003c/i\u003e(\u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e, \u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e)\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003emax\u003c/i\u003e\u003c/sub\u003e \u003d \u003ci\u003emax\u003c/i\u003e(\u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e, \u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e)\u003c/span\u003e. If the third side of the triangle (\u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e3\u003c/sub\u003e\u003c/span\u003e) is shorter than \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003emax\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e, the beauty \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/span\u003e is given by \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003emin\u003c/i\u003e\u003c/sub\u003e + \u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e3\u003c/sub\u003e - \u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003emax\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e and can be increased by increasing \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e3\u003c/sub\u003e\u003c/span\u003e. Else, if the \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e3\u003c/sub\u003e\u003c/span\u003e is larger than \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003emax\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e, the beauty \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/span\u003e is given by \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003emin\u003c/i\u003e\u003c/sub\u003e + \u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003emax\u003c/i\u003e\u003c/sub\u003e - \u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e3\u003c/sub\u003e\u003c/span\u003e and can be increased by decreasing \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e3\u003c/sub\u003e\u003c/span\u003e. For that reason, the answer is given by \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e3\u003c/sub\u003e \u003d \u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003emax\u003c/i\u003e\u003c/sub\u003e \u003d \u003ci\u003emax\u003c/i\u003e(\u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e, \u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e)\u003c/span\u003e.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eOverall Complexity:\u003c/strong\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(1)\u003c/span\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eCode(\u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/tomasf\" title\u003d\"Кандидат в мастера tomasf\"\u003etomasf\u003c/a\u003e):\u003c/strong\u003e \u003ca href\u003d\"https://pastebin.com/g9crgMxf\"\u003eLink\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003ch4\u003e\u003ca href\u003d\"//codeforces.com/gym/101484/problem/K\"\u003eK — Counting Good Teams\u003c/a\u003e\u003c/h4\u003e\u003cp\u003e\u003cstrong\u003eProblem author:\u003c/strong\u003e \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/tomasf\" title\u003d\"Candidate Master tomasf\"\u003etomasf\u003c/a\u003e\u003c/p\u003e \u003cdiv class\u003d\"spoiler\"\u003e\u003cb class\u003d\"spoiler-title\"\u003eSolution\u003c/b\u003e\u003cdiv class\u003d\"spoiler-content\" style\u003d\"display: none;\"\u003e\u003cp\u003e\u003cstrong\u003eEditorial author:\u003c/strong\u003e \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/tomasf\" title\u003d\"Кандидат в мастера tomasf\"\u003etomasf\u003c/a\u003e\u003c/p\u003e\u003cp\u003eLet\u0027s calculate the number of bad teams (teams that have at least one member that knows everything the other member knows) and subtract from the number of all possible teams. In other words, let\u0027s find out the number of distinct pairs \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e, \u003ci\u003ej\u003c/i\u003e\u003c/span\u003e in which the bitmask of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e is a submask of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eTo count the number of bad teams we can use a meet-in-the-middle approach. For every member \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e, let\u0027s split the bitmask \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e into \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003csup class\u003d\"upper-index\"\u003e1\u003c/sup\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e\u003c/span\u003e, the former containing the first \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/56/dd/56dd9f30afe7c46a1501d9bddad628a79a5c9fbd.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e bits of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e and the latter containing the rest. \u003c/p\u003e\u003cp\u003eLet\u0027s define a concatenation operator \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/38/f4/38f4277eba75b0c83cc6ccf47388e8b41b198dfb.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e that concatenates two bitmasks. For example: \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/f9/93/f993ad8e91f666ce25a034c29495d03421f23663.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. Let\u0027s also define \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eS\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e↑\u003c/sub\u003e(\u003ci\u003emask\u003c/i\u003e)\u003c/span\u003e as the set of all bitmasks \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e of the same size of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003emask\u003c/i\u003e\u003c/span\u003e so that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003emask\u003c/i\u003e\u003c/span\u003e is a submask of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e. Likewise, let\u0027s define \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eS\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e↓\u003c/sub\u003e(\u003ci\u003emask\u003c/i\u003e)\u003c/span\u003e as the set of all bitmasks \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e of the same size of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003emask\u003c/i\u003e\u003c/span\u003e so that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e is submask of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003emask\u003c/i\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eFor pairs of distinct masks \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e, the intersection of \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/c8/ac/c8ac26ef4ec55fb6115a1009bafd28716cd9a82c.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e with \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/5e/68/5e68b6e84fd32fd9dfaac2230d964499eb4c30fd.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e has exactly one element if \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e is submask of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e and none otherwise. \u003c/p\u003e\u003cp\u003eLet\u0027s count the occurrence \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ecnt\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/sub\u003e\u003csup class\u003d\"upper-index\"\u003e↑\u003c/sup\u003e\u003c/span\u003e of each mask \u003cspan class\u003d\"tex-span\"\u003e0 ≤ \u003ci\u003ek\u003c/i\u003e \u0026lt; 2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003eM\u003c/i\u003e\u003c/sup\u003e\u003c/span\u003e when computing \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/c8/ac/c8ac26ef4ec55fb6115a1009bafd28716cd9a82c.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e for every mask \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e given in the input, and do the same for \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/57/40/574071231483f9747b05a15fe54e54f1b54b03a8.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, counting the occurrence \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ecnt\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/sub\u003e\u003csup class\u003d\"upper-index\"\u003e↓\u003c/sup\u003e\u003c/span\u003e of the mask \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eAfter handling with the pairs that have identical bitmasks, the number of bad teams is given by \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/c5/58/c5587be94ff7728a77ba5088a3dc5371d362d62c.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eOverall Complexity:\u003c/strong\u003e \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003eM\u003c/i\u003e\u003c/sup\u003e + \u003ci\u003eN\u003c/i\u003e·2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003eM\u003c/i\u003e / 2\u003c/sup\u003e)\u003c/span\u003e\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eCode(\u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/tomasf\" title\u003d\"Кандидат в мастера tomasf\"\u003etomasf\u003c/a\u003e):\u003c/strong\u003e \u003ca href\u003d\"https://pastebin.com/csuCBPzw\"\u003eLink\u003c/a\u003e, \u003ca href\u003d\"https://pastebin.com/Mn8PzcNP\"\u003eLink\u003c/a\u003e (alternative \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e·2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003eM\u003c/i\u003e / 2\u003c/sup\u003e)\u003c/span\u003e meet-in-the-middle solution)\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e","tags":[]}}