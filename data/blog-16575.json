{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1424628528,"rating":3,"authorHandle":"Armyx","modificationTimeSeconds":1424628528,"id":16575,"title":"\u003cp\u003eFinding words with missing letters\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eI was thinking about the problem I got at one of my exams at my university\u003c/p\u003e\u003cp\u003eGiven a set of N words and M queries ( word s and number q) . To each query, my program should print YES if it is possible to form a word that is present in a set. I am allowed to add max q letters to given word s, but I can\u0027t change letter orders.\u003c/p\u003e\u003cp\u003eFor example Given set S \u003d { aataaf, cdef, bbb } and queries\u003c/p\u003e\u003cp\u003eaaaa 2 \u003d\u0026gt; YES, because I added t and f\u003c/p\u003e\u003cp\u003efcd 1 \u003d\u0026gt; NO\u003c/p\u003e\u003cp\u003eI solved this using prefix tree, but is there a better way to solve this ? Complexity of prefix tree might be exponential or I implemented it in a wrong way. During my exam I was allowed to write brute force, but I found it interesting and that is why I am asking you for help\u003c/p\u003e\u003c/div\u003e","tags":["prefix tree","string"]}}