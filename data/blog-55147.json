{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1507824986,"rating":0,"authorHandle":"acmASCIS","modificationTimeSeconds":1507824986,"id":55147,"title":"\u003cp\u003eWeek02 â€” Greedy\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003ch1\u003eWhat is Greedy technique?\u003c/h1\u003e\u003cp\u003eA greedy technique, as the name suggests, always makes the choice that seems to be the best at that moment. This means that it makes a locally-optimal choice in the hope that this choice will lead to a globally-optimal solution.\u003c/p\u003e\u003ch2\u003eHow do you decide which choice is optimal?\u003c/h2\u003e \u003chr /\u003e\u003cp\u003eAssume that you have some function that need to be optimized (either maximized or minimized) at a given point. A Greedy technique makes greedy choices at each step to ensure that the function is optimized. The Greedy technique has only one shot to compute the optimal solution so that it never goes back and undo it \u003c/p\u003e\u003ch2\u003eGreedy technique has some advantages and disadvantages:\u003c/h2\u003e \u003chr /\u003e \u003col\u003e   \u003cli\u003eIt is quite easy to come up with a greedy algorithm (or even multiple greedy algorithms) for a problem.\u003c/li\u003e   \u003cli\u003eThe difficult part is that for greedy algorithms you have to work much harder to understand correctness issues. Even with the correct algorithm, it is hard to prove why it is correct.\u003c/li\u003e \u003c/ol\u003e\u003ch3\u003eExample:\u003c/h3\u003e\u003cp\u003eBeing a very busy person, you have exactly T time to do some interesting things and you want to do maximum such things. You are given an list A of integers, where each element indicates the time a thing takes for completion. You want to calculate the maximum number of things that you can do in the limited time that you have. This is a simple Greedy-algorithm problem. In each iteration, you have to greedily select the things which will take the minimum amount of time to complete while maintaining two variables currentTime and numberOfThings. To complete the calculation, you must:\u003c/p\u003e \u003col\u003e   \u003cli\u003e\u003cp\u003eSort the list A in a non-decreasing order.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eSelect each to-do item one-by-one.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eAdd the time that it will take to complete that to-do item into currentTime.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eAdd one to numberOfThings.\u003c/p\u003e\u003c/li\u003e \u003c/ol\u003e\u003cp\u003eRepeat this as long as the currentTime is less than or equal to T.\u003c/p\u003e\u003cp\u003eLet A \u003d {5, 3, 4, 2, 1} and T \u003d 6\u003c/p\u003e\u003cp\u003eAfter sorting, A \u003d {1, 2, 3, 4, 5}\u003c/p\u003e\u003cp\u003e\u003cem\u003eAfter the 1st iteration:\u003c/em\u003e\u003c/p\u003e \u003cul\u003e   \u003cli\u003e\u003cp\u003ecurrentTime \u003d 1\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003enumberOfThings \u003d 1\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e\u003cp\u003e\u003cem\u003eAfter the 2nd iteration:\u003c/em\u003e\u003c/p\u003e \u003cul\u003e   \u003cli\u003e\u003cp\u003ecurrentTime is 1 + 2 \u003d 3\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003enumberOfThings \u003d 2\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e\u003cp\u003e\u003cem\u003eAfter the 3rd iteration:\u003c/em\u003e\u003c/p\u003e \u003cul\u003e   \u003cli\u003e\u003cp\u003ecurrentTime is 3 + 3 \u003d 6\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003enumberOfThings \u003d 3\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e\u003cp\u003eAfter the 4th iteration, currentTime is 6 + 4 \u003d 10, which is greater than T. Therefore, the answer is 3.\u003c/p\u003e\u003ch3\u003eReferences \u0026amp; Videos:\u003c/h3\u003e\u003cp\u003e\u003ca href\u003d\"http://https://www.hackerearth.com/practice/algorithms/greedy/basics-of-greedy-algorithms/tutorial/\"\u003eBasics of Greedy Algorithms\u003c/a\u003e \u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.youtube.com/watch?v\u003d3XaqEng_K5s\"\u003ehttps://www.youtube.com/watch?v\u003d3XaqEng_K5s\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.youtube.com/watch?v\u003dHzeK7g8cD0Y\u0026amp;t\u003d82s\"\u003ehttps://www.youtube.com/watch?v\u003dHzeK7g8cD0Y\u0026amp;t\u003d82s\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.youtube.com/watch?v\u003d0B_Ocir2maU\u0026amp;t\u003d10s\"\u003ehttps://www.youtube.com/watch?v\u003d0B_Ocir2maU\u0026amp;t\u003d10s\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://www.youtube.com/watch?v\u003dU8QPW7-SqyM\"\u003ehttps://www.youtube.com/watch?v\u003dU8QPW7-SqyM\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e","tags":[]}}