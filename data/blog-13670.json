{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":false,"creationTimeSeconds":1409732062,"rating":8,"authorHandle":"RodionGork","modificationTimeSeconds":1409732078,"id":13670,"title":"\u003cp\u003e3 млн человек на магнитной ленте :)\u003c/p\u003e","locale":"ru","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eНедавно \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/AlexanderBolshakov\" title\u003d\"Candidate Master AlexanderBolshakov\"\u003eAlexanderBolshakov\u003c/a\u003e показал в \u003ca href\u003d\"http://codeforces.ru/blog/entry/13669\"\u003eэтом посте\u003c/a\u003e — который без сомнения скоро канет в небытие потому что его заминусовали — несколько интересных задач со старинной олимпиады. С \u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/Zlobober\" title\u003d\"Grandmaster Zlobober\"\u003eZlobober\u003c/a\u003e стали они обсуждать задачу T4:\u003c/p\u003e\u003cp\u003e3млн человек с разными фамилиями выстроились в одну колонну и записали каждый у себя на бумажке фамилию свою и стоящего впереди (кроме первого). Бумажки у них отобрали, перемешали и в произвольном порядке в виде пар фамилий записали на магнитную ленту (односвязный список).\u003c/p\u003e\u003cp\u003eКак возможно быстрее узнать фамилию человека на \u003ccode\u003e1234567\u003c/code\u003e месте? Ограничение по памяти — не более 32 магнитных лент (списков) и не более 64кб памяти с произвольным доступом.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eА правда, как это решать?\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eМне на ум приходит пока следующее:\u003c/p\u003e\u003cp\u003eНу сначала препроцессим данные — отсортируем и заменим фамилии на порядковые номера по алфавиту например, после чего исходную ленту перезапишем в виде пары чисел. Это у нас займёт \u003ccode\u003eO(N*logN)\u003c/code\u003e.\u003c/p\u003e\u003cp\u003eДальше из исходной ленты мы создадим две копии и отсортируем каждую — одну по порядку возрастания собственных фамилий, другую по порядку возрастания предшествующих.\u003c/p\u003e\u003cp\u003eДопустим если фамилии были однобуквенные и люди стояли так:\u003c/p\u003e \u003cpre\u003eA D R O C I T E\u003c/pre\u003e\u003cp\u003eТо после этого шага (который тоже займёт \u003ccode\u003eO(N*logN)\u003c/code\u003e) у нас будет две ленты:\u003c/p\u003e \u003cpre\u003eAD CI DR IT OC RO TE\nOC AD TE CI RO DR IT\u003c/pre\u003e\u003cp\u003eЭти пары можно явно слить за один проход в тройки (отбрасывая \u003ccode\u003eAD\u003c/code\u003e и \u003ccode\u003eTE\u003c/code\u003e как концевые по тому признаку что для них нет пары):\u003c/p\u003e \u003cpre\u003eOCI ADR CIT ROC DRO ITE\u003c/pre\u003e\u003cp\u003eЭти тройки я опять могу скопировать и отсортировать по первым и последним буквам, потом слить и получить пятёрки, дальше фрагменты по \u003ccode\u003e9\u003c/code\u003e, \u003ccode\u003e17\u003c/code\u003e и т.п. Собственно хранить эти фрагменты целиком необязательно, от каждого нужна первая и последняя буквы.\u003c/p\u003e\u003cp\u003eОт каждого шага будем оставлять по одной отсортированной (по первым буквам) ленте — с двойками, тройками, пятёрками, девятками... Так у нас будут ленты с фрагментами длиной до \u003ccode\u003e2^20\u003c/code\u003e и их формирование займёт \u003ccode\u003eO(N*logN^2)\u003c/code\u003e по-моему.\u003c/p\u003e\u003cp\u003eВ принципе после этого я могу любую фамилию на этих лентах отыскать также за \u003ccode\u003eO(N*logN)\u003c/code\u003e.\u003c/p\u003e\u003cp\u003eНо мне сдаётся что у меня получается много лишних действий (хранение ненужных фрагментов в том числе) избавившись от которых можно было бы формирование лент ужать до \u003ccode\u003eO(N*logN)\u003c/code\u003e. Кроме того Я ни на одном шаге не попытался использовать память с произвольным доступом.\u003c/p\u003e\u003cp\u003eПравильны ли мои размышления и что тут можно улучшить?\u003c/p\u003e\u003cp\u003eВ то же время я подозреваю что лучше чем \u003ccode\u003eO(N*logN)\u003c/code\u003e сделать в принципе нельзя, но в зависимости от ухищрений константа может быть очень разная.\u003c/p\u003e\u003c/div\u003e","tags":["магнитохвоны по вызыткам"]}}