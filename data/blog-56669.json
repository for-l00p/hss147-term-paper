{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1514410108,"rating":0,"authorHandle":"ValgesMalges","modificationTimeSeconds":1514411089,"id":56669,"title":"\u003cp\u003eWeek 2\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eYesterday we discussed cumulative sum, \u003c/p\u003e\u003cp\u003eFirst we solved this basic problem on the topic, start by solving it. \u003ca href\u003d\"http://www.spoj.com/problems/CSUMQ/\"\u003ehttp://www.spoj.com/problems/CSUMQ/\u003c/a\u003e\u003c/p\u003e\u003cp\u003eHere is the code for it: \u003ca href\u003d\"http://ideone.com/ByTNzh\"\u003ehttp://ideone.com/ByTNzh\u003c/a\u003e\u003c/p\u003e\u003cp\u003eyou can also try this problem on UVA online judge\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"https://uva.onlinejudge.org/index.php?option\u003donlinejudge\u0026amp;page\u003dshow_problem\u0026amp;problem\u003d1265\"\u003ehttps://uva.onlinejudge.org/index.php?option\u003donlinejudge\u0026amp;page\u003dshow_problem\u0026amp;problem\u003d1265\u003c/a\u003e\u003c/p\u003e\u003cp\u003enow we used pair and vector in our implementation for one of the problems, when you use a vector you should always include it by using this line\u003c/p\u003e\u003cp\u003e\u0026quot; #include  \u0026quot;\u003c/p\u003e\u003cp\u003eyou define a vector as follows \u003c/p\u003e\u003cp\u003evector  name;\u003c/p\u003e\u003cp\u003ealways resize the vector so you would not get a run time error \u003c/p\u003e\u003cp\u003ename.resize(size);\u003c/p\u003e\u003cp\u003eyou can sort a vector using function sort from the algorithm library -don\u0027t forget to include it- \u003c/p\u003e\u003cp\u003e\u0026quot; #include  \u0026quot;\u003c/p\u003e\u003cp\u003esort (vname.begin(), vname.end());\u003c/p\u003e\u003cp\u003eto search for a value in a SORTED vector you can use the function lower_bound\u003c/p\u003e\u003cp\u003evector  v;\u003c/p\u003e\u003cp\u003evector  :: iterator x \u003d lower_bound(v.begin(), v.end(), value);\u003c/p\u003e\u003cp\u003ethis function will return a pointer that points to the first element in the array that is \u0026gt;\u003d value if such value does not exist in the vector the pointer will point to v.end() which is after the last element in the vector\u003c/p\u003e\u003cp\u003eusing pairs\u003c/p\u003e\u003cp\u003epair \u0026lt;data type, data type\u0026gt; x;\u003c/p\u003e\u003cp\u003ex \u003d make_pair (a,b);\u003c/p\u003e\u003cp\u003ea \u003d x.first \u003c/p\u003e\u003cp\u003eb\u003d x.second\u003c/p\u003e\u003c/div\u003e","tags":[]}}