{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":true,"creationTimeSeconds":1435672238,"rating":0,"authorHandle":"DedMaxim","modificationTimeSeconds":1438108798,"id":18992,"title":"\u003cp\u003eРеализация Merge Sort на Pascal (UPD: и на C++)\u003c/p\u003e","locale":"ru","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cpre\u003e\u003ccode\u003eProgram Merge_sort;\n\nuses \n\tSysUtils, Math;\n\nconst MAX \u003d 100000;\n\nVar \n\tb : array[1..MAX] of longint;\n\tn, i : longint;\n\nprocedure sort(var a : array of longint; Left, Right : longint);\n\tvar \n\t\thelp : array[1..MAX] of longint;\n\tprocedure merge_sort(l, r : longint);\n\tvar \n\t\tmid, cnt1, cnt2, k, i: longint;\n\tbegin\n\t\tif (r - l + 1 \u003d 1)  then exit; \n\t\tmid :\u003d (l + r) div 2;\n\t\tmerge_sort(l, mid);\n\t\tmerge_sort(mid + 1, r);\n\t\tcnt1 :\u003d l; cnt2 :\u003d mid + 1;\n\t\tk :\u003d 1;\n\t\twhile ((cnt1 \u0026lt;\u0026gt; mid + 1) and (cnt2 \u0026lt;\u0026gt; r + 1)) do \n\t\tbegin\n\t\t\tif (a[cnt1] \u0026lt; a[cnt2]) then\n\t\t\tbegin\n\t\t\t\thelp[k] :\u003d a[cnt1];\n\t\t\t\tk :\u003d k + 1;\n\t\t\t\tcnt1 :\u003d cnt1 + 1;\n\t\t\tend else\n\t\t\tbegin\n\t\t\t\thelp[k] :\u003d a[cnt2];\n\t\t\t\tk :\u003d k + 1;\n\t\t\t\tcnt2 :\u003d cnt2 + 1;\n\t\t\tend;\n\t\tend;\n\t\tfor i :\u003d cnt1 to mid do\n\t\tbegin\n\t\t\thelp[k] :\u003d a[i];\n\t\t\tk :\u003d k + 1;\n\t\tend;\n\t\tfor i :\u003d cnt2 to r do\n\t\tbegin\n\t\t\thelp[k] :\u003d a[i];\n\t\t\tk :\u003d k + 1;\n\t\tend;\n\t\tfor i :\u003d 1 to r - l + 1 do\n\t\t\ta[i + l - 1] :\u003d help[i];\n\tend;\nbegin\n\tmerge_sort(Left - 1, Right - 1);\nend;\n\nbegin\n\tread(n);\n\tfor i :\u003d 1 to n do \n\t\tread(b[i]);\n\tsort(b, 1, n);\n\tfor i :\u003d 1 to n do\n\t\twrite(b[i], \u0027 \u0027);\nend.\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cstrong\u003eC++:\u003c/strong\u003e\u003c/p\u003e \u003cpre\u003e\u003ccode\u003evoid merge_sort(int *a, int first, int last)\n{\n    if (last - first \u0026gt; 1) {\n        int middle \u003d (first + last) / 2;\n        merge_sort(a, first, middle);\n        merge_sort(a, middle, last);\n        std::inplace_merge(a + first, a + middle, a + last);\n    }\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":[]}}