{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":false,"creationTimeSeconds":1422647079,"rating":81,"authorHandle":"AlexDmitriev","modificationTimeSeconds":1423328026,"id":16119,"title":"\u003cp\u003eTutorial CodeForces Round 289 (Div.2) (Second Winter Computer Camp Selection 2015)\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e\u003ca href\u003d\"/contest/509/problem/A\" title\u003d\"Codeforces Round 289 (Div. 2, ACM ICPC Rules)\"\u003e509A - Maximum in Table\u003c/a\u003e\u003c/p\u003e\u003cp\u003eIn this problem one needed to implement what was written in the statement: create matrix (two-dimensional array) using given rules and find maximal value in the table.\u003c/p\u003e\u003cp\u003eIt is also possible to see that maximal element is always in bottom-right corner.\u003c/p\u003e\u003cp\u003eEasier solution with recursion also was enough to get AC:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003edef elem(row, col):\n    if row \u003d\u003d 1 or col \u003d\u003d 1:\n        return 1\n    return elem(row - 1, col) + elem(row, col - 1)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eOne may see the \u003ca href\u003d\"http://en.wikipedia.org/wiki/Pascal%27s_triangle\"\u003ePascal\u0027s triangle\u003c/a\u003e in the given matrix and understand that answer is equal to \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/83/fa/83faefa32c157abd87af36837cfab7976de353fa.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003ePrepared by: \u003ca class\u003d\"rated-user user-orange\" href\u003d\"/profile/AlexDmitriev\" title\u003d\"Master AlexDmitriev\"\u003eAlexDmitriev\u003c/a\u003e\u003cbr /\u003eAuthor of editorial: \u003ca class\u003d\"rated-user user-orange\" href\u003d\"/profile/AlexDmitriev\" title\u003d\"Master AlexDmitriev\"\u003eAlexDmitriev\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"/contest/509/problem/B\" title\u003d\"Codeforces Round 289 (Div. 2, ACM ICPC Rules)\"\u003e509B - Painting Pebbles\u003c/a\u003e\u003c/p\u003e\u003cp\u003eSuppose there are two piles with number of pebbles differed by more than \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e, then there is no solution:\u003c/p\u003e\u003cp\u003e\u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/e8/dd/e8dddf8f682bce978c4de279cc36e3961cb4b84a.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e\u003c/p\u003e\u003cp\u003eNow let \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eM\u003c/i\u003e \u003d \u003ci\u003emax\u003c/i\u003e \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e ≤ \u003ci\u003emin\u003c/i\u003e \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e + \u003ci\u003ek\u003c/i\u003e \u003d \u003ci\u003em\u003c/i\u003e + \u003ci\u003ek\u003c/i\u003e\u003c/span\u003e.\u003cbr /\u003eThere\u0027s a way to construct correct coloring: \u003c/p\u003e \u003cul\u003e   \u003cli\u003eChose \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/span\u003e peebles from each pile and assign first color to them.\u003c/li\u003e   \u003cli\u003eIn each pile assign different colors to all other pebbles (you may use first color once more) (It\u0027s possible bacause there are no more than \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e uncolored pebbles.\u003c/li\u003e \u003c/ul\u003e\u003cp\u003eNow there are \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/span\u003e or \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e + 1\u003c/span\u003e pebbles of first color and 0 or 1 pebbles of any other color in each pile.\u003c/p\u003e\u003cp\u003ePrepared by: \u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/Kostroma\" title\u003d\"Grandmaster Kostroma\"\u003eKostroma\u003c/a\u003e\u003cbr /\u003eAuthor of editorial: \u003ca class\u003d\"rated-user user-orange\" href\u003d\"/profile/AlexDmitriev\" title\u003d\"Master AlexDmitriev\"\u003eAlexDmitriev\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"/contest/509/problem/C\" title\u003d\"Codeforces Round 289 (Div. 2, ACM ICPC Rules)\"\u003e509C - Sums of Digits\u003c/a\u003e\u003c/p\u003e\u003cp\u003eThe algorithm is greedy: first, take the minimal number with sum of digits \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/span\u003e — call it \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/span\u003e. Then, on the \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e-th step take \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e as the minimal number with sum of digits \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e, which is more than \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e - 1\u003c/sub\u003e\u003c/span\u003e. \u003c/p\u003e\u003cp\u003eIt can be easily proven that this algorithm gives an optimal answer. But how to solve the subproblem: given \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ey\u003c/i\u003e\u003c/span\u003e, find the minimal number with sum of digits \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e, which is more than \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ey\u003c/i\u003e\u003c/span\u003e? \u003c/p\u003e\u003cp\u003eWe use a standard approach: iterate through the digits of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ey\u003c/i\u003e\u003c/span\u003e from right to left, trying to increase the current digit and somehow change the digits to the right in order to reach the sum of digits equal to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e. Note that if we are considering the \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ek\u003c/i\u003e + 1)\u003c/span\u003e-th digit from the right and increase it, we can make the sum of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e least significant digits to be any number between \u003cspan class\u003d\"tex-span\"\u003e0\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e9\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e. When we find such position, that increasing a digit in it and changing the least significant digits gives us a number with sum of digits \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e, we stop the process and obtain the answer. Note that if \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e least significant digits should have sum \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/span\u003e (where \u003cspan class\u003d\"tex-span\"\u003e0 ≤ \u003ci\u003em\u003c/i\u003e ≤ 9\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e), we should obtain the answer greedily, going from the right to the left and putting to the position the largest digit we can. \u003c/p\u003e\u003cp\u003eLet us bound the maximal length of the answer, i.e. of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e. If some \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e has at least \u003cspan class\u003d\"tex-span\"\u003e40\u003c/span\u003e digits, than we take the minimal \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e such that \u003cspan class\u003d\"tex-span\"\u003e10\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/sup\u003e ≥ \u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e. Than between \u003cspan class\u003d\"tex-span\"\u003e10\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/sup\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e10\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ek\u003c/i\u003e + 1\u003c/sup\u003e\u003c/span\u003e there exist numbers with any sum of digits between \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e9\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e. If \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e ≥ 40\u003c/span\u003e, than \u003cspan class\u003d\"tex-span\"\u003e9\u003ci\u003ek\u003c/i\u003e ≥ 300\u003c/span\u003e, which is the upper bound of all \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e. So, in the constraints of the problem, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e + 1\u003c/sub\u003e\u003c/span\u003e will be less than \u003cspan class\u003d\"tex-span\"\u003e10\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ek\u003c/i\u003e + 1\u003c/sup\u003e\u003c/span\u003e. Than, similarly, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e + 2\u003c/sub\u003e \u0026lt; 10\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ek\u003c/i\u003e + 2\u003c/sup\u003e\u003c/span\u003e and so on. So, the length of the answer increases by no more than one after reaching the length of \u003cspan class\u003d\"tex-span\"\u003e40\u003c/span\u003e. Consequently, the maximal length of the answer can\u0027t be more than \u003cspan class\u003d\"tex-span\"\u003e340\u003c/span\u003e. \u003c/p\u003e\u003cp\u003eThe complexity of solution is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e·\u003ci\u003emaxLen\u003c/i\u003e)\u003c/span\u003e. Since \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e ≤ 300\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003emaxLen\u003c/i\u003e ≤ 340\u003c/span\u003e, the solution runs much faster the time limit.\u003c/p\u003e\u003cp\u003ePrepared by: \u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/Endagorion\" title\u003d\"Grandmaster Endagorion\"\u003eEndagorion\u003c/a\u003e\u003cbr /\u003eAuthor of editorial: \u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/Kostroma\" title\u003d\"Grandmaster Kostroma\"\u003eKostroma\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"/contest/509/problem/D\" title\u003d\"Codeforces Round 289 (Div. 2, ACM ICPC Rules)\"\u003e509D - Restoring Numbers\u003c/a\u003e\u003c/p\u003e\u003cp\u003eFirst we note that if the sequences \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e are a valid solution, then so are the sequences \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e - \u003ci\u003eP\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e + \u003ci\u003eP\u003c/i\u003e\u003c/span\u003e for any integer \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eP\u003c/i\u003e\u003c/span\u003e. This means that we can consider \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/span\u003e to be equal to 0 which allows us to recover the sequence \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e by simply taking the first row of the matrix. Knowing \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e we can also recover \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e (for example by subtracting \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e\u003c/span\u003e from the first column of the matrix) At this stage we allow \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e to contain negative numbers, which can be later fixed by adding \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eK\u003c/i\u003e\u003c/span\u003e a sufficient amount of times. Now we consider the “error” matrix \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ee\u003c/i\u003e\u003c/span\u003e: \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/38/41/3841816599f7043be51f9dde6ba282ef39050ce2.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e.\u003c/p\u003e\u003cp\u003eIf \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ee\u003c/i\u003e\u003c/span\u003e consists entirely of 0s, then we’ve found our solution by taking a sufficiently large \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eK\u003c/i\u003e\u003c/span\u003e. That is: \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eK\u003c/i\u003e \u0026gt; \u003ci\u003emax\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e, \u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e(\u003ci\u003ew\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e, \u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e)\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eOtherwise, we note that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ee\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e, \u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e \u003d 0(\u003ci\u003emodK\u003c/i\u003e)\u003c/span\u003e which implies that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eK\u003c/i\u003e\u003c/span\u003e is a divisor of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eg\u003c/i\u003e \u003d \u003ci\u003egcd\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e, \u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e(\u003ci\u003ee\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e, \u003ci\u003ej\u003c/i\u003e\u003c/sub\u003e)\u003c/span\u003e. The greatest such number is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eg\u003c/i\u003e\u003c/span\u003e itself, so all that remains is to check if \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eg\u003c/i\u003e\u003c/span\u003e is strictly greater than all the elements of the matrix \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ew\u003c/i\u003e\u003c/span\u003e. If that is the case, then we’ve found our solution by setting \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eK\u003c/i\u003e \u003d \u003ci\u003eg\u003c/i\u003e\u003c/span\u003e. Otherwise, there’s no solution.\u003c/p\u003e\u003cp\u003ePrepared by: \u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/Kostroma\" title\u003d\"Grandmaster Kostroma\"\u003eKostroma\u003c/a\u003e, \u003ca class\u003d\"rated-user user-orange\" href\u003d\"/profile/AlexDmitriev\" title\u003d\"Master AlexDmitriev\"\u003eAlexDmitriev\u003c/a\u003e\u003cbr /\u003eAuthor of editorial: \u003ca class\u003d\"rated-user user-orange\" href\u003d\"/profile/AlexDmitriev\" title\u003d\"Master AlexDmitriev\"\u003eAlexDmitriev\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"/contest/509/problem/E\" title\u003d\"Codeforces Round 289 (Div. 2, ACM ICPC Rules)\"\u003e509E - Pretty Song\u003c/a\u003e\u003c/p\u003e\u003cp\u003eWe first calculate the prefix sums of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003evowel\u003c/i\u003e(\u003ci\u003es\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e)\u003c/span\u003e which allows to calculate the sum of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003evowel\u003c/i\u003e(\u003ci\u003es\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/sub\u003e)\u003c/span\u003e on any substring in \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(1)\u003c/span\u003e time.\u003c/p\u003e\u003cp\u003eFor all \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/span\u003e from \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e to \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/cc/da/ccda07759cbc3798e302473ba252162fc56eb5a1.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, we will calculate the sum of simple pretinesses of all substrings of that length, let’s call it \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eSP\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e. For that purpose, let’s calculate the number of times the \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e-th character of the string \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003es\u003c/i\u003e\u003c/span\u003e is included in this sum. \u003c/p\u003e\u003cp\u003eFor \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e \u003d 1\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e \u003d |\u003ci\u003es\u003c/i\u003e|\u003c/span\u003e, every character is included exactly 1 time. For \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e \u003d 2\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e \u003d |\u003ci\u003es\u003c/i\u003e| - 1\u003c/span\u003e, the first and the last character are included 1 time and all other characters are included 2 times. For \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e \u003d 3\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e \u003d |\u003ci\u003es\u003c/i\u003e| - 2\u003c/span\u003e the first and the last character are included 1 time, the second and the pre-last character are included 2 times and all others are included 3 times, and so on.\u003c/p\u003e\u003cp\u003eIn general, the \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e-th character is included \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003emin\u003c/i\u003e(\u003ci\u003em\u003c/i\u003e, |\u003ci\u003es\u003c/i\u003e| - \u003ci\u003em\u003c/i\u003e + 1, \u003ci\u003ei\u003c/i\u003e, |\u003ci\u003es\u003c/i\u003e| — \u003ci\u003ei\u003c/i\u003e + 1)\u003c/span\u003e times. Note that when moving from substrings of length \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/span\u003e to substrings of length \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e + 1\u003c/span\u003e, there are 2 ways in which the sum \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eSP\u003c/i\u003e\u003c/span\u003e can change:\u003c/p\u003e \u003col\u003e   \u003cli\u003eIf \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e \u0026gt; |\u003ci\u003es\u003c/i\u003e| - \u003ci\u003em\u003c/i\u003e + 1\u003c/span\u003e, then \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eSP\u003c/i\u003e\u003c/span\u003e is decreased by the number of vowel occurrences in the substring from \u003cspan class\u003d\"tex-span\"\u003e|\u003ci\u003es\u003c/i\u003e| - \u003ci\u003em\u003c/i\u003e + 1\u003c/span\u003e to \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/span\u003e.\u003c/li\u003e   \u003cli\u003eOtherwise, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eSP\u003c/i\u003e\u003c/span\u003e is increased by the number of vowel occurrences in the substring from \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/span\u003e to \u003cspan class\u003d\"tex-span\"\u003e|\u003ci\u003es\u003c/i\u003e| - \u003ci\u003em\u003c/i\u003e + 1\u003c/span\u003e.\u003c/li\u003e \u003c/ol\u003e\u003cp\u003eThis way we can easily recalculate \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eSP\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003em\u003c/i\u003e + 1\u003c/sub\u003e\u003c/span\u003e using \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eSP\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003em\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e by adding (subtracting) the number of vowel occurrences on a substring (which is done in \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(1)\u003c/span\u003e time). The complexity of this solution is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e)\u003c/span\u003e.\u003c/p\u003e\u003cp\u003ePrepared by: \u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/zemen\" title\u003d\"Grandmaster zemen\"\u003ezemen\u003c/a\u003e\u003cbr /\u003eAuthor of editorial: \u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/zemen\" title\u003d\"Grandmaster zemen\"\u003ezemen\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"/contest/509/problem/F\" title\u003d\"Codeforces Round 289 (Div. 2, ACM ICPC Rules)\"\u003e509F - Progress Monitoring\u003c/a\u003e\u003c/p\u003e\u003cp\u003eConsider a tree with \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e vertices rooted at vertex 1 and let \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/span\u003e be the pseudocode’s (DFS) resulting sequence. Then \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e[\u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ev\u003c/i\u003e\u003c/sub\u003e..\u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ev\u003c/i\u003e\u003c/sub\u003e + \u003ci\u003esize\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ev\u003c/i\u003e\u003c/sub\u003e - 1]\u003c/span\u003e, represents vertex \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e\u003c/span\u003e’s subtree, where \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ev\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e is the index of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ev\u003c/i\u003e\u003c/span\u003e in \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003esize\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ev\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e is the size of $v$’s subtree.\u003c/p\u003e\u003cp\u003eLet’s solve the problem using this fact and Dynamic Programming. Let \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ee\u003c/i\u003e[\u003ci\u003el\u003c/i\u003e, \u003ci\u003er\u003c/i\u003e]\u003c/span\u003e be the number of trees consisting of vertices \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e[\u003ci\u003el\u003c/i\u003e], \u003ci\u003ea\u003c/i\u003e[\u003ci\u003el\u003c/i\u003e + 1], …, \u003ci\u003ea\u003c/i\u003e[\u003ci\u003er\u003c/i\u003e]\u003c/span\u003e such that running DFS starting from \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e[\u003ci\u003el\u003c/i\u003e]\u003c/span\u003e will result in a sequence with vertices in the same order as their order in \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/span\u003e. \u003c/p\u003e\u003cp\u003eThe base case is when \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e \u003d \u003ci\u003er\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ee\u003c/i\u003e[\u003ci\u003el\u003c/i\u003e, \u003ci\u003er\u003c/i\u003e] \u003d 1\u003c/span\u003e. Otherwise, \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/ab/a4/aba46866e7e11ebd916663b31cfa35a0b9c3e78e.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e where the sum is taken over all partitions of the segment \u003cspan class\u003d\"tex-span\"\u003e[\u003ci\u003el\u003c/i\u003e + 1, \u003ci\u003er\u003c/i\u003e]\u003c/span\u003e, that is, over all \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e;\u003ci\u003epos\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e, ..., \u003ci\u003epos\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ek\u003c/i\u003e + 1\u003c/sub\u003e\u003c/span\u003e, such that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003el\u003c/i\u003e + 1 \u003d \u003ci\u003epos\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e \u0026lt; \u003ci\u003epos\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e \u0026lt; ... \u0026lt; \u003ci\u003epos\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ek\u003c/i\u003e + 1\u003c/sub\u003e \u003d \u003ci\u003er\u003c/i\u003e\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e1 ≤ \u003ci\u003ek\u003c/i\u003e ≤ \u003ci\u003er\u003c/i\u003e - \u003ci\u003el\u003c/i\u003e\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e[\u003ci\u003epos\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e] \u0026lt; \u003ci\u003ea\u003c/i\u003e[\u003ci\u003epos\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e2\u003c/sub\u003e] \u0026lt; ... \u0026lt; \u003ci\u003ea\u003c/i\u003e[\u003ci\u003epos\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/sub\u003e]\u003c/span\u003e. Each such partition represents a different way to distribute the vertices among \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e[\u003ci\u003el\u003c/i\u003e]\u003c/span\u003e’s children’s subtrees. A solution using this formula for calculating \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ee\u003c/i\u003e[\u003ci\u003el\u003c/i\u003e, \u003ci\u003er\u003c/i\u003e]\u003c/span\u003e will have an exponential running time.\u003c/p\u003e\u003cp\u003eThe final idea is to introduce \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ed\u003c/i\u003e[\u003ci\u003el\u003c/i\u003e, \u003ci\u003er\u003c/i\u003e]:  \u003d \u003ci\u003ee\u003c/i\u003e[\u003ci\u003el\u003c/i\u003e - 1, \u003ci\u003er\u003c/i\u003e], 2 ≤ \u003ci\u003el\u003c/i\u003e ≤ \u003ci\u003er\u003c/i\u003e ≤ \u003ci\u003en\u003c/i\u003e\u003c/span\u003e. It follows that: \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ed\u003c/i\u003e[\u003ci\u003el\u003c/i\u003e, \u003ci\u003er\u003c/i\u003e]\u003c/span\u003e \u003d \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/07/f1/07f1bad4ef032114fc6dd2c566927eb44f1538b4.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e ([statement] is equal to 1 if the statement is true, 0 otherwise) and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ee\u003c/i\u003e[\u003ci\u003el\u003c/i\u003e, \u003ci\u003er\u003c/i\u003e] \u003d \u003ci\u003ed\u003c/i\u003e[\u003ci\u003el\u003c/i\u003e + 1, \u003ci\u003er\u003c/i\u003e]\u003c/span\u003e. This way \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ed\u003c/i\u003e[\u003ci\u003el\u003c/i\u003e, \u003ci\u003er\u003c/i\u003e]\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ee\u003c/i\u003e[\u003ci\u003el\u003c/i\u003e, \u003ci\u003er\u003c/i\u003e]\u003c/span\u003e can be calculated in linear time for any segment \u003cspan class\u003d\"tex-span\"\u003e[\u003ci\u003el\u003c/i\u003e, \u003ci\u003er\u003c/i\u003e]\u003c/span\u003e. The answer to the problem is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ee\u003c/i\u003e[1, \u003ci\u003en\u003c/i\u003e]\u003c/span\u003e. Overall complexity is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003en\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e3\u003c/sup\u003e)\u003c/span\u003e.\u003c/p\u003e\u003cp\u003ePrepared by: \u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/DPR-pavlin\" title\u003d\"Grandmaster DPR-pavlin\"\u003eDPR-pavlin\u003c/a\u003e\u003cbr /\u003eAuthor of editorial: \u003ca class\u003d\"rated-user user-red\" href\u003d\"/profile/DPR-pavlin\" title\u003d\"Grandmaster DPR-pavlin\"\u003eDPR-pavlin\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e","tags":["wcc","tutorial","289"]}}