{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1516735826,"rating":0,"authorHandle":"arif.ozturk","modificationTimeSeconds":1516735826,"id":57305,"title":"\u003cp\u003eLongest common prefix question\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHello, I recently got an interesting question from my old teacher. Given two strings A and B(of size \u0026lt;\u003d2000000) find the sum of the longest common prefixes of A and all substrings of B. I reduced this to finding the longest common prefix of A and all suffixes of B and found a solution in O(NlogN) time using suffix arrays. Because it consumed a lot of memory, I switched to hashing and it worked to some extent but it seems O(NlogN) is too large as I get TLE. I was thinking whether I could change the KMP algorithm a bit to get exactly what I need but I can\u0027t seem to find a way. Do you guys have any ideas? \u003c/p\u003e\u003c/div\u003e","tags":[]}}