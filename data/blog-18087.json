{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1432552676,"rating":13,"authorHandle":"gkeesh7","modificationTimeSeconds":1432587262,"id":18087,"title":"\u003cp\u003eHow to learn the art of testing solutions\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eGreetings Everyone, It\u0027s just one of those days when I feel too lazy to solve any problems on Codeforces but don\u0027t feeling like doing anything else either. In the past few contests I have been annoyed by bugs which result in WA/TLE etc and wanted to know is there any systematic approach to problems testing in competitive programming which can be applied to remove bugs, that too in an intense pressure situations (like ICPC). Because most of the time while I am testing some bug in my implementation, I throw random testcases at the solution and expect it to fail and incase it does I consider myself really lucky. I would like to ask all the experienced guys about any tips/tricks/tools for testing the solutions which they would like to share.\u003c/p\u003e\u003cp\u003eSo far after messaging some people the valuable tips that I have received include \u003c/p\u003e\u003cp\u003e(text in italics are excerpts of actual messages received)\u003c/p\u003e\u003cp\u003e1) \u003cstrong\u003eReading the problem statement carefully\u003c/strong\u003e\u003c/p\u003e\u003cp\u003e(not so valuable but still important :)\u003c/p\u003e\u003cp\u003e2) \u003cstrong\u003eEmphasize on constraints of the problem\u003c/strong\u003e \u003c/p\u003e\u003cp\u003e\u003cem\u003e\u0026quot;test on atleast one maxtest\u0026quot;\u003c/em\u003e\u003c/p\u003e\u003cp\u003e3) \u003cstrong\u003eThe tricky base cases\u003c/strong\u003e \u003c/p\u003e\u003cp\u003e\u003cem\u003e\u0026quot;zero in most of the cases is tricky but at times other numbers may also be you can\u0027t possibly generalize\u0026quot;\u003c/em\u003e\u003c/p\u003e\u003cp\u003e4) \u003cstrong\u003eLearn to use gdb or any debugger\u003c/strong\u003e \u003c/p\u003e\u003cp\u003e\u003cem\u003e\u0026quot;if you keep adding printf/cout statements to check value of variable in each iteration not only that is time consuming but also looks unprofessional learn to use Gdb also modify your template with some cerr messages as I can see there aren\u0027t any:)\u0026quot;\u003c/em\u003e\u003c/p\u003e\u003cp\u003e5) \u003cstrong\u003eGenerate your own maxtest\u003c/strong\u003e\u003c/p\u003e\u003cp\u003e\u003cem\u003e\u0026quot;i generally use python to generate my own maxtest file which is cool considering it takes only 5-10 lines of code\u0026quot;\u003c/em\u003e\u003c/p\u003e\u003cp\u003eSome of the questions which want to ask include\u003c/p\u003e\u003cp\u003eDo you use some generators etc ? If yes which ones ?\u003c/p\u003e\u003cp\u003eWhat are your thoughts while writing a manual test for the code ?\u003c/p\u003e\u003cp\u003eHow are you able to keep yourself calm incase of a wrong attempt ?\u003c/p\u003e\u003cp\u003eFeel free to share any ideas/tips/tricks in the comments section below. \u003c/p\u003e\u003cp\u003e[ \u003cstrong\u003eUPD\u003c/strong\u003e ] Some of my friends have told me to ask the following questions to guys who have experience at writing system tests at codeforces or any other platform.\u003c/p\u003e\u003cp\u003e1) What do you guys do to ensure the completeness of the test cases ?\u003c/p\u003e\u003cp\u003e2) What do you guys consider while writing the maxtests ?\u003c/p\u003e\u003cp\u003e3) Do you classify your tests in categories like Pretests , Easy , Overflow possibility , TLE possiblility , Random cases, Not initialized variables will fail, Tricky basecases, Chances of accessing invalid memory address etc ?\u003c/p\u003e\u003c/div\u003e","tags":["testing"]}}