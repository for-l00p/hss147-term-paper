{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1499663807,"rating":-30,"authorHandle":"LegendaryTooth","modificationTimeSeconds":1500738453,"id":53211,"title":"\u003cp\u003ePrime Factorization (kinda solved)\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eIsn\u0027t it a lovely time to talk about primes? My rating is 1459, my contribution is 23.\u003c/p\u003e\u003cp\u003eNow, I\u0027ve been trying to write a program that spits out the prime factorization of a number.\u003c/p\u003e\u003cp\u003eHere\u0027s the code-a-majig:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003eimport math\nprimes \u003d []\nwhile n % 2 \u003d\u003d 0:\n    primes.append(2)\n    n //\u003d 2\nx \u003d 3\nwhile n !\u003d 1:\n    while n % x \u003d\u003d 0:\n        primes.append(x)\n        n //\u003d x\n    x +\u003d 2\n    if x \u0026gt;\u003d math.floor(math.sqrt(n)) + 1:\n        primes.append(n)\n        break\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eEntering 60 gives us [2, 2, 3, 5]. Entering one trillion also gives us the prime factorization in a matter of seconds.\u003c/p\u003e\u003cp\u003eHowever, it doesn\u0027t really work when the number you enter in is a \u003cstrong\u003eHUGE\u003c/strong\u003e prime, because x has to iterate up to the square root of that number. \u003c/p\u003e\u003cp\u003eIs there a more efficient way of doing this?\u003c/p\u003e\u003cp\u003e\u003cstrong\u003ePS\u003c/strong\u003e: Either leave a comment with Python code, or pseudo-code. You can also explain it using words.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eEdit:\u003c/strong\u003e \u003c/p\u003e \u003cul\u003e   \u003cli\u003e\u003cp\u003eThe code has a shorter time complexity, thanks to \u003ca class\u003d\"rated-user user-blue\" href\u003d\"/profile/deepankar1994\" title\u003d\"Expert deepankar1994\"\u003edeepankar1994\u003c/a\u003e.\u003c/p\u003e\u003c/li\u003e   \u003cli\u003e\u003cp\u003eThanks to \u003ca class\u003d\"rated-user user-violet\" href\u003d\"/profile/Zun\" title\u003d\"Candidate Master Zun\"\u003eZun\u003c/a\u003e for the suggestion!\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e\u003c/div\u003e","tags":["prime","factorization","method","fast"]}}