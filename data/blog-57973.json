{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1519308569,"rating":0,"authorHandle":"Unlimited_Time","modificationTimeSeconds":1519308569,"id":57973,"title":"\u003cp\u003eNotes on Codeforces Beta Round #118, Div2- A, B, C, D (Lagrange Multiplier), E, Div1-D \u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e\u003ca href\u003d\"/contest/186/problem/A\" title\u003d\"Codeforces Round 118 (Div. 2)\"\u003e186A - Comparing Strings\u003c/a\u003e\u003c/p\u003e\u003cp\u003eThese two strings must have the same length. Then, we compare them letter by letter and find out all the indices of different letters. The number of difference must be exactly two and we check whether they satisfy a simple swapping rule.\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"/contest/186/problem/B\" title\u003d\"Codeforces Round 118 (Div. 2)\"\u003e186B - Growing Mushrooms\u003c/a\u003e\u003c/p\u003e\u003cp\u003eThe problem requires extremely precise results and thus we should try to only use integers to handle all the calculation.\u003c/p\u003e\u003cp\u003eAt first, we determine for each player that he should use \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003c/span\u003e first or \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003c/span\u003e first. For convenience, we assume that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e \u0026gt; \u003ci\u003eb\u003c/i\u003e\u003c/span\u003e, and we should check which one of \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/bc/09/bc0902003fa4c2b7037264696790d7222809f2ac.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e and \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/f6/94/f6948b150c8b58f7b81ec1debeab5d63fd7b972c.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e is larger. We can rewrite \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/bc/09/bc0902003fa4c2b7037264696790d7222809f2ac.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e as \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/d8/02/d802c66f095f4c0f3e09bb5f1d5c1781244b1a04.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, and thus it is sufficient to compare their numerators to determine which one has a larger value. Similarly, sorting should also be implemented in this manner, i.e., we only compare their numerators. Finally, when we output \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/d8/02/d802c66f095f4c0f3e09bb5f1d5c1781244b1a04.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, it is equivalent to the problem of printing the result of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e / 100\u003c/span\u003e for some positive integer \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e, with a precise decimal place. We can transfer \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e into a string and insert “.” at the correct position.\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"/contest/186/problem/C\" title\u003d\"Codeforces Round 118 (Div. 2)\"\u003e186C - Plant\u003c/a\u003e\u003c/p\u003e\u003cp\u003eI know two methods to solve this problem.\u003c/p\u003e\u003cp\u003e1) After some observation, one can find that for the \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e-th figure, the number is \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/07/0f/070f93343611bfd21dfa08e1aa349d2987a2cba3.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e.\u003c/p\u003e\u003cp\u003e2) We use \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e to denote the number of upward and downward triangles, respectively, in the \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e-th figure. The recursive formula is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/sub\u003e \u003d 3\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003en\u003c/i\u003e - 1\u003c/sub\u003e + \u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003en\u003c/i\u003e - 1\u003c/sub\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/sub\u003e \u003d 3\u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003en\u003c/i\u003e - 1\u003c/sub\u003e + \u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003en\u003c/i\u003e - 1\u003c/sub\u003e\u003c/span\u003e. By substituting the formula of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eb\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/sub\u003e\u003c/span\u003e into the latter equation, we have \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003en\u003c/i\u003e + 1\u003c/sub\u003e - 6\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/sub\u003e + 8\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003en\u003c/i\u003e - 1\u003c/sub\u003e \u003d 0\u003c/span\u003e. This type of recursive equation has a solution of pattern as \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/sub\u003e \u003d \u003ci\u003eAx\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/sup\u003e + \u003ci\u003eBy\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/sup\u003e\u003c/span\u003e, where \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eA\u003c/i\u003e, \u003ci\u003eB\u003c/i\u003e\u003c/span\u003e are constants while \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e, \u003ci\u003ey\u003c/i\u003e\u003c/span\u003e are the roots of equation \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ez\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003c/sup\u003e - 6\u003ci\u003ez\u003c/i\u003e + 8 \u003d 0\u003c/span\u003e (I forget how to prove this but it is done in this way). Therefore, we have \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e \u003d 2, \u003ci\u003ey\u003c/i\u003e \u003d 4\u003c/span\u003e and thus \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e1\u003c/sub\u003e \u003d 2\u003ci\u003eA\u003c/i\u003e + 4\u003ci\u003eB\u003c/i\u003e \u003d 3\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e0\u003c/sub\u003e \u003d \u003ci\u003eA\u003c/i\u003e + \u003ci\u003eB\u003c/i\u003e \u003d 1\u003c/span\u003e, and one can compute the final result.\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"/contest/186/problem/D\" title\u003d\"Codeforces Round 118 (Div. 2)\"\u003e186D - Mushroom Scientists\u003c/a\u003e\u003c/p\u003e\u003cp\u003eThis is a mathematical problem and we solve it by using Lagrange Multiplier method. \u003c/p\u003e\u003cp\u003eAt first note that the optimal answer must satisfy \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e + \u003ci\u003ey\u003c/i\u003e + \u003ci\u003ez\u003c/i\u003e \u003d \u003ci\u003eS\u003c/i\u003e\u003c/span\u003e since if \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e + \u003ci\u003ey\u003c/i\u003e + \u003ci\u003ez\u003c/i\u003e \u0026lt; \u003ci\u003eS\u003c/i\u003e\u003c/span\u003e, we can always increase \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ey\u003c/i\u003e\u003c/span\u003e or \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ez\u003c/i\u003e\u003c/span\u003e by \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eS\u003c/i\u003e - (\u003ci\u003ex\u003c/i\u003e + \u003ci\u003ey\u003c/i\u003e + \u003ci\u003ez\u003c/i\u003e)\u003c/span\u003e and we will obtain a better result.\u003c/p\u003e\u003cp\u003eAccording to Lagrange Multiplier method, we have \u003c/p\u003e\u003cp\u003eUnable to parse markup [type\u003dCF_TEX]\u003c/p\u003e. The left work is to implement partial derivative and solve the equation. The conclusion is that \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/11/a2/11a2fb8bf50ecdd11c82772fcb59208b663e57dc.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/e0/6e/e06ee61011bdb78480047bf6c17204af3f118c6c.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/f2/c3/f2c396ed41c491eb8fc74623e0f36e36adbd6468.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e. If \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ea\u003c/i\u003e \u003d \u003ci\u003eb\u003c/i\u003e \u003d \u003ci\u003ec\u003c/i\u003e \u003d 0\u003c/span\u003e, the answer can be \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ex\u003c/i\u003e \u003d 0, \u003ci\u003ey\u003c/i\u003e \u003d 0, \u003ci\u003ez\u003c/i\u003e \u003d \u003ci\u003eS\u003c/i\u003e\u003c/span\u003e.\u003cp\u003e\u003ca href\u003d\"/contest/186/problem/E\" title\u003d\"Codeforces Round 118 (Div. 2)\"\u003e186E - Clever Fat Rat\u003c/a\u003e\u003c/p\u003e\u003cp\u003eWe can consider that all the oats in the first layer are sorted just in the given order, and when they fall down to the deeper layers, they still keep the same order. From this perspective, we can say that the first layer divides the given \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e oats into \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e\u003c/span\u003e segments, and the second layer divides then into \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e - 1\u003c/span\u003e segments while the third layer divides them into \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003en\u003c/i\u003e - 2\u003c/span\u003e segments, and so on.\u003c/p\u003e\u003cp\u003eBased on the above arguments, we can use \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edp\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e][\u003ci\u003ej\u003c/i\u003e][\u003ci\u003el\u003c/i\u003e][\u003ci\u003er\u003c/i\u003e]\u003c/span\u003e to denote the maximum weight that can “appear” in layer \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ei\u003c/i\u003e\u003c/span\u003e, scale \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/span\u003e, if all the oats within the interval \u003cspan class\u003d\"tex-span\"\u003e[\u003ci\u003el\u003c/i\u003e, \u003ci\u003er\u003c/i\u003e]\u003c/span\u003e fall into this scale (or segment). The recursive formula is \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edp\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e][\u003ci\u003ej\u003c/i\u003e][\u003ci\u003el\u003c/i\u003e][\u003ci\u003er\u003c/i\u003e] \u003d \u003ci\u003emax\u003c/i\u003e\u003csub class\u003d\"lower-index\"\u003e\u003ci\u003em\u003c/i\u003e \u003d \u003ci\u003el\u003c/i\u003e - 1, \u003ci\u003el\u003c/i\u003e, \u003ci\u003el\u003c/i\u003e + 1, ...\u003ci\u003er\u003c/i\u003e\u003c/sub\u003e(\u003ci\u003edp\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e - 1][\u003ci\u003ej\u003c/i\u003e][\u003ci\u003el\u003c/i\u003e][\u003ci\u003em\u003c/i\u003e] + \u003ci\u003edp\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e - 1][\u003ci\u003ej\u003c/i\u003e + 1][\u003ci\u003em\u003c/i\u003e + 1][\u003ci\u003er\u003c/i\u003e])\u003c/span\u003e, but note that if \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edp\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e][\u003ci\u003ej\u003c/i\u003e][\u003ci\u003el\u003c/i\u003e][\u003ci\u003er\u003c/i\u003e] \u0026lt; \u003ci\u003ew\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e][\u003ci\u003ej\u003c/i\u003e]\u003c/span\u003e, then \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003edp\u003c/i\u003e[\u003ci\u003ei\u003c/i\u003e][\u003ci\u003ej\u003c/i\u003e][\u003ci\u003el\u003c/i\u003e][\u003ci\u003er\u003c/i\u003e]\u003c/span\u003e should be set to zero. The reason is that as no oats can fall down further from this scale, it is equivalent to saying that there is no oat left in this scale.\u003c/p\u003e\u003cp\u003eIt seems that there is something wrong with the test case...\u003c/p\u003e\u003cp\u003e\u003ca href\u003d\"/contest/185/problem/D\" title\u003d\"Codeforces Round 118 (Div. 1)\"\u003e185D - Visit of the Great\u003c/a\u003e\u003c/p\u003e\u003cp\u003eI solve this problem based on tutorials.\u003c/p\u003e\u003cp\u003eWe can prove that the common divisor of these terms is either \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e or \u003cspan class\u003d\"tex-span\"\u003e2\u003c/span\u003e (the proof in tutorials is quite clear). But this does not work when \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e \u003d 2\u003c/span\u003e. For \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e \u003d 2\u003c/span\u003e, the answer is straightforward, since for odd \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/sup\u003e\u003c/sup\u003e + 1\u003c/span\u003e is even and their LCM must be even, which gives an answer \u003cspan class\u003d\"tex-span\"\u003e0\u003c/span\u003e, while for even \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/sup\u003e\u003c/sup\u003e + 1\u003c/span\u003e is odd and their LCM must be odd, giving an answer equal to \u003cspan class\u003d\"tex-span\"\u003e1\u003c/span\u003e. For the following arguments, we only focus on \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e \u0026gt; 2\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eIf \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e is an even number, then \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/sup\u003e\u003c/sup\u003e + 1\u003c/span\u003e is an odd integer and all the terms must be co-prime. Thus, the LCM is simply their product. When \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e is an odd number, \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/sup\u003e\u003c/sup\u003e + 1\u003c/span\u003e is even and thus their LCM is their product divided by \u003cspan class\u003d\"tex-span\"\u003e2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003er\u003c/i\u003e - \u003ci\u003el\u003c/i\u003e\u003c/sup\u003e\u003c/span\u003e. \u003c/p\u003e\u003cp\u003eThe left main issue is to compute the product, which can be represented as \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eQ\u003c/i\u003e \u003d (\u003ci\u003ek\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/sup\u003e\u003c/sup\u003e + 1)(\u003ci\u003ek\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003el\u003c/i\u003e + 1\u003c/sup\u003e\u003c/sup\u003e + 1)(\u003ci\u003ek\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003el\u003c/i\u003e + 2\u003c/sup\u003e\u003c/sup\u003e + 1)...(\u003ci\u003ek\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003er\u003c/i\u003e\u003c/sup\u003e\u003c/sup\u003e + 1)\u003c/span\u003e, and \u003cspan class\u003d\"tex-span\"\u003e(\u003ci\u003ek\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/sup\u003e\u003c/sup\u003e - 1)\u003ci\u003eQ\u003c/i\u003e \u003d \u003ci\u003ek\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003er\u003c/i\u003e + 1\u003c/sup\u003e\u003c/sup\u003e + 1\u003c/span\u003e. Thus, \u003cimg align\u003d\"middle\" class\u003d\"tex-formula\" src\u003d\"/predownloaded/53/be/53bea3edd669cf9022d5e7f36698c59dee9bbb70.png\" style\u003d\"max-width: 100.0%;max-height: 100.0%;\" /\u003e, and we should compute the inverse of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/sup\u003e\u003c/sup\u003e - 1\u003c/span\u003e based on module \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003c/span\u003e. According to fermat\u0027s theorem, if \u003cspan class\u003d\"tex-span\"\u003e2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/sup\u003e%(\u003ci\u003ep\u003c/i\u003e - 1) \u003d \u003ci\u003et\u003c/i\u003e\u003c/span\u003e and \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e is not a multiple of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003c/span\u003e, then \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/sup\u003e\u003c/sup\u003e%\u003ci\u003ep\u003c/i\u003e \u003d \u003ci\u003ek\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003et\u003c/i\u003e\u003c/sup\u003e%\u003ci\u003ep\u003c/i\u003e\u003c/span\u003e. Nevertheless, even if \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003c/span\u003e is a multiple of \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ep\u003c/i\u003e\u003c/span\u003e, the result is also correct since \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003et\u003c/i\u003e\u003c/sup\u003e%\u003ci\u003ep\u003c/i\u003e\u003c/span\u003e still gives zero. After obtaining \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003er\u003c/i\u003e \u003d \u003ci\u003ek\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/sup\u003e\u003c/sup\u003e - 1%\u003ci\u003ep\u003c/i\u003e\u003c/span\u003e, we can calculate its inverse by using fermat\u0027s theorem again. Be careful that \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003er\u003c/i\u003e\u003c/span\u003e might be zero (it has no inverse), and for this case, it means \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003el\u003c/i\u003e\u003c/sup\u003e\u003c/sup\u003e ≡ 1\u003ci\u003emodp\u003c/i\u003e\u003c/span\u003e, and thus \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003el\u003c/i\u003e + 1\u003c/sup\u003e\u003c/sup\u003e ≡ 1\u003ci\u003emodp\u003c/i\u003e\u003c/span\u003e and for any \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ej\u003c/i\u003e ≥ \u003ci\u003el\u003c/i\u003e\u003c/span\u003e, we have \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003ek\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003ej\u003c/i\u003e\u003c/sup\u003e\u003c/sup\u003e ≡ 1\u003ci\u003emodp\u003c/i\u003e\u003c/span\u003e. Therefore, the product is equal to \u003cspan class\u003d\"tex-span\"\u003e2\u003csup class\u003d\"upper-index\"\u003e\u003ci\u003er\u003c/i\u003e - \u003ci\u003el\u003c/i\u003e + 1\u003c/sup\u003e%\u003ci\u003ep\u003c/i\u003e\u003c/span\u003e.\u003c/p\u003e\u003cp\u003eFinally, I have to say that this is a really difficult and complicated mathematical problem, involving quite many details and corner cases. \u003c/p\u003e\u003c/div\u003e","tags":[]}}