{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":false,"creationTimeSeconds":1406459868,"rating":85,"authorHandle":"I_love_Tanya_Romanova","modificationTimeSeconds":1406460016,"id":13207,"title":"\u003cp\u003eСтранные отличия в быстродействии double\u003c/p\u003e","locale":"ru","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e\u003cstrong\u003eПредыстория\u003c/strong\u003e: я уже много раз слышал/читал о том, что double начинает дико тупить, если получаются числа меньше 1e-306. Подобные разговоры всплывали после одного из контестов в зоне NEERC, после одного из раундов TC, еще видел такие фразы в обсуждении некоторых задач на различных online judge. Обычно советуют лечить это с помощью \u003cem\u003eif (value\u0026lt;eps)value\u003d0;\u003c/em\u003e Так как это мне всегда помогало, то выглядело вполне правдоподобно. Насколько это правда на самом деле?\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eАктуальная проблема\u003c/strong\u003e: недавно столкнулся с похожей проблемой на СF. Сравните 3 сабмита: \u003ca href\u003d\"/contest/446/submission/7256779\" title\u003d\"Посылка 7256779 от I_love_Tanya_Romanova\"\u003e7256779\u003c/a\u003e, \u003ca href\u003d\"/contest/446/submission/7256781\" title\u003d\"Посылка 7256781 от I_love_Tanya_Romanova\"\u003e7256781\u003c/a\u003e, \u003ca href\u003d\"/contest/446/submission/7256786\" title\u003d\"Посылка 7256786 от I_love_Tanya_Romanova\"\u003e7256786\u003c/a\u003e. Они отличаются только в \u003cem\u003evoid mult\u003c/em\u003e, при этом первое решение работает в десяток раз медленней двух остальных. Один из АС сабмитов действительно с костылем \u003cem\u003eif(value\u0026lt;eps)\u003c/em\u003e, в другом же разница в том, что две переменные заменены на локальные вместо глобальных. Кто-то может более-менее понятно объяснить, откуда такая разница в продуктивности?\u003c/p\u003e\u003cp\u003eИдем дальше. Выбросим из кода все лишнее) \u003ca href\u003d\"http://pastebin.com/AZyb2VBv\"\u003eЭтот код\u003c/a\u003e работает быстро и без проблем. Если переписать его \u003ca href\u003d\"http://pastebin.com/VuEFsKWH\"\u003eвот так\u003c/a\u003e, в стиле кода, из-за которого и была создана эта тема, то продуктивность резко падает после 7 итерации (46 мс для 7 итераций, 1092 мс для 8 итераций, 2698 мс для 9 итераций). Обратите внимание, что в этом коде уже есть \u003cem\u003eif (value\u0026lt;eps)\u003c/em\u003e, но оно не помогает. Если сделать переменные локальными, как было в одном из примеров выше, то решение начинает проседать на одну итерацию позднее (62 мс для 8 итераций, 1653 мс для 9 итераций). Почему вообще так? И почему в этом случае костыль с \u0026lt;eps абсолютно никак не влияет на ситуацию — хотя в начальной задаче, в, казалось бы, аналогичной ситуации, локализация переменных/eps-костыль — одинаково полезные, с любым одним из этих фиксов решение отрабатывает 70 итераций за 7 секунд, без них — 11 итераций за 1.2 секунды, 12 итераций за 8 секунд, дальше TL. \u003c/p\u003e\u003c/div\u003e","tags":["быстродействие","оптимизация","double","вопрос","интересно","с++"]}}