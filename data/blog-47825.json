{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1476707534,"rating":-14,"authorHandle":"LAGBOYDaD3zZ","modificationTimeSeconds":1476871730,"id":47825,"title":"\u003cp\u003eCodeforces 148E\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003e先进行一遍DP，求出f[i][j]表示第i层取j本书的最大价值和，这个DP利用前缀和可以优化成 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e3\u003c/sup\u003e)\u003c/span\u003e 。 然后再进行一遍DP，求出g[i][j]表示前i层取j本书的最大价值和，这个DP也是 \u003cspan class\u003d\"tex-span\"\u003e\u003ci\u003eO\u003c/i\u003e(\u003ci\u003eN\u003c/i\u003e\u003csup class\u003d\"upper-index\"\u003e3\u003c/sup\u003e)\u003c/span\u003e 的。\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e#include\u0026lt;iostream\u0026gt;\n#include\u0026lt;cstdio\u0026gt;\n#include\u0026lt;cstring\u0026gt;\n#include\u0026lt;cmath\u0026gt;\n#include\u0026lt;algorithm\u0026gt;\n#include\u0026lt;vector\u0026gt;\nusing namespace std;\ninline int read()\n{\n\tint x\u003d0,f\u003d1; char ch\u003dgetchar();\n\twhile (ch\u0026lt;\u00270\u0027 || ch\u0026gt;\u00279\u0027) {if (ch\u003d\u003d\u0027-\u0027) f\u003d-1; ch\u003dgetchar();}\n\twhile (ch\u0026gt;\u003d\u00270\u0027 \u0026amp;\u0026amp; ch\u0026lt;\u003d\u00279\u0027) {x\u003dx*10+ch-\u00270\u0027; ch\u003dgetchar();}\n\treturn x*f;\n}\n#define size(i) s[i].size()-1\nvector\u0026lt;int\u0026gt;s[110],sum[110];\nint f[110][10010],g[110][10010],N,M;\nint main()\n{\n\tfor (int i\u003d1; i\u0026lt;\u003d100; i++) s[i].push_back(0),sum[i].push_back(0);\n\tN\u003dread(),M\u003dread();\n\tfor (int x,i\u003d1,len,j; i\u0026lt;\u003dN; i++) \n\t\tfor (len\u003dread(),j\u003d1; j\u0026lt;\u003dlen; j++)\n\t\t\tx\u003dread(),s[i].push_back(x),sum[i].push_back(sum[i][j-1]+s[i][j]);\n\tfor (int i\u003d1; i\u0026lt;\u003dN; i++)\n\t\tfor (int j\u003d1; j\u0026lt;\u003dsize(i); j++)\n\t\t\tfor (int k\u003d1; k+size(i)-j-1\u0026lt;\u003dsize(i); k++)\n\t\t\t\tf[i][j]\u003dmax(f[i][j],sum[i][size(i)]-(sum[i][k+size(i)-j-1]-sum[i][k-1]));\n//\tfor (int i\u003d1; i\u0026lt;\u003dN; i++,puts(\u0026quot;\u0026quot;))\n//\t\tfor (int j\u003d1; j\u0026lt;\u003dsize(i); j++)\n//\t\t\tprintf(\u0026quot;%d  \u0026quot;,f[i][j]);\n\tfor (int i\u003d1,j,len\u003d0; i\u0026lt;\u003dN; i++)\n\t\tfor (len+\u003dsize(i),j\u003d1; j\u0026lt;\u003dlen; j++)\n\t\t\tfor (int k\u003d0; k\u0026lt;\u003dsize(i); k++)\n\t\t\t\tif (j\u0026gt;\u003dk \u0026amp;\u0026amp; len-(size(i))\u0026gt;\u003dj-k)\n\t\t\t\t\tg[i][j]\u003dmax(g[i][j],g[i-1][j-k]+f[i][k]);\n//\tfor (int i\u003d1; i\u0026lt;\u003dN; i++,puts(\u0026quot;\u0026quot;))\n//\t\tfor (int j\u003d1; j\u0026lt;\u003dsize(i); j++)\n//\t\t\tprintf(\u0026quot;%d  \u0026quot;,g[i][j]);\n\tprintf(\u0026quot;%d\\n\u0026quot;,g[N][M]);\n\treturn 0;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":[]}}