{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1464705678,"rating":-5,"authorHandle":"derAdler","modificationTimeSeconds":1464705678,"id":45143,"title":"\u003cp\u003eHelp Guys!!\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eCould someone explain me the proof of this line: \u0026quot;Let l hasn\u0027t right child and r hasn\u0027t left child. Hence lowest common ancestor (lca) of l and r doesn\u0027t equal to l or r. So lca is between l and r in tree traversal. But it\u0027s impossible because l is maximal possible and r is minimal possible. So l has right child or r has left child and we know exactly which of them will be parent of x.\u0026quot; in the problem tree construction (link: \u003ca href\u003d\"//codeforces.com/problemset/problem/675/D\"\u003ehttp://codeforces.com/problemset/problem/675/D\u003c/a\u003e) also could you plz suggest some SCC and LCA problems.\u003c/p\u003e\u003c/div\u003e","tags":[]}}