{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1407697934,"rating":1,"authorHandle":"goovie","modificationTimeSeconds":1407702512,"id":13354,"title":"\u003cp\u003eDynamic programming tree problem\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eHello everyone,\u003c/p\u003e\u003cp\u003eI\u0027m struggling for a quite long time with certain problem (like 4 real attempts to solve it). Here is problem statement:\u003c/p\u003e\u003cp\u003eYou are given a city which is represented by graph which is a tree (of course road intersections are nodes and roads are edges). Your task is to light every road in the city, you can do this by building street lights on road intersections. When there is street light on road intersection every road which comes out of it is lighted. Now your task is to find the minimum amount of street lights to light entire city and find amount of ways you can do this.\u003c/p\u003e\u003cp\u003eInput:\u003c/p\u003e\u003cp\u003eFirst line of input is n (n \u0026lt;\u003d 100.000) — the number of road intersections in city. The next n-1 lines contain two integers a,b which mean that there is bidirectional road between intersections numbered a and b.\u003c/p\u003e\u003cp\u003eOutput\u003c/p\u003e\u003cp\u003eFirst integer of output is optimal amount of street lights, and the second integer is the amount of optimal placements of streets lights in the city modulo 10007.\u003c/p\u003e\u003cp\u003eExamples:\u003c/p\u003e\u003cp\u003eInput:\u003c/p\u003e\u003cp\u003e4\u003c/p\u003e\u003cp\u003e1 2 \u003c/p\u003e\u003cp\u003e2 3 \u003c/p\u003e\u003cp\u003e3 4\u003c/p\u003e\u003cp\u003eOutput: 2 3\u003c/p\u003e\u003cp\u003eInput:\u003c/p\u003e\u003cp\u003e5\u003c/p\u003e\u003cp\u003e1 2 \u003c/p\u003e\u003cp\u003e2 3 \u003c/p\u003e\u003cp\u003e3 4\u003c/p\u003e\u003cp\u003e4 5\u003c/p\u003e\u003cp\u003eOutput:\u003c/p\u003e\u003cp\u003e2 1\u003c/p\u003e\u003cp\u003eInput:\u003c/p\u003e\u003cp\u003e6\u003c/p\u003e\u003cp\u003e1 2\u003c/p\u003e\u003cp\u003e2 3\u003c/p\u003e\u003cp\u003e1 4\u003c/p\u003e\u003cp\u003e4 5\u003c/p\u003e\u003cp\u003e1 6\u003c/p\u003e\u003cp\u003eOutput:\u003c/p\u003e\u003cp\u003e3 5\u003c/p\u003e\u003cp\u003eFinding optimal number of street lights is quite simple, just two-color the tree and take the less often color. However finding amount of optimal street light placements is really hard for me. I was trying to root the tree at some node, and then find recurrence relation between node and its children so i can use dynamic programming. I believe in order to solve this problem one has to use at least two functions, h(v) — which is answer to the problem when there is street light in node v (where v is root of subtree), and l(v) when there is no street light at node (v), i tried to use some other functions like opt(v) — which represents optimal amount of street lights at subtree rooted at node v, but i just couldn\u0027t come up with recurrence relation.\u003c/p\u003e\u003cp\u003eDoes anyone have any idea on how to solve this problem ?\u003c/p\u003e\u003c/div\u003e","tags":["dynamic programming","tree","graph","combinatorics","optimization"]}}