{"status":"OK","result":{"originalLocale":"en","allowViewHistory":false,"creationTimeSeconds":1427625543,"rating":7,"authorHandle":"dreamplay","modificationTimeSeconds":1427625543,"id":17190,"title":"\u003cp\u003eModifying/Inheriting a red-black tree a.k.a set.\u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eI need to perform following queries What data structure can i use or modify to.\u003c/p\u003e\u003cp\u003e1) Insert/delete an element(comparable) , say integer , in some order such that i.e. iteration from smallest to largest element at any time , takes O(number of elements) . \u003c/p\u003e\u003cp\u003e2) number of elements greater than ei is given in O(logn) .\u003c/p\u003e\u003cp\u003e...I thought of adding an attribute at each node of r-b tree which stores number of elemts in subtree rooted at that element but this seems incorrect too .\u003c/p\u003e\u003c/div\u003e","tags":["advanced data structure"]}}