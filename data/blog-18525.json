{"status":"OK","result":{"originalLocale":"en","allowViewHistory":true,"creationTimeSeconds":1434216873,"rating":1,"authorHandle":"dhruvmullick","modificationTimeSeconds":1434216873,"id":18525,"title":"\u003cp\u003eTriple Inversion? \u003c/p\u003e","locale":"en","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eI was doing \u003ca href\u003d\"http://www.spoj.com/problems/TRIPINV/\"\u003eTRIPINV\u003c/a\u003e. The problem requires us to find triplets with \u003ccode\u003eai \u0026gt; aj \u0026gt; ak for i \u0026lt; j \u0026lt; k\u003c/code\u003e.\u003c/p\u003e\u003cp\u003eI was thinking of using 2 BITs for the same, and use a (Sum) \u003cstrong\u003eC\u003c/strong\u003e (2), and of sum of (SameElements) \u003cstrong\u003eC\u003c/strong\u003e (2). But I can\u0027t maintain the order of elements this way. For instance, in A[1..6] \u003d 3 2 1 3 2 1 My program would identify A[2],A[5],A[6] as a triplet too.\u003c/p\u003e\u003cp\u003eCan anyone help me out?\u003c/p\u003e\u003cp\u003ePS: \u003cstrong\u003eC\u003c/strong\u003e denotes Combination\u003c/p\u003e\u003c/div\u003e","tags":[]}}