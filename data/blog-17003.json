{"status":"OK","result":{"originalLocale":"ru","allowViewHistory":false,"creationTimeSeconds":1426620242,"rating":-16,"authorHandle":"Renyxa","modificationTimeSeconds":1426620242,"id":17003,"title":"\u003cp\u003eЗадача на Геометрию.\u003c/p\u003e","locale":"ru","content":"\u003cdiv class\u003d\"ttypography\"\u003e\u003cp\u003eЗдравствуйте. Помогите пожалуйста решить эту задачу.\u003c/p\u003e \u003cul\u003e   \u003cli\u003eЗадача A-Kvadratlar\u003c/li\u003e   \u003cli\u003eОграничение времени: 1 с\u003c/li\u003e   \u003cli\u003eОграничение памяти: 64 M\u003c/li\u003e   \u003cli\u003e\u003c/li\u003e   \u003cli\u003eНа плоскости заданы N квадратов, стороны которых параллельны осям координат. Координаты всех углов квадратов- целые числа, и сами квадраты не касаются и пересекаются.\u003c/li\u003e   \u003cli\u003e\u003c/li\u003e   \u003cli\u003eНеобходимо подсчитать число квадратов, видимых из начала координат (точки (0, 0) ).\u003c/li\u003e   \u003cli\u003e\u003c/li\u003e   \u003cli\u003eКвадрат видим из точки O, если существуют две различные точки А и B на одной из его сторон таких, что треугольник OAB не имеет никаких общих точек с любым другим квадратом.\u003c/li\u003e   \u003cli\u003e\u003c/li\u003e   \u003cli\u003eФормат входных данных\u003c/li\u003e   \u003cli\u003e\u003c/li\u003e   \u003cli\u003eПервая строка содержит единственное число N ( 1 ≤ N ≤ 1000), количество квадратов. Каждая из следующих N строк описывает один квадрат целыми числами X, Y и L (1 ≤ X, Y, L ≤ 10000), разделенными одним пробелом. X и Y — координаты левого нижнего угла квадрата и L — длина стороны квадрата.\u003c/li\u003e   \u003cli\u003e\u003c/li\u003e   \u003cli\u003eФормат результата\u003c/li\u003e   \u003cli\u003e\u003c/li\u003e   \u003cli\u003eПервая и единственная строка должна содержать количество квадратов, которые видимы из начала координат.\u003c/li\u003e \u003c/ul\u003e \u003cpre\u003e\u003ccode\u003eВходные данные      Результат работы\n3\n2 6 3 \n1 4 1\n3 4 1               3\n\n\n4\n1 2 1\n3 1 1\n2 4 2\n3 7 1               2\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eЯ попробовал полным перебором, но не получается, ничего другого в голову не приходит:\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e#include \u0026lt;bits/stdc++.h\u0026gt;\n\nusing namespace std;\n\n#define LL long long\n#define uLL unsigned long long\n#define pb push_back\n#define PI 3.14159265359\n\n\n\n\nconst double EPS \u003d 1e-9;\n\n\ninline double inter(double x1, double y1,double x2, double y2,double x3, double y3)\n{\n    return (x2-x1) * (y3-y1) - (y2-y1) * (x3-x1);\n}\ninline bool intersect_1(double a, double b, double c, double d)\n{\n    if(a\u0026gt;b) swap(a, b);\n    if(c\u0026gt;d) swap(c, d);\n    return max(a, c) \u0026lt;\u003d min(b, d);\n}\n\ninline bool intersect(double x1, double y1,double x2, double y2,double x3, double y3, double x4, double y4)\n{\n    return intersect_1(x1, x2, x3, x4)\n           \u0026amp;\u0026amp; intersect_1(y1, y2, y3, y4)\n           \u0026amp;\u0026amp; inter(x1, y1, x2, y2, x3, y3) * inter(x1, y1, x2, y2, x4, y4) \u0026lt;\u003d 0    // ! * !\n           \u0026amp;\u0026amp; inter(x3, y3, x4, y4, x2, y2) * inter(x3, y3, x4, y4, x1, y1) \u0026lt;\u003d 0;   // ! * !\n}\n\n\nstruct Sqr\n{\n    struct\n    {\n        double x, y;\n    } P1;\n    struct\n    {\n        double x, y;\n    } P2;\n    struct\n    {\n        double x, y;\n    } P3;\n};\n\n\nint main()\n{\n\n\n\n\n\n    int n;\n    int amount \u003d 0;\n\n    cin \u0026gt;\u0026gt; n;\n\n    Sqr *S \u003d new Sqr[n+2];\n\n    for(int i \u003d 1; i \u0026lt;\u003d n; ++i)\n    {\n        double x, y, l;\n\n        cin \u0026gt;\u0026gt; x \u0026gt;\u0026gt; y \u0026gt;\u0026gt; l;\n\n        S[i].P1.x \u003d x;\n        S[i].P1.y \u003d y+l;\n\n        S[i].P2.x \u003d x;\n        S[i].P2.y \u003d y;\n\n        S[i].P3.x \u003d x+l;\n        S[i].P3.y \u003d y;\n\n        /*cout \u0026lt;\u0026lt; S[i].P1.x \u0026lt;\u0026lt; \u0026quot; \u0026quot; \u0026lt;\u0026lt; S[i].P1.y \u0026lt;\u0026lt; endl;\n        cout \u0026lt;\u0026lt; S[i].P2.x \u0026lt;\u0026lt; \u0026quot; \u0026quot; \u0026lt;\u0026lt; S[i].P2.y \u0026lt;\u0026lt; endl;\n        cout \u0026lt;\u0026lt; S[i].P3.x \u0026lt;\u0026lt; \u0026quot; \u0026quot; \u0026lt;\u0026lt; S[i].P3.y \u0026lt;\u0026lt; endl;*/\n    }\n\n    for(int i \u003d 1; i \u0026lt;\u003d n; ++i)\n    {\n        bool q \u003d 0;\n        for(double y \u003d S[i].P1.y; y \u0026gt;\u003d S[i].P2.y; y -\u003d 0.5)\n        {\n            q \u003d 0;\n            for(int j \u003d 1; j \u0026lt;\u003d n; ++j)\n            {\n\n                if(i !\u003d j)\n                {\n                    if(intersect(S[i].P1.x, y, 0.0, 0.0, S[j].P1.x, S[j].P1.y, S[j].P2.x, S[j].P2.y) \u003d\u003d 1)\n                    {\n                        q \u003d 1;\n                    }\n\n                        if(intersect(S[i].P1.x, y, 0.0, 0.0, S[j].P2.x, S[j].P2.y, S[j].P3.x, S[j].P3.y) \u003d\u003d 1)\n                        {\n                            q \u003d 1;\n                        }\n                }\n            }\n            if(q \u003d\u003d 0)\n            {\n                //cout \u0026lt;\u0026lt; \u0026quot;1 i \u003d \u0026quot; \u0026lt;\u0026lt; i \u0026lt;\u0026lt; endl;\n                ++amount;\n                break;\n            }\n        }\n\n        if(q \u003d\u003d 0)\n            continue;\n\n\n\n        for(double x \u003d S[i].P2.x; x \u0026lt;\u003d S[i].P3.x; x +\u003d 0.5)\n        {\n            q \u003d 0;\n\n            for(int j \u003d 1; j \u0026lt;\u003d n; ++j)\n            {\n\n                if(i !\u003d j)\n                {\n                    if(intersect(x, S[i].P2.y, 0.0, 0.0, S[j].P1.x, S[j].P1.y, S[j].P2.x, S[j].P2.y) \u003d\u003d 1)\n                    {\n                        q \u003d 1;\n                    }\n                        if(intersect(x, S[i].P2.y, 0.0, 0.0, S[j].P2.x, S[j].P2.y, S[j].P3.x, S[j].P3.y) \u003d\u003d 1)\n                        {\n                            q \u003d 1;\n                        }\n                }\n            }\n\n            if(q \u003d\u003d 0)\n            {\n                //cout \u0026lt;\u0026lt; \u0026quot;2 i \u003d \u0026quot; \u0026lt;\u0026lt; i \u0026lt;\u0026lt; endl;\n                ++amount;\n                break;\n            }\n\n        }\n    }\n\n    cout \u0026lt;\u0026lt; amount \u0026lt;\u0026lt; endl;\n\n    return 0;\n}\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","tags":[]}}